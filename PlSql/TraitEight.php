<?php

namespace PlSql;

use Antlr\Antlr4\Runtime\Atn\ATN;
use Antlr\Antlr4\Runtime\Error\Exceptions\NoViableAltException;
use Antlr\Antlr4\Runtime\Error\Exceptions\RecognitionException;
use Antlr\Antlr4\Runtime\RuleContext;
use Antlr\Antlr4\Runtime\Token;

trait TraitEight
{
    /**
     * @throws RecognitionException
     */
    public function xmlserialize_param_enconding_part(): Context\Xmlserialize_param_enconding_partContext
    {
        $localContext = new Context\Xmlserialize_param_enconding_partContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1338, self::RULE_xmlserialize_param_enconding_part);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(10970);
            $this->match(self::ENCODING);
            $this->setState(10971);
            $this->recursiveConcatenation(0);
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function xmlserialize_param_version_part(): Context\Xmlserialize_param_version_partContext
    {
        $localContext = new Context\Xmlserialize_param_version_partContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1340, self::RULE_xmlserialize_param_version_part);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(10973);
            $this->match(self::VERSION);
            $this->setState(10974);
            $this->recursiveConcatenation(0);
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function xmlserialize_param_ident_part(): Context\Xmlserialize_param_ident_partContext
    {
        $localContext = new Context\Xmlserialize_param_ident_partContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1342, self::RULE_xmlserialize_param_ident_part);

        try {
            $this->setState(10984);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::NO:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(10976);
                    $this->match(self::NO);
                    $this->setState(10977);
                    $this->match(self::INDENT);
                    break;

                case self::INDENT:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(10978);
                    $this->match(self::INDENT);
                    $this->setState(10982);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::SIZE) {
                        $this->setState(10979);
                        $this->match(self::SIZE);
                        $this->setState(10980);
                        $this->match(self::EQUALS_OP);
                        $this->setState(10981);
                        $this->recursiveConcatenation(0);
                    }
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function sql_plus_command(): Context\Sql_plus_commandContext
    {
        $localContext = new Context\Sql_plus_commandContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1344, self::RULE_sql_plus_command);

        try {
            $this->setState(10994);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::SOLIDUS:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(10986);
                    $this->match(self::SOLIDUS);
                    break;

                case self::EXIT:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(10987);
                    $this->match(self::EXIT);
                    break;

                case self::PROMPT_MESSAGE:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(10988);
                    $this->match(self::PROMPT_MESSAGE);
                    break;

                case self::SHOW:
                    $this->enterOuterAlt($localContext, 4);
                    $this->setState(10989);
                    $this->match(self::SHOW);
                    $this->setState(10990);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ERR || $_la === self::ERRORS)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    break;

                case self::START_CMD:
                    $this->enterOuterAlt($localContext, 5);
                    $this->setState(10991);
                    $this->match(self::START_CMD);
                    break;

                case self::WHENEVER:
                    $this->enterOuterAlt($localContext, 6);
                    $this->setState(10992);
                    $this->whenever_command();
                    break;

                case self::SET:
                    $this->enterOuterAlt($localContext, 7);
                    $this->setState(10993);
                    $this->set_command();
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function whenever_command(): Context\Whenever_commandContext
    {
        $localContext = new Context\Whenever_commandContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1346, self::RULE_whenever_command);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(10996);
            $this->match(self::WHENEVER);
            $this->setState(10997);

            $_la = $this->input->LA(1);

            if (!($_la === self::OSERROR || $_la === self::SQLERROR)) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
            $this->setState(11008);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::EXIT:
                    $this->setState(10998);
                    $this->match(self::EXIT);
                    $this->setState(11003);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1511, $this->ctx)) {
                        case 1:
                            $this->setState(10999);
                            $this->match(self::SUCCESS);
                            break;

                        case 2:
                            $this->setState(11000);
                            $this->match(self::FAILURE);
                            break;

                        case 3:
                            $this->setState(11001);
                            $this->match(self::WARNING);
                            break;

                        case 4:
                            $this->setState(11002);
                            $this->variable_name();
                            break;
                    }
                    $this->setState(11005);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::COMMIT || $_la === self::ROLLBACK)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    break;

                case self::CONTINUE:
                    $this->setState(11006);
                    $this->match(self::CONTINUE);
                    $this->setState(11007);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::COMMIT || $_la === self::NONE || $_la === self::ROLLBACK)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function set_command(): Context\Set_commandContext
    {
        $localContext = new Context\Set_commandContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1348, self::RULE_set_command);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11010);
            $this->match(self::SET);
            $this->setState(11011);
            $this->regular_id();
            $this->setState(11017);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1513, $this->ctx)) {
                case 1:
                    $this->setState(11012);
                    $this->match(self::CHAR_STRING);
                    break;

                case 2:
                    $this->setState(11013);
                    $this->match(self::ON);
                    break;

                case 3:
                    $this->setState(11014);
                    $this->match(self::OFF);
                    break;

                case 4:
                    $this->setState(11015);
                    $this->numeric();
                    break;

                case 5:
                    $this->setState(11016);
                    $this->regular_id();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function partition_extension_clause(): Context\Partition_extension_clauseContext
    {
        $localContext = new Context\Partition_extension_clauseContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1350, self::RULE_partition_extension_clause);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11019);

            $_la = $this->input->LA(1);

            if (!($_la === self::PARTITION || $_la === self::SUBPARTITION)) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
            $this->setState(11021);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::FOR) {
                $this->setState(11020);
                $this->match(self::FOR);
            }
            $this->setState(11023);
            $this->match(self::LEFT_PAREN);
            $this->setState(11025);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if (((($_la) & ~0x3f) === 0 && ((1 << $_la) & ((1 << self::ABORT) | (1 << self::ABS) | (1 << self::ACCESS) | (1 << self::ACCESSED) | (1 << self::ACCOUNT) | (1 << self::ACL) | (1 << self::ACOS) | (1 << self::ACTION) | (1 << self::ACTIONS) | (1 << self::ACTIVATE) | (1 << self::ACTIVE) | (1 << self::ACTIVE_COMPONENT) | (1 << self::ACTIVE_DATA) | (1 << self::ACTIVE_FUNCTION) | (1 << self::ACTIVE_TAG) | (1 << self::ACTIVITY) | (1 << self::ADAPTIVE_PLAN) | (1 << self::ADD) | (1 << self::ADD_COLUMN) | (1 << self::ADD_GROUP) | (1 << self::ADD_MONTHS) | (1 << self::ADJ_DATE) | (1 << self::ADMIN) | (1 << self::ADMINISTER) | (1 << self::ADMINISTRATOR) | (1 << self::ADVANCED) | (1 << self::ADVISE) | (1 << self::ADVISOR) | (1 << self::AFD_DISKSTRING) | (1 << self::AFTER) | (1 << self::AGENT) | (1 << self::AGGREGATE) | (1 << self::A_LETTER) | (1 << self::ALIAS) | (1 << self::ALL) | (1 << self::ALLOCATE) | (1 << self::ALLOW) | (1 << self::ALL_ROWS) | (1 << self::ALWAYS) | (1 << self::ANALYZE) | (1 << self::ANCILLARY) | (1 << self::AND_EQUAL) | (1 << self::ANOMALY) | (1 << self::ANSI_REARCH) | (1 << self::ANTIJOIN) | (1 << self::ANY) | (1 << self::ANYSCHEMA) | (1 << self::APPEND) | (1 << self::APPENDCHILDXML) | (1 << self::APPEND_VALUES) | (1 << self::APPLICATION) | (1 << self::APPLY) | (1 << self::APPROX_COUNT_DISTINCT) | (1 << self::ARCHIVAL) | (1 << self::ARCHIVE) | (1 << self::ARCHIVED) | (1 << self::ARCHIVELOG) | (1 << self::ARRAY) | (1 << self::ASCII))) !== 0) || (((($_la - 64)) & ~0x3f) === 0 && ((1 << ($_la - 64)) & ((1 << (self::ASCIISTR - 64)) | (1 << (self::ASIN - 64)) | (1 << (self::ASIS - 64)) | (1 << (self::ASSEMBLY - 64)) | (1 << (self::ASSIGN - 64)) | (1 << (self::ASSOCIATE - 64)) | (1 << (self::ASYNC - 64)) | (1 << (self::ASYNCHRONOUS - 64)) | (1 << (self::ATAN2 - 64)) | (1 << (self::ATAN - 64)) | (1 << (self::AT - 64)) | (1 << (self::ATTRIBUTE - 64)) | (1 << (self::ATTRIBUTES - 64)) | (1 << (self::AUTHENTICATED - 64)) | (1 << (self::AUTHENTICATION - 64)) | (1 << (self::AUTHID - 64)) | (1 << (self::AUTHORIZATION - 64)) | (1 << (self::AUTOALLOCATE - 64)) | (1 << (self::AUTO - 64)) | (1 << (self::AUTOEXTEND - 64)) | (1 << (self::AUTO_LOGIN - 64)) | (1 << (self::AUTOMATIC - 64)) | (1 << (self::AUTONOMOUS_TRANSACTION - 64)) | (1 << (self::AUTO_REOPTIMIZE - 64)) | (1 << (self::AVAILABILITY - 64)) | (1 << (self::AVRO - 64)) | (1 << (self::BACKGROUND - 64)) | (1 << (self::BACKUP - 64)) | (1 << (self::BASIC - 64)) | (1 << (self::BASICFILE - 64)) | (1 << (self::BATCH - 64)) | (1 << (self::BATCHSIZE - 64)) | (1 << (self::BATCH_TABLE_ACCESS_BY_ROWID - 64)) | (1 << (self::BECOME - 64)) | (1 << (self::BEFORE - 64)) | (1 << (self::BEGIN - 64)) | (1 << (self::BEGINNING - 64)) | (1 << (self::BEGIN_OUTLINE_DATA - 64)) | (1 << (self::BEHALF - 64)) | (1 << (self::BEQUEATH - 64)) | (1 << (self::BFILE - 64)) | (1 << (self::BFILENAME - 64)) | (1 << (self::BIGFILE - 64)) | (1 << (self::BINARY - 64)) | (1 << (self::BINARY_DOUBLE - 64)) | (1 << (self::BINARY_DOUBLE_INFINITY - 64)) | (1 << (self::BINARY_DOUBLE_NAN - 64)) | (1 << (self::BINARY_FLOAT - 64)) | (1 << (self::BINARY_FLOAT_INFINITY - 64)) | (1 << (self::BINARY_FLOAT_NAN - 64)) | (1 << (self::BINARY_INTEGER - 64)) | (1 << (self::BIND_AWARE - 64)) | (1 << (self::BINDING - 64)) | (1 << (self::BIN_TO_NUM - 64)) | (1 << (self::BITAND - 64)) | (1 << (self::BITMAP_AND - 64)) | (1 << (self::BITMAP - 64)) | (1 << (self::BITMAPS - 64)) | (1 << (self::BITMAP_TREE - 64)) | (1 << (self::BITS - 64)))) !== 0) || (((($_la - 128)) & ~0x3f) === 0 && ((1 << ($_la - 128)) & ((1 << (self::BLOB - 128)) | (1 << (self::BLOCK - 128)) | (1 << (self::BLOCK_RANGE - 128)) | (1 << (self::BLOCKS - 128)) | (1 << (self::BLOCKSIZE - 128)) | (1 << (self::BODY - 128)) | (1 << (self::BOOLEAN - 128)) | (1 << (self::BOTH - 128)) | (1 << (self::BOUND - 128)) | (1 << (self::BRANCH - 128)) | (1 << (self::BREADTH - 128)) | (1 << (self::BROADCAST - 128)) | (1 << (self::BSON - 128)) | (1 << (self::BUFFER - 128)) | (1 << (self::BUFFER_CACHE - 128)) | (1 << (self::BUFFER_POOL - 128)) | (1 << (self::BUILD - 128)) | (1 << (self::BULK - 128)) | (1 << (self::BYPASS_RECURSIVE_CHECK - 128)) | (1 << (self::BYPASS_UJVC - 128)) | (1 << (self::BYTE - 128)) | (1 << (self::CACHE - 128)) | (1 << (self::CACHE_CB - 128)) | (1 << (self::CACHE_INSTANCES - 128)) | (1 << (self::CACHE_TEMP_TABLE - 128)) | (1 << (self::CACHING - 128)) | (1 << (self::CALCULATED - 128)) | (1 << (self::CALLBACK - 128)) | (1 << (self::CALL - 128)) | (1 << (self::CANCEL - 128)) | (1 << (self::CAPACITY - 128)) | (1 << (self::CARDINALITY - 128)) | (1 << (self::CASCADE - 128)) | (1 << (self::CASE - 128)) | (1 << (self::CAST - 128)) | (1 << (self::CATEGORY - 128)) | (1 << (self::CDBDEFAULT - 128)) | (1 << (self::CEIL - 128)) | (1 << (self::CELL_FLASH_CACHE - 128)) | (1 << (self::CERTIFICATE - 128)) | (1 << (self::CFILE - 128)) | (1 << (self::CHAINED - 128)) | (1 << (self::CHANGE - 128)) | (1 << (self::CHANGE_DUPKEY_ERROR_INDEX - 128)) | (1 << (self::CHARACTER - 128)) | (1 << (self::CHAR - 128)) | (1 << (self::CHAR_CS - 128)) | (1 << (self::CHARTOROWID - 128)) | (1 << (self::CHECK_ACL_REWRITE - 128)) | (1 << (self::CHECKPOINT - 128)) | (1 << (self::CHILD - 128)) | (1 << (self::CHOOSE - 128)) | (1 << (self::CHR - 128)) | (1 << (self::CHUNK - 128)) | (1 << (self::CLASS - 128)) | (1 << (self::CLASSIFIER - 128)) | (1 << (self::CLEANUP - 128)) | (1 << (self::CLEAR - 128)) | (1 << (self::C_LETTER - 128)) | (1 << (self::CLIENT - 128)))) !== 0) || (((($_la - 192)) & ~0x3f) === 0 && ((1 << ($_la - 192)) & ((1 << (self::CLOB - 192)) | (1 << (self::CLONE - 192)) | (1 << (self::CLOSE_CACHED_OPEN_CURSORS - 192)) | (1 << (self::CLOSE - 192)) | (1 << (self::CLUSTER_BY_ROWID - 192)) | (1 << (self::CLUSTER - 192)) | (1 << (self::CLUSTER_DETAILS - 192)) | (1 << (self::CLUSTER_DISTANCE - 192)) | (1 << (self::CLUSTER_ID - 192)) | (1 << (self::CLUSTERING - 192)) | (1 << (self::CLUSTERING_FACTOR - 192)) | (1 << (self::CLUSTER_PROBABILITY - 192)) | (1 << (self::CLUSTER_SET - 192)) | (1 << (self::COALESCE - 192)) | (1 << (self::COALESCE_SQ - 192)) | (1 << (self::COARSE - 192)) | (1 << (self::CO_AUTH_IND - 192)) | (1 << (self::COLD - 192)) | (1 << (self::COLLECT - 192)) | (1 << (self::COLUMNAR - 192)) | (1 << (self::COLUMN_AUTH_INDICATOR - 192)) | (1 << (self::COLUMN - 192)) | (1 << (self::COLUMNS - 192)) | (1 << (self::COLUMN_STATS - 192)) | (1 << (self::COLUMN_VALUE - 192)) | (1 << (self::COMMENT - 192)) | (1 << (self::COMMIT - 192)) | (1 << (self::COMMITTED - 192)) | (1 << (self::COMMON_DATA - 192)) | (1 << (self::COMPACT - 192)) | (1 << (self::COMPATIBILITY - 192)) | (1 << (self::COMPILE - 192)) | (1 << (self::COMPLETE - 192)) | (1 << (self::COMPLIANCE - 192)) | (1 << (self::COMPONENT - 192)) | (1 << (self::COMPONENTS - 192)) | (1 << (self::COMPOSE - 192)) | (1 << (self::COMPOSITE - 192)) | (1 << (self::COMPOSITE_LIMIT - 192)) | (1 << (self::COMPOUND - 192)) | (1 << (self::COMPUTE - 192)) | (1 << (self::CONCAT - 192)) | (1 << (self::CON_DBID_TO_ID - 192)) | (1 << (self::CONDITIONAL - 192)) | (1 << (self::CONDITION - 192)) | (1 << (self::CONFIRM - 192)) | (1 << (self::CONFORMING - 192)) | (1 << (self::CON_GUID_TO_ID - 192)) | (1 << (self::CON_ID - 192)) | (1 << (self::CON_NAME_TO_ID - 192)) | (1 << (self::CONNECT_BY_CB_WHR_ONLY - 192)) | (1 << (self::CONNECT_BY_COMBINE_SW - 192)) | (1 << (self::CONNECT_BY_COST_BASED - 192)) | (1 << (self::CONNECT_BY_ELIM_DUPS - 192)) | (1 << (self::CONNECT_BY_FILTERING - 192)) | (1 << (self::CONNECT_BY_ISCYCLE - 192)) | (1 << (self::CONNECT_BY_ISLEAF - 192)) | (1 << (self::CONNECT_BY_ROOT - 192)) | (1 << (self::CONNECT_TIME - 192)) | (1 << (self::CONSIDER - 192)) | (1 << (self::CONSISTENT - 192)) | (1 << (self::CONSTANT - 192)))) !== 0) || (((($_la - 256)) & ~0x3f) === 0 && ((1 << ($_la - 256)) & ((1 << (self::CONST - 256)) | (1 << (self::CONSTRAINT - 256)) | (1 << (self::CONSTRAINTS - 256)) | (1 << (self::CONSTRUCTOR - 256)) | (1 << (self::CONTAINER - 256)) | (1 << (self::CONTAINER_DATA - 256)) | (1 << (self::CONTAINERS - 256)) | (1 << (self::CONTENT - 256)) | (1 << (self::CONTENTS - 256)) | (1 << (self::CONTEXT - 256)) | (1 << (self::CONTINUE - 256)) | (1 << (self::CONTROLFILE - 256)) | (1 << (self::CON_UID_TO_ID - 256)) | (1 << (self::CONVERT - 256)) | (1 << (self::COOKIE - 256)) | (1 << (self::COPY - 256)) | (1 << (self::CORR_K - 256)) | (1 << (self::CORR_S - 256)) | (1 << (self::CORRUPTION - 256)) | (1 << (self::CORRUPT_XID_ALL - 256)) | (1 << (self::CORRUPT_XID - 256)) | (1 << (self::COS - 256)) | (1 << (self::COSH - 256)) | (1 << (self::COST - 256)) | (1 << (self::COST_XML_QUERY_REWRITE - 256)) | (1 << (self::COUNT - 256)) | (1 << (self::COVAR_POP - 256)) | (1 << (self::COVAR_SAMP - 256)) | (1 << (self::CPU_COSTING - 256)) | (1 << (self::CPU_PER_CALL - 256)) | (1 << (self::CPU_PER_SESSION - 256)) | (1 << (self::CRASH - 256)) | (1 << (self::CREATE_FILE_DEST - 256)) | (1 << (self::CREATE_STORED_OUTLINES - 256)) | (1 << (self::CREATION - 256)) | (1 << (self::CREDENTIAL - 256)) | (1 << (self::CRITICAL - 256)) | (1 << (self::CROSS - 256)) | (1 << (self::CROSSEDITION - 256)) | (1 << (self::CSCONVERT - 256)) | (1 << (self::CUBE_AJ - 256)) | (1 << (self::CUBE - 256)) | (1 << (self::CUBE_GB - 256)) | (1 << (self::CUBE_SJ - 256)) | (1 << (self::CUME_DISTM - 256)) | (1 << (self::CURRENT - 256)) | (1 << (self::CURRENT_DATE - 256)) | (1 << (self::CURRENT_SCHEMA - 256)) | (1 << (self::CURRENT_TIME - 256)) | (1 << (self::CURRENT_TIMESTAMP - 256)) | (1 << (self::CURRENT_USER - 256)) | (1 << (self::CURRENTV - 256)) | (1 << (self::CURSOR - 256)) | (1 << (self::CURSOR_SHARING_EXACT - 256)) | (1 << (self::CURSOR_SPECIFIC_SEGMENT - 256)) | (1 << (self::CUSTOMDATUM - 256)) | (1 << (self::CV - 256)) | (1 << (self::CYCLE - 256)) | (1 << (self::DANGLING - 256)) | (1 << (self::DATABASE - 256)) | (1 << (self::DATA - 256)) | (1 << (self::DATAFILE - 256)) | (1 << (self::DATAFILES - 256)))) !== 0) || (((($_la - 321)) & ~0x3f) === 0 && ((1 << ($_la - 321)) & ((1 << (self::DATAMOVEMENT - 321)) | (1 << (self::DATAOBJNO - 321)) | (1 << (self::DATAOBJ_TO_MAT_PARTITION - 321)) | (1 << (self::DATAOBJ_TO_PARTITION - 321)) | (1 << (self::DATAPUMP - 321)) | (1 << (self::DATA_SECURITY_REWRITE_LIMIT - 321)) | (1 << (self::DATE - 321)) | (1 << (self::DATE_MODE - 321)) | (1 << (self::DAY - 321)) | (1 << (self::DAYS - 321)) | (1 << (self::DBA - 321)) | (1 << (self::DBA_RECYCLEBIN - 321)) | (1 << (self::DBMS_STATS - 321)) | (1 << (self::DB_ROLE_CHANGE - 321)) | (1 << (self::DBTIMEZONE - 321)) | (1 << (self::DB_UNIQUE_NAME - 321)) | (1 << (self::DB_VERSION - 321)) | (1 << (self::DDL - 321)) | (1 << (self::DEALLOCATE - 321)) | (1 << (self::DEBUG - 321)) | (1 << (self::DEBUGGER - 321)) | (1 << (self::DEC - 321)) | (1 << (self::DECIMAL - 321)) | (1 << (self::DECLARE - 321)) | (1 << (self::DECOMPOSE - 321)) | (1 << (self::DECORRELATE - 321)) | (1 << (self::DECR - 321)) | (1 << (self::DECREMENT - 321)) | (1 << (self::DECRYPT - 321)) | (1 << (self::DEDUPLICATE - 321)) | (1 << (self::DEFAULT - 321)) | (1 << (self::DEFAULTS - 321)) | (1 << (self::DEFERRABLE - 321)) | (1 << (self::DEFERRED - 321)) | (1 << (self::DEFINED - 321)) | (1 << (self::DEFINE - 321)) | (1 << (self::DEFINER - 321)) | (1 << (self::DEGREE - 321)) | (1 << (self::DELAY - 321)) | (1 << (self::DELEGATE - 321)) | (1 << (self::DELETE_ALL - 321)) | (1 << (self::DELETE - 321)) | (1 << (self::DELETEXML - 321)) | (1 << (self::DEMAND - 321)) | (1 << (self::DENSE_RANKM - 321)) | (1 << (self::DEPENDENT - 321)) | (1 << (self::DEPTH - 321)) | (1 << (self::DEQUEUE - 321)) | (1 << (self::DEREF - 321)) | (1 << (self::DEREF_NO_REWRITE - 321)) | (1 << (self::DESTROY - 321)) | (1 << (self::DETACHED - 321)) | (1 << (self::DETERMINES - 321)) | (1 << (self::DETERMINISTIC - 321)) | (1 << (self::DICTIONARY - 321)) | (1 << (self::DIMENSION - 321)) | (1 << (self::DIMENSIONS - 321)) | (1 << (self::DIRECT_LOAD - 321)) | (1 << (self::DIRECTORY - 321)) | (1 << (self::DIRECT_PATH - 321)) | (1 << (self::DISABLE_ALL - 321)) | (1 << (self::DISABLE - 321)) | (1 << (self::DISABLE_PARALLEL_DML - 321)))) !== 0) || (((($_la - 385)) & ~0x3f) === 0 && ((1 << ($_la - 385)) & ((1 << (self::DISABLE_PRESET - 385)) | (1 << (self::DISABLE_RPKE - 385)) | (1 << (self::DISALLOW - 385)) | (1 << (self::DISASSOCIATE - 385)) | (1 << (self::DISCARD - 385)) | (1 << (self::DISCONNECT - 385)) | (1 << (self::DISK - 385)) | (1 << (self::DISKGROUP - 385)) | (1 << (self::DISKS - 385)) | (1 << (self::DISMOUNT - 385)) | (1 << (self::DISTINCT - 385)) | (1 << (self::DISTINGUISHED - 385)) | (1 << (self::DISTRIBUTED - 385)) | (1 << (self::DISTRIBUTE - 385)) | (1 << (self::DML - 385)) | (1 << (self::DML_UPDATE - 385)) | (1 << (self::DOCFIDELITY - 385)) | (1 << (self::DOCUMENT - 385)) | (1 << (self::DOMAIN_INDEX_FILTER - 385)) | (1 << (self::DOMAIN_INDEX_NO_SORT - 385)) | (1 << (self::DOMAIN_INDEX_SORT - 385)) | (1 << (self::DOUBLE - 385)) | (1 << (self::DOWNGRADE - 385)) | (1 << (self::DRIVING_SITE - 385)) | (1 << (self::DROP_COLUMN - 385)) | (1 << (self::DROP_GROUP - 385)) | (1 << (self::DSINTERVAL_UNCONSTRAINED - 385)) | (1 << (self::DST_UPGRADE_INSERT_CONV - 385)) | (1 << (self::DUMP - 385)) | (1 << (self::DUPLICATE - 385)) | (1 << (self::DV - 385)) | (1 << (self::DYNAMIC - 385)) | (1 << (self::DYNAMIC_SAMPLING - 385)) | (1 << (self::DYNAMIC_SAMPLING_EST_CDN - 385)) | (1 << (self::EACH - 385)) | (1 << (self::EDITIONABLE - 385)) | (1 << (self::EDITION - 385)) | (1 << (self::EDITIONING - 385)) | (1 << (self::EDITIONS - 385)) | (1 << (self::ELEMENT - 385)) | (1 << (self::ELIM_GROUPBY - 385)) | (1 << (self::ELIMINATE_JOIN - 385)) | (1 << (self::ELIMINATE_OBY - 385)) | (1 << (self::ELIMINATE_OUTER_JOIN - 385)) | (1 << (self::EM - 385)) | (1 << (self::EMPTY_BLOB - 385)) | (1 << (self::EMPTY_CLOB - 385)) | (1 << (self::EMPTY - 385)) | (1 << (self::ENABLE_ALL - 385)) | (1 << (self::ENABLE - 385)) | (1 << (self::ENABLE_PARALLEL_DML - 385)) | (1 << (self::ENABLE_PRESET - 385)) | (1 << (self::ENCODING - 385)) | (1 << (self::ENCRYPT - 385)) | (1 << (self::ENCRYPTION - 385)) | (1 << (self::END_OUTLINE_DATA - 385)) | (1 << (self::ENFORCED - 385)) | (1 << (self::ENFORCE - 385)))) !== 0) || (((($_la - 449)) & ~0x3f) === 0 && ((1 << ($_la - 449)) & ((1 << (self::ENQUEUE - 449)) | (1 << (self::ENTERPRISE - 449)) | (1 << (self::ENTITYESCAPING - 449)) | (1 << (self::ENTRY - 449)) | (1 << (self::EQUIPART - 449)) | (1 << (self::ERR - 449)) | (1 << (self::ERROR_ARGUMENT - 449)) | (1 << (self::ERROR - 449)) | (1 << (self::ERROR_ON_OVERLAP_TIME - 449)) | (1 << (self::ERRORS - 449)) | (1 << (self::ESCAPE - 449)) | (1 << (self::ESTIMATE - 449)) | (1 << (self::EVAL - 449)) | (1 << (self::EVALNAME - 449)) | (1 << (self::EVALUATE - 449)) | (1 << (self::EVALUATION - 449)) | (1 << (self::EVENTS - 449)) | (1 << (self::EVERY - 449)) | (1 << (self::EXCEPT - 449)) | (1 << (self::EXCEPTION - 449)) | (1 << (self::EXCEPTION_INIT - 449)) | (1 << (self::EXCEPTIONS - 449)) | (1 << (self::EXCHANGE - 449)) | (1 << (self::EXCLUDE - 449)) | (1 << (self::EXCLUDING - 449)) | (1 << (self::EXECUTE - 449)) | (1 << (self::EXEMPT - 449)) | (1 << (self::EXISTING - 449)) | (1 << (self::EXISTS - 449)) | (1 << (self::EXISTSNODE - 449)) | (1 << (self::EXIT - 449)) | (1 << (self::EXPAND_GSET_TO_UNION - 449)) | (1 << (self::EXPAND_TABLE - 449)) | (1 << (self::EXP - 449)) | (1 << (self::EXPIRE - 449)) | (1 << (self::EXPLAIN - 449)) | (1 << (self::EXPLOSION - 449)) | (1 << (self::EXPORT - 449)) | (1 << (self::EXPR_CORR_CHECK - 449)) | (1 << (self::EXPRESS - 449)) | (1 << (self::EXTENDS - 449)) | (1 << (self::EXTENT - 449)) | (1 << (self::EXTENTS - 449)) | (1 << (self::EXTERNAL - 449)) | (1 << (self::EXTERNALLY - 449)) | (1 << (self::EXTRACTCLOBXML - 449)) | (1 << (self::EXTRACT - 449)) | (1 << (self::EXTRACTVALUE - 449)) | (1 << (self::EXTRA - 449)) | (1 << (self::FACILITY - 449)) | (1 << (self::FACT - 449)) | (1 << (self::FACTOR - 449)) | (1 << (self::FACTORIZE_JOIN - 449)) | (1 << (self::FAILED - 449)) | (1 << (self::FAILED_LOGIN_ATTEMPTS - 449)) | (1 << (self::FAILGROUP - 449)) | (1 << (self::FAILOVER - 449)) | (1 << (self::FAILURE - 449)) | (1 << (self::FALSE - 449)) | (1 << (self::FAMILY - 449)) | (1 << (self::FAR - 449)) | (1 << (self::FAST - 449)) | (1 << (self::FASTSTART - 449)))) !== 0) || (((($_la - 513)) & ~0x3f) === 0 && ((1 << ($_la - 513)) & ((1 << (self::FBTSCAN - 513)) | (1 << (self::FEATURE_DETAILS - 513)) | (1 << (self::FEATURE_ID - 513)) | (1 << (self::FEATURE_SET - 513)) | (1 << (self::FEATURE_VALUE - 513)) | (1 << (self::FETCH - 513)) | (1 << (self::FILE - 513)) | (1 << (self::FILE_NAME_CONVERT - 513)) | (1 << (self::FILESYSTEM_LIKE_LOGGING - 513)) | (1 << (self::FILTER - 513)) | (1 << (self::FINAL - 513)) | (1 << (self::FINE - 513)) | (1 << (self::FINISH - 513)) | (1 << (self::FIRST - 513)) | (1 << (self::FIRSTM - 513)) | (1 << (self::FIRST_ROWS - 513)) | (1 << (self::FIRST_VALUE - 513)) | (1 << (self::FIXED_VIEW_DATA - 513)) | (1 << (self::FLAGGER - 513)) | (1 << (self::FLASHBACK - 513)) | (1 << (self::FLASH_CACHE - 513)) | (1 << (self::FLOAT - 513)) | (1 << (self::FLOB - 513)) | (1 << (self::FLOOR - 513)) | (1 << (self::FLUSH - 513)) | (1 << (self::FOLDER - 513)) | (1 << (self::FOLLOWING - 513)) | (1 << (self::FOLLOWS - 513)) | (1 << (self::FORALL - 513)) | (1 << (self::FORCE - 513)) | (1 << (self::FORCE_XML_QUERY_REWRITE - 513)) | (1 << (self::FOREIGN - 513)) | (1 << (self::FOREVER - 513)) | (1 << (self::FORMAT - 513)) | (1 << (self::FORWARD - 513)) | (1 << (self::FRAGMENT_NUMBER - 513)) | (1 << (self::FREELIST - 513)) | (1 << (self::FREELISTS - 513)) | (1 << (self::FREEPOOLS - 513)) | (1 << (self::FRESH - 513)) | (1 << (self::FROM_TZ - 513)) | (1 << (self::FULL - 513)) | (1 << (self::FULL_OUTER_JOIN_TO_OUTER - 513)) | (1 << (self::FUNCTION - 513)) | (1 << (self::FUNCTIONS - 513)) | (1 << (self::GATHER_OPTIMIZER_STATISTICS - 513)) | (1 << (self::GATHER_PLAN_STATISTICS - 513)) | (1 << (self::GBY_CONC_ROLLUP - 513)) | (1 << (self::GBY_PUSHDOWN - 513)) | (1 << (self::GENERATED - 513)) | (1 << (self::GET - 513)) | (1 << (self::GLOBAL - 513)) | (1 << (self::GLOBALLY - 513)) | (1 << (self::GLOBAL_NAME - 513)) | (1 << (self::GLOBAL_TOPIC_ENABLED - 513)) | (1 << (self::GROUP_BY - 513)) | (1 << (self::GROUP_ID - 513)) | (1 << (self::GROUPING - 513)) | (1 << (self::GROUPING_ID - 513)))) !== 0) || (((($_la - 577)) & ~0x3f) === 0 && ((1 << ($_la - 577)) & ((1 << (self::GROUPS - 577)) | (1 << (self::GUARANTEED - 577)) | (1 << (self::GUARANTEE - 577)) | (1 << (self::GUARD - 577)) | (1 << (self::HASH_AJ - 577)) | (1 << (self::HASH - 577)) | (1 << (self::HASHKEYS - 577)) | (1 << (self::HASH_SJ - 577)) | (1 << (self::HEADER - 577)) | (1 << (self::HEAP - 577)) | (1 << (self::HELP - 577)) | (1 << (self::HEXTORAW - 577)) | (1 << (self::HEXTOREF - 577)) | (1 << (self::HIDDEN_KEYWORD - 577)) | (1 << (self::HIDE - 577)) | (1 << (self::HIERARCHY - 577)) | (1 << (self::HIGH - 577)) | (1 << (self::HINTSET_BEGIN - 577)) | (1 << (self::HINTSET_END - 577)) | (1 << (self::HOT - 577)) | (1 << (self::HOUR - 577)) | (1 << (self::HWM_BROKERED - 577)) | (1 << (self::HYBRID - 577)) | (1 << (self::IDENTIFIER - 577)) | (1 << (self::IDENTITY - 577)) | (1 << (self::IDGENERATORS - 577)) | (1 << (self::ID - 577)) | (1 << (self::IDLE_TIME - 577)) | (1 << (self::IF - 577)) | (1 << (self::IGNORE - 577)) | (1 << (self::IGNORE_OPTIM_EMBEDDED_HINTS - 577)) | (1 << (self::IGNORE_ROW_ON_DUPKEY_INDEX - 577)) | (1 << (self::IGNORE_WHERE_CLAUSE - 577)) | (1 << (self::ILM - 577)) | (1 << (self::IMMEDIATE - 577)) | (1 << (self::IMPACT - 577)) | (1 << (self::IMPORT - 577)) | (1 << (self::INACTIVE - 577)) | (1 << (self::INCLUDE - 577)) | (1 << (self::INCLUDE_VERSION - 577)) | (1 << (self::INCLUDING - 577)) | (1 << (self::INCREMENTAL - 577)) | (1 << (self::INCREMENT - 577)) | (1 << (self::INCR - 577)) | (1 << (self::INDENT - 577)) | (1 << (self::INDEX_ASC - 577)) | (1 << (self::INDEX_COMBINE - 577)) | (1 << (self::INDEX_DESC - 577)) | (1 << (self::INDEXED - 577)) | (1 << (self::INDEXES - 577)) | (1 << (self::INDEX_FFS - 577)) | (1 << (self::INDEX_FILTER - 577)) | (1 << (self::INDEXING - 577)) | (1 << (self::INDEX_JOIN - 577)) | (1 << (self::INDEX_ROWS - 577)) | (1 << (self::INDEX_RRS - 577)) | (1 << (self::INDEX_RS_ASC - 577)) | (1 << (self::INDEX_RS_DESC - 577)) | (1 << (self::INDEX_RS - 577)) | (1 << (self::INDEX_SCAN - 577)) | (1 << (self::INDEX_SKIP_SCAN - 577)))) !== 0) || (((($_la - 641)) & ~0x3f) === 0 && ((1 << ($_la - 641)) & ((1 << (self::INDEX_SS_ASC - 641)) | (1 << (self::INDEX_SS_DESC - 641)) | (1 << (self::INDEX_SS - 641)) | (1 << (self::INDEX_STATS - 641)) | (1 << (self::INDEXTYPE - 641)) | (1 << (self::INDEXTYPES - 641)) | (1 << (self::INDICATOR - 641)) | (1 << (self::INDICES - 641)) | (1 << (self::INFINITE - 641)) | (1 << (self::INFORMATIONAL - 641)) | (1 << (self::INHERIT - 641)) | (1 << (self::INITCAP - 641)) | (1 << (self::INITIAL - 641)) | (1 << (self::INITIALIZED - 641)) | (1 << (self::INITIALLY - 641)) | (1 << (self::INITRANS - 641)) | (1 << (self::INLINE - 641)) | (1 << (self::INLINE_XMLTYPE_NT - 641)) | (1 << (self::INMEMORY - 641)) | (1 << (self::IN_MEMORY_METADATA - 641)) | (1 << (self::INMEMORY_PRUNING - 641)) | (1 << (self::INNER - 641)) | (1 << (self::INOUT - 641)) | (1 << (self::INPLACE - 641)) | (1 << (self::INSERTCHILDXMLAFTER - 641)) | (1 << (self::INSERTCHILDXMLBEFORE - 641)) | (1 << (self::INSERTCHILDXML - 641)) | (1 << (self::INSERTXMLAFTER - 641)) | (1 << (self::INSERTXMLBEFORE - 641)) | (1 << (self::INSTANCE - 641)) | (1 << (self::INSTANCES - 641)) | (1 << (self::INSTANTIABLE - 641)) | (1 << (self::INSTANTLY - 641)) | (1 << (self::INSTEAD - 641)) | (1 << (self::INSTR2 - 641)) | (1 << (self::INSTR4 - 641)) | (1 << (self::INSTRB - 641)) | (1 << (self::INSTRC - 641)) | (1 << (self::INSTR - 641)) | (1 << (self::INTEGER - 641)) | (1 << (self::INTERLEAVED - 641)) | (1 << (self::INTERMEDIATE - 641)) | (1 << (self::INTERNAL_CONVERT - 641)) | (1 << (self::INTERNAL_USE - 641)) | (1 << (self::INTERPRETED - 641)) | (1 << (self::INTERVAL - 641)) | (1 << (self::INT - 641)) | (1 << (self::INVALIDATE - 641)) | (1 << (self::INVISIBLE - 641)) | (1 << (self::IN_XQUERY - 641)) | (1 << (self::ISOLATION - 641)) | (1 << (self::ISOLATION_LEVEL - 641)) | (1 << (self::ITERATE - 641)) | (1 << (self::ITERATION_NUMBER - 641)) | (1 << (self::JAVA - 641)) | (1 << (self::JOB - 641)) | (1 << (self::JOIN - 641)) | (1 << (self::JSON_ARRAYAGG - 641)) | (1 << (self::JSON_ARRAY - 641)))) !== 0) || (((($_la - 705)) & ~0x3f) === 0 && ((1 << ($_la - 705)) & ((1 << (self::JSON_EQUAL - 705)) | (1 << (self::JSON_EXISTS2 - 705)) | (1 << (self::JSON_EXISTS - 705)) | (1 << (self::JSONGET - 705)) | (1 << (self::JSON - 705)) | (1 << (self::JSON_OBJECTAGG - 705)) | (1 << (self::JSON_OBJECT - 705)) | (1 << (self::JSONPARSE - 705)) | (1 << (self::JSON_QUERY - 705)) | (1 << (self::JSON_SERIALIZE - 705)) | (1 << (self::JSON_TABLE - 705)) | (1 << (self::JSON_TEXTCONTAINS2 - 705)) | (1 << (self::JSON_TEXTCONTAINS - 705)) | (1 << (self::JSON_VALUE - 705)) | (1 << (self::KEEP_DUPLICATES - 705)) | (1 << (self::KEEP - 705)) | (1 << (self::KERBEROS - 705)) | (1 << (self::KEY - 705)) | (1 << (self::KEY_LENGTH - 705)) | (1 << (self::KEYSIZE - 705)) | (1 << (self::KEYS - 705)) | (1 << (self::KEYSTORE - 705)) | (1 << (self::KILL - 705)) | (1 << (self::LABEL - 705)) | (1 << (self::LANGUAGE - 705)) | (1 << (self::LAST_DAY - 705)) | (1 << (self::LAST - 705)) | (1 << (self::LAST_VALUE - 705)) | (1 << (self::LATERAL - 705)) | (1 << (self::LAX - 705)) | (1 << (self::LAYER - 705)) | (1 << (self::LDAP_REGISTRATION_ENABLED - 705)) | (1 << (self::LDAP_REGISTRATION - 705)) | (1 << (self::LDAP_REG_SYNC_INTERVAL - 705)) | (1 << (self::LEADING - 705)) | (1 << (self::LEFT - 705)) | (1 << (self::LENGTH2 - 705)) | (1 << (self::LENGTH4 - 705)) | (1 << (self::LENGTHB - 705)) | (1 << (self::LENGTHC - 705)) | (1 << (self::LENGTH - 705)) | (1 << (self::LESS - 705)) | (1 << (self::LEVEL - 705)) | (1 << (self::LEVELS - 705)) | (1 << (self::LIBRARY - 705)) | (1 << (self::LIFECYCLE - 705)) | (1 << (self::LIFE - 705)) | (1 << (self::LIFETIME - 705)) | (1 << (self::LIKE2 - 705)) | (1 << (self::LIKE4 - 705)) | (1 << (self::LIKEC - 705)) | (1 << (self::LIKE_EXPAND - 705)) | (1 << (self::LIMIT - 705)) | (1 << (self::LINEAR - 705)) | (1 << (self::LINK - 705)) | (1 << (self::LIST - 705)) | (1 << (self::LN - 705)) | (1 << (self::LNNVL - 705)) | (1 << (self::LOAD - 705)) | (1 << (self::LOB - 705)) | (1 << (self::LOBNVL - 705)) | (1 << (self::LOBS - 705)) | (1 << (self::LOCAL_INDEXES - 705)))) !== 0) || (((($_la - 769)) & ~0x3f) === 0 && ((1 << ($_la - 769)) & ((1 << (self::LOCAL - 769)) | (1 << (self::LOCALTIME - 769)) | (1 << (self::LOCALTIMESTAMP - 769)) | (1 << (self::LOCATION - 769)) | (1 << (self::LOCATOR - 769)) | (1 << (self::LOCKED - 769)) | (1 << (self::LOCKING - 769)) | (1 << (self::LOGFILE - 769)) | (1 << (self::LOGFILES - 769)) | (1 << (self::LOGGING - 769)) | (1 << (self::LOGICAL - 769)) | (1 << (self::LOGICAL_READS_PER_CALL - 769)) | (1 << (self::LOGICAL_READS_PER_SESSION - 769)) | (1 << (self::LOG - 769)) | (1 << (self::LOGMINING - 769)) | (1 << (self::LOGOFF - 769)) | (1 << (self::LOGON - 769)) | (1 << (self::LOG_READ_ONLY_VIOLATIONS - 769)) | (1 << (self::LONG - 769)) | (1 << (self::LOOP - 769)) | (1 << (self::LOWER - 769)) | (1 << (self::LOW - 769)) | (1 << (self::LPAD - 769)) | (1 << (self::LTRIM - 769)) | (1 << (self::MAIN - 769)) | (1 << (self::MAKE_REF - 769)) | (1 << (self::MANAGED - 769)) | (1 << (self::MANAGE - 769)) | (1 << (self::MANAGEMENT - 769)) | (1 << (self::MANAGER - 769)) | (1 << (self::MANUAL - 769)) | (1 << (self::MAP - 769)) | (1 << (self::MAPPING - 769)) | (1 << (self::MASTER - 769)) | (1 << (self::MATCHED - 769)) | (1 << (self::MATCHES - 769)) | (1 << (self::MATCH - 769)) | (1 << (self::MATCH_NUMBER - 769)) | (1 << (self::MATCH_RECOGNIZE - 769)) | (1 << (self::MATERIALIZED - 769)) | (1 << (self::MATERIALIZE - 769)) | (1 << (self::MAXARCHLOGS - 769)) | (1 << (self::MAXDATAFILES - 769)) | (1 << (self::MAXEXTENTS - 769)) | (1 << (self::MAXIMIZE - 769)) | (1 << (self::MAXINSTANCES - 769)) | (1 << (self::MAXLOGFILES - 769)) | (1 << (self::MAXLOGHISTORY - 769)) | (1 << (self::MAXLOGMEMBERS - 769)) | (1 << (self::MAX_SHARED_TEMP_SIZE - 769)) | (1 << (self::MAXSIZE - 769)) | (1 << (self::MAXTRANS - 769)) | (1 << (self::MAXVALUE - 769)) | (1 << (self::MEASURE - 769)) | (1 << (self::MEASURES - 769)) | (1 << (self::MEDIUM - 769)) | (1 << (self::MEMBER - 769)) | (1 << (self::MEMCOMPRESS - 769)) | (1 << (self::MEMORY - 769)) | (1 << (self::MERGEACTIONS - 769)) | (1 << (self::MERGE_AJ - 769)) | (1 << (self::MERGE_CONST_ON - 769)) | (1 << (self::MERGE - 769)))) !== 0) || (((($_la - 833)) & ~0x3f) === 0 && ((1 << ($_la - 833)) & ((1 << (self::MERGE_SJ - 833)) | (1 << (self::METADATA - 833)) | (1 << (self::METHOD - 833)) | (1 << (self::MIGRATE - 833)) | (1 << (self::MIGRATION - 833)) | (1 << (self::MINEXTENTS - 833)) | (1 << (self::MINIMIZE - 833)) | (1 << (self::MINIMUM - 833)) | (1 << (self::MINING - 833)) | (1 << (self::MINUS_NULL - 833)) | (1 << (self::MINUTE - 833)) | (1 << (self::MINVALUE - 833)) | (1 << (self::MIRRORCOLD - 833)) | (1 << (self::MIRRORHOT - 833)) | (1 << (self::MIRROR - 833)) | (1 << (self::MLSLABEL - 833)) | (1 << (self::MODEL_COMPILE_SUBQUERY - 833)) | (1 << (self::MODEL_DONTVERIFY_UNIQUENESS - 833)) | (1 << (self::MODEL_DYNAMIC_SUBQUERY - 833)) | (1 << (self::MODEL_MIN_ANALYSIS - 833)) | (1 << (self::MODEL - 833)) | (1 << (self::MODEL_NB - 833)) | (1 << (self::MODEL_NO_ANALYSIS - 833)) | (1 << (self::MODEL_PBY - 833)) | (1 << (self::MODEL_PUSH_REF - 833)) | (1 << (self::MODEL_SV - 833)) | (1 << (self::MODIFICATION - 833)) | (1 << (self::MODIFY_COLUMN_TYPE - 833)) | (1 << (self::MODIFY - 833)) | (1 << (self::MOD - 833)) | (1 << (self::MODULE - 833)) | (1 << (self::MONITORING - 833)) | (1 << (self::MONITOR - 833)) | (1 << (self::MONTH - 833)) | (1 << (self::MONTHS_BETWEEN - 833)) | (1 << (self::MONTHS - 833)) | (1 << (self::MOUNT - 833)) | (1 << (self::MOUNTPATH - 833)) | (1 << (self::MOVEMENT - 833)) | (1 << (self::MOVE - 833)) | (1 << (self::MULTIDIMENSIONAL - 833)) | (1 << (self::MULTISET - 833)) | (1 << (self::MV_MERGE - 833)) | (1 << (self::NAMED - 833)) | (1 << (self::NAME - 833)) | (1 << (self::NAMESPACE - 833)) | (1 << (self::NAN - 833)) | (1 << (self::NANVL - 833)) | (1 << (self::NATIONAL - 833)) | (1 << (self::NATIVE_FULL_OUTER_JOIN - 833)) | (1 << (self::NATIVE - 833)) | (1 << (self::NATURAL - 833)) | (1 << (self::NAV - 833)) | (1 << (self::NCHAR_CS - 833)) | (1 << (self::NCHAR - 833)) | (1 << (self::NCHR - 833)) | (1 << (self::NCLOB - 833)) | (1 << (self::NEEDED - 833)) | (1 << (self::NEG - 833)) | (1 << (self::NESTED - 833)) | (1 << (self::NESTED_TABLE_FAST_INSERT - 833)))) !== 0) || (((($_la - 897)) & ~0x3f) === 0 && ((1 << ($_la - 897)) & ((1 << (self::NESTED_TABLE_GET_REFS - 897)) | (1 << (self::NESTED_TABLE_ID - 897)) | (1 << (self::NESTED_TABLE_SET_REFS - 897)) | (1 << (self::NESTED_TABLE_SET_SETID - 897)) | (1 << (self::NETWORK - 897)) | (1 << (self::NEVER - 897)) | (1 << (self::NEW - 897)) | (1 << (self::NEW_TIME - 897)) | (1 << (self::NEXT_DAY - 897)) | (1 << (self::NEXT - 897)) | (1 << (self::NL_AJ - 897)) | (1 << (self::NLJ_BATCHING - 897)) | (1 << (self::NLJ_INDEX_FILTER - 897)) | (1 << (self::NLJ_INDEX_SCAN - 897)) | (1 << (self::NLJ_PREFETCH - 897)) | (1 << (self::NLS_CALENDAR - 897)) | (1 << (self::NLS_CHARACTERSET - 897)) | (1 << (self::NLS_CHARSET_DECL_LEN - 897)) | (1 << (self::NLS_CHARSET_ID - 897)) | (1 << (self::NLS_CHARSET_NAME - 897)) | (1 << (self::NLS_COMP - 897)) | (1 << (self::NLS_CURRENCY - 897)) | (1 << (self::NLS_DATE_FORMAT - 897)) | (1 << (self::NLS_DATE_LANGUAGE - 897)) | (1 << (self::NLS_INITCAP - 897)) | (1 << (self::NLS_ISO_CURRENCY - 897)) | (1 << (self::NL_SJ - 897)) | (1 << (self::NLS_LANG - 897)) | (1 << (self::NLS_LANGUAGE - 897)) | (1 << (self::NLS_LENGTH_SEMANTICS - 897)) | (1 << (self::NLS_LOWER - 897)) | (1 << (self::NLS_NCHAR_CONV_EXCP - 897)) | (1 << (self::NLS_NUMERIC_CHARACTERS - 897)) | (1 << (self::NLS_SORT - 897)) | (1 << (self::NLSSORT - 897)) | (1 << (self::NLS_SPECIAL_CHARS - 897)) | (1 << (self::NLS_TERRITORY - 897)) | (1 << (self::NLS_UPPER - 897)) | (1 << (self::NO_ACCESS - 897)) | (1 << (self::NO_ADAPTIVE_PLAN - 897)) | (1 << (self::NO_ANSI_REARCH - 897)) | (1 << (self::NOAPPEND - 897)) | (1 << (self::NOARCHIVELOG - 897)) | (1 << (self::NOAUDIT - 897)) | (1 << (self::NO_AUTO_REOPTIMIZE - 897)) | (1 << (self::NO_BASETABLE_MULTIMV_REWRITE - 897)) | (1 << (self::NO_BATCH_TABLE_ACCESS_BY_ROWID - 897)) | (1 << (self::NO_BIND_AWARE - 897)) | (1 << (self::NO_BUFFER - 897)) | (1 << (self::NOCACHE - 897)) | (1 << (self::NO_CARTESIAN - 897)) | (1 << (self::NO_CHECK_ACL_REWRITE - 897)) | (1 << (self::NO_CLUSTER_BY_ROWID - 897)) | (1 << (self::NO_CLUSTERING - 897)) | (1 << (self::NO_COALESCE_SQ - 897)) | (1 << (self::NO_COMMON_DATA - 897)) | (1 << (self::NO_CONNECT_BY_CB_WHR_ONLY - 897)) | (1 << (self::NO_CONNECT_BY_COMBINE_SW - 897)) | (1 << (self::NO_CONNECT_BY_COST_BASED - 897)) | (1 << (self::NO_CONNECT_BY_ELIM_DUPS - 897)) | (1 << (self::NO_CONNECT_BY_FILTERING - 897)) | (1 << (self::NOCOPY - 897)) | (1 << (self::NO_COST_XML_QUERY_REWRITE - 897)))) !== 0) || (((($_la - 961)) & ~0x3f) === 0 && ((1 << ($_la - 961)) & ((1 << (self::NO_CPU_COSTING - 961)) | (1 << (self::NOCPU_COSTING - 961)) | (1 << (self::NOCYCLE - 961)) | (1 << (self::NO_DATA_SECURITY_REWRITE - 961)) | (1 << (self::NO_DECORRELATE - 961)) | (1 << (self::NODELAY - 961)) | (1 << (self::NO_DOMAIN_INDEX_FILTER - 961)) | (1 << (self::NO_DST_UPGRADE_INSERT_CONV - 961)) | (1 << (self::NO_ELIM_GROUPBY - 961)) | (1 << (self::NO_ELIMINATE_JOIN - 961)) | (1 << (self::NO_ELIMINATE_OBY - 961)) | (1 << (self::NO_ELIMINATE_OUTER_JOIN - 961)) | (1 << (self::NOENTITYESCAPING - 961)) | (1 << (self::NO_EXPAND_GSET_TO_UNION - 961)) | (1 << (self::NO_EXPAND - 961)) | (1 << (self::NO_EXPAND_TABLE - 961)) | (1 << (self::NO_FACT - 961)) | (1 << (self::NO_FACTORIZE_JOIN - 961)) | (1 << (self::NO_FILTERING - 961)) | (1 << (self::NOFORCE - 961)) | (1 << (self::NO_FULL_OUTER_JOIN_TO_OUTER - 961)) | (1 << (self::NO_GATHER_OPTIMIZER_STATISTICS - 961)) | (1 << (self::NO_GBY_PUSHDOWN - 961)) | (1 << (self::NOGUARANTEE - 961)) | (1 << (self::NO_INDEX_FFS - 961)) | (1 << (self::NO_INDEX - 961)) | (1 << (self::NO_INDEX_SS - 961)) | (1 << (self::NO_INMEMORY - 961)) | (1 << (self::NO_INMEMORY_PRUNING - 961)) | (1 << (self::NOKEEP - 961)) | (1 << (self::NO_LOAD - 961)) | (1 << (self::NOLOCAL - 961)) | (1 << (self::NOLOGGING - 961)) | (1 << (self::NOMAPPING - 961)) | (1 << (self::NOMAXVALUE - 961)) | (1 << (self::NO_MERGE - 961)) | (1 << (self::NOMINIMIZE - 961)) | (1 << (self::NOMINVALUE - 961)) | (1 << (self::NO_MODEL_PUSH_REF - 961)) | (1 << (self::NO_MONITORING - 961)) | (1 << (self::NOMONITORING - 961)) | (1 << (self::NO_MONITOR - 961)) | (1 << (self::NO_MULTIMV_REWRITE - 961)) | (1 << (self::NO_NATIVE_FULL_OUTER_JOIN - 961)) | (1 << (self::NONBLOCKING - 961)) | (1 << (self::NONEDITIONABLE - 961)) | (1 << (self::NONE - 961)) | (1 << (self::NO_NLJ_BATCHING - 961)) | (1 << (self::NO_NLJ_PREFETCH - 961)) | (1 << (self::NO - 961)) | (1 << (self::NONSCHEMA - 961)) | (1 << (self::NO_OBJECT_LINK - 961)) | (1 << (self::NOORDER - 961)) | (1 << (self::NO_ORDER_ROLLUPS - 961)) | (1 << (self::NO_OUTER_JOIN_TO_ANTI - 961)) | (1 << (self::NO_OUTER_JOIN_TO_INNER - 961)) | (1 << (self::NOOVERRIDE - 961)) | (1 << (self::NO_PARALLEL_INDEX - 961)) | (1 << (self::NOPARALLEL_INDEX - 961)) | (1 << (self::NO_PARALLEL - 961)) | (1 << (self::NOPARALLEL - 961)) | (1 << (self::NO_PARTIAL_COMMIT - 961)) | (1 << (self::NO_PARTIAL_JOIN - 961)) | (1 << (self::NO_PARTIAL_ROLLUP_PUSHDOWN - 961)))) !== 0) || (((($_la - 1025)) & ~0x3f) === 0 && ((1 << ($_la - 1025)) & ((1 << (self::NOPARTITION - 1025)) | (1 << (self::NO_PLACE_DISTINCT - 1025)) | (1 << (self::NO_PLACE_GROUP_BY - 1025)) | (1 << (self::NO_PQ_CONCURRENT_UNION - 1025)) | (1 << (self::NO_PQ_MAP - 1025)) | (1 << (self::NO_PQ_REPLICATE - 1025)) | (1 << (self::NO_PQ_SKEW - 1025)) | (1 << (self::NO_PRUNE_GSETS - 1025)) | (1 << (self::NO_PULL_PRED - 1025)) | (1 << (self::NO_PUSH_PRED - 1025)) | (1 << (self::NO_PUSH_SUBQ - 1025)) | (1 << (self::NO_PX_FAULT_TOLERANCE - 1025)) | (1 << (self::NO_PX_JOIN_FILTER - 1025)) | (1 << (self::NO_QKN_BUFF - 1025)) | (1 << (self::NO_QUERY_TRANSFORMATION - 1025)) | (1 << (self::NO_REF_CASCADE - 1025)) | (1 << (self::NORELOCATE - 1025)) | (1 << (self::NORELY - 1025)) | (1 << (self::NOREPAIR - 1025)) | (1 << (self::NOREPLAY - 1025)) | (1 << (self::NORESETLOGS - 1025)) | (1 << (self::NO_RESULT_CACHE - 1025)) | (1 << (self::NOREVERSE - 1025)) | (1 << (self::NO_REWRITE - 1025)) | (1 << (self::NOREWRITE - 1025)) | (1 << (self::NORMAL - 1025)) | (1 << (self::NO_ROOT_SW_FOR_LOCAL - 1025)) | (1 << (self::NOROWDEPENDENCIES - 1025)) | (1 << (self::NOSCHEMACHECK - 1025)) | (1 << (self::NOSEGMENT - 1025)) | (1 << (self::NO_SEMIJOIN - 1025)) | (1 << (self::NO_SEMI_TO_INNER - 1025)) | (1 << (self::NO_SET_TO_JOIN - 1025)) | (1 << (self::NOSORT - 1025)) | (1 << (self::NO_SQL_TRANSLATION - 1025)) | (1 << (self::NO_SQL_TUNE - 1025)) | (1 << (self::NO_STAR_TRANSFORMATION - 1025)) | (1 << (self::NO_STATEMENT_QUEUING - 1025)) | (1 << (self::NO_STATS_GSETS - 1025)) | (1 << (self::NOSTRICT - 1025)) | (1 << (self::NO_SUBQUERY_PRUNING - 1025)) | (1 << (self::NO_SUBSTRB_PAD - 1025)) | (1 << (self::NO_SWAP_JOIN_INPUTS - 1025)) | (1 << (self::NOSWITCH - 1025)) | (1 << (self::NO_TABLE_LOOKUP_BY_NL - 1025)) | (1 << (self::NO_TEMP_TABLE - 1025)) | (1 << (self::NOTHING - 1025)) | (1 << (self::NOTIFICATION - 1025)) | (1 << (self::NOT - 1025)) | (1 << (self::NO_TRANSFORM_DISTINCT_AGG - 1025)) | (1 << (self::NO_UNNEST - 1025)) | (1 << (self::NO_USE_CUBE - 1025)) | (1 << (self::NO_USE_HASH_AGGREGATION - 1025)) | (1 << (self::NO_USE_HASH_GBY_FOR_PUSHDOWN - 1025)) | (1 << (self::NO_USE_HASH - 1025)) | (1 << (self::NO_USE_INVISIBLE_INDEXES - 1025)) | (1 << (self::NO_USE_MERGE - 1025)) | (1 << (self::NO_USE_NL - 1025)) | (1 << (self::NO_USE_VECTOR_AGGREGATION - 1025)) | (1 << (self::NOVALIDATE - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_DIMS - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_FACT - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM - 1025)))) !== 0) || (((($_la - 1089)) & ~0x3f) === 0 && ((1 << ($_la - 1089)) & ((1 << (self::NO_XDB_FASTPATH_INSERT - 1089)) | (1 << (self::NO_XML_DML_REWRITE - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE_IN_SELECT - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE - 1089)) | (1 << (self::NO_XML_QUERY_REWRITE - 1089)) | (1 << (self::NO_ZONEMAP - 1089)) | (1 << (self::NTH_VALUE - 1089)) | (1 << (self::NULLIF - 1089)) | (1 << (self::NULL_ - 1089)) | (1 << (self::NULLS - 1089)) | (1 << (self::NUMBER - 1089)) | (1 << (self::NUMERIC - 1089)) | (1 << (self::NUM_INDEX_KEYS - 1089)) | (1 << (self::NUMTODSINTERVAL - 1089)) | (1 << (self::NUMTOYMINTERVAL - 1089)) | (1 << (self::NVARCHAR2 - 1089)) | (1 << (self::NVL2 - 1089)) | (1 << (self::OBJECT2XML - 1089)) | (1 << (self::OBJECT - 1089)) | (1 << (self::OBJ_ID - 1089)) | (1 << (self::OBJNO - 1089)) | (1 << (self::OBJNO_REUSE - 1089)) | (1 << (self::OCCURENCES - 1089)) | (1 << (self::OFFLINE - 1089)) | (1 << (self::OFF - 1089)) | (1 << (self::OFFSET - 1089)) | (1 << (self::OIDINDEX - 1089)) | (1 << (self::OID - 1089)) | (1 << (self::OLAP - 1089)) | (1 << (self::OLD - 1089)) | (1 << (self::OLD_PUSH_PRED - 1089)) | (1 << (self::OLS - 1089)) | (1 << (self::OLTP - 1089)) | (1 << (self::OMIT - 1089)) | (1 << (self::ONE - 1089)) | (1 << (self::ONLINE - 1089)) | (1 << (self::ONLY - 1089)) | (1 << (self::OPAQUE - 1089)) | (1 << (self::OPAQUE_TRANSFORM - 1089)) | (1 << (self::OPAQUE_XCANONICAL - 1089)) | (1 << (self::OPCODE - 1089)) | (1 << (self::OPEN - 1089)) | (1 << (self::OPERATIONS - 1089)) | (1 << (self::OPERATOR - 1089)) | (1 << (self::OPT_ESTIMATE - 1089)) | (1 << (self::OPTIMAL - 1089)) | (1 << (self::OPTIMIZE - 1089)) | (1 << (self::OPTIMIZER_FEATURES_ENABLE - 1089)) | (1 << (self::OPTIMIZER_GOAL - 1089)) | (1 << (self::OPT_PARAM - 1089)) | (1 << (self::ORA_BRANCH - 1089)) | (1 << (self::ORA_CHECK_ACL - 1089)) | (1 << (self::ORA_CHECK_PRIVILEGE - 1089)) | (1 << (self::ORA_CLUSTERING - 1089)) | (1 << (self::ORADATA - 1089)) | (1 << (self::ORADEBUG - 1089)) | (1 << (self::ORA_DST_AFFECTED - 1089)) | (1 << (self::ORA_DST_CONVERT - 1089)) | (1 << (self::ORA_DST_ERROR - 1089)) | (1 << (self::ORA_GET_ACLIDS - 1089)))) !== 0) || (((($_la - 1153)) & ~0x3f) === 0 && ((1 << ($_la - 1153)) & ((1 << (self::ORA_GET_PRIVILEGES - 1153)) | (1 << (self::ORA_HASH - 1153)) | (1 << (self::ORA_INVOKING_USERID - 1153)) | (1 << (self::ORA_INVOKING_USER - 1153)) | (1 << (self::ORA_INVOKING_XS_USER_GUID - 1153)) | (1 << (self::ORA_INVOKING_XS_USER - 1153)) | (1 << (self::ORA_RAWCOMPARE - 1153)) | (1 << (self::ORA_RAWCONCAT - 1153)) | (1 << (self::ORA_ROWSCN - 1153)) | (1 << (self::ORA_ROWSCN_RAW - 1153)) | (1 << (self::ORA_ROWVERSION - 1153)) | (1 << (self::ORA_TABVERSION - 1153)) | (1 << (self::ORA_WRITE_TIME - 1153)) | (1 << (self::ORDERED - 1153)) | (1 << (self::ORDERED_PREDICATES - 1153)) | (1 << (self::ORDINALITY - 1153)) | (1 << (self::OR_EXPAND - 1153)) | (1 << (self::ORGANIZATION - 1153)) | (1 << (self::OR_PREDICATES - 1153)) | (1 << (self::OSERROR - 1153)) | (1 << (self::OTHER - 1153)) | (1 << (self::OUTER_JOIN_TO_ANTI - 1153)) | (1 << (self::OUTER_JOIN_TO_INNER - 1153)) | (1 << (self::OUTER - 1153)) | (1 << (self::OUTLINE_LEAF - 1153)) | (1 << (self::OUTLINE - 1153)) | (1 << (self::OUT_OF_LINE - 1153)) | (1 << (self::OUT - 1153)) | (1 << (self::OVERFLOW_NOMOVE - 1153)) | (1 << (self::OVERFLOW - 1153)) | (1 << (self::OVERLAPS - 1153)) | (1 << (self::OVER - 1153)) | (1 << (self::OVERRIDING - 1153)) | (1 << (self::OWNER - 1153)) | (1 << (self::OWNERSHIP - 1153)) | (1 << (self::OWN - 1153)) | (1 << (self::PACKAGE - 1153)) | (1 << (self::PACKAGES - 1153)) | (1 << (self::PARALLEL_ENABLE - 1153)) | (1 << (self::PARALLEL_INDEX - 1153)) | (1 << (self::PARALLEL - 1153)) | (1 << (self::PARAMETERS - 1153)) | (1 << (self::PARAM - 1153)) | (1 << (self::PARENT - 1153)) | (1 << (self::PARITY - 1153)) | (1 << (self::PARTIAL_JOIN - 1153)) | (1 << (self::PARTIALLY - 1153)) | (1 << (self::PARTIAL - 1153)) | (1 << (self::PARTIAL_ROLLUP_PUSHDOWN - 1153)) | (1 << (self::PARTITION_HASH - 1153)) | (1 << (self::PARTITION_LIST - 1153)) | (1 << (self::PARTITION - 1153)) | (1 << (self::PARTITION_RANGE - 1153)) | (1 << (self::PARTITIONS - 1153)) | (1 << (self::PARTNUMINST - 1153)) | (1 << (self::PASSING - 1153)) | (1 << (self::PASSWORD_GRACE_TIME - 1153)) | (1 << (self::PASSWORD_LIFE_TIME - 1153)) | (1 << (self::PASSWORD_LOCK_TIME - 1153)) | (1 << (self::PASSWORD - 1153)) | (1 << (self::PASSWORD_REUSE_MAX - 1153)))) !== 0) || (((($_la - 1217)) & ~0x3f) === 0 && ((1 << ($_la - 1217)) & ((1 << (self::PASSWORD_REUSE_TIME - 1217)) | (1 << (self::PASSWORD_VERIFY_FUNCTION - 1217)) | (1 << (self::PAST - 1217)) | (1 << (self::PATCH - 1217)) | (1 << (self::PATH - 1217)) | (1 << (self::PATH_PREFIX - 1217)) | (1 << (self::PATHS - 1217)) | (1 << (self::PATTERN - 1217)) | (1 << (self::PBL_HS_BEGIN - 1217)) | (1 << (self::PBL_HS_END - 1217)) | (1 << (self::PCTINCREASE - 1217)) | (1 << (self::PCTTHRESHOLD - 1217)) | (1 << (self::PCTUSED - 1217)) | (1 << (self::PCTVERSION - 1217)) | (1 << (self::PENDING - 1217)) | (1 << (self::PERCENT_KEYWORD - 1217)) | (1 << (self::PERCENT_RANKM - 1217)) | (1 << (self::PERFORMANCE - 1217)) | (1 << (self::PERIOD_KEYWORD - 1217)) | (1 << (self::PERMANENT - 1217)) | (1 << (self::PERMISSION - 1217)) | (1 << (self::PERMUTE - 1217)) | (1 << (self::PER - 1217)) | (1 << (self::PFILE - 1217)) | (1 << (self::PHYSICAL - 1217)) | (1 << (self::PIKEY - 1217)) | (1 << (self::PIPELINED - 1217)) | (1 << (self::PIV_GB - 1217)) | (1 << (self::PIVOT - 1217)) | (1 << (self::PIV_SSF - 1217)) | (1 << (self::PLACE_DISTINCT - 1217)) | (1 << (self::PLACE_GROUP_BY - 1217)) | (1 << (self::PLAN - 1217)) | (1 << (self::PLSCOPE_SETTINGS - 1217)) | (1 << (self::PLS_INTEGER - 1217)) | (1 << (self::PLSQL_CCFLAGS - 1217)) | (1 << (self::PLSQL_CODE_TYPE - 1217)) | (1 << (self::PLSQL_DEBUG - 1217)) | (1 << (self::PLSQL_OPTIMIZE_LEVEL - 1217)) | (1 << (self::PLSQL_WARNINGS - 1217)) | (1 << (self::PLUGGABLE - 1217)) | (1 << (self::POINT - 1217)) | (1 << (self::POLICY - 1217)) | (1 << (self::POOL_16K - 1217)) | (1 << (self::POOL_2K - 1217)) | (1 << (self::POOL_32K - 1217)) | (1 << (self::POOL_4K - 1217)) | (1 << (self::POOL_8K - 1217)) | (1 << (self::POSITIVEN - 1217)) | (1 << (self::POSITIVE - 1217)) | (1 << (self::POST_TRANSACTION - 1217)) | (1 << (self::POWERMULTISET_BY_CARDINALITY - 1217)) | (1 << (self::POWERMULTISET - 1217)) | (1 << (self::POWER - 1217)) | (1 << (self::PQ_CONCURRENT_UNION - 1217)) | (1 << (self::PQ_DISTRIBUTE - 1217)))) !== 0) || (((($_la - 1281)) & ~0x3f) === 0 && ((1 << ($_la - 1281)) & ((1 << (self::PQ_DISTRIBUTE_WINDOW - 1281)) | (1 << (self::PQ_FILTER - 1281)) | (1 << (self::PQ_MAP - 1281)) | (1 << (self::PQ_NOMAP - 1281)) | (1 << (self::PQ_REPLICATE - 1281)) | (1 << (self::PQ_SKEW - 1281)) | (1 << (self::PRAGMA - 1281)) | (1 << (self::PREBUILT - 1281)) | (1 << (self::PRECEDES - 1281)) | (1 << (self::PRECEDING - 1281)) | (1 << (self::PRECISION - 1281)) | (1 << (self::PRECOMPUTE_SUBQUERY - 1281)) | (1 << (self::PREDICATE_REORDERS - 1281)) | (1 << (self::PRELOAD - 1281)) | (1 << (self::PREPARE - 1281)) | (1 << (self::PRESENTNNV - 1281)) | (1 << (self::PRESENT - 1281)) | (1 << (self::PRESENTV - 1281)) | (1 << (self::PRESERVE_OID - 1281)) | (1 << (self::PRESERVE - 1281)) | (1 << (self::PRETTY - 1281)) | (1 << (self::PREVIOUS - 1281)) | (1 << (self::PREV - 1281)) | (1 << (self::PRIMARY - 1281)) | (1 << (self::PRINTBLOBTOCLOB - 1281)) | (1 << (self::PRIORITY - 1281)) | (1 << (self::PRIOR - 1281)) | (1 << (self::PRIVATE - 1281)) | (1 << (self::PRIVATE_SGA - 1281)) | (1 << (self::PRIVILEGED - 1281)) | (1 << (self::PRIVILEGE - 1281)) | (1 << (self::PRIVILEGES - 1281)) | (1 << (self::PROCEDURAL - 1281)) | (1 << (self::PROCEDURE - 1281)) | (1 << (self::PROCESS - 1281)) | (1 << (self::PROFILE - 1281)) | (1 << (self::PROGRAM - 1281)) | (1 << (self::PROJECT - 1281)) | (1 << (self::PROPAGATE - 1281)) | (1 << (self::PROTECTED - 1281)) | (1 << (self::PROTECTION - 1281)) | (1 << (self::PROXY - 1281)) | (1 << (self::PRUNING - 1281)) | (1 << (self::PULL_PRED - 1281)) | (1 << (self::PURGE - 1281)) | (1 << (self::PUSH_PRED - 1281)) | (1 << (self::PUSH_SUBQ - 1281)) | (1 << (self::PX_FAULT_TOLERANCE - 1281)) | (1 << (self::PX_GRANULE - 1281)) | (1 << (self::PX_JOIN_FILTER - 1281)) | (1 << (self::QB_NAME - 1281)) | (1 << (self::QUERY_BLOCK - 1281)) | (1 << (self::QUERY - 1281)) | (1 << (self::QUEUE_CURR - 1281)) | (1 << (self::QUEUE - 1281)) | (1 << (self::QUEUE_ROWP - 1281)) | (1 << (self::QUIESCE - 1281)) | (1 << (self::QUORUM - 1281)) | (1 << (self::QUOTA - 1281)) | (1 << (self::RAISE - 1281)) | (1 << (self::RANDOM_LOCAL - 1281)) | (1 << (self::RANDOM - 1281)) | (1 << (self::RANGE - 1281)))) !== 0) || (((($_la - 1345)) & ~0x3f) === 0 && ((1 << ($_la - 1345)) & ((1 << (self::RANKM - 1345)) | (1 << (self::RAPIDLY - 1345)) | (1 << (self::RAW - 1345)) | (1 << (self::RAWTOHEX - 1345)) | (1 << (self::RAWTONHEX - 1345)) | (1 << (self::RBA - 1345)) | (1 << (self::RBO_OUTLINE - 1345)) | (1 << (self::RDBA - 1345)) | (1 << (self::READ - 1345)) | (1 << (self::READS - 1345)) | (1 << (self::REALM - 1345)) | (1 << (self::REAL - 1345)) | (1 << (self::REBALANCE - 1345)) | (1 << (self::REBUILD - 1345)) | (1 << (self::RECORD - 1345)) | (1 << (self::RECORDS_PER_BLOCK - 1345)) | (1 << (self::RECOVERABLE - 1345)) | (1 << (self::RECOVER - 1345)) | (1 << (self::RECOVERY - 1345)) | (1 << (self::RECYCLEBIN - 1345)) | (1 << (self::RECYCLE - 1345)) | (1 << (self::REDACTION - 1345)) | (1 << (self::REDEFINE - 1345)) | (1 << (self::REDO - 1345)) | (1 << (self::REDUCED - 1345)) | (1 << (self::REDUNDANCY - 1345)) | (1 << (self::REF_CASCADE_CURSOR - 1345)) | (1 << (self::REFERENCED - 1345)) | (1 << (self::REFERENCE - 1345)) | (1 << (self::REFERENCES - 1345)) | (1 << (self::REFERENCING - 1345)) | (1 << (self::REF - 1345)) | (1 << (self::REFRESH - 1345)) | (1 << (self::REFTOHEX - 1345)) | (1 << (self::REGEXP_COUNT - 1345)) | (1 << (self::REGEXP_INSTR - 1345)) | (1 << (self::REGEXP_LIKE - 1345)) | (1 << (self::REGEXP_REPLACE - 1345)) | (1 << (self::REGEXP_SUBSTR - 1345)) | (1 << (self::REGISTER - 1345)) | (1 << (self::REGR_AVGX - 1345)) | (1 << (self::REGR_AVGY - 1345)) | (1 << (self::REGR_COUNT - 1345)) | (1 << (self::REGR_INTERCEPT - 1345)) | (1 << (self::REGR_R2 - 1345)) | (1 << (self::REGR_SLOPE - 1345)) | (1 << (self::REGR_SXX - 1345)) | (1 << (self::REGR_SXY - 1345)) | (1 << (self::REGR_SYY - 1345)) | (1 << (self::REGULAR - 1345)) | (1 << (self::REJECT - 1345)) | (1 << (self::REKEY - 1345)) | (1 << (self::RELATIONAL - 1345)) | (1 << (self::RELOCATE - 1345)) | (1 << (self::RELY - 1345)) | (1 << (self::REMAINDER - 1345)) | (1 << (self::REMOTE_MAPPED - 1345)) | (1 << (self::REMOVE - 1345)) | (1 << (self::RENAME - 1345)) | (1 << (self::REPAIR - 1345)) | (1 << (self::REPEAT - 1345)) | (1 << (self::REPLACE - 1345)) | (1 << (self::REPLICATION - 1345)))) !== 0) || (((($_la - 1409)) & ~0x3f) === 0 && ((1 << ($_la - 1409)) & ((1 << (self::REQUIRED - 1409)) | (1 << (self::RESETLOGS - 1409)) | (1 << (self::RESET - 1409)) | (1 << (self::RESIZE - 1409)) | (1 << (self::RESOLVE - 1409)) | (1 << (self::RESOLVER - 1409)) | (1 << (self::RESPECT - 1409)) | (1 << (self::RESTART - 1409)) | (1 << (self::RESTORE_AS_INTERVALS - 1409)) | (1 << (self::RESTORE - 1409)) | (1 << (self::RESTRICT_ALL_REF_CONS - 1409)) | (1 << (self::RESTRICTED - 1409)) | (1 << (self::RESTRICT_REFERENCES - 1409)) | (1 << (self::RESTRICT - 1409)) | (1 << (self::RESULT_CACHE - 1409)) | (1 << (self::RESULT - 1409)) | (1 << (self::RESUMABLE - 1409)) | (1 << (self::RESUME - 1409)) | (1 << (self::RETENTION - 1409)) | (1 << (self::RETRY_ON_ROW_CHANGE - 1409)) | (1 << (self::RETURNING - 1409)) | (1 << (self::RETURN - 1409)) | (1 << (self::REUSE - 1409)) | (1 << (self::REVERSE - 1409)) | (1 << (self::REWRITE_OR_ERROR - 1409)) | (1 << (self::REWRITE - 1409)) | (1 << (self::RIGHT - 1409)) | (1 << (self::ROLE - 1409)) | (1 << (self::ROLESET - 1409)) | (1 << (self::ROLES - 1409)) | (1 << (self::ROLLBACK - 1409)) | (1 << (self::ROLLING - 1409)) | (1 << (self::ROLLUP - 1409)) | (1 << (self::ROWDEPENDENCIES - 1409)) | (1 << (self::ROWID_MAPPING_TABLE - 1409)) | (1 << (self::ROWID - 1409)) | (1 << (self::ROWIDTOCHAR - 1409)) | (1 << (self::ROWIDTONCHAR - 1409)) | (1 << (self::ROW_LENGTH - 1409)) | (1 << (self::ROWNUM - 1409)) | (1 << (self::ROW - 1409)) | (1 << (self::ROWS - 1409)) | (1 << (self::RPAD - 1409)) | (1 << (self::RTRIM - 1409)) | (1 << (self::RULE - 1409)) | (1 << (self::RULES - 1409)) | (1 << (self::RUNNING - 1409)) | (1 << (self::SALT - 1409)) | (1 << (self::SAMPLE - 1409)) | (1 << (self::SAVE_AS_INTERVALS - 1409)) | (1 << (self::SAVEPOINT - 1409)) | (1 << (self::SAVE - 1409)) | (1 << (self::SB4 - 1409)) | (1 << (self::SCALE_ROWS - 1409)) | (1 << (self::SCALE - 1409)) | (1 << (self::SCAN_INSTANCES - 1409)) | (1 << (self::SCAN - 1409)) | (1 << (self::SCHEDULER - 1409)) | (1 << (self::SCHEMACHECK - 1409)) | (1 << (self::SCHEMA - 1409)) | (1 << (self::SCN_ASCENDING - 1409)) | (1 << (self::SCN - 1409)))) !== 0) || (((($_la - 1473)) & ~0x3f) === 0 && ((1 << ($_la - 1473)) & ((1 << (self::SCOPE - 1473)) | (1 << (self::SCRUB - 1473)) | (1 << (self::SD_ALL - 1473)) | (1 << (self::SD_INHIBIT - 1473)) | (1 << (self::SDO_GEOM_MBR - 1473)) | (1 << (self::SD_SHOW - 1473)) | (1 << (self::SEARCH - 1473)) | (1 << (self::SECOND - 1473)) | (1 << (self::SECRET - 1473)) | (1 << (self::SECUREFILE_DBA - 1473)) | (1 << (self::SECUREFILE - 1473)) | (1 << (self::SECURITY - 1473)) | (1 << (self::SEED - 1473)) | (1 << (self::SEG_BLOCK - 1473)) | (1 << (self::SEG_FILE - 1473)) | (1 << (self::SEGMENT - 1473)) | (1 << (self::SELECTIVITY - 1473)) | (1 << (self::SELF - 1473)) | (1 << (self::SEMIJOIN_DRIVER - 1473)) | (1 << (self::SEMIJOIN - 1473)) | (1 << (self::SEMI_TO_INNER - 1473)) | (1 << (self::SEQUENCED - 1473)) | (1 << (self::SEQUENCE - 1473)) | (1 << (self::SEQUENTIAL - 1473)) | (1 << (self::SERIALIZABLE - 1473)) | (1 << (self::SERIALLY_REUSABLE - 1473)) | (1 << (self::SERIAL - 1473)) | (1 << (self::SERVERERROR - 1473)) | (1 << (self::SERVICE_NAME_CONVERT - 1473)) | (1 << (self::SERVICES - 1473)) | (1 << (self::SESSION_CACHED_CURSORS - 1473)) | (1 << (self::SESSION - 1473)) | (1 << (self::SESSIONS_PER_USER - 1473)) | (1 << (self::SESSIONTIMEZONE - 1473)) | (1 << (self::SESSIONTZNAME - 1473)) | (1 << (self::SET - 1473)) | (1 << (self::SETS - 1473)) | (1 << (self::SETTINGS - 1473)) | (1 << (self::SET_TO_JOIN - 1473)) | (1 << (self::SEVERE - 1473)) | (1 << (self::SHARED_POOL - 1473)) | (1 << (self::SHARED - 1473)) | (1 << (self::SHARING - 1473)) | (1 << (self::SHELFLIFE - 1473)) | (1 << (self::SHOW - 1473)) | (1 << (self::SHRINK - 1473)) | (1 << (self::SHUTDOWN - 1473)) | (1 << (self::SIBLINGS - 1473)) | (1 << (self::SID - 1473)) | (1 << (self::SIGNAL_COMPONENT - 1473)) | (1 << (self::SIGNAL_FUNCTION - 1473)) | (1 << (self::SIGN - 1473)) | (1 << (self::SIGNTYPE - 1473)) | (1 << (self::SIMPLE_INTEGER - 1473)) | (1 << (self::SIMPLE - 1473)) | (1 << (self::SINGLE - 1473)) | (1 << (self::SINGLETASK - 1473)) | (1 << (self::SINH - 1473)) | (1 << (self::SIN - 1473)) | (1 << (self::SKIP_EXT_OPTIMIZER - 1473)))) !== 0) || (((($_la - 1537)) & ~0x3f) === 0 && ((1 << ($_la - 1537)) & ((1 << (self::SKIP_ - 1537)) | (1 << (self::SKIP_UNQ_UNUSABLE_IDX - 1537)) | (1 << (self::SKIP_UNUSABLE_INDEXES - 1537)) | (1 << (self::SMALLFILE - 1537)) | (1 << (self::SMALLINT - 1537)) | (1 << (self::SNAPSHOT - 1537)) | (1 << (self::SOME - 1537)) | (1 << (self::SORT - 1537)) | (1 << (self::SOUNDEX - 1537)) | (1 << (self::SOURCE_FILE_DIRECTORY - 1537)) | (1 << (self::SOURCE_FILE_NAME_CONVERT - 1537)) | (1 << (self::SOURCE - 1537)) | (1 << (self::SPACE_KEYWORD - 1537)) | (1 << (self::SPECIFICATION - 1537)) | (1 << (self::SPFILE - 1537)) | (1 << (self::SPLIT - 1537)) | (1 << (self::SPREADSHEET - 1537)) | (1 << (self::SQLDATA - 1537)) | (1 << (self::SQLERROR - 1537)) | (1 << (self::SQLLDR - 1537)) | (1 << (self::SQL - 1537)) | (1 << (self::SQL_TRACE - 1537)) | (1 << (self::SQL_TRANSLATION_PROFILE - 1537)) | (1 << (self::SQRT - 1537)) | (1 << (self::STALE - 1537)) | (1 << (self::STANDALONE - 1537)) | (1 << (self::STANDARD_HASH - 1537)) | (1 << (self::STANDBY_MAX_DATA_DELAY - 1537)) | (1 << (self::STANDBYS - 1537)) | (1 << (self::STANDBY - 1537)) | (1 << (self::STAR - 1537)) | (1 << (self::STAR_TRANSFORMATION - 1537)) | (1 << (self::STARTUP - 1537)) | (1 << (self::STATEMENT_ID - 1537)) | (1 << (self::STATEMENT_QUEUING - 1537)) | (1 << (self::STATEMENTS - 1537)) | (1 << (self::STATEMENT - 1537)) | (1 << (self::STATE - 1537)) | (1 << (self::STATIC - 1537)) | (1 << (self::STATISTICS - 1537)) | (1 << (self::STATS_BINOMIAL_TEST - 1537)) | (1 << (self::STATS_CROSSTAB - 1537)) | (1 << (self::STATS_F_TEST - 1537)) | (1 << (self::STATS_KS_TEST - 1537)) | (1 << (self::STATS_MODE - 1537)) | (1 << (self::STATS_MW_TEST - 1537)) | (1 << (self::STATS_ONE_WAY_ANOVA - 1537)) | (1 << (self::STATS_T_TEST_INDEP - 1537)) | (1 << (self::STATS_T_TEST_INDEPU - 1537)) | (1 << (self::STATS_T_TEST_ONE - 1537)) | (1 << (self::STATS_T_TEST_PAIRED - 1537)) | (1 << (self::STATS_WSR_TEST - 1537)) | (1 << (self::STDDEV_POP - 1537)) | (1 << (self::STDDEV_SAMP - 1537)) | (1 << (self::STOP - 1537)) | (1 << (self::STORAGE - 1537)) | (1 << (self::STORE - 1537)) | (1 << (self::STREAMS - 1537)) | (1 << (self::STREAM - 1537)) | (1 << (self::STRICT - 1537)) | (1 << (self::STRING - 1537)) | (1 << (self::STRIPE_COLUMNS - 1537)) | (1 << (self::STRIPE_WIDTH - 1537)))) !== 0) || (((($_la - 1601)) & ~0x3f) === 0 && ((1 << ($_la - 1601)) & ((1 << (self::STRIP - 1601)) | (1 << (self::STRUCTURE - 1601)) | (1 << (self::SUBMULTISET - 1601)) | (1 << (self::SUBPARTITION_REL - 1601)) | (1 << (self::SUBPARTITIONS - 1601)) | (1 << (self::SUBPARTITION - 1601)) | (1 << (self::SUBQUERIES - 1601)) | (1 << (self::SUBQUERY_PRUNING - 1601)) | (1 << (self::SUBSCRIBE - 1601)) | (1 << (self::SUBSET - 1601)) | (1 << (self::SUBSTITUTABLE - 1601)) | (1 << (self::SUBSTR2 - 1601)) | (1 << (self::SUBSTR4 - 1601)) | (1 << (self::SUBSTRB - 1601)) | (1 << (self::SUBSTRC - 1601)) | (1 << (self::SUBTYPE - 1601)) | (1 << (self::SUCCESSFUL - 1601)) | (1 << (self::SUCCESS - 1601)) | (1 << (self::SUMMARY - 1601)) | (1 << (self::SUPPLEMENTAL - 1601)) | (1 << (self::SUSPEND - 1601)) | (1 << (self::SWAP_JOIN_INPUTS - 1601)) | (1 << (self::SWITCHOVER - 1601)) | (1 << (self::SWITCH - 1601)) | (1 << (self::SYNCHRONOUS - 1601)) | (1 << (self::SYNC - 1601)) | (1 << (self::SYSASM - 1601)) | (1 << (self::SYS_AUDIT - 1601)) | (1 << (self::SYSAUX - 1601)) | (1 << (self::SYSBACKUP - 1601)) | (1 << (self::SYS_CHECKACL - 1601)) | (1 << (self::SYS_CHECK_PRIVILEGE - 1601)) | (1 << (self::SYS_CONNECT_BY_PATH - 1601)) | (1 << (self::SYS_CONTEXT - 1601)) | (1 << (self::SYSDATE - 1601)) | (1 << (self::SYSDBA - 1601)) | (1 << (self::SYS_DBURIGEN - 1601)) | (1 << (self::SYSDG - 1601)) | (1 << (self::SYS_DL_CURSOR - 1601)) | (1 << (self::SYS_DM_RXFORM_CHR - 1601)) | (1 << (self::SYS_DM_RXFORM_NUM - 1601)) | (1 << (self::SYS_DOM_COMPARE - 1601)) | (1 << (self::SYS_DST_PRIM2SEC - 1601)) | (1 << (self::SYS_DST_SEC2PRIM - 1601)) | (1 << (self::SYS_ET_BFILE_TO_RAW - 1601)) | (1 << (self::SYS_ET_BLOB_TO_IMAGE - 1601)) | (1 << (self::SYS_ET_IMAGE_TO_BLOB - 1601)) | (1 << (self::SYS_ET_RAW_TO_BFILE - 1601)) | (1 << (self::SYS_EXTPDTXT - 1601)) | (1 << (self::SYS_EXTRACT_UTC - 1601)) | (1 << (self::SYS_FBT_INSDEL - 1601)) | (1 << (self::SYS_FILTER_ACLS - 1601)) | (1 << (self::SYS_FNMATCHES - 1601)) | (1 << (self::SYS_FNREPLACE - 1601)) | (1 << (self::SYS_GET_ACLIDS - 1601)) | (1 << (self::SYS_GET_COL_ACLIDS - 1601)) | (1 << (self::SYS_GET_PRIVILEGES - 1601)) | (1 << (self::SYS_GETTOKENID - 1601)) | (1 << (self::SYS_GETXTIVAL - 1601)) | (1 << (self::SYS_GUID - 1601)) | (1 << (self::SYSGUID - 1601)) | (1 << (self::SYSKM - 1601)) | (1 << (self::SYS_MAKE_XMLNODEID - 1601)))) !== 0) || (((($_la - 1665)) & ~0x3f) === 0 && ((1 << ($_la - 1665)) & ((1 << (self::SYS_MAKEXML - 1665)) | (1 << (self::SYS_MKXMLATTR - 1665)) | (1 << (self::SYS_MKXTI - 1665)) | (1 << (self::SYSOBJ - 1665)) | (1 << (self::SYS_OP_ADT2BIN - 1665)) | (1 << (self::SYS_OP_ADTCONS - 1665)) | (1 << (self::SYS_OP_ALSCRVAL - 1665)) | (1 << (self::SYS_OP_ATG - 1665)) | (1 << (self::SYS_OP_BIN2ADT - 1665)) | (1 << (self::SYS_OP_BITVEC - 1665)) | (1 << (self::SYS_OP_BL2R - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER - 1665)) | (1 << (self::SYS_OP_C2C - 1665)) | (1 << (self::SYS_OP_CAST - 1665)) | (1 << (self::SYS_OP_CEG - 1665)) | (1 << (self::SYS_OP_CL2C - 1665)) | (1 << (self::SYS_OP_COMBINED_HASH - 1665)) | (1 << (self::SYS_OP_COMP - 1665)) | (1 << (self::SYS_OP_CONVERT - 1665)) | (1 << (self::SYS_OP_COUNTCHG - 1665)) | (1 << (self::SYS_OP_CSCONV - 1665)) | (1 << (self::SYS_OP_CSCONVTEST - 1665)) | (1 << (self::SYS_OP_CSR - 1665)) | (1 << (self::SYS_OP_CSX_PATCH - 1665)) | (1 << (self::SYS_OP_CYCLED_SEQ - 1665)) | (1 << (self::SYS_OP_DECOMP - 1665)) | (1 << (self::SYS_OP_DESCEND - 1665)) | (1 << (self::SYS_OP_DISTINCT - 1665)) | (1 << (self::SYS_OP_DRA - 1665)) | (1 << (self::SYS_OP_DUMP - 1665)) | (1 << (self::SYS_OP_DV_CHECK - 1665)) | (1 << (self::SYS_OP_ENFORCE_NOT_NULL - 1665)) | (1 << (self::SYSOPER - 1665)) | (1 << (self::SYS_OP_EXTRACT - 1665)) | (1 << (self::SYS_OP_GROUPING - 1665)) | (1 << (self::SYS_OP_GUID - 1665)) | (1 << (self::SYS_OP_HASH - 1665)) | (1 << (self::SYS_OP_IIX - 1665)) | (1 << (self::SYS_OP_ITR - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_CREATE - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_SUCCEEDED - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_USE - 1665)) | (1 << (self::SYS_OP_LBID - 1665)) | (1 << (self::SYS_OP_LOBLOC2BLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2CLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2ID - 1665)) | (1 << (self::SYS_OP_LOBLOC2NCLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2TYP - 1665)) | (1 << (self::SYS_OP_LSVI - 1665)) | (1 << (self::SYS_OP_LVL - 1665)) | (1 << (self::SYS_OP_MAKEOID - 1665)) | (1 << (self::SYS_OP_MAP_NONNULL - 1665)) | (1 << (self::SYS_OP_MSR - 1665)) | (1 << (self::SYS_OP_NICOMBINE - 1665)) | (1 << (self::SYS_OP_NIEXTRACT - 1665)) | (1 << (self::SYS_OP_NII - 1665)) | (1 << (self::SYS_OP_NIX - 1665)) | (1 << (self::SYS_OP_NOEXPAND - 1665)) | (1 << (self::SYS_OP_NTCIMG - 1665)) | (1 << (self::SYS_OP_NUMTORAW - 1665)) | (1 << (self::SYS_OP_OIDVALUE - 1665)))) !== 0) || (((($_la - 1729)) & ~0x3f) === 0 && ((1 << ($_la - 1729)) & ((1 << (self::SYS_OP_OPNSIZE - 1729)) | (1 << (self::SYS_OP_PAR_1 - 1729)) | (1 << (self::SYS_OP_PARGID_1 - 1729)) | (1 << (self::SYS_OP_PARGID - 1729)) | (1 << (self::SYS_OP_PAR - 1729)) | (1 << (self::SYS_OP_PART_ID - 1729)) | (1 << (self::SYS_OP_PIVOT - 1729)) | (1 << (self::SYS_OP_R2O - 1729)) | (1 << (self::SYS_OP_RAWTONUM - 1729)) | (1 << (self::SYS_OP_RDTM - 1729)) | (1 << (self::SYS_OP_REF - 1729)) | (1 << (self::SYS_OP_RMTD - 1729)) | (1 << (self::SYS_OP_ROWIDTOOBJ - 1729)) | (1 << (self::SYS_OP_RPB - 1729)) | (1 << (self::SYS_OPTLOBPRBSC - 1729)) | (1 << (self::SYS_OP_TOSETID - 1729)) | (1 << (self::SYS_OP_TPR - 1729)) | (1 << (self::SYS_OP_TRTB - 1729)) | (1 << (self::SYS_OPTXICMP - 1729)) | (1 << (self::SYS_OPTXQCASTASNQ - 1729)) | (1 << (self::SYS_OP_UNDESCEND - 1729)) | (1 << (self::SYS_OP_VECAND - 1729)) | (1 << (self::SYS_OP_VECBIT - 1729)) | (1 << (self::SYS_OP_VECOR - 1729)) | (1 << (self::SYS_OP_VECXOR - 1729)) | (1 << (self::SYS_OP_VERSION - 1729)) | (1 << (self::SYS_OP_VREF - 1729)) | (1 << (self::SYS_OP_VVD - 1729)) | (1 << (self::SYS_OP_XMLCONS_FOR_CSX - 1729)) | (1 << (self::SYS_OP_XPTHATG - 1729)) | (1 << (self::SYS_OP_XPTHIDX - 1729)) | (1 << (self::SYS_OP_XPTHOP - 1729)) | (1 << (self::SYS_OP_XTXT2SQLT - 1729)) | (1 << (self::SYS_OP_ZONE_ID - 1729)) | (1 << (self::SYS_ORDERKEY_DEPTH - 1729)) | (1 << (self::SYS_ORDERKEY_MAXCHILD - 1729)) | (1 << (self::SYS_ORDERKEY_PARENT - 1729)) | (1 << (self::SYS_PARALLEL_TXN - 1729)) | (1 << (self::SYS_PATHID_IS_ATTR - 1729)) | (1 << (self::SYS_PATHID_IS_NMSPC - 1729)) | (1 << (self::SYS_PATHID_LASTNAME - 1729)) | (1 << (self::SYS_PATHID_LASTNMSPC - 1729)) | (1 << (self::SYS_PATH_REVERSE - 1729)) | (1 << (self::SYS_PXQEXTRACT - 1729)) | (1 << (self::SYS_RAW_TO_XSID - 1729)) | (1 << (self::SYS_RID_ORDER - 1729)) | (1 << (self::SYS_ROW_DELTA - 1729)) | (1 << (self::SYS_SC_2_XMLT - 1729)) | (1 << (self::SYS_SYNRCIREDO - 1729)) | (1 << (self::SYSTEM_DEFINED - 1729)) | (1 << (self::SYSTEM - 1729)) | (1 << (self::SYSTIMESTAMP - 1729)) | (1 << (self::SYS_TYPEID - 1729)) | (1 << (self::SYS_UMAKEXML - 1729)) | (1 << (self::SYS_XMLANALYZE - 1729)) | (1 << (self::SYS_XMLCONTAINS - 1729)) | (1 << (self::SYS_XMLCONV - 1729)) | (1 << (self::SYS_XMLEXNSURI - 1729)) | (1 << (self::SYS_XMLGEN - 1729)) | (1 << (self::SYS_XMLI_LOC_ISNODE - 1729)) | (1 << (self::SYS_XMLI_LOC_ISTEXT - 1729)) | (1 << (self::SYS_XMLINSTR - 1729)) | (1 << (self::SYS_XMLLOCATOR_GETSVAL - 1729)) | (1 << (self::SYS_XMLNODEID_GETCID - 1729)))) !== 0) || (((($_la - 1793)) & ~0x3f) === 0 && ((1 << ($_la - 1793)) & ((1 << (self::SYS_XMLNODEID_GETLOCATOR - 1793)) | (1 << (self::SYS_XMLNODEID_GETOKEY - 1793)) | (1 << (self::SYS_XMLNODEID_GETPATHID - 1793)) | (1 << (self::SYS_XMLNODEID_GETPTRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETSVAL - 1793)) | (1 << (self::SYS_XMLNODEID_GETTID - 1793)) | (1 << (self::SYS_XMLNODEID - 1793)) | (1 << (self::SYS_XMLT_2_SC - 1793)) | (1 << (self::SYS_XMLTRANSLATE - 1793)) | (1 << (self::SYS_XMLTYPE2SQL - 1793)) | (1 << (self::SYS_XQ_ASQLCNV - 1793)) | (1 << (self::SYS_XQ_ATOMCNVCHK - 1793)) | (1 << (self::SYS_XQBASEURI - 1793)) | (1 << (self::SYS_XQCASTABLEERRH - 1793)) | (1 << (self::SYS_XQCODEP2STR - 1793)) | (1 << (self::SYS_XQCODEPEQ - 1793)) | (1 << (self::SYS_XQCON2SEQ - 1793)) | (1 << (self::SYS_XQCONCAT - 1793)) | (1 << (self::SYS_XQDELETE - 1793)) | (1 << (self::SYS_XQDFLTCOLATION - 1793)) | (1 << (self::SYS_XQDOC - 1793)) | (1 << (self::SYS_XQDOCURI - 1793)) | (1 << (self::SYS_XQDURDIV - 1793)) | (1 << (self::SYS_XQED4URI - 1793)) | (1 << (self::SYS_XQENDSWITH - 1793)) | (1 << (self::SYS_XQERRH - 1793)) | (1 << (self::SYS_XQERR - 1793)) | (1 << (self::SYS_XQESHTMLURI - 1793)) | (1 << (self::SYS_XQEXLOBVAL - 1793)) | (1 << (self::SYS_XQEXSTWRP - 1793)) | (1 << (self::SYS_XQEXTRACT - 1793)) | (1 << (self::SYS_XQEXTRREF - 1793)) | (1 << (self::SYS_XQEXVAL - 1793)) | (1 << (self::SYS_XQFB2STR - 1793)) | (1 << (self::SYS_XQFNBOOL - 1793)) | (1 << (self::SYS_XQFNCMP - 1793)) | (1 << (self::SYS_XQFNDATIM - 1793)) | (1 << (self::SYS_XQFNLNAME - 1793)) | (1 << (self::SYS_XQFNNM - 1793)) | (1 << (self::SYS_XQFNNSURI - 1793)) | (1 << (self::SYS_XQFNPREDTRUTH - 1793)) | (1 << (self::SYS_XQFNQNM - 1793)) | (1 << (self::SYS_XQFNROOT - 1793)) | (1 << (self::SYS_XQFORMATNUM - 1793)) | (1 << (self::SYS_XQFTCONTAIN - 1793)) | (1 << (self::SYS_XQFUNCR - 1793)) | (1 << (self::SYS_XQGETCONTENT - 1793)) | (1 << (self::SYS_XQINDXOF - 1793)) | (1 << (self::SYS_XQINSERT - 1793)) | (1 << (self::SYS_XQINSPFX - 1793)) | (1 << (self::SYS_XQIRI2URI - 1793)) | (1 << (self::SYS_XQLANG - 1793)) | (1 << (self::SYS_XQLLNMFRMQNM - 1793)) | (1 << (self::SYS_XQMKNODEREF - 1793)) | (1 << (self::SYS_XQNILLED - 1793)) | (1 << (self::SYS_XQNODENAME - 1793)) | (1 << (self::SYS_XQNORMSPACE - 1793)) | (1 << (self::SYS_XQNORMUCODE - 1793)) | (1 << (self::SYS_XQ_NRNG - 1793)) | (1 << (self::SYS_XQNSP4PFX - 1793)) | (1 << (self::SYS_XQNSPFRMQNM - 1793)) | (1 << (self::SYS_XQPFXFRMQNM - 1793)) | (1 << (self::SYS_XQ_PKSQL2XML - 1793)))) !== 0) || (((($_la - 1857)) & ~0x3f) === 0 && ((1 << ($_la - 1857)) & ((1 << (self::SYS_XQPOLYABS - 1857)) | (1 << (self::SYS_XQPOLYADD - 1857)) | (1 << (self::SYS_XQPOLYCEL - 1857)) | (1 << (self::SYS_XQPOLYCSTBL - 1857)) | (1 << (self::SYS_XQPOLYCST - 1857)) | (1 << (self::SYS_XQPOLYDIV - 1857)) | (1 << (self::SYS_XQPOLYFLR - 1857)) | (1 << (self::SYS_XQPOLYMOD - 1857)) | (1 << (self::SYS_XQPOLYMUL - 1857)) | (1 << (self::SYS_XQPOLYRND - 1857)) | (1 << (self::SYS_XQPOLYSQRT - 1857)) | (1 << (self::SYS_XQPOLYSUB - 1857)) | (1 << (self::SYS_XQPOLYUMUS - 1857)) | (1 << (self::SYS_XQPOLYUPLS - 1857)) | (1 << (self::SYS_XQPOLYVEQ - 1857)) | (1 << (self::SYS_XQPOLYVGE - 1857)) | (1 << (self::SYS_XQPOLYVGT - 1857)) | (1 << (self::SYS_XQPOLYVLE - 1857)) | (1 << (self::SYS_XQPOLYVLT - 1857)) | (1 << (self::SYS_XQPOLYVNE - 1857)) | (1 << (self::SYS_XQREF2VAL - 1857)) | (1 << (self::SYS_XQRENAME - 1857)) | (1 << (self::SYS_XQREPLACE - 1857)) | (1 << (self::SYS_XQRESVURI - 1857)) | (1 << (self::SYS_XQRNDHALF2EVN - 1857)) | (1 << (self::SYS_XQRSLVQNM - 1857)) | (1 << (self::SYS_XQRYENVPGET - 1857)) | (1 << (self::SYS_XQRYVARGET - 1857)) | (1 << (self::SYS_XQRYWRP - 1857)) | (1 << (self::SYS_XQSEQ2CON4XC - 1857)) | (1 << (self::SYS_XQSEQ2CON - 1857)) | (1 << (self::SYS_XQSEQDEEPEQ - 1857)) | (1 << (self::SYS_XQSEQINSB - 1857)) | (1 << (self::SYS_XQSEQRM - 1857)) | (1 << (self::SYS_XQSEQRVS - 1857)) | (1 << (self::SYS_XQSEQSUB - 1857)) | (1 << (self::SYS_XQSEQTYPMATCH - 1857)) | (1 << (self::SYS_XQSTARTSWITH - 1857)) | (1 << (self::SYS_XQSTATBURI - 1857)) | (1 << (self::SYS_XQSTR2CODEP - 1857)) | (1 << (self::SYS_XQSTRJOIN - 1857)) | (1 << (self::SYS_XQSUBSTRAFT - 1857)) | (1 << (self::SYS_XQSUBSTRBEF - 1857)) | (1 << (self::SYS_XQTOKENIZE - 1857)) | (1 << (self::SYS_XQTREATAS - 1857)) | (1 << (self::SYS_XQ_UPKXML2SQL - 1857)) | (1 << (self::SYS_XQXFORM - 1857)) | (1 << (self::SYS_XSID_TO_RAW - 1857)) | (1 << (self::SYS_ZMAP_FILTER - 1857)) | (1 << (self::SYS_ZMAP_REFRESH - 1857)) | (1 << (self::TABLE_LOOKUP_BY_NL - 1857)) | (1 << (self::TABLESPACE_NO - 1857)) | (1 << (self::TABLESPACE - 1857)) | (1 << (self::TABLES - 1857)) | (1 << (self::TABLE_STATS - 1857)) | (1 << (self::TABLE - 1857)) | (1 << (self::TABNO - 1857)) | (1 << (self::TAG - 1857)) | (1 << (self::TANH - 1857)) | (1 << (self::TAN - 1857)) | (1 << (self::TBLORIDXPARTNUM - 1857)) | (1 << (self::TEMPFILE - 1857)) | (1 << (self::TEMPLATE - 1857)) | (1 << (self::TEMPORARY - 1857)))) !== 0) || (((($_la - 1921)) & ~0x3f) === 0 && ((1 << ($_la - 1921)) & ((1 << (self::TEMP_TABLE - 1921)) | (1 << (self::TEST - 1921)) | (1 << (self::TEXT - 1921)) | (1 << (self::THAN - 1921)) | (1 << (self::THEN - 1921)) | (1 << (self::THE - 1921)) | (1 << (self::THREAD - 1921)) | (1 << (self::THROUGH - 1921)) | (1 << (self::TIER - 1921)) | (1 << (self::TIES - 1921)) | (1 << (self::TIMEOUT - 1921)) | (1 << (self::TIMESTAMP_LTZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP - 1921)) | (1 << (self::TIMESTAMP_TZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP_UNCONSTRAINED - 1921)) | (1 << (self::TIMES - 1921)) | (1 << (self::TIME - 1921)) | (1 << (self::TIMEZONE_ABBR - 1921)) | (1 << (self::TIMEZONE_HOUR - 1921)) | (1 << (self::TIMEZONE_MINUTE - 1921)) | (1 << (self::TIMEZONE_OFFSET - 1921)) | (1 << (self::TIMEZONE_REGION - 1921)) | (1 << (self::TIME_ZONE - 1921)) | (1 << (self::TIV_GB - 1921)) | (1 << (self::TIV_SSF - 1921)) | (1 << (self::TO_ACLID - 1921)) | (1 << (self::TO_BINARY_DOUBLE - 1921)) | (1 << (self::TO_BINARY_FLOAT - 1921)) | (1 << (self::TO_BLOB - 1921)) | (1 << (self::TO_CLOB - 1921)) | (1 << (self::TO_DSINTERVAL - 1921)) | (1 << (self::TO_LOB - 1921)) | (1 << (self::TO_MULTI_BYTE - 1921)) | (1 << (self::TO_NCHAR - 1921)) | (1 << (self::TO_NCLOB - 1921)) | (1 << (self::TO_NUMBER - 1921)) | (1 << (self::TOPLEVEL - 1921)) | (1 << (self::TO_SINGLE_BYTE - 1921)) | (1 << (self::TO_TIMESTAMP - 1921)) | (1 << (self::TO_TIMESTAMP_TZ - 1921)) | (1 << (self::TO_TIME - 1921)) | (1 << (self::TO_TIME_TZ - 1921)) | (1 << (self::TO_YMINTERVAL - 1921)) | (1 << (self::TRACE - 1921)) | (1 << (self::TRACING - 1921)) | (1 << (self::TRACKING - 1921)) | (1 << (self::TRAILING - 1921)) | (1 << (self::TRANSACTION - 1921)) | (1 << (self::TRANSFORM_DISTINCT_AGG - 1921)) | (1 << (self::TRANSITIONAL - 1921)) | (1 << (self::TRANSITION - 1921)) | (1 << (self::TRANSLATE - 1921)) | (1 << (self::TRANSLATION - 1921)) | (1 << (self::TREAT - 1921)) | (1 << (self::TRIGGERS - 1921)) | (1 << (self::TRIGGER - 1921)) | (1 << (self::TRUE - 1921)) | (1 << (self::TRUNCATE - 1921)) | (1 << (self::TRUNC - 1921)) | (1 << (self::TRUSTED - 1921)) | (1 << (self::TRUST - 1921)) | (1 << (self::TUNING - 1921)))) !== 0) || (((($_la - 1985)) & ~0x3f) === 0 && ((1 << ($_la - 1985)) & ((1 << (self::TX - 1985)) | (1 << (self::TYPES - 1985)) | (1 << (self::TYPE - 1985)) | (1 << (self::TZ_OFFSET - 1985)) | (1 << (self::UB2 - 1985)) | (1 << (self::UBA - 1985)) | (1 << (self::UCS2 - 1985)) | (1 << (self::UID - 1985)) | (1 << (self::UNARCHIVED - 1985)) | (1 << (self::UNBOUNDED - 1985)) | (1 << (self::UNBOUND - 1985)) | (1 << (self::UNCONDITIONAL - 1985)) | (1 << (self::UNDER - 1985)) | (1 << (self::UNDO - 1985)) | (1 << (self::UNDROP - 1985)) | (1 << (self::UNIFORM - 1985)) | (1 << (self::UNISTR - 1985)) | (1 << (self::UNLIMITED - 1985)) | (1 << (self::UNLOAD - 1985)) | (1 << (self::UNLOCK - 1985)) | (1 << (self::UNMATCHED - 1985)) | (1 << (self::UNNEST_INNERJ_DISTINCT_VIEW - 1985)) | (1 << (self::UNNEST_NOSEMIJ_NODISTINCTVIEW - 1985)) | (1 << (self::UNNEST_SEMIJ_VIEW - 1985)) | (1 << (self::UNNEST - 1985)) | (1 << (self::UNPACKED - 1985)) | (1 << (self::UNPIVOT - 1985)) | (1 << (self::UNPLUG - 1985)) | (1 << (self::UNPROTECTED - 1985)) | (1 << (self::UNQUIESCE - 1985)) | (1 << (self::UNRECOVERABLE - 1985)) | (1 << (self::UNRESTRICTED - 1985)) | (1 << (self::UNSUBSCRIBE - 1985)) | (1 << (self::UNTIL - 1985)) | (1 << (self::UNUSABLE - 1985)) | (1 << (self::UNUSED - 1985)) | (1 << (self::UPDATABLE - 1985)) | (1 << (self::UPDATED - 1985)) | (1 << (self::UPDATEXML - 1985)) | (1 << (self::UPD_INDEXES - 1985)) | (1 << (self::UPD_JOININDEX - 1985)) | (1 << (self::UPGRADE - 1985)) | (1 << (self::UPPER - 1985)) | (1 << (self::UPSERT - 1985)) | (1 << (self::UROWID - 1985)) | (1 << (self::USABLE - 1985)) | (1 << (self::USAGE - 1985)) | (1 << (self::USE_ANTI - 1985)) | (1 << (self::USE_CONCAT - 1985)) | (1 << (self::USE_CUBE - 1985)) | (1 << (self::USE_HASH_AGGREGATION - 1985)) | (1 << (self::USE_HASH_GBY_FOR_PUSHDOWN - 1985)) | (1 << (self::USE_HASH - 1985)) | (1 << (self::USE_HIDDEN_PARTITIONS - 1985)) | (1 << (self::USE_INVISIBLE_INDEXES - 1985)) | (1 << (self::USE_MERGE_CARTESIAN - 1985)) | (1 << (self::USE_MERGE - 1985)) | (1 << (self::USE_NL - 1985)) | (1 << (self::USE_NL_WITH_INDEX - 1985)) | (1 << (self::USE_PRIVATE_OUTLINES - 1985)) | (1 << (self::USER_DATA - 1985)))) !== 0) || (((($_la - 2049)) & ~0x3f) === 0 && ((1 << ($_la - 2049)) & ((1 << (self::USER_DEFINED - 2049)) | (1 << (self::USERENV - 2049)) | (1 << (self::USERGROUP - 2049)) | (1 << (self::USER_RECYCLEBIN - 2049)) | (1 << (self::USERS - 2049)) | (1 << (self::USER_TABLESPACES - 2049)) | (1 << (self::USER - 2049)) | (1 << (self::USE_SEMI - 2049)) | (1 << (self::USE_STORED_OUTLINES - 2049)) | (1 << (self::USE_TTT_FOR_GSETS - 2049)) | (1 << (self::USE - 2049)) | (1 << (self::USE_VECTOR_AGGREGATION - 2049)) | (1 << (self::USE_WEAK_NAME_RESL - 2049)) | (1 << (self::USING_NO_EXPAND - 2049)) | (1 << (self::USING - 2049)) | (1 << (self::UTF16BE - 2049)) | (1 << (self::UTF16LE - 2049)) | (1 << (self::UTF32 - 2049)) | (1 << (self::UTF8 - 2049)) | (1 << (self::V1 - 2049)) | (1 << (self::V2 - 2049)) | (1 << (self::VALIDATE - 2049)) | (1 << (self::VALIDATION - 2049)) | (1 << (self::VALID_TIME_END - 2049)) | (1 << (self::VALUE - 2049)) | (1 << (self::VARCHAR2 - 2049)) | (1 << (self::VARCHAR - 2049)) | (1 << (self::VARIABLE - 2049)) | (1 << (self::VAR_POP - 2049)) | (1 << (self::VARRAYS - 2049)) | (1 << (self::VARRAY - 2049)) | (1 << (self::VAR_SAMP - 2049)) | (1 << (self::VARYING - 2049)) | (1 << (self::VECTOR_READ_TRACE - 2049)) | (1 << (self::VECTOR_READ - 2049)) | (1 << (self::VECTOR_TRANSFORM_DIMS - 2049)) | (1 << (self::VECTOR_TRANSFORM_FACT - 2049)) | (1 << (self::VECTOR_TRANSFORM - 2049)) | (1 << (self::VERIFIER - 2049)) | (1 << (self::VERIFY - 2049)) | (1 << (self::VERSIONING - 2049)) | (1 << (self::VERSIONS_ENDSCN - 2049)) | (1 << (self::VERSIONS_ENDTIME - 2049)) | (1 << (self::VERSIONS_OPERATION - 2049)) | (1 << (self::VERSIONS_STARTSCN - 2049)) | (1 << (self::VERSIONS_STARTTIME - 2049)) | (1 << (self::VERSIONS - 2049)) | (1 << (self::VERSIONS_XID - 2049)) | (1 << (self::VERSION - 2049)) | (1 << (self::VIOLATION - 2049)) | (1 << (self::VIRTUAL - 2049)) | (1 << (self::VISIBILITY - 2049)) | (1 << (self::VISIBLE - 2049)) | (1 << (self::VOLUME - 2049)) | (1 << (self::VSIZE - 2049)) | (1 << (self::WAIT - 2049)) | (1 << (self::WALLET - 2049)) | (1 << (self::WARNING - 2049)) | (1 << (self::WEEKS - 2049)) | (1 << (self::WEEK - 2049)) | (1 << (self::WELLFORMED - 2049)) | (1 << (self::WHENEVER - 2049)))) !== 0) || (((($_la - 2113)) & ~0x3f) === 0 && ((1 << ($_la - 2113)) & ((1 << (self::WHEN - 2113)) | (1 << (self::WHILE - 2113)) | (1 << (self::WHITESPACE - 2113)) | (1 << (self::WIDTH_BUCKET - 2113)) | (1 << (self::WITHIN - 2113)) | (1 << (self::WITHOUT - 2113)) | (1 << (self::WITH_PLSQL - 2113)) | (1 << (self::WORK - 2113)) | (1 << (self::WRAPPED - 2113)) | (1 << (self::WRAPPER - 2113)) | (1 << (self::WRITE - 2113)) | (1 << (self::XDB_FASTPATH_INSERT - 2113)) | (1 << (self::X_DYN_PRUNE - 2113)) | (1 << (self::XID - 2113)) | (1 << (self::XML2OBJECT - 2113)) | (1 << (self::XMLAGG - 2113)) | (1 << (self::XMLATTRIBUTES - 2113)) | (1 << (self::XMLCAST - 2113)) | (1 << (self::XMLCDATA - 2113)) | (1 << (self::XMLCOLATTVAL - 2113)) | (1 << (self::XMLCOMMENT - 2113)) | (1 << (self::XMLCONCAT - 2113)) | (1 << (self::XMLDIFF - 2113)) | (1 << (self::XML_DML_RWT_STMT - 2113)) | (1 << (self::XMLELEMENT - 2113)) | (1 << (self::XMLEXISTS2 - 2113)) | (1 << (self::XMLEXISTS - 2113)) | (1 << (self::XMLFOREST - 2113)) | (1 << (self::XMLINDEX_REWRITE_IN_SELECT - 2113)) | (1 << (self::XMLINDEX_REWRITE - 2113)) | (1 << (self::XMLINDEX_SEL_IDX_TBL - 2113)) | (1 << (self::XMLISNODE - 2113)) | (1 << (self::XMLISVALID - 2113)) | (1 << (self::XMLNAMESPACES - 2113)) | (1 << (self::XMLPARSE - 2113)) | (1 << (self::XMLPATCH - 2113)) | (1 << (self::XMLPI - 2113)) | (1 << (self::XMLQUERYVAL - 2113)) | (1 << (self::XMLQUERY - 2113)) | (1 << (self::XMLROOT - 2113)) | (1 << (self::XMLSCHEMA - 2113)) | (1 << (self::XMLSERIALIZE - 2113)) | (1 << (self::XMLTABLE - 2113)) | (1 << (self::XMLTRANSFORMBLOB - 2113)) | (1 << (self::XMLTRANSFORM - 2113)) | (1 << (self::XMLTYPE - 2113)) | (1 << (self::XML - 2113)) | (1 << (self::XPATHTABLE - 2113)) | (1 << (self::XS_SYS_CONTEXT - 2113)) | (1 << (self::XS - 2113)) | (1 << (self::YEARS - 2113)) | (1 << (self::YEAR - 2113)) | (1 << (self::YES - 2113)) | (1 << (self::YMINTERVAL_UNCONSTRAINED - 2113)) | (1 << (self::ZONEMAP - 2113)) | (1 << (self::ZONE - 2113)) | (1 << (self::PREDICTION - 2113)) | (1 << (self::PREDICTION_BOUNDS - 2113)) | (1 << (self::PREDICTION_COST - 2113)))) !== 0) || (((($_la - 2177)) & ~0x3f) === 0 && ((1 << ($_la - 2177)) & ((1 << (self::PREDICTION_DETAILS - 2177)) | (1 << (self::PREDICTION_PROBABILITY - 2177)) | (1 << (self::PREDICTION_SET - 2177)) | (1 << (self::CUME_DIST - 2177)) | (1 << (self::DENSE_RANK - 2177)) | (1 << (self::LISTAGG - 2177)) | (1 << (self::PERCENT_RANK - 2177)) | (1 << (self::PERCENTILE_CONT - 2177)) | (1 << (self::PERCENTILE_DISC - 2177)) | (1 << (self::RANK - 2177)) | (1 << (self::AVG - 2177)) | (1 << (self::CORR - 2177)) | (1 << (self::COVAR_ - 2177)) | (1 << (self::DECODE - 2177)) | (1 << (self::LAG - 2177)) | (1 << (self::LEAD - 2177)) | (1 << (self::MAX - 2177)) | (1 << (self::MEDIAN - 2177)) | (1 << (self::MIN - 2177)) | (1 << (self::NTILE - 2177)) | (1 << (self::NVL - 2177)) | (1 << (self::RATIO_TO_REPORT - 2177)) | (1 << (self::REGR_ - 2177)) | (1 << (self::ROUND - 2177)) | (1 << (self::ROW_NUMBER - 2177)) | (1 << (self::SUBSTR - 2177)) | (1 << (self::TO_CHAR - 2177)) | (1 << (self::TRIM - 2177)) | (1 << (self::SUM - 2177)) | (1 << (self::STDDEV - 2177)) | (1 << (self::VAR_ - 2177)) | (1 << (self::VARIANCE - 2177)) | (1 << (self::LEAST - 2177)) | (1 << (self::GREATEST - 2177)) | (1 << (self::TO_DATE - 2177)) | (1 << (self::NATIONAL_CHAR_STRING_LIT - 2177)) | (1 << (self::PERIOD - 2177)) | (1 << (self::UNSIGNED_INTEGER - 2177)) | (1 << (self::APPROXIMATE_NUM_LIT - 2177)) | (1 << (self::CHAR_STRING - 2177)) | (1 << (self::DELIMITED_ID - 2177)) | (1 << (self::LEFT_PAREN - 2177)) | (1 << (self::PLUS_SIGN - 2177)) | (1 << (self::MINUS_SIGN - 2177)) | (1 << (self::BINDVAR - 2177)) | (1 << (self::COLON - 2177)))) !== 0) || $_la === self::INTRODUCER || $_la === self::REGULAR_ID) {
                $this->setState(11024);
                $this->expressions();
            }
            $this->setState(11027);
            $this->match(self::RIGHT_PAREN);
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function column_alias(): Context\Column_aliasContext
    {
        $localContext = new Context\Column_aliasContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1352, self::RULE_column_alias);

        try {
            $this->setState(11037);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1518, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11030);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::AS) {
                        $this->setState(11029);
                        $this->match(self::AS);
                    }
                    $this->setState(11034);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1517, $this->ctx)) {
                        case 1:
                            $this->setState(11032);
                            $this->identifier();
                            break;

                        case 2:
                            $this->setState(11033);
                            $this->quoted_string();
                            break;
                    }
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11036);
                    $this->match(self::AS);
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function table_alias(): Context\Table_aliasContext
    {
        $localContext = new Context\Table_aliasContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1354, self::RULE_table_alias);

        try {
            $this->setState(11041);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1519, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11039);
                    $this->identifier();
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11040);
                    $this->quoted_string();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function where_clause(): Context\Where_clauseContext
    {
        $localContext = new Context\Where_clauseContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1356, self::RULE_where_clause);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11043);
            $this->match(self::WHERE);
            $this->setState(11048);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1520, $this->ctx)) {
                case 1:
                    $this->setState(11044);
                    $this->match(self::CURRENT);
                    $this->setState(11045);
                    $this->match(self::OF);
                    $this->setState(11046);
                    $this->cursor_name();
                    break;

                case 2:
                    $this->setState(11047);
                    $this->expression();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function into_clause(): Context\Into_clauseContext
    {
        $localContext = new Context\Into_clauseContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1358, self::RULE_into_clause);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11052);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::BULK) {
                $this->setState(11050);
                $this->match(self::BULK);
                $this->setState(11051);
                $this->match(self::COLLECT);
            }
            $this->setState(11054);
            $this->match(self::INTO);
            $this->setState(11055);
            $this->variable_name();
            $this->setState(11060);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1522, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11056);
                    $this->match(self::COMMA);
                    $this->setState(11057);
                    $this->variable_name();
                }

                $this->setState(11062);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1522, $this->ctx);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function xml_column_name(): Context\Xml_column_nameContext
    {
        $localContext = new Context\Xml_column_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1360, self::RULE_xml_column_name);

        try {
            $this->setState(11065);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1523, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11063);
                    $this->identifier();
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11064);
                    $this->quoted_string();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function cost_class_name(): Context\Cost_class_nameContext
    {
        $localContext = new Context\Cost_class_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1362, self::RULE_cost_class_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11067);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function attribute_name(): Context\Attribute_nameContext
    {
        $localContext = new Context\Attribute_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1364, self::RULE_attribute_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11069);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function savepoint_name(): Context\Savepoint_nameContext
    {
        $localContext = new Context\Savepoint_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1366, self::RULE_savepoint_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11071);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function rollback_segment_name(): Context\Rollback_segment_nameContext
    {
        $localContext = new Context\Rollback_segment_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1368, self::RULE_rollback_segment_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11073);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function table_var_name(): Context\Table_var_nameContext
    {
        $localContext = new Context\Table_var_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1370, self::RULE_table_var_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11075);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function schema_name(): Context\Schema_nameContext
    {
        $localContext = new Context\Schema_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1372, self::RULE_schema_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11077);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function routine_name(): Context\Routine_nameContext
    {
        $localContext = new Context\Routine_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1374, self::RULE_routine_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11079);
            $this->identifier();
            $this->setState(11084);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1524, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11080);
                    $this->match(self::PERIOD);
                    $this->setState(11081);
                    $this->id_expression();
                }

                $this->setState(11086);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1524, $this->ctx);
            }
            $this->setState(11089);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1525, $this->ctx)) {
                case 1:
                    $this->setState(11087);
                    $this->match(self::AT_SIGN);
                    $this->setState(11088);
                    $this->link_name();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function package_name(): Context\Package_nameContext
    {
        $localContext = new Context\Package_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1376, self::RULE_package_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11091);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function implementation_type_name(): Context\Implementation_type_nameContext
    {
        $localContext = new Context\Implementation_type_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1378, self::RULE_implementation_type_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11093);
            $this->identifier();
            $this->setState(11096);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::PERIOD) {
                $this->setState(11094);
                $this->match(self::PERIOD);
                $this->setState(11095);
                $this->id_expression();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function parameter_name(): Context\Parameter_nameContext
    {
        $localContext = new Context\Parameter_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1380, self::RULE_parameter_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11098);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function reference_model_name(): Context\Reference_model_nameContext
    {
        $localContext = new Context\Reference_model_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1382, self::RULE_reference_model_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11100);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function main_model_name(): Context\Main_model_nameContext
    {
        $localContext = new Context\Main_model_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1384, self::RULE_main_model_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11102);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function container_tableview_name(): Context\Container_tableview_nameContext
    {
        $localContext = new Context\Container_tableview_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1386, self::RULE_container_tableview_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11104);
            $this->identifier();
            $this->setState(11107);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::PERIOD) {
                $this->setState(11105);
                $this->match(self::PERIOD);
                $this->setState(11106);
                $this->id_expression();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function aggregate_function_name(): Context\Aggregate_function_nameContext
    {
        $localContext = new Context\Aggregate_function_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1388, self::RULE_aggregate_function_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11109);
            $this->identifier();
            $this->setState(11114);
            $this->errorHandler->sync($this);

            $_la = $this->input->LA(1);
            while ($_la === self::PERIOD) {
                $this->setState(11110);
                $this->match(self::PERIOD);
                $this->setState(11111);
                $this->id_expression();
                $this->setState(11116);
                $this->errorHandler->sync($this);
                $_la = $this->input->LA(1);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function query_name(): Context\Query_nameContext
    {
        $localContext = new Context\Query_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1390, self::RULE_query_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11117);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function grantee_name(): Context\Grantee_nameContext
    {
        $localContext = new Context\Grantee_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1392, self::RULE_grantee_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11119);
            $this->id_expression();
            $this->setState(11121);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::IDENTIFIED) {
                $this->setState(11120);
                $this->identified_by();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function role_name(): Context\Role_nameContext
    {
        $localContext = new Context\Role_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1394, self::RULE_role_name);

        try {
            $this->setState(11125);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::ABORT:
                case self::ABS:
                case self::ACCESS:
                case self::ACCESSED:
                case self::ACCOUNT:
                case self::ACL:
                case self::ACOS:
                case self::ACTION:
                case self::ACTIONS:
                case self::ACTIVATE:
                case self::ACTIVE:
                case self::ACTIVE_COMPONENT:
                case self::ACTIVE_DATA:
                case self::ACTIVE_FUNCTION:
                case self::ACTIVE_TAG:
                case self::ACTIVITY:
                case self::ADAPTIVE_PLAN:
                case self::ADD:
                case self::ADD_COLUMN:
                case self::ADD_GROUP:
                case self::ADD_MONTHS:
                case self::ADJ_DATE:
                case self::ADMIN:
                case self::ADMINISTER:
                case self::ADMINISTRATOR:
                case self::ADVANCED:
                case self::ADVISE:
                case self::ADVISOR:
                case self::AFD_DISKSTRING:
                case self::AFTER:
                case self::AGENT:
                case self::AGGREGATE:
                case self::A_LETTER:
                case self::ALIAS:
                case self::ALLOCATE:
                case self::ALLOW:
                case self::ALL_ROWS:
                case self::ALWAYS:
                case self::ANALYZE:
                case self::ANCILLARY:
                case self::AND_EQUAL:
                case self::ANOMALY:
                case self::ANSI_REARCH:
                case self::ANTIJOIN:
                case self::ANYSCHEMA:
                case self::APPEND:
                case self::APPENDCHILDXML:
                case self::APPEND_VALUES:
                case self::APPLICATION:
                case self::APPLY:
                case self::APPROX_COUNT_DISTINCT:
                case self::ARCHIVAL:
                case self::ARCHIVE:
                case self::ARCHIVED:
                case self::ARCHIVELOG:
                case self::ARRAY:
                case self::ASCII:
                case self::ASCIISTR:
                case self::ASIN:
                case self::ASIS:
                case self::ASSEMBLY:
                case self::ASSIGN:
                case self::ASSOCIATE:
                case self::ASYNC:
                case self::ASYNCHRONOUS:
                case self::ATAN2:
                case self::ATAN:
                case self::AT:
                case self::ATTRIBUTE:
                case self::ATTRIBUTES:
                case self::AUTHENTICATED:
                case self::AUTHENTICATION:
                case self::AUTHID:
                case self::AUTHORIZATION:
                case self::AUTOALLOCATE:
                case self::AUTO:
                case self::AUTOEXTEND:
                case self::AUTO_LOGIN:
                case self::AUTOMATIC:
                case self::AUTONOMOUS_TRANSACTION:
                case self::AUTO_REOPTIMIZE:
                case self::AVAILABILITY:
                case self::AVRO:
                case self::BACKGROUND:
                case self::BACKUP:
                case self::BASIC:
                case self::BASICFILE:
                case self::BATCH:
                case self::BATCHSIZE:
                case self::BATCH_TABLE_ACCESS_BY_ROWID:
                case self::BECOME:
                case self::BEFORE:
                case self::BEGIN:
                case self::BEGINNING:
                case self::BEGIN_OUTLINE_DATA:
                case self::BEHALF:
                case self::BEQUEATH:
                case self::BFILE:
                case self::BFILENAME:
                case self::BIGFILE:
                case self::BINARY:
                case self::BINARY_DOUBLE:
                case self::BINARY_DOUBLE_INFINITY:
                case self::BINARY_DOUBLE_NAN:
                case self::BINARY_FLOAT:
                case self::BINARY_FLOAT_INFINITY:
                case self::BINARY_FLOAT_NAN:
                case self::BINARY_INTEGER:
                case self::BIND_AWARE:
                case self::BINDING:
                case self::BIN_TO_NUM:
                case self::BITAND:
                case self::BITMAP_AND:
                case self::BITMAP:
                case self::BITMAPS:
                case self::BITMAP_TREE:
                case self::BITS:
                case self::BLOB:
                case self::BLOCK:
                case self::BLOCK_RANGE:
                case self::BLOCKS:
                case self::BLOCKSIZE:
                case self::BODY:
                case self::BOOLEAN:
                case self::BOTH:
                case self::BOUND:
                case self::BRANCH:
                case self::BREADTH:
                case self::BROADCAST:
                case self::BSON:
                case self::BUFFER:
                case self::BUFFER_CACHE:
                case self::BUFFER_POOL:
                case self::BUILD:
                case self::BULK:
                case self::BYPASS_RECURSIVE_CHECK:
                case self::BYPASS_UJVC:
                case self::BYTE:
                case self::CACHE:
                case self::CACHE_CB:
                case self::CACHE_INSTANCES:
                case self::CACHE_TEMP_TABLE:
                case self::CACHING:
                case self::CALCULATED:
                case self::CALLBACK:
                case self::CALL:
                case self::CANCEL:
                case self::CAPACITY:
                case self::CARDINALITY:
                case self::CASCADE:
                case self::CASE:
                case self::CAST:
                case self::CATEGORY:
                case self::CDBDEFAULT:
                case self::CEIL:
                case self::CELL_FLASH_CACHE:
                case self::CERTIFICATE:
                case self::CFILE:
                case self::CHAINED:
                case self::CHANGE:
                case self::CHANGE_DUPKEY_ERROR_INDEX:
                case self::CHARACTER:
                case self::CHAR:
                case self::CHAR_CS:
                case self::CHARTOROWID:
                case self::CHECK_ACL_REWRITE:
                case self::CHECKPOINT:
                case self::CHILD:
                case self::CHOOSE:
                case self::CHR:
                case self::CHUNK:
                case self::CLASS:
                case self::CLASSIFIER:
                case self::CLEANUP:
                case self::CLEAR:
                case self::C_LETTER:
                case self::CLIENT:
                case self::CLOB:
                case self::CLONE:
                case self::CLOSE_CACHED_OPEN_CURSORS:
                case self::CLOSE:
                case self::CLUSTER_BY_ROWID:
                case self::CLUSTER:
                case self::CLUSTER_DETAILS:
                case self::CLUSTER_DISTANCE:
                case self::CLUSTER_ID:
                case self::CLUSTERING:
                case self::CLUSTERING_FACTOR:
                case self::CLUSTER_PROBABILITY:
                case self::CLUSTER_SET:
                case self::COALESCE:
                case self::COALESCE_SQ:
                case self::COARSE:
                case self::CO_AUTH_IND:
                case self::COLD:
                case self::COLLECT:
                case self::COLUMNAR:
                case self::COLUMN_AUTH_INDICATOR:
                case self::COLUMN:
                case self::COLUMNS:
                case self::COLUMN_STATS:
                case self::COLUMN_VALUE:
                case self::COMMENT:
                case self::COMMIT:
                case self::COMMITTED:
                case self::COMMON_DATA:
                case self::COMPACT:
                case self::COMPATIBILITY:
                case self::COMPILE:
                case self::COMPLETE:
                case self::COMPLIANCE:
                case self::COMPONENT:
                case self::COMPONENTS:
                case self::COMPOSE:
                case self::COMPOSITE:
                case self::COMPOSITE_LIMIT:
                case self::COMPOUND:
                case self::COMPUTE:
                case self::CONCAT:
                case self::CON_DBID_TO_ID:
                case self::CONDITIONAL:
                case self::CONDITION:
                case self::CONFIRM:
                case self::CONFORMING:
                case self::CON_GUID_TO_ID:
                case self::CON_ID:
                case self::CON_NAME_TO_ID:
                case self::CONNECT_BY_CB_WHR_ONLY:
                case self::CONNECT_BY_COMBINE_SW:
                case self::CONNECT_BY_COST_BASED:
                case self::CONNECT_BY_ELIM_DUPS:
                case self::CONNECT_BY_FILTERING:
                case self::CONNECT_BY_ISCYCLE:
                case self::CONNECT_BY_ISLEAF:
                case self::CONNECT_BY_ROOT:
                case self::CONNECT_TIME:
                case self::CONSIDER:
                case self::CONSISTENT:
                case self::CONSTANT:
                case self::CONST:
                case self::CONSTRAINT:
                case self::CONSTRAINTS:
                case self::CONSTRUCTOR:
                case self::CONTAINER:
                case self::CONTAINER_DATA:
                case self::CONTAINERS:
                case self::CONTENT:
                case self::CONTENTS:
                case self::CONTEXT:
                case self::CONTINUE:
                case self::CONTROLFILE:
                case self::CON_UID_TO_ID:
                case self::CONVERT:
                case self::COOKIE:
                case self::COPY:
                case self::CORR_K:
                case self::CORR_S:
                case self::CORRUPTION:
                case self::CORRUPT_XID_ALL:
                case self::CORRUPT_XID:
                case self::COS:
                case self::COSH:
                case self::COST:
                case self::COST_XML_QUERY_REWRITE:
                case self::COUNT:
                case self::COVAR_POP:
                case self::COVAR_SAMP:
                case self::CPU_COSTING:
                case self::CPU_PER_CALL:
                case self::CPU_PER_SESSION:
                case self::CRASH:
                case self::CREATE_FILE_DEST:
                case self::CREATE_STORED_OUTLINES:
                case self::CREATION:
                case self::CREDENTIAL:
                case self::CRITICAL:
                case self::CROSS:
                case self::CROSSEDITION:
                case self::CSCONVERT:
                case self::CUBE_AJ:
                case self::CUBE:
                case self::CUBE_GB:
                case self::CUBE_SJ:
                case self::CUME_DISTM:
                case self::CURRENT:
                case self::CURRENT_DATE:
                case self::CURRENT_SCHEMA:
                case self::CURRENT_TIME:
                case self::CURRENT_TIMESTAMP:
                case self::CURRENT_USER:
                case self::CURRENTV:
                case self::CURSOR:
                case self::CURSOR_SHARING_EXACT:
                case self::CURSOR_SPECIFIC_SEGMENT:
                case self::CUSTOMDATUM:
                case self::CV:
                case self::CYCLE:
                case self::DANGLING:
                case self::DATABASE:
                case self::DATA:
                case self::DATAFILE:
                case self::DATAFILES:
                case self::DATAMOVEMENT:
                case self::DATAOBJNO:
                case self::DATAOBJ_TO_MAT_PARTITION:
                case self::DATAOBJ_TO_PARTITION:
                case self::DATAPUMP:
                case self::DATA_SECURITY_REWRITE_LIMIT:
                case self::DATE_MODE:
                case self::DAY:
                case self::DAYS:
                case self::DBA:
                case self::DBA_RECYCLEBIN:
                case self::DBMS_STATS:
                case self::DB_ROLE_CHANGE:
                case self::DBTIMEZONE:
                case self::DB_UNIQUE_NAME:
                case self::DB_VERSION:
                case self::DDL:
                case self::DEALLOCATE:
                case self::DEBUG:
                case self::DEBUGGER:
                case self::DEC:
                case self::DECIMAL:
                case self::DECLARE:
                case self::DECOMPOSE:
                case self::DECORRELATE:
                case self::DECR:
                case self::DECREMENT:
                case self::DECRYPT:
                case self::DEDUPLICATE:
                case self::DEFAULTS:
                case self::DEFERRABLE:
                case self::DEFERRED:
                case self::DEFINED:
                case self::DEFINE:
                case self::DEFINER:
                case self::DEGREE:
                case self::DELAY:
                case self::DELEGATE:
                case self::DELETE_ALL:
                case self::DELETE:
                case self::DELETEXML:
                case self::DEMAND:
                case self::DENSE_RANKM:
                case self::DEPENDENT:
                case self::DEPTH:
                case self::DEQUEUE:
                case self::DEREF:
                case self::DEREF_NO_REWRITE:
                case self::DESTROY:
                case self::DETACHED:
                case self::DETERMINES:
                case self::DETERMINISTIC:
                case self::DICTIONARY:
                case self::DIMENSION:
                case self::DIMENSIONS:
                case self::DIRECT_LOAD:
                case self::DIRECTORY:
                case self::DIRECT_PATH:
                case self::DISABLE_ALL:
                case self::DISABLE:
                case self::DISABLE_PARALLEL_DML:
                case self::DISABLE_PRESET:
                case self::DISABLE_RPKE:
                case self::DISALLOW:
                case self::DISASSOCIATE:
                case self::DISCARD:
                case self::DISCONNECT:
                case self::DISK:
                case self::DISKGROUP:
                case self::DISKS:
                case self::DISMOUNT:
                case self::DISTINGUISHED:
                case self::DISTRIBUTED:
                case self::DISTRIBUTE:
                case self::DML:
                case self::DML_UPDATE:
                case self::DOCFIDELITY:
                case self::DOCUMENT:
                case self::DOMAIN_INDEX_FILTER:
                case self::DOMAIN_INDEX_NO_SORT:
                case self::DOMAIN_INDEX_SORT:
                case self::DOUBLE:
                case self::DOWNGRADE:
                case self::DRIVING_SITE:
                case self::DROP_COLUMN:
                case self::DROP_GROUP:
                case self::DSINTERVAL_UNCONSTRAINED:
                case self::DST_UPGRADE_INSERT_CONV:
                case self::DUMP:
                case self::DUPLICATE:
                case self::DV:
                case self::DYNAMIC:
                case self::DYNAMIC_SAMPLING:
                case self::DYNAMIC_SAMPLING_EST_CDN:
                case self::EACH:
                case self::EDITIONABLE:
                case self::EDITION:
                case self::EDITIONING:
                case self::EDITIONS:
                case self::ELEMENT:
                case self::ELIM_GROUPBY:
                case self::ELIMINATE_JOIN:
                case self::ELIMINATE_OBY:
                case self::ELIMINATE_OUTER_JOIN:
                case self::EM:
                case self::EMPTY_BLOB:
                case self::EMPTY_CLOB:
                case self::EMPTY:
                case self::ENABLE_ALL:
                case self::ENABLE:
                case self::ENABLE_PARALLEL_DML:
                case self::ENABLE_PRESET:
                case self::ENCODING:
                case self::ENCRYPT:
                case self::ENCRYPTION:
                case self::END_OUTLINE_DATA:
                case self::ENFORCED:
                case self::ENFORCE:
                case self::ENQUEUE:
                case self::ENTERPRISE:
                case self::ENTITYESCAPING:
                case self::ENTRY:
                case self::EQUIPART:
                case self::ERR:
                case self::ERROR_ARGUMENT:
                case self::ERROR:
                case self::ERROR_ON_OVERLAP_TIME:
                case self::ERRORS:
                case self::ESCAPE:
                case self::ESTIMATE:
                case self::EVAL:
                case self::EVALNAME:
                case self::EVALUATE:
                case self::EVALUATION:
                case self::EVENTS:
                case self::EVERY:
                case self::EXCEPT:
                case self::EXCEPTION:
                case self::EXCEPTION_INIT:
                case self::EXCEPTIONS:
                case self::EXCHANGE:
                case self::EXCLUDE:
                case self::EXCLUDING:
                case self::EXECUTE:
                case self::EXEMPT:
                case self::EXISTING:
                case self::EXISTS:
                case self::EXISTSNODE:
                case self::EXIT:
                case self::EXPAND_GSET_TO_UNION:
                case self::EXPAND_TABLE:
                case self::EXP:
                case self::EXPIRE:
                case self::EXPLAIN:
                case self::EXPLOSION:
                case self::EXPORT:
                case self::EXPR_CORR_CHECK:
                case self::EXPRESS:
                case self::EXTENDS:
                case self::EXTENT:
                case self::EXTENTS:
                case self::EXTERNAL:
                case self::EXTERNALLY:
                case self::EXTRACTCLOBXML:
                case self::EXTRACT:
                case self::EXTRACTVALUE:
                case self::EXTRA:
                case self::FACILITY:
                case self::FACT:
                case self::FACTOR:
                case self::FACTORIZE_JOIN:
                case self::FAILED:
                case self::FAILED_LOGIN_ATTEMPTS:
                case self::FAILGROUP:
                case self::FAILOVER:
                case self::FAILURE:
                case self::FALSE:
                case self::FAMILY:
                case self::FAR:
                case self::FAST:
                case self::FASTSTART:
                case self::FBTSCAN:
                case self::FEATURE_DETAILS:
                case self::FEATURE_ID:
                case self::FEATURE_SET:
                case self::FEATURE_VALUE:
                case self::FETCH:
                case self::FILE:
                case self::FILE_NAME_CONVERT:
                case self::FILESYSTEM_LIKE_LOGGING:
                case self::FILTER:
                case self::FINAL:
                case self::FINE:
                case self::FINISH:
                case self::FIRST:
                case self::FIRSTM:
                case self::FIRST_ROWS:
                case self::FIRST_VALUE:
                case self::FIXED_VIEW_DATA:
                case self::FLAGGER:
                case self::FLASHBACK:
                case self::FLASH_CACHE:
                case self::FLOAT:
                case self::FLOB:
                case self::FLOOR:
                case self::FLUSH:
                case self::FOLDER:
                case self::FOLLOWING:
                case self::FOLLOWS:
                case self::FORALL:
                case self::FORCE:
                case self::FORCE_XML_QUERY_REWRITE:
                case self::FOREIGN:
                case self::FOREVER:
                case self::FORMAT:
                case self::FORWARD:
                case self::FRAGMENT_NUMBER:
                case self::FREELIST:
                case self::FREELISTS:
                case self::FREEPOOLS:
                case self::FRESH:
                case self::FROM_TZ:
                case self::FULL:
                case self::FULL_OUTER_JOIN_TO_OUTER:
                case self::FUNCTION:
                case self::FUNCTIONS:
                case self::GATHER_OPTIMIZER_STATISTICS:
                case self::GATHER_PLAN_STATISTICS:
                case self::GBY_CONC_ROLLUP:
                case self::GBY_PUSHDOWN:
                case self::GENERATED:
                case self::GET:
                case self::GLOBAL:
                case self::GLOBALLY:
                case self::GLOBAL_NAME:
                case self::GLOBAL_TOPIC_ENABLED:
                case self::GROUP_BY:
                case self::GROUP_ID:
                case self::GROUPING:
                case self::GROUPING_ID:
                case self::GROUPS:
                case self::GUARANTEED:
                case self::GUARANTEE:
                case self::GUARD:
                case self::HASH_AJ:
                case self::HASH:
                case self::HASHKEYS:
                case self::HASH_SJ:
                case self::HEADER:
                case self::HEAP:
                case self::HELP:
                case self::HEXTORAW:
                case self::HEXTOREF:
                case self::HIDDEN_KEYWORD:
                case self::HIDE:
                case self::HIERARCHY:
                case self::HIGH:
                case self::HINTSET_BEGIN:
                case self::HINTSET_END:
                case self::HOT:
                case self::HOUR:
                case self::HWM_BROKERED:
                case self::HYBRID:
                case self::IDENTIFIER:
                case self::IDENTITY:
                case self::IDGENERATORS:
                case self::ID:
                case self::IDLE_TIME:
                case self::IF:
                case self::IGNORE:
                case self::IGNORE_OPTIM_EMBEDDED_HINTS:
                case self::IGNORE_ROW_ON_DUPKEY_INDEX:
                case self::IGNORE_WHERE_CLAUSE:
                case self::ILM:
                case self::IMMEDIATE:
                case self::IMPACT:
                case self::IMPORT:
                case self::INACTIVE:
                case self::INCLUDE:
                case self::INCLUDE_VERSION:
                case self::INCLUDING:
                case self::INCREMENTAL:
                case self::INCREMENT:
                case self::INCR:
                case self::INDENT:
                case self::INDEX_ASC:
                case self::INDEX_COMBINE:
                case self::INDEX_DESC:
                case self::INDEXED:
                case self::INDEXES:
                case self::INDEX_FFS:
                case self::INDEX_FILTER:
                case self::INDEXING:
                case self::INDEX_JOIN:
                case self::INDEX_ROWS:
                case self::INDEX_RRS:
                case self::INDEX_RS_ASC:
                case self::INDEX_RS_DESC:
                case self::INDEX_RS:
                case self::INDEX_SCAN:
                case self::INDEX_SKIP_SCAN:
                case self::INDEX_SS_ASC:
                case self::INDEX_SS_DESC:
                case self::INDEX_SS:
                case self::INDEX_STATS:
                case self::INDEXTYPE:
                case self::INDEXTYPES:
                case self::INDICATOR:
                case self::INDICES:
                case self::INFINITE:
                case self::INFORMATIONAL:
                case self::INHERIT:
                case self::INITCAP:
                case self::INITIAL:
                case self::INITIALIZED:
                case self::INITIALLY:
                case self::INITRANS:
                case self::INLINE:
                case self::INLINE_XMLTYPE_NT:
                case self::INMEMORY:
                case self::IN_MEMORY_METADATA:
                case self::INMEMORY_PRUNING:
                case self::INNER:
                case self::INOUT:
                case self::INPLACE:
                case self::INSERTCHILDXMLAFTER:
                case self::INSERTCHILDXMLBEFORE:
                case self::INSERTCHILDXML:
                case self::INSERTXMLAFTER:
                case self::INSERTXMLBEFORE:
                case self::INSTANCE:
                case self::INSTANCES:
                case self::INSTANTIABLE:
                case self::INSTANTLY:
                case self::INSTEAD:
                case self::INSTR2:
                case self::INSTR4:
                case self::INSTRB:
                case self::INSTRC:
                case self::INSTR:
                case self::INTEGER:
                case self::INTERLEAVED:
                case self::INTERMEDIATE:
                case self::INTERNAL_CONVERT:
                case self::INTERNAL_USE:
                case self::INTERPRETED:
                case self::INTERVAL:
                case self::INT:
                case self::INVALIDATE:
                case self::INVISIBLE:
                case self::IN_XQUERY:
                case self::ISOLATION:
                case self::ISOLATION_LEVEL:
                case self::ITERATE:
                case self::ITERATION_NUMBER:
                case self::JAVA:
                case self::JOB:
                case self::JOIN:
                case self::JSON_ARRAYAGG:
                case self::JSON_ARRAY:
                case self::JSON_EQUAL:
                case self::JSON_EXISTS2:
                case self::JSON_EXISTS:
                case self::JSONGET:
                case self::JSON:
                case self::JSON_OBJECTAGG:
                case self::JSON_OBJECT:
                case self::JSONPARSE:
                case self::JSON_QUERY:
                case self::JSON_SERIALIZE:
                case self::JSON_TABLE:
                case self::JSON_TEXTCONTAINS2:
                case self::JSON_TEXTCONTAINS:
                case self::JSON_VALUE:
                case self::KEEP_DUPLICATES:
                case self::KEEP:
                case self::KERBEROS:
                case self::KEY:
                case self::KEY_LENGTH:
                case self::KEYSIZE:
                case self::KEYS:
                case self::KEYSTORE:
                case self::KILL:
                case self::LABEL:
                case self::LANGUAGE:
                case self::LAST_DAY:
                case self::LAST:
                case self::LAST_VALUE:
                case self::LATERAL:
                case self::LAX:
                case self::LAYER:
                case self::LDAP_REGISTRATION_ENABLED:
                case self::LDAP_REGISTRATION:
                case self::LDAP_REG_SYNC_INTERVAL:
                case self::LEADING:
                case self::LEFT:
                case self::LENGTH2:
                case self::LENGTH4:
                case self::LENGTHB:
                case self::LENGTHC:
                case self::LENGTH:
                case self::LESS:
                case self::LEVEL:
                case self::LEVELS:
                case self::LIBRARY:
                case self::LIFECYCLE:
                case self::LIFE:
                case self::LIFETIME:
                case self::LIKE2:
                case self::LIKE4:
                case self::LIKEC:
                case self::LIKE_EXPAND:
                case self::LIMIT:
                case self::LINEAR:
                case self::LINK:
                case self::LIST:
                case self::LN:
                case self::LNNVL:
                case self::LOAD:
                case self::LOB:
                case self::LOBNVL:
                case self::LOBS:
                case self::LOCAL_INDEXES:
                case self::LOCAL:
                case self::LOCALTIME:
                case self::LOCALTIMESTAMP:
                case self::LOCATION:
                case self::LOCATOR:
                case self::LOCKED:
                case self::LOCKING:
                case self::LOGFILE:
                case self::LOGFILES:
                case self::LOGGING:
                case self::LOGICAL:
                case self::LOGICAL_READS_PER_CALL:
                case self::LOGICAL_READS_PER_SESSION:
                case self::LOG:
                case self::LOGMINING:
                case self::LOGOFF:
                case self::LOGON:
                case self::LOG_READ_ONLY_VIOLATIONS:
                case self::LONG:
                case self::LOOP:
                case self::LOWER:
                case self::LOW:
                case self::LPAD:
                case self::LTRIM:
                case self::MAIN:
                case self::MAKE_REF:
                case self::MANAGED:
                case self::MANAGE:
                case self::MANAGEMENT:
                case self::MANAGER:
                case self::MANUAL:
                case self::MAP:
                case self::MAPPING:
                case self::MASTER:
                case self::MATCHED:
                case self::MATCHES:
                case self::MATCH:
                case self::MATCH_NUMBER:
                case self::MATCH_RECOGNIZE:
                case self::MATERIALIZED:
                case self::MATERIALIZE:
                case self::MAXARCHLOGS:
                case self::MAXDATAFILES:
                case self::MAXEXTENTS:
                case self::MAXIMIZE:
                case self::MAXINSTANCES:
                case self::MAXLOGFILES:
                case self::MAXLOGHISTORY:
                case self::MAXLOGMEMBERS:
                case self::MAX_SHARED_TEMP_SIZE:
                case self::MAXSIZE:
                case self::MAXTRANS:
                case self::MAXVALUE:
                case self::MEASURE:
                case self::MEASURES:
                case self::MEDIUM:
                case self::MEMBER:
                case self::MEMCOMPRESS:
                case self::MEMORY:
                case self::MERGEACTIONS:
                case self::MERGE_AJ:
                case self::MERGE_CONST_ON:
                case self::MERGE:
                case self::MERGE_SJ:
                case self::METADATA:
                case self::METHOD:
                case self::MIGRATE:
                case self::MIGRATION:
                case self::MINEXTENTS:
                case self::MINIMIZE:
                case self::MINIMUM:
                case self::MINING:
                case self::MINUS_NULL:
                case self::MINUTE:
                case self::MINVALUE:
                case self::MIRRORCOLD:
                case self::MIRRORHOT:
                case self::MIRROR:
                case self::MLSLABEL:
                case self::MODEL_COMPILE_SUBQUERY:
                case self::MODEL_DONTVERIFY_UNIQUENESS:
                case self::MODEL_DYNAMIC_SUBQUERY:
                case self::MODEL_MIN_ANALYSIS:
                case self::MODEL:
                case self::MODEL_NB:
                case self::MODEL_NO_ANALYSIS:
                case self::MODEL_PBY:
                case self::MODEL_PUSH_REF:
                case self::MODEL_SV:
                case self::MODIFICATION:
                case self::MODIFY_COLUMN_TYPE:
                case self::MODIFY:
                case self::MOD:
                case self::MODULE:
                case self::MONITORING:
                case self::MONITOR:
                case self::MONTH:
                case self::MONTHS_BETWEEN:
                case self::MONTHS:
                case self::MOUNT:
                case self::MOUNTPATH:
                case self::MOVEMENT:
                case self::MOVE:
                case self::MULTIDIMENSIONAL:
                case self::MULTISET:
                case self::MV_MERGE:
                case self::NAMED:
                case self::NAME:
                case self::NAMESPACE:
                case self::NAN:
                case self::NANVL:
                case self::NATIONAL:
                case self::NATIVE_FULL_OUTER_JOIN:
                case self::NATIVE:
                case self::NATURAL:
                case self::NAV:
                case self::NCHAR_CS:
                case self::NCHAR:
                case self::NCHR:
                case self::NCLOB:
                case self::NEEDED:
                case self::NEG:
                case self::NESTED:
                case self::NESTED_TABLE_FAST_INSERT:
                case self::NESTED_TABLE_GET_REFS:
                case self::NESTED_TABLE_ID:
                case self::NESTED_TABLE_SET_REFS:
                case self::NESTED_TABLE_SET_SETID:
                case self::NETWORK:
                case self::NEVER:
                case self::NEW:
                case self::NEW_TIME:
                case self::NEXT_DAY:
                case self::NEXT:
                case self::NL_AJ:
                case self::NLJ_BATCHING:
                case self::NLJ_INDEX_FILTER:
                case self::NLJ_INDEX_SCAN:
                case self::NLJ_PREFETCH:
                case self::NLS_CALENDAR:
                case self::NLS_CHARACTERSET:
                case self::NLS_CHARSET_DECL_LEN:
                case self::NLS_CHARSET_ID:
                case self::NLS_CHARSET_NAME:
                case self::NLS_COMP:
                case self::NLS_CURRENCY:
                case self::NLS_DATE_FORMAT:
                case self::NLS_DATE_LANGUAGE:
                case self::NLS_INITCAP:
                case self::NLS_ISO_CURRENCY:
                case self::NL_SJ:
                case self::NLS_LANG:
                case self::NLS_LANGUAGE:
                case self::NLS_LENGTH_SEMANTICS:
                case self::NLS_LOWER:
                case self::NLS_NCHAR_CONV_EXCP:
                case self::NLS_NUMERIC_CHARACTERS:
                case self::NLS_SORT:
                case self::NLSSORT:
                case self::NLS_SPECIAL_CHARS:
                case self::NLS_TERRITORY:
                case self::NLS_UPPER:
                case self::NO_ACCESS:
                case self::NO_ADAPTIVE_PLAN:
                case self::NO_ANSI_REARCH:
                case self::NOAPPEND:
                case self::NOARCHIVELOG:
                case self::NOAUDIT:
                case self::NO_AUTO_REOPTIMIZE:
                case self::NO_BASETABLE_MULTIMV_REWRITE:
                case self::NO_BATCH_TABLE_ACCESS_BY_ROWID:
                case self::NO_BIND_AWARE:
                case self::NO_BUFFER:
                case self::NOCACHE:
                case self::NO_CARTESIAN:
                case self::NO_CHECK_ACL_REWRITE:
                case self::NO_CLUSTER_BY_ROWID:
                case self::NO_CLUSTERING:
                case self::NO_COALESCE_SQ:
                case self::NO_COMMON_DATA:
                case self::NO_CONNECT_BY_CB_WHR_ONLY:
                case self::NO_CONNECT_BY_COMBINE_SW:
                case self::NO_CONNECT_BY_COST_BASED:
                case self::NO_CONNECT_BY_ELIM_DUPS:
                case self::NO_CONNECT_BY_FILTERING:
                case self::NOCOPY:
                case self::NO_COST_XML_QUERY_REWRITE:
                case self::NO_CPU_COSTING:
                case self::NOCPU_COSTING:
                case self::NOCYCLE:
                case self::NO_DATA_SECURITY_REWRITE:
                case self::NO_DECORRELATE:
                case self::NODELAY:
                case self::NO_DOMAIN_INDEX_FILTER:
                case self::NO_DST_UPGRADE_INSERT_CONV:
                case self::NO_ELIM_GROUPBY:
                case self::NO_ELIMINATE_JOIN:
                case self::NO_ELIMINATE_OBY:
                case self::NO_ELIMINATE_OUTER_JOIN:
                case self::NOENTITYESCAPING:
                case self::NO_EXPAND_GSET_TO_UNION:
                case self::NO_EXPAND:
                case self::NO_EXPAND_TABLE:
                case self::NO_FACT:
                case self::NO_FACTORIZE_JOIN:
                case self::NO_FILTERING:
                case self::NOFORCE:
                case self::NO_FULL_OUTER_JOIN_TO_OUTER:
                case self::NO_GATHER_OPTIMIZER_STATISTICS:
                case self::NO_GBY_PUSHDOWN:
                case self::NOGUARANTEE:
                case self::NO_INDEX_FFS:
                case self::NO_INDEX:
                case self::NO_INDEX_SS:
                case self::NO_INMEMORY:
                case self::NO_INMEMORY_PRUNING:
                case self::NOKEEP:
                case self::NO_LOAD:
                case self::NOLOCAL:
                case self::NOLOGGING:
                case self::NOMAPPING:
                case self::NOMAXVALUE:
                case self::NO_MERGE:
                case self::NOMINIMIZE:
                case self::NOMINVALUE:
                case self::NO_MODEL_PUSH_REF:
                case self::NO_MONITORING:
                case self::NOMONITORING:
                case self::NO_MONITOR:
                case self::NO_MULTIMV_REWRITE:
                case self::NO_NATIVE_FULL_OUTER_JOIN:
                case self::NONBLOCKING:
                case self::NONEDITIONABLE:
                case self::NONE:
                case self::NO_NLJ_BATCHING:
                case self::NO_NLJ_PREFETCH:
                case self::NO:
                case self::NONSCHEMA:
                case self::NO_OBJECT_LINK:
                case self::NOORDER:
                case self::NO_ORDER_ROLLUPS:
                case self::NO_OUTER_JOIN_TO_ANTI:
                case self::NO_OUTER_JOIN_TO_INNER:
                case self::NOOVERRIDE:
                case self::NO_PARALLEL_INDEX:
                case self::NOPARALLEL_INDEX:
                case self::NO_PARALLEL:
                case self::NOPARALLEL:
                case self::NO_PARTIAL_COMMIT:
                case self::NO_PARTIAL_JOIN:
                case self::NO_PARTIAL_ROLLUP_PUSHDOWN:
                case self::NOPARTITION:
                case self::NO_PLACE_DISTINCT:
                case self::NO_PLACE_GROUP_BY:
                case self::NO_PQ_CONCURRENT_UNION:
                case self::NO_PQ_MAP:
                case self::NO_PQ_REPLICATE:
                case self::NO_PQ_SKEW:
                case self::NO_PRUNE_GSETS:
                case self::NO_PULL_PRED:
                case self::NO_PUSH_PRED:
                case self::NO_PUSH_SUBQ:
                case self::NO_PX_FAULT_TOLERANCE:
                case self::NO_PX_JOIN_FILTER:
                case self::NO_QKN_BUFF:
                case self::NO_QUERY_TRANSFORMATION:
                case self::NO_REF_CASCADE:
                case self::NORELOCATE:
                case self::NORELY:
                case self::NOREPAIR:
                case self::NOREPLAY:
                case self::NORESETLOGS:
                case self::NO_RESULT_CACHE:
                case self::NOREVERSE:
                case self::NO_REWRITE:
                case self::NOREWRITE:
                case self::NORMAL:
                case self::NO_ROOT_SW_FOR_LOCAL:
                case self::NOROWDEPENDENCIES:
                case self::NOSCHEMACHECK:
                case self::NOSEGMENT:
                case self::NO_SEMIJOIN:
                case self::NO_SEMI_TO_INNER:
                case self::NO_SET_TO_JOIN:
                case self::NOSORT:
                case self::NO_SQL_TRANSLATION:
                case self::NO_SQL_TUNE:
                case self::NO_STAR_TRANSFORMATION:
                case self::NO_STATEMENT_QUEUING:
                case self::NO_STATS_GSETS:
                case self::NOSTRICT:
                case self::NO_SUBQUERY_PRUNING:
                case self::NO_SUBSTRB_PAD:
                case self::NO_SWAP_JOIN_INPUTS:
                case self::NOSWITCH:
                case self::NO_TABLE_LOOKUP_BY_NL:
                case self::NO_TEMP_TABLE:
                case self::NOTHING:
                case self::NOTIFICATION:
                case self::NO_TRANSFORM_DISTINCT_AGG:
                case self::NO_UNNEST:
                case self::NO_USE_CUBE:
                case self::NO_USE_HASH_AGGREGATION:
                case self::NO_USE_HASH_GBY_FOR_PUSHDOWN:
                case self::NO_USE_HASH:
                case self::NO_USE_INVISIBLE_INDEXES:
                case self::NO_USE_MERGE:
                case self::NO_USE_NL:
                case self::NO_USE_VECTOR_AGGREGATION:
                case self::NOVALIDATE:
                case self::NO_VECTOR_TRANSFORM_DIMS:
                case self::NO_VECTOR_TRANSFORM_FACT:
                case self::NO_VECTOR_TRANSFORM:
                case self::NO_XDB_FASTPATH_INSERT:
                case self::NO_XML_DML_REWRITE:
                case self::NO_XMLINDEX_REWRITE_IN_SELECT:
                case self::NO_XMLINDEX_REWRITE:
                case self::NO_XML_QUERY_REWRITE:
                case self::NO_ZONEMAP:
                case self::NTH_VALUE:
                case self::NULLIF:
                case self::NULLS:
                case self::NUMBER:
                case self::NUMERIC:
                case self::NUM_INDEX_KEYS:
                case self::NUMTODSINTERVAL:
                case self::NUMTOYMINTERVAL:
                case self::NVARCHAR2:
                case self::NVL2:
                case self::OBJECT2XML:
                case self::OBJECT:
                case self::OBJ_ID:
                case self::OBJNO:
                case self::OBJNO_REUSE:
                case self::OCCURENCES:
                case self::OFFLINE:
                case self::OFF:
                case self::OFFSET:
                case self::OIDINDEX:
                case self::OID:
                case self::OLAP:
                case self::OLD:
                case self::OLD_PUSH_PRED:
                case self::OLS:
                case self::OLTP:
                case self::OMIT:
                case self::ONE:
                case self::ONLINE:
                case self::ONLY:
                case self::OPAQUE:
                case self::OPAQUE_TRANSFORM:
                case self::OPAQUE_XCANONICAL:
                case self::OPCODE:
                case self::OPEN:
                case self::OPERATIONS:
                case self::OPERATOR:
                case self::OPT_ESTIMATE:
                case self::OPTIMAL:
                case self::OPTIMIZE:
                case self::OPTIMIZER_FEATURES_ENABLE:
                case self::OPTIMIZER_GOAL:
                case self::OPT_PARAM:
                case self::ORA_BRANCH:
                case self::ORA_CHECK_ACL:
                case self::ORA_CHECK_PRIVILEGE:
                case self::ORA_CLUSTERING:
                case self::ORADATA:
                case self::ORADEBUG:
                case self::ORA_DST_AFFECTED:
                case self::ORA_DST_CONVERT:
                case self::ORA_DST_ERROR:
                case self::ORA_GET_ACLIDS:
                case self::ORA_GET_PRIVILEGES:
                case self::ORA_HASH:
                case self::ORA_INVOKING_USERID:
                case self::ORA_INVOKING_USER:
                case self::ORA_INVOKING_XS_USER_GUID:
                case self::ORA_INVOKING_XS_USER:
                case self::ORA_RAWCOMPARE:
                case self::ORA_RAWCONCAT:
                case self::ORA_ROWSCN:
                case self::ORA_ROWSCN_RAW:
                case self::ORA_ROWVERSION:
                case self::ORA_TABVERSION:
                case self::ORA_WRITE_TIME:
                case self::ORDERED:
                case self::ORDERED_PREDICATES:
                case self::ORDINALITY:
                case self::OR_EXPAND:
                case self::ORGANIZATION:
                case self::OR_PREDICATES:
                case self::OSERROR:
                case self::OTHER:
                case self::OUTER_JOIN_TO_ANTI:
                case self::OUTER_JOIN_TO_INNER:
                case self::OUTER:
                case self::OUTLINE_LEAF:
                case self::OUTLINE:
                case self::OUT_OF_LINE:
                case self::OUT:
                case self::OVERFLOW_NOMOVE:
                case self::OVERFLOW:
                case self::OVERLAPS:
                case self::OVER:
                case self::OVERRIDING:
                case self::OWNER:
                case self::OWNERSHIP:
                case self::OWN:
                case self::PACKAGE:
                case self::PACKAGES:
                case self::PARALLEL_ENABLE:
                case self::PARALLEL_INDEX:
                case self::PARALLEL:
                case self::PARAMETERS:
                case self::PARAM:
                case self::PARENT:
                case self::PARITY:
                case self::PARTIAL_JOIN:
                case self::PARTIALLY:
                case self::PARTIAL:
                case self::PARTIAL_ROLLUP_PUSHDOWN:
                case self::PARTITION_HASH:
                case self::PARTITION_LIST:
                case self::PARTITION:
                case self::PARTITION_RANGE:
                case self::PARTITIONS:
                case self::PARTNUMINST:
                case self::PASSING:
                case self::PASSWORD_GRACE_TIME:
                case self::PASSWORD_LIFE_TIME:
                case self::PASSWORD_LOCK_TIME:
                case self::PASSWORD:
                case self::PASSWORD_REUSE_MAX:
                case self::PASSWORD_REUSE_TIME:
                case self::PASSWORD_VERIFY_FUNCTION:
                case self::PAST:
                case self::PATCH:
                case self::PATH:
                case self::PATH_PREFIX:
                case self::PATHS:
                case self::PATTERN:
                case self::PBL_HS_BEGIN:
                case self::PBL_HS_END:
                case self::PCTINCREASE:
                case self::PCTTHRESHOLD:
                case self::PCTUSED:
                case self::PCTVERSION:
                case self::PENDING:
                case self::PERCENT_KEYWORD:
                case self::PERCENT_RANKM:
                case self::PERFORMANCE:
                case self::PERIOD_KEYWORD:
                case self::PERMANENT:
                case self::PERMISSION:
                case self::PERMUTE:
                case self::PER:
                case self::PFILE:
                case self::PHYSICAL:
                case self::PIKEY:
                case self::PIPELINED:
                case self::PIV_GB:
                case self::PIVOT:
                case self::PIV_SSF:
                case self::PLACE_DISTINCT:
                case self::PLACE_GROUP_BY:
                case self::PLAN:
                case self::PLSCOPE_SETTINGS:
                case self::PLS_INTEGER:
                case self::PLSQL_CCFLAGS:
                case self::PLSQL_CODE_TYPE:
                case self::PLSQL_DEBUG:
                case self::PLSQL_OPTIMIZE_LEVEL:
                case self::PLSQL_WARNINGS:
                case self::PLUGGABLE:
                case self::POINT:
                case self::POLICY:
                case self::POOL_16K:
                case self::POOL_2K:
                case self::POOL_32K:
                case self::POOL_4K:
                case self::POOL_8K:
                case self::POSITIVEN:
                case self::POSITIVE:
                case self::POST_TRANSACTION:
                case self::POWERMULTISET_BY_CARDINALITY:
                case self::POWERMULTISET:
                case self::POWER:
                case self::PQ_CONCURRENT_UNION:
                case self::PQ_DISTRIBUTE:
                case self::PQ_DISTRIBUTE_WINDOW:
                case self::PQ_FILTER:
                case self::PQ_MAP:
                case self::PQ_NOMAP:
                case self::PQ_REPLICATE:
                case self::PQ_SKEW:
                case self::PRAGMA:
                case self::PREBUILT:
                case self::PRECEDES:
                case self::PRECEDING:
                case self::PRECISION:
                case self::PRECOMPUTE_SUBQUERY:
                case self::PREDICATE_REORDERS:
                case self::PRELOAD:
                case self::PREPARE:
                case self::PRESENTNNV:
                case self::PRESENT:
                case self::PRESENTV:
                case self::PRESERVE_OID:
                case self::PRESERVE:
                case self::PRETTY:
                case self::PREVIOUS:
                case self::PREV:
                case self::PRIMARY:
                case self::PRINTBLOBTOCLOB:
                case self::PRIORITY:
                case self::PRIVATE:
                case self::PRIVATE_SGA:
                case self::PRIVILEGED:
                case self::PRIVILEGE:
                case self::PRIVILEGES:
                case self::PROCEDURAL:
                case self::PROCEDURE:
                case self::PROCESS:
                case self::PROFILE:
                case self::PROGRAM:
                case self::PROJECT:
                case self::PROPAGATE:
                case self::PROTECTED:
                case self::PROTECTION:
                case self::PROXY:
                case self::PRUNING:
                case self::PULL_PRED:
                case self::PURGE:
                case self::PUSH_PRED:
                case self::PUSH_SUBQ:
                case self::PX_FAULT_TOLERANCE:
                case self::PX_GRANULE:
                case self::PX_JOIN_FILTER:
                case self::QB_NAME:
                case self::QUERY_BLOCK:
                case self::QUERY:
                case self::QUEUE_CURR:
                case self::QUEUE:
                case self::QUEUE_ROWP:
                case self::QUIESCE:
                case self::QUORUM:
                case self::QUOTA:
                case self::RAISE:
                case self::RANDOM_LOCAL:
                case self::RANDOM:
                case self::RANGE:
                case self::RANKM:
                case self::RAPIDLY:
                case self::RAW:
                case self::RAWTOHEX:
                case self::RAWTONHEX:
                case self::RBA:
                case self::RBO_OUTLINE:
                case self::RDBA:
                case self::READ:
                case self::READS:
                case self::REALM:
                case self::REAL:
                case self::REBALANCE:
                case self::REBUILD:
                case self::RECORD:
                case self::RECORDS_PER_BLOCK:
                case self::RECOVERABLE:
                case self::RECOVER:
                case self::RECOVERY:
                case self::RECYCLEBIN:
                case self::RECYCLE:
                case self::REDACTION:
                case self::REDEFINE:
                case self::REDO:
                case self::REDUCED:
                case self::REDUNDANCY:
                case self::REF_CASCADE_CURSOR:
                case self::REFERENCED:
                case self::REFERENCE:
                case self::REFERENCES:
                case self::REFERENCING:
                case self::REF:
                case self::REFRESH:
                case self::REFTOHEX:
                case self::REGEXP_COUNT:
                case self::REGEXP_INSTR:
                case self::REGEXP_LIKE:
                case self::REGEXP_REPLACE:
                case self::REGEXP_SUBSTR:
                case self::REGISTER:
                case self::REGR_AVGX:
                case self::REGR_AVGY:
                case self::REGR_COUNT:
                case self::REGR_INTERCEPT:
                case self::REGR_R2:
                case self::REGR_SLOPE:
                case self::REGR_SXX:
                case self::REGR_SXY:
                case self::REGR_SYY:
                case self::REGULAR:
                case self::REJECT:
                case self::REKEY:
                case self::RELATIONAL:
                case self::RELOCATE:
                case self::RELY:
                case self::REMAINDER:
                case self::REMOTE_MAPPED:
                case self::REMOVE:
                case self::RENAME:
                case self::REPAIR:
                case self::REPEAT:
                case self::REPLACE:
                case self::REPLICATION:
                case self::REQUIRED:
                case self::RESETLOGS:
                case self::RESET:
                case self::RESIZE:
                case self::RESOLVE:
                case self::RESOLVER:
                case self::RESPECT:
                case self::RESTART:
                case self::RESTORE_AS_INTERVALS:
                case self::RESTORE:
                case self::RESTRICT_ALL_REF_CONS:
                case self::RESTRICTED:
                case self::RESTRICT_REFERENCES:
                case self::RESTRICT:
                case self::RESULT_CACHE:
                case self::RESULT:
                case self::RESUMABLE:
                case self::RESUME:
                case self::RETENTION:
                case self::RETRY_ON_ROW_CHANGE:
                case self::RETURNING:
                case self::RETURN:
                case self::REUSE:
                case self::REVERSE:
                case self::REWRITE_OR_ERROR:
                case self::REWRITE:
                case self::RIGHT:
                case self::ROLE:
                case self::ROLESET:
                case self::ROLES:
                case self::ROLLBACK:
                case self::ROLLING:
                case self::ROLLUP:
                case self::ROWDEPENDENCIES:
                case self::ROWID_MAPPING_TABLE:
                case self::ROWID:
                case self::ROWIDTOCHAR:
                case self::ROWIDTONCHAR:
                case self::ROW_LENGTH:
                case self::ROWNUM:
                case self::ROW:
                case self::ROWS:
                case self::RPAD:
                case self::RTRIM:
                case self::RULE:
                case self::RULES:
                case self::RUNNING:
                case self::SALT:
                case self::SAMPLE:
                case self::SAVE_AS_INTERVALS:
                case self::SAVEPOINT:
                case self::SAVE:
                case self::SB4:
                case self::SCALE_ROWS:
                case self::SCALE:
                case self::SCAN_INSTANCES:
                case self::SCAN:
                case self::SCHEDULER:
                case self::SCHEMACHECK:
                case self::SCHEMA:
                case self::SCN_ASCENDING:
                case self::SCN:
                case self::SCOPE:
                case self::SCRUB:
                case self::SD_ALL:
                case self::SD_INHIBIT:
                case self::SDO_GEOM_MBR:
                case self::SD_SHOW:
                case self::SEARCH:
                case self::SECOND:
                case self::SECRET:
                case self::SECUREFILE_DBA:
                case self::SECUREFILE:
                case self::SECURITY:
                case self::SEED:
                case self::SEG_BLOCK:
                case self::SEG_FILE:
                case self::SEGMENT:
                case self::SELECTIVITY:
                case self::SELF:
                case self::SEMIJOIN_DRIVER:
                case self::SEMIJOIN:
                case self::SEMI_TO_INNER:
                case self::SEQUENCED:
                case self::SEQUENCE:
                case self::SEQUENTIAL:
                case self::SERIALIZABLE:
                case self::SERIALLY_REUSABLE:
                case self::SERIAL:
                case self::SERVERERROR:
                case self::SERVICE_NAME_CONVERT:
                case self::SERVICES:
                case self::SESSION_CACHED_CURSORS:
                case self::SESSION:
                case self::SESSIONS_PER_USER:
                case self::SESSIONTIMEZONE:
                case self::SESSIONTZNAME:
                case self::SET:
                case self::SETS:
                case self::SETTINGS:
                case self::SET_TO_JOIN:
                case self::SEVERE:
                case self::SHARED_POOL:
                case self::SHARED:
                case self::SHARING:
                case self::SHELFLIFE:
                case self::SHOW:
                case self::SHRINK:
                case self::SHUTDOWN:
                case self::SIBLINGS:
                case self::SID:
                case self::SIGNAL_COMPONENT:
                case self::SIGNAL_FUNCTION:
                case self::SIGN:
                case self::SIGNTYPE:
                case self::SIMPLE_INTEGER:
                case self::SIMPLE:
                case self::SINGLE:
                case self::SINGLETASK:
                case self::SINH:
                case self::SIN:
                case self::SKIP_EXT_OPTIMIZER:
                case self::SKIP_:
                case self::SKIP_UNQ_UNUSABLE_IDX:
                case self::SKIP_UNUSABLE_INDEXES:
                case self::SMALLFILE:
                case self::SMALLINT:
                case self::SNAPSHOT:
                case self::SOME:
                case self::SORT:
                case self::SOUNDEX:
                case self::SOURCE_FILE_DIRECTORY:
                case self::SOURCE_FILE_NAME_CONVERT:
                case self::SOURCE:
                case self::SPACE_KEYWORD:
                case self::SPECIFICATION:
                case self::SPFILE:
                case self::SPLIT:
                case self::SPREADSHEET:
                case self::SQLDATA:
                case self::SQLERROR:
                case self::SQLLDR:
                case self::SQL:
                case self::SQL_TRACE:
                case self::SQL_TRANSLATION_PROFILE:
                case self::SQRT:
                case self::STALE:
                case self::STANDALONE:
                case self::STANDARD_HASH:
                case self::STANDBY_MAX_DATA_DELAY:
                case self::STANDBYS:
                case self::STANDBY:
                case self::STAR:
                case self::STAR_TRANSFORMATION:
                case self::STARTUP:
                case self::STATEMENT_ID:
                case self::STATEMENT_QUEUING:
                case self::STATEMENTS:
                case self::STATEMENT:
                case self::STATE:
                case self::STATIC:
                case self::STATISTICS:
                case self::STATS_BINOMIAL_TEST:
                case self::STATS_CROSSTAB:
                case self::STATS_F_TEST:
                case self::STATS_KS_TEST:
                case self::STATS_MODE:
                case self::STATS_MW_TEST:
                case self::STATS_ONE_WAY_ANOVA:
                case self::STATS_T_TEST_INDEP:
                case self::STATS_T_TEST_INDEPU:
                case self::STATS_T_TEST_ONE:
                case self::STATS_T_TEST_PAIRED:
                case self::STATS_WSR_TEST:
                case self::STDDEV_POP:
                case self::STDDEV_SAMP:
                case self::STOP:
                case self::STORAGE:
                case self::STORE:
                case self::STREAMS:
                case self::STREAM:
                case self::STRICT:
                case self::STRING:
                case self::STRIPE_COLUMNS:
                case self::STRIPE_WIDTH:
                case self::STRIP:
                case self::STRUCTURE:
                case self::SUBMULTISET:
                case self::SUBPARTITION_REL:
                case self::SUBPARTITIONS:
                case self::SUBPARTITION:
                case self::SUBQUERIES:
                case self::SUBQUERY_PRUNING:
                case self::SUBSCRIBE:
                case self::SUBSET:
                case self::SUBSTITUTABLE:
                case self::SUBSTR2:
                case self::SUBSTR4:
                case self::SUBSTRB:
                case self::SUBSTRC:
                case self::SUBTYPE:
                case self::SUCCESSFUL:
                case self::SUCCESS:
                case self::SUMMARY:
                case self::SUPPLEMENTAL:
                case self::SUSPEND:
                case self::SWAP_JOIN_INPUTS:
                case self::SWITCHOVER:
                case self::SWITCH:
                case self::SYNCHRONOUS:
                case self::SYNC:
                case self::SYSASM:
                case self::SYS_AUDIT:
                case self::SYSAUX:
                case self::SYSBACKUP:
                case self::SYS_CHECKACL:
                case self::SYS_CHECK_PRIVILEGE:
                case self::SYS_CONNECT_BY_PATH:
                case self::SYS_CONTEXT:
                case self::SYSDATE:
                case self::SYSDBA:
                case self::SYS_DBURIGEN:
                case self::SYSDG:
                case self::SYS_DL_CURSOR:
                case self::SYS_DM_RXFORM_CHR:
                case self::SYS_DM_RXFORM_NUM:
                case self::SYS_DOM_COMPARE:
                case self::SYS_DST_PRIM2SEC:
                case self::SYS_DST_SEC2PRIM:
                case self::SYS_ET_BFILE_TO_RAW:
                case self::SYS_ET_BLOB_TO_IMAGE:
                case self::SYS_ET_IMAGE_TO_BLOB:
                case self::SYS_ET_RAW_TO_BFILE:
                case self::SYS_EXTPDTXT:
                case self::SYS_EXTRACT_UTC:
                case self::SYS_FBT_INSDEL:
                case self::SYS_FILTER_ACLS:
                case self::SYS_FNMATCHES:
                case self::SYS_FNREPLACE:
                case self::SYS_GET_ACLIDS:
                case self::SYS_GET_COL_ACLIDS:
                case self::SYS_GET_PRIVILEGES:
                case self::SYS_GETTOKENID:
                case self::SYS_GETXTIVAL:
                case self::SYS_GUID:
                case self::SYSGUID:
                case self::SYSKM:
                case self::SYS_MAKE_XMLNODEID:
                case self::SYS_MAKEXML:
                case self::SYS_MKXMLATTR:
                case self::SYS_MKXTI:
                case self::SYSOBJ:
                case self::SYS_OP_ADT2BIN:
                case self::SYS_OP_ADTCONS:
                case self::SYS_OP_ALSCRVAL:
                case self::SYS_OP_ATG:
                case self::SYS_OP_BIN2ADT:
                case self::SYS_OP_BITVEC:
                case self::SYS_OP_BL2R:
                case self::SYS_OP_BLOOM_FILTER_LIST:
                case self::SYS_OP_BLOOM_FILTER:
                case self::SYS_OP_C2C:
                case self::SYS_OP_CAST:
                case self::SYS_OP_CEG:
                case self::SYS_OP_CL2C:
                case self::SYS_OP_COMBINED_HASH:
                case self::SYS_OP_COMP:
                case self::SYS_OP_CONVERT:
                case self::SYS_OP_COUNTCHG:
                case self::SYS_OP_CSCONV:
                case self::SYS_OP_CSCONVTEST:
                case self::SYS_OP_CSR:
                case self::SYS_OP_CSX_PATCH:
                case self::SYS_OP_CYCLED_SEQ:
                case self::SYS_OP_DECOMP:
                case self::SYS_OP_DESCEND:
                case self::SYS_OP_DISTINCT:
                case self::SYS_OP_DRA:
                case self::SYS_OP_DUMP:
                case self::SYS_OP_DV_CHECK:
                case self::SYS_OP_ENFORCE_NOT_NULL:
                case self::SYSOPER:
                case self::SYS_OP_EXTRACT:
                case self::SYS_OP_GROUPING:
                case self::SYS_OP_GUID:
                case self::SYS_OP_HASH:
                case self::SYS_OP_IIX:
                case self::SYS_OP_ITR:
                case self::SYS_OP_KEY_VECTOR_CREATE:
                case self::SYS_OP_KEY_VECTOR_FILTER_LIST:
                case self::SYS_OP_KEY_VECTOR_FILTER:
                case self::SYS_OP_KEY_VECTOR_SUCCEEDED:
                case self::SYS_OP_KEY_VECTOR_USE:
                case self::SYS_OP_LBID:
                case self::SYS_OP_LOBLOC2BLOB:
                case self::SYS_OP_LOBLOC2CLOB:
                case self::SYS_OP_LOBLOC2ID:
                case self::SYS_OP_LOBLOC2NCLOB:
                case self::SYS_OP_LOBLOC2TYP:
                case self::SYS_OP_LSVI:
                case self::SYS_OP_LVL:
                case self::SYS_OP_MAKEOID:
                case self::SYS_OP_MAP_NONNULL:
                case self::SYS_OP_MSR:
                case self::SYS_OP_NICOMBINE:
                case self::SYS_OP_NIEXTRACT:
                case self::SYS_OP_NII:
                case self::SYS_OP_NIX:
                case self::SYS_OP_NOEXPAND:
                case self::SYS_OP_NTCIMG:
                case self::SYS_OP_NUMTORAW:
                case self::SYS_OP_OIDVALUE:
                case self::SYS_OP_OPNSIZE:
                case self::SYS_OP_PAR_1:
                case self::SYS_OP_PARGID_1:
                case self::SYS_OP_PARGID:
                case self::SYS_OP_PAR:
                case self::SYS_OP_PART_ID:
                case self::SYS_OP_PIVOT:
                case self::SYS_OP_R2O:
                case self::SYS_OP_RAWTONUM:
                case self::SYS_OP_RDTM:
                case self::SYS_OP_REF:
                case self::SYS_OP_RMTD:
                case self::SYS_OP_ROWIDTOOBJ:
                case self::SYS_OP_RPB:
                case self::SYS_OPTLOBPRBSC:
                case self::SYS_OP_TOSETID:
                case self::SYS_OP_TPR:
                case self::SYS_OP_TRTB:
                case self::SYS_OPTXICMP:
                case self::SYS_OPTXQCASTASNQ:
                case self::SYS_OP_UNDESCEND:
                case self::SYS_OP_VECAND:
                case self::SYS_OP_VECBIT:
                case self::SYS_OP_VECOR:
                case self::SYS_OP_VECXOR:
                case self::SYS_OP_VERSION:
                case self::SYS_OP_VREF:
                case self::SYS_OP_VVD:
                case self::SYS_OP_XMLCONS_FOR_CSX:
                case self::SYS_OP_XPTHATG:
                case self::SYS_OP_XPTHIDX:
                case self::SYS_OP_XPTHOP:
                case self::SYS_OP_XTXT2SQLT:
                case self::SYS_OP_ZONE_ID:
                case self::SYS_ORDERKEY_DEPTH:
                case self::SYS_ORDERKEY_MAXCHILD:
                case self::SYS_ORDERKEY_PARENT:
                case self::SYS_PARALLEL_TXN:
                case self::SYS_PATHID_IS_ATTR:
                case self::SYS_PATHID_IS_NMSPC:
                case self::SYS_PATHID_LASTNAME:
                case self::SYS_PATHID_LASTNMSPC:
                case self::SYS_PATH_REVERSE:
                case self::SYS_PXQEXTRACT:
                case self::SYS_RAW_TO_XSID:
                case self::SYS_RID_ORDER:
                case self::SYS_ROW_DELTA:
                case self::SYS_SC_2_XMLT:
                case self::SYS_SYNRCIREDO:
                case self::SYSTEM_DEFINED:
                case self::SYSTEM:
                case self::SYSTIMESTAMP:
                case self::SYS_TYPEID:
                case self::SYS_UMAKEXML:
                case self::SYS_XMLANALYZE:
                case self::SYS_XMLCONTAINS:
                case self::SYS_XMLCONV:
                case self::SYS_XMLEXNSURI:
                case self::SYS_XMLGEN:
                case self::SYS_XMLI_LOC_ISNODE:
                case self::SYS_XMLI_LOC_ISTEXT:
                case self::SYS_XMLINSTR:
                case self::SYS_XMLLOCATOR_GETSVAL:
                case self::SYS_XMLNODEID_GETCID:
                case self::SYS_XMLNODEID_GETLOCATOR:
                case self::SYS_XMLNODEID_GETOKEY:
                case self::SYS_XMLNODEID_GETPATHID:
                case self::SYS_XMLNODEID_GETPTRID:
                case self::SYS_XMLNODEID_GETRID:
                case self::SYS_XMLNODEID_GETSVAL:
                case self::SYS_XMLNODEID_GETTID:
                case self::SYS_XMLNODEID:
                case self::SYS_XMLT_2_SC:
                case self::SYS_XMLTRANSLATE:
                case self::SYS_XMLTYPE2SQL:
                case self::SYS_XQ_ASQLCNV:
                case self::SYS_XQ_ATOMCNVCHK:
                case self::SYS_XQBASEURI:
                case self::SYS_XQCASTABLEERRH:
                case self::SYS_XQCODEP2STR:
                case self::SYS_XQCODEPEQ:
                case self::SYS_XQCON2SEQ:
                case self::SYS_XQCONCAT:
                case self::SYS_XQDELETE:
                case self::SYS_XQDFLTCOLATION:
                case self::SYS_XQDOC:
                case self::SYS_XQDOCURI:
                case self::SYS_XQDURDIV:
                case self::SYS_XQED4URI:
                case self::SYS_XQENDSWITH:
                case self::SYS_XQERRH:
                case self::SYS_XQERR:
                case self::SYS_XQESHTMLURI:
                case self::SYS_XQEXLOBVAL:
                case self::SYS_XQEXSTWRP:
                case self::SYS_XQEXTRACT:
                case self::SYS_XQEXTRREF:
                case self::SYS_XQEXVAL:
                case self::SYS_XQFB2STR:
                case self::SYS_XQFNBOOL:
                case self::SYS_XQFNCMP:
                case self::SYS_XQFNDATIM:
                case self::SYS_XQFNLNAME:
                case self::SYS_XQFNNM:
                case self::SYS_XQFNNSURI:
                case self::SYS_XQFNPREDTRUTH:
                case self::SYS_XQFNQNM:
                case self::SYS_XQFNROOT:
                case self::SYS_XQFORMATNUM:
                case self::SYS_XQFTCONTAIN:
                case self::SYS_XQFUNCR:
                case self::SYS_XQGETCONTENT:
                case self::SYS_XQINDXOF:
                case self::SYS_XQINSERT:
                case self::SYS_XQINSPFX:
                case self::SYS_XQIRI2URI:
                case self::SYS_XQLANG:
                case self::SYS_XQLLNMFRMQNM:
                case self::SYS_XQMKNODEREF:
                case self::SYS_XQNILLED:
                case self::SYS_XQNODENAME:
                case self::SYS_XQNORMSPACE:
                case self::SYS_XQNORMUCODE:
                case self::SYS_XQ_NRNG:
                case self::SYS_XQNSP4PFX:
                case self::SYS_XQNSPFRMQNM:
                case self::SYS_XQPFXFRMQNM:
                case self::SYS_XQ_PKSQL2XML:
                case self::SYS_XQPOLYABS:
                case self::SYS_XQPOLYADD:
                case self::SYS_XQPOLYCEL:
                case self::SYS_XQPOLYCSTBL:
                case self::SYS_XQPOLYCST:
                case self::SYS_XQPOLYDIV:
                case self::SYS_XQPOLYFLR:
                case self::SYS_XQPOLYMOD:
                case self::SYS_XQPOLYMUL:
                case self::SYS_XQPOLYRND:
                case self::SYS_XQPOLYSQRT:
                case self::SYS_XQPOLYSUB:
                case self::SYS_XQPOLYUMUS:
                case self::SYS_XQPOLYUPLS:
                case self::SYS_XQPOLYVEQ:
                case self::SYS_XQPOLYVGE:
                case self::SYS_XQPOLYVGT:
                case self::SYS_XQPOLYVLE:
                case self::SYS_XQPOLYVLT:
                case self::SYS_XQPOLYVNE:
                case self::SYS_XQREF2VAL:
                case self::SYS_XQRENAME:
                case self::SYS_XQREPLACE:
                case self::SYS_XQRESVURI:
                case self::SYS_XQRNDHALF2EVN:
                case self::SYS_XQRSLVQNM:
                case self::SYS_XQRYENVPGET:
                case self::SYS_XQRYVARGET:
                case self::SYS_XQRYWRP:
                case self::SYS_XQSEQ2CON4XC:
                case self::SYS_XQSEQ2CON:
                case self::SYS_XQSEQDEEPEQ:
                case self::SYS_XQSEQINSB:
                case self::SYS_XQSEQRM:
                case self::SYS_XQSEQRVS:
                case self::SYS_XQSEQSUB:
                case self::SYS_XQSEQTYPMATCH:
                case self::SYS_XQSTARTSWITH:
                case self::SYS_XQSTATBURI:
                case self::SYS_XQSTR2CODEP:
                case self::SYS_XQSTRJOIN:
                case self::SYS_XQSUBSTRAFT:
                case self::SYS_XQSUBSTRBEF:
                case self::SYS_XQTOKENIZE:
                case self::SYS_XQTREATAS:
                case self::SYS_XQ_UPKXML2SQL:
                case self::SYS_XQXFORM:
                case self::SYS_XSID_TO_RAW:
                case self::SYS_ZMAP_FILTER:
                case self::SYS_ZMAP_REFRESH:
                case self::TABLE_LOOKUP_BY_NL:
                case self::TABLESPACE_NO:
                case self::TABLESPACE:
                case self::TABLES:
                case self::TABLE_STATS:
                case self::TABLE:
                case self::TABNO:
                case self::TAG:
                case self::TANH:
                case self::TAN:
                case self::TBLORIDXPARTNUM:
                case self::TEMPFILE:
                case self::TEMPLATE:
                case self::TEMPORARY:
                case self::TEMP_TABLE:
                case self::TEST:
                case self::TEXT:
                case self::THAN:
                case self::THEN:
                case self::THE:
                case self::THREAD:
                case self::THROUGH:
                case self::TIER:
                case self::TIES:
                case self::TIMEOUT:
                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                case self::TIMESTAMP:
                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                case self::TIMESTAMP_UNCONSTRAINED:
                case self::TIMES:
                case self::TIME:
                case self::TIMEZONE_ABBR:
                case self::TIMEZONE_HOUR:
                case self::TIMEZONE_MINUTE:
                case self::TIMEZONE_OFFSET:
                case self::TIMEZONE_REGION:
                case self::TIME_ZONE:
                case self::TIV_GB:
                case self::TIV_SSF:
                case self::TO_ACLID:
                case self::TO_BINARY_DOUBLE:
                case self::TO_BINARY_FLOAT:
                case self::TO_BLOB:
                case self::TO_CLOB:
                case self::TO_DSINTERVAL:
                case self::TO_LOB:
                case self::TO_MULTI_BYTE:
                case self::TO_NCHAR:
                case self::TO_NCLOB:
                case self::TO_NUMBER:
                case self::TOPLEVEL:
                case self::TO_SINGLE_BYTE:
                case self::TO_TIMESTAMP:
                case self::TO_TIMESTAMP_TZ:
                case self::TO_TIME:
                case self::TO_TIME_TZ:
                case self::TO_YMINTERVAL:
                case self::TRACE:
                case self::TRACING:
                case self::TRACKING:
                case self::TRAILING:
                case self::TRANSACTION:
                case self::TRANSFORM_DISTINCT_AGG:
                case self::TRANSITIONAL:
                case self::TRANSITION:
                case self::TRANSLATE:
                case self::TRANSLATION:
                case self::TREAT:
                case self::TRIGGERS:
                case self::TRIGGER:
                case self::TRUE:
                case self::TRUNCATE:
                case self::TRUNC:
                case self::TRUSTED:
                case self::TRUST:
                case self::TUNING:
                case self::TX:
                case self::TYPES:
                case self::TYPE:
                case self::TZ_OFFSET:
                case self::UB2:
                case self::UBA:
                case self::UCS2:
                case self::UID:
                case self::UNARCHIVED:
                case self::UNBOUNDED:
                case self::UNBOUND:
                case self::UNCONDITIONAL:
                case self::UNDER:
                case self::UNDO:
                case self::UNDROP:
                case self::UNIFORM:
                case self::UNISTR:
                case self::UNLIMITED:
                case self::UNLOAD:
                case self::UNLOCK:
                case self::UNMATCHED:
                case self::UNNEST_INNERJ_DISTINCT_VIEW:
                case self::UNNEST_NOSEMIJ_NODISTINCTVIEW:
                case self::UNNEST_SEMIJ_VIEW:
                case self::UNNEST:
                case self::UNPACKED:
                case self::UNPIVOT:
                case self::UNPLUG:
                case self::UNPROTECTED:
                case self::UNQUIESCE:
                case self::UNRECOVERABLE:
                case self::UNRESTRICTED:
                case self::UNSUBSCRIBE:
                case self::UNTIL:
                case self::UNUSABLE:
                case self::UNUSED:
                case self::UPDATABLE:
                case self::UPDATED:
                case self::UPDATEXML:
                case self::UPD_INDEXES:
                case self::UPD_JOININDEX:
                case self::UPGRADE:
                case self::UPPER:
                case self::UPSERT:
                case self::UROWID:
                case self::USABLE:
                case self::USAGE:
                case self::USE_ANTI:
                case self::USE_CONCAT:
                case self::USE_CUBE:
                case self::USE_HASH_AGGREGATION:
                case self::USE_HASH_GBY_FOR_PUSHDOWN:
                case self::USE_HASH:
                case self::USE_HIDDEN_PARTITIONS:
                case self::USE_INVISIBLE_INDEXES:
                case self::USE_MERGE_CARTESIAN:
                case self::USE_MERGE:
                case self::USE_NL:
                case self::USE_NL_WITH_INDEX:
                case self::USE_PRIVATE_OUTLINES:
                case self::USER_DATA:
                case self::USER_DEFINED:
                case self::USERENV:
                case self::USERGROUP:
                case self::USER_RECYCLEBIN:
                case self::USERS:
                case self::USER_TABLESPACES:
                case self::USER:
                case self::USE_SEMI:
                case self::USE_STORED_OUTLINES:
                case self::USE_TTT_FOR_GSETS:
                case self::USE:
                case self::USE_VECTOR_AGGREGATION:
                case self::USE_WEAK_NAME_RESL:
                case self::USING_NO_EXPAND:
                case self::USING:
                case self::UTF16BE:
                case self::UTF16LE:
                case self::UTF32:
                case self::UTF8:
                case self::V1:
                case self::V2:
                case self::VALIDATE:
                case self::VALIDATION:
                case self::VALID_TIME_END:
                case self::VALUE:
                case self::VARCHAR2:
                case self::VARCHAR:
                case self::VARIABLE:
                case self::VAR_POP:
                case self::VARRAYS:
                case self::VARRAY:
                case self::VAR_SAMP:
                case self::VARYING:
                case self::VECTOR_READ_TRACE:
                case self::VECTOR_READ:
                case self::VECTOR_TRANSFORM_DIMS:
                case self::VECTOR_TRANSFORM_FACT:
                case self::VECTOR_TRANSFORM:
                case self::VERIFIER:
                case self::VERIFY:
                case self::VERSIONING:
                case self::VERSIONS_ENDSCN:
                case self::VERSIONS_ENDTIME:
                case self::VERSIONS_OPERATION:
                case self::VERSIONS_STARTSCN:
                case self::VERSIONS_STARTTIME:
                case self::VERSIONS:
                case self::VERSIONS_XID:
                case self::VERSION:
                case self::VIOLATION:
                case self::VIRTUAL:
                case self::VISIBILITY:
                case self::VISIBLE:
                case self::VOLUME:
                case self::VSIZE:
                case self::WAIT:
                case self::WALLET:
                case self::WARNING:
                case self::WEEKS:
                case self::WEEK:
                case self::WELLFORMED:
                case self::WHENEVER:
                case self::WHEN:
                case self::WHILE:
                case self::WHITESPACE:
                case self::WIDTH_BUCKET:
                case self::WITHIN:
                case self::WITHOUT:
                case self::WITH_PLSQL:
                case self::WORK:
                case self::WRAPPED:
                case self::WRAPPER:
                case self::WRITE:
                case self::XDB_FASTPATH_INSERT:
                case self::X_DYN_PRUNE:
                case self::XID:
                case self::XML2OBJECT:
                case self::XMLAGG:
                case self::XMLATTRIBUTES:
                case self::XMLCAST:
                case self::XMLCDATA:
                case self::XMLCOLATTVAL:
                case self::XMLCOMMENT:
                case self::XMLCONCAT:
                case self::XMLDIFF:
                case self::XML_DML_RWT_STMT:
                case self::XMLELEMENT:
                case self::XMLEXISTS2:
                case self::XMLEXISTS:
                case self::XMLFOREST:
                case self::XMLINDEX_REWRITE_IN_SELECT:
                case self::XMLINDEX_REWRITE:
                case self::XMLINDEX_SEL_IDX_TBL:
                case self::XMLISNODE:
                case self::XMLISVALID:
                case self::XMLNAMESPACES:
                case self::XMLPARSE:
                case self::XMLPATCH:
                case self::XMLPI:
                case self::XMLQUERYVAL:
                case self::XMLQUERY:
                case self::XMLROOT:
                case self::XMLSCHEMA:
                case self::XMLSERIALIZE:
                case self::XMLTABLE:
                case self::XMLTRANSFORMBLOB:
                case self::XMLTRANSFORM:
                case self::XMLTYPE:
                case self::XML:
                case self::XPATHTABLE:
                case self::XS_SYS_CONTEXT:
                case self::XS:
                case self::YEARS:
                case self::YEAR:
                case self::YES:
                case self::YMINTERVAL_UNCONSTRAINED:
                case self::ZONEMAP:
                case self::ZONE:
                case self::PREDICTION:
                case self::PREDICTION_BOUNDS:
                case self::PREDICTION_COST:
                case self::PREDICTION_DETAILS:
                case self::PREDICTION_PROBABILITY:
                case self::PREDICTION_SET:
                case self::CUME_DIST:
                case self::DENSE_RANK:
                case self::LISTAGG:
                case self::PERCENT_RANK:
                case self::PERCENTILE_CONT:
                case self::PERCENTILE_DISC:
                case self::RANK:
                case self::AVG:
                case self::CORR:
                case self::COVAR_:
                case self::LAG:
                case self::LEAD:
                case self::MAX:
                case self::MEDIAN:
                case self::MIN:
                case self::NTILE:
                case self::NVL:
                case self::RATIO_TO_REPORT:
                case self::REGR_:
                case self::ROUND:
                case self::ROW_NUMBER:
                case self::SUBSTR:
                case self::TO_CHAR:
                case self::TRIM:
                case self::SUM:
                case self::STDDEV:
                case self::VAR_:
                case self::VARIANCE:
                case self::LEAST:
                case self::GREATEST:
                case self::TO_DATE:
                case self::PERIOD:
                case self::DELIMITED_ID:
                case self::REGULAR_ID:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11123);
                    $this->id_expression();
                    break;

                case self::CONNECT:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11124);
                    $this->match(self::CONNECT);
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function constraint_name(): Context\Constraint_nameContext
    {
        $localContext = new Context\Constraint_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1396, self::RULE_constraint_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11127);
            $this->identifier();
            $this->setState(11132);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1531, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11128);
                    $this->match(self::PERIOD);
                    $this->setState(11129);
                    $this->id_expression();
                }

                $this->setState(11134);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1531, $this->ctx);
            }
            $this->setState(11137);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1532, $this->ctx)) {
                case 1:
                    $this->setState(11135);
                    $this->match(self::AT_SIGN);
                    $this->setState(11136);
                    $this->link_name();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function label_name(): Context\Label_nameContext
    {
        $localContext = new Context\Label_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1398, self::RULE_label_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11139);
            $this->id_expression();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function type_name(): Context\Type_nameContext
    {
        $localContext = new Context\Type_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1400, self::RULE_type_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11141);
            $this->id_expression();
            $this->setState(11146);
            $this->errorHandler->sync($this);

            $_la = $this->input->LA(1);
            while ($_la === self::PERIOD) {
                $this->setState(11142);
                $this->match(self::PERIOD);
                $this->setState(11143);
                $this->id_expression();
                $this->setState(11148);
                $this->errorHandler->sync($this);
                $_la = $this->input->LA(1);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function sequence_name(): Context\Sequence_nameContext
    {
        $localContext = new Context\Sequence_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1402, self::RULE_sequence_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11149);
            $this->id_expression();
            $this->setState(11154);
            $this->errorHandler->sync($this);

            $_la = $this->input->LA(1);
            while ($_la === self::PERIOD) {
                $this->setState(11150);
                $this->match(self::PERIOD);
                $this->setState(11151);
                $this->id_expression();
                $this->setState(11156);
                $this->errorHandler->sync($this);
                $_la = $this->input->LA(1);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function exception_name(): Context\Exception_nameContext
    {
        $localContext = new Context\Exception_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1404, self::RULE_exception_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11157);
            $this->identifier();
            $this->setState(11162);
            $this->errorHandler->sync($this);

            $_la = $this->input->LA(1);
            while ($_la === self::PERIOD) {
                $this->setState(11158);
                $this->match(self::PERIOD);
                $this->setState(11159);
                $this->id_expression();
                $this->setState(11164);
                $this->errorHandler->sync($this);
                $_la = $this->input->LA(1);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function function_name(): Context\Function_nameContext
    {
        $localContext = new Context\Function_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1406, self::RULE_function_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11165);
            $this->identifier();
            $this->setState(11168);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::PERIOD) {
                $this->setState(11166);
                $this->match(self::PERIOD);
                $this->setState(11167);
                $this->id_expression();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function procedure_name(): Context\Procedure_nameContext
    {
        $localContext = new Context\Procedure_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1408, self::RULE_procedure_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11170);
            $this->identifier();
            $this->setState(11173);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::PERIOD) {
                $this->setState(11171);
                $this->match(self::PERIOD);
                $this->setState(11172);
                $this->id_expression();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function trigger_name(): Context\Trigger_nameContext
    {
        $localContext = new Context\Trigger_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1410, self::RULE_trigger_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11175);
            $this->identifier();
            $this->setState(11178);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::PERIOD) {
                $this->setState(11176);
                $this->match(self::PERIOD);
                $this->setState(11177);
                $this->id_expression();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function variable_name(): Context\Variable_nameContext
    {
        $localContext = new Context\Variable_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1412, self::RULE_variable_name);

        try {
            $this->setState(11190);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::ABORT:
                case self::ABS:
                case self::ACCESS:
                case self::ACCESSED:
                case self::ACCOUNT:
                case self::ACL:
                case self::ACOS:
                case self::ACTION:
                case self::ACTIONS:
                case self::ACTIVATE:
                case self::ACTIVE:
                case self::ACTIVE_COMPONENT:
                case self::ACTIVE_DATA:
                case self::ACTIVE_FUNCTION:
                case self::ACTIVE_TAG:
                case self::ACTIVITY:
                case self::ADAPTIVE_PLAN:
                case self::ADD:
                case self::ADD_COLUMN:
                case self::ADD_GROUP:
                case self::ADD_MONTHS:
                case self::ADJ_DATE:
                case self::ADMIN:
                case self::ADMINISTER:
                case self::ADMINISTRATOR:
                case self::ADVANCED:
                case self::ADVISE:
                case self::ADVISOR:
                case self::AFD_DISKSTRING:
                case self::AFTER:
                case self::AGENT:
                case self::AGGREGATE:
                case self::A_LETTER:
                case self::ALIAS:
                case self::ALLOCATE:
                case self::ALLOW:
                case self::ALL_ROWS:
                case self::ALWAYS:
                case self::ANALYZE:
                case self::ANCILLARY:
                case self::AND_EQUAL:
                case self::ANOMALY:
                case self::ANSI_REARCH:
                case self::ANTIJOIN:
                case self::ANYSCHEMA:
                case self::APPEND:
                case self::APPENDCHILDXML:
                case self::APPEND_VALUES:
                case self::APPLICATION:
                case self::APPLY:
                case self::APPROX_COUNT_DISTINCT:
                case self::ARCHIVAL:
                case self::ARCHIVE:
                case self::ARCHIVED:
                case self::ARCHIVELOG:
                case self::ARRAY:
                case self::ASCII:
                case self::ASCIISTR:
                case self::ASIN:
                case self::ASIS:
                case self::ASSEMBLY:
                case self::ASSIGN:
                case self::ASSOCIATE:
                case self::ASYNC:
                case self::ASYNCHRONOUS:
                case self::ATAN2:
                case self::ATAN:
                case self::AT:
                case self::ATTRIBUTE:
                case self::ATTRIBUTES:
                case self::AUTHENTICATED:
                case self::AUTHENTICATION:
                case self::AUTHID:
                case self::AUTHORIZATION:
                case self::AUTOALLOCATE:
                case self::AUTO:
                case self::AUTOEXTEND:
                case self::AUTO_LOGIN:
                case self::AUTOMATIC:
                case self::AUTONOMOUS_TRANSACTION:
                case self::AUTO_REOPTIMIZE:
                case self::AVAILABILITY:
                case self::AVRO:
                case self::BACKGROUND:
                case self::BACKUP:
                case self::BASIC:
                case self::BASICFILE:
                case self::BATCH:
                case self::BATCHSIZE:
                case self::BATCH_TABLE_ACCESS_BY_ROWID:
                case self::BECOME:
                case self::BEFORE:
                case self::BEGIN:
                case self::BEGINNING:
                case self::BEGIN_OUTLINE_DATA:
                case self::BEHALF:
                case self::BEQUEATH:
                case self::BFILE:
                case self::BFILENAME:
                case self::BIGFILE:
                case self::BINARY:
                case self::BINARY_DOUBLE:
                case self::BINARY_DOUBLE_INFINITY:
                case self::BINARY_DOUBLE_NAN:
                case self::BINARY_FLOAT:
                case self::BINARY_FLOAT_INFINITY:
                case self::BINARY_FLOAT_NAN:
                case self::BINARY_INTEGER:
                case self::BIND_AWARE:
                case self::BINDING:
                case self::BIN_TO_NUM:
                case self::BITAND:
                case self::BITMAP_AND:
                case self::BITMAP:
                case self::BITMAPS:
                case self::BITMAP_TREE:
                case self::BITS:
                case self::BLOB:
                case self::BLOCK:
                case self::BLOCK_RANGE:
                case self::BLOCKS:
                case self::BLOCKSIZE:
                case self::BODY:
                case self::BOOLEAN:
                case self::BOTH:
                case self::BOUND:
                case self::BRANCH:
                case self::BREADTH:
                case self::BROADCAST:
                case self::BSON:
                case self::BUFFER:
                case self::BUFFER_CACHE:
                case self::BUFFER_POOL:
                case self::BUILD:
                case self::BULK:
                case self::BYPASS_RECURSIVE_CHECK:
                case self::BYPASS_UJVC:
                case self::BYTE:
                case self::CACHE:
                case self::CACHE_CB:
                case self::CACHE_INSTANCES:
                case self::CACHE_TEMP_TABLE:
                case self::CACHING:
                case self::CALCULATED:
                case self::CALLBACK:
                case self::CALL:
                case self::CANCEL:
                case self::CAPACITY:
                case self::CARDINALITY:
                case self::CASCADE:
                case self::CASE:
                case self::CAST:
                case self::CATEGORY:
                case self::CDBDEFAULT:
                case self::CEIL:
                case self::CELL_FLASH_CACHE:
                case self::CERTIFICATE:
                case self::CFILE:
                case self::CHAINED:
                case self::CHANGE:
                case self::CHANGE_DUPKEY_ERROR_INDEX:
                case self::CHARACTER:
                case self::CHAR:
                case self::CHAR_CS:
                case self::CHARTOROWID:
                case self::CHECK_ACL_REWRITE:
                case self::CHECKPOINT:
                case self::CHILD:
                case self::CHOOSE:
                case self::CHR:
                case self::CHUNK:
                case self::CLASS:
                case self::CLASSIFIER:
                case self::CLEANUP:
                case self::CLEAR:
                case self::C_LETTER:
                case self::CLIENT:
                case self::CLOB:
                case self::CLONE:
                case self::CLOSE_CACHED_OPEN_CURSORS:
                case self::CLOSE:
                case self::CLUSTER_BY_ROWID:
                case self::CLUSTER:
                case self::CLUSTER_DETAILS:
                case self::CLUSTER_DISTANCE:
                case self::CLUSTER_ID:
                case self::CLUSTERING:
                case self::CLUSTERING_FACTOR:
                case self::CLUSTER_PROBABILITY:
                case self::CLUSTER_SET:
                case self::COALESCE:
                case self::COALESCE_SQ:
                case self::COARSE:
                case self::CO_AUTH_IND:
                case self::COLD:
                case self::COLLECT:
                case self::COLUMNAR:
                case self::COLUMN_AUTH_INDICATOR:
                case self::COLUMN:
                case self::COLUMNS:
                case self::COLUMN_STATS:
                case self::COLUMN_VALUE:
                case self::COMMENT:
                case self::COMMIT:
                case self::COMMITTED:
                case self::COMMON_DATA:
                case self::COMPACT:
                case self::COMPATIBILITY:
                case self::COMPILE:
                case self::COMPLETE:
                case self::COMPLIANCE:
                case self::COMPONENT:
                case self::COMPONENTS:
                case self::COMPOSE:
                case self::COMPOSITE:
                case self::COMPOSITE_LIMIT:
                case self::COMPOUND:
                case self::COMPUTE:
                case self::CONCAT:
                case self::CON_DBID_TO_ID:
                case self::CONDITIONAL:
                case self::CONDITION:
                case self::CONFIRM:
                case self::CONFORMING:
                case self::CON_GUID_TO_ID:
                case self::CON_ID:
                case self::CON_NAME_TO_ID:
                case self::CONNECT_BY_CB_WHR_ONLY:
                case self::CONNECT_BY_COMBINE_SW:
                case self::CONNECT_BY_COST_BASED:
                case self::CONNECT_BY_ELIM_DUPS:
                case self::CONNECT_BY_FILTERING:
                case self::CONNECT_BY_ISCYCLE:
                case self::CONNECT_BY_ISLEAF:
                case self::CONNECT_BY_ROOT:
                case self::CONNECT_TIME:
                case self::CONSIDER:
                case self::CONSISTENT:
                case self::CONSTANT:
                case self::CONST:
                case self::CONSTRAINT:
                case self::CONSTRAINTS:
                case self::CONSTRUCTOR:
                case self::CONTAINER:
                case self::CONTAINER_DATA:
                case self::CONTAINERS:
                case self::CONTENT:
                case self::CONTENTS:
                case self::CONTEXT:
                case self::CONTINUE:
                case self::CONTROLFILE:
                case self::CON_UID_TO_ID:
                case self::CONVERT:
                case self::COOKIE:
                case self::COPY:
                case self::CORR_K:
                case self::CORR_S:
                case self::CORRUPTION:
                case self::CORRUPT_XID_ALL:
                case self::CORRUPT_XID:
                case self::COS:
                case self::COSH:
                case self::COST:
                case self::COST_XML_QUERY_REWRITE:
                case self::COUNT:
                case self::COVAR_POP:
                case self::COVAR_SAMP:
                case self::CPU_COSTING:
                case self::CPU_PER_CALL:
                case self::CPU_PER_SESSION:
                case self::CRASH:
                case self::CREATE_FILE_DEST:
                case self::CREATE_STORED_OUTLINES:
                case self::CREATION:
                case self::CREDENTIAL:
                case self::CRITICAL:
                case self::CROSS:
                case self::CROSSEDITION:
                case self::CSCONVERT:
                case self::CUBE_AJ:
                case self::CUBE:
                case self::CUBE_GB:
                case self::CUBE_SJ:
                case self::CUME_DISTM:
                case self::CURRENT:
                case self::CURRENT_DATE:
                case self::CURRENT_SCHEMA:
                case self::CURRENT_TIME:
                case self::CURRENT_TIMESTAMP:
                case self::CURRENT_USER:
                case self::CURRENTV:
                case self::CURSOR:
                case self::CURSOR_SHARING_EXACT:
                case self::CURSOR_SPECIFIC_SEGMENT:
                case self::CUSTOMDATUM:
                case self::CV:
                case self::CYCLE:
                case self::DANGLING:
                case self::DATABASE:
                case self::DATA:
                case self::DATAFILE:
                case self::DATAFILES:
                case self::DATAMOVEMENT:
                case self::DATAOBJNO:
                case self::DATAOBJ_TO_MAT_PARTITION:
                case self::DATAOBJ_TO_PARTITION:
                case self::DATAPUMP:
                case self::DATA_SECURITY_REWRITE_LIMIT:
                case self::DATE_MODE:
                case self::DAY:
                case self::DAYS:
                case self::DBA:
                case self::DBA_RECYCLEBIN:
                case self::DBMS_STATS:
                case self::DB_ROLE_CHANGE:
                case self::DBTIMEZONE:
                case self::DB_UNIQUE_NAME:
                case self::DB_VERSION:
                case self::DDL:
                case self::DEALLOCATE:
                case self::DEBUG:
                case self::DEBUGGER:
                case self::DEC:
                case self::DECIMAL:
                case self::DECLARE:
                case self::DECOMPOSE:
                case self::DECORRELATE:
                case self::DECR:
                case self::DECREMENT:
                case self::DECRYPT:
                case self::DEDUPLICATE:
                case self::DEFAULTS:
                case self::DEFERRABLE:
                case self::DEFERRED:
                case self::DEFINED:
                case self::DEFINE:
                case self::DEFINER:
                case self::DEGREE:
                case self::DELAY:
                case self::DELEGATE:
                case self::DELETE_ALL:
                case self::DELETE:
                case self::DELETEXML:
                case self::DEMAND:
                case self::DENSE_RANKM:
                case self::DEPENDENT:
                case self::DEPTH:
                case self::DEQUEUE:
                case self::DEREF:
                case self::DEREF_NO_REWRITE:
                case self::DESTROY:
                case self::DETACHED:
                case self::DETERMINES:
                case self::DETERMINISTIC:
                case self::DICTIONARY:
                case self::DIMENSION:
                case self::DIMENSIONS:
                case self::DIRECT_LOAD:
                case self::DIRECTORY:
                case self::DIRECT_PATH:
                case self::DISABLE_ALL:
                case self::DISABLE:
                case self::DISABLE_PARALLEL_DML:
                case self::DISABLE_PRESET:
                case self::DISABLE_RPKE:
                case self::DISALLOW:
                case self::DISASSOCIATE:
                case self::DISCARD:
                case self::DISCONNECT:
                case self::DISK:
                case self::DISKGROUP:
                case self::DISKS:
                case self::DISMOUNT:
                case self::DISTINGUISHED:
                case self::DISTRIBUTED:
                case self::DISTRIBUTE:
                case self::DML:
                case self::DML_UPDATE:
                case self::DOCFIDELITY:
                case self::DOCUMENT:
                case self::DOMAIN_INDEX_FILTER:
                case self::DOMAIN_INDEX_NO_SORT:
                case self::DOMAIN_INDEX_SORT:
                case self::DOUBLE:
                case self::DOWNGRADE:
                case self::DRIVING_SITE:
                case self::DROP_COLUMN:
                case self::DROP_GROUP:
                case self::DSINTERVAL_UNCONSTRAINED:
                case self::DST_UPGRADE_INSERT_CONV:
                case self::DUMP:
                case self::DUPLICATE:
                case self::DV:
                case self::DYNAMIC:
                case self::DYNAMIC_SAMPLING:
                case self::DYNAMIC_SAMPLING_EST_CDN:
                case self::EACH:
                case self::EDITIONABLE:
                case self::EDITION:
                case self::EDITIONING:
                case self::EDITIONS:
                case self::ELEMENT:
                case self::ELIM_GROUPBY:
                case self::ELIMINATE_JOIN:
                case self::ELIMINATE_OBY:
                case self::ELIMINATE_OUTER_JOIN:
                case self::EM:
                case self::EMPTY_BLOB:
                case self::EMPTY_CLOB:
                case self::EMPTY:
                case self::ENABLE_ALL:
                case self::ENABLE:
                case self::ENABLE_PARALLEL_DML:
                case self::ENABLE_PRESET:
                case self::ENCODING:
                case self::ENCRYPT:
                case self::ENCRYPTION:
                case self::END_OUTLINE_DATA:
                case self::ENFORCED:
                case self::ENFORCE:
                case self::ENQUEUE:
                case self::ENTERPRISE:
                case self::ENTITYESCAPING:
                case self::ENTRY:
                case self::EQUIPART:
                case self::ERR:
                case self::ERROR_ARGUMENT:
                case self::ERROR:
                case self::ERROR_ON_OVERLAP_TIME:
                case self::ERRORS:
                case self::ESCAPE:
                case self::ESTIMATE:
                case self::EVAL:
                case self::EVALNAME:
                case self::EVALUATE:
                case self::EVALUATION:
                case self::EVENTS:
                case self::EVERY:
                case self::EXCEPT:
                case self::EXCEPTION:
                case self::EXCEPTION_INIT:
                case self::EXCEPTIONS:
                case self::EXCHANGE:
                case self::EXCLUDE:
                case self::EXCLUDING:
                case self::EXECUTE:
                case self::EXEMPT:
                case self::EXISTING:
                case self::EXISTS:
                case self::EXISTSNODE:
                case self::EXIT:
                case self::EXPAND_GSET_TO_UNION:
                case self::EXPAND_TABLE:
                case self::EXP:
                case self::EXPIRE:
                case self::EXPLAIN:
                case self::EXPLOSION:
                case self::EXPORT:
                case self::EXPR_CORR_CHECK:
                case self::EXPRESS:
                case self::EXTENDS:
                case self::EXTENT:
                case self::EXTENTS:
                case self::EXTERNAL:
                case self::EXTERNALLY:
                case self::EXTRACTCLOBXML:
                case self::EXTRACT:
                case self::EXTRACTVALUE:
                case self::EXTRA:
                case self::FACILITY:
                case self::FACT:
                case self::FACTOR:
                case self::FACTORIZE_JOIN:
                case self::FAILED:
                case self::FAILED_LOGIN_ATTEMPTS:
                case self::FAILGROUP:
                case self::FAILOVER:
                case self::FAILURE:
                case self::FALSE:
                case self::FAMILY:
                case self::FAR:
                case self::FAST:
                case self::FASTSTART:
                case self::FBTSCAN:
                case self::FEATURE_DETAILS:
                case self::FEATURE_ID:
                case self::FEATURE_SET:
                case self::FEATURE_VALUE:
                case self::FETCH:
                case self::FILE:
                case self::FILE_NAME_CONVERT:
                case self::FILESYSTEM_LIKE_LOGGING:
                case self::FILTER:
                case self::FINAL:
                case self::FINE:
                case self::FINISH:
                case self::FIRST:
                case self::FIRSTM:
                case self::FIRST_ROWS:
                case self::FIRST_VALUE:
                case self::FIXED_VIEW_DATA:
                case self::FLAGGER:
                case self::FLASHBACK:
                case self::FLASH_CACHE:
                case self::FLOAT:
                case self::FLOB:
                case self::FLOOR:
                case self::FLUSH:
                case self::FOLDER:
                case self::FOLLOWING:
                case self::FOLLOWS:
                case self::FORALL:
                case self::FORCE:
                case self::FORCE_XML_QUERY_REWRITE:
                case self::FOREIGN:
                case self::FOREVER:
                case self::FORMAT:
                case self::FORWARD:
                case self::FRAGMENT_NUMBER:
                case self::FREELIST:
                case self::FREELISTS:
                case self::FREEPOOLS:
                case self::FRESH:
                case self::FROM_TZ:
                case self::FULL:
                case self::FULL_OUTER_JOIN_TO_OUTER:
                case self::FUNCTION:
                case self::FUNCTIONS:
                case self::GATHER_OPTIMIZER_STATISTICS:
                case self::GATHER_PLAN_STATISTICS:
                case self::GBY_CONC_ROLLUP:
                case self::GBY_PUSHDOWN:
                case self::GENERATED:
                case self::GET:
                case self::GLOBAL:
                case self::GLOBALLY:
                case self::GLOBAL_NAME:
                case self::GLOBAL_TOPIC_ENABLED:
                case self::GROUP_BY:
                case self::GROUP_ID:
                case self::GROUPING:
                case self::GROUPING_ID:
                case self::GROUPS:
                case self::GUARANTEED:
                case self::GUARANTEE:
                case self::GUARD:
                case self::HASH_AJ:
                case self::HASH:
                case self::HASHKEYS:
                case self::HASH_SJ:
                case self::HEADER:
                case self::HEAP:
                case self::HELP:
                case self::HEXTORAW:
                case self::HEXTOREF:
                case self::HIDDEN_KEYWORD:
                case self::HIDE:
                case self::HIERARCHY:
                case self::HIGH:
                case self::HINTSET_BEGIN:
                case self::HINTSET_END:
                case self::HOT:
                case self::HOUR:
                case self::HWM_BROKERED:
                case self::HYBRID:
                case self::IDENTIFIER:
                case self::IDENTITY:
                case self::IDGENERATORS:
                case self::ID:
                case self::IDLE_TIME:
                case self::IF:
                case self::IGNORE:
                case self::IGNORE_OPTIM_EMBEDDED_HINTS:
                case self::IGNORE_ROW_ON_DUPKEY_INDEX:
                case self::IGNORE_WHERE_CLAUSE:
                case self::ILM:
                case self::IMMEDIATE:
                case self::IMPACT:
                case self::IMPORT:
                case self::INACTIVE:
                case self::INCLUDE:
                case self::INCLUDE_VERSION:
                case self::INCLUDING:
                case self::INCREMENTAL:
                case self::INCREMENT:
                case self::INCR:
                case self::INDENT:
                case self::INDEX_ASC:
                case self::INDEX_COMBINE:
                case self::INDEX_DESC:
                case self::INDEXED:
                case self::INDEXES:
                case self::INDEX_FFS:
                case self::INDEX_FILTER:
                case self::INDEXING:
                case self::INDEX_JOIN:
                case self::INDEX_ROWS:
                case self::INDEX_RRS:
                case self::INDEX_RS_ASC:
                case self::INDEX_RS_DESC:
                case self::INDEX_RS:
                case self::INDEX_SCAN:
                case self::INDEX_SKIP_SCAN:
                case self::INDEX_SS_ASC:
                case self::INDEX_SS_DESC:
                case self::INDEX_SS:
                case self::INDEX_STATS:
                case self::INDEXTYPE:
                case self::INDEXTYPES:
                case self::INDICATOR:
                case self::INDICES:
                case self::INFINITE:
                case self::INFORMATIONAL:
                case self::INHERIT:
                case self::INITCAP:
                case self::INITIAL:
                case self::INITIALIZED:
                case self::INITIALLY:
                case self::INITRANS:
                case self::INLINE:
                case self::INLINE_XMLTYPE_NT:
                case self::INMEMORY:
                case self::IN_MEMORY_METADATA:
                case self::INMEMORY_PRUNING:
                case self::INNER:
                case self::INOUT:
                case self::INPLACE:
                case self::INSERTCHILDXMLAFTER:
                case self::INSERTCHILDXMLBEFORE:
                case self::INSERTCHILDXML:
                case self::INSERTXMLAFTER:
                case self::INSERTXMLBEFORE:
                case self::INSTANCE:
                case self::INSTANCES:
                case self::INSTANTIABLE:
                case self::INSTANTLY:
                case self::INSTEAD:
                case self::INSTR2:
                case self::INSTR4:
                case self::INSTRB:
                case self::INSTRC:
                case self::INSTR:
                case self::INTEGER:
                case self::INTERLEAVED:
                case self::INTERMEDIATE:
                case self::INTERNAL_CONVERT:
                case self::INTERNAL_USE:
                case self::INTERPRETED:
                case self::INTERVAL:
                case self::INT:
                case self::INVALIDATE:
                case self::INVISIBLE:
                case self::IN_XQUERY:
                case self::ISOLATION:
                case self::ISOLATION_LEVEL:
                case self::ITERATE:
                case self::ITERATION_NUMBER:
                case self::JAVA:
                case self::JOB:
                case self::JOIN:
                case self::JSON_ARRAYAGG:
                case self::JSON_ARRAY:
                case self::JSON_EQUAL:
                case self::JSON_EXISTS2:
                case self::JSON_EXISTS:
                case self::JSONGET:
                case self::JSON:
                case self::JSON_OBJECTAGG:
                case self::JSON_OBJECT:
                case self::JSONPARSE:
                case self::JSON_QUERY:
                case self::JSON_SERIALIZE:
                case self::JSON_TABLE:
                case self::JSON_TEXTCONTAINS2:
                case self::JSON_TEXTCONTAINS:
                case self::JSON_VALUE:
                case self::KEEP_DUPLICATES:
                case self::KEEP:
                case self::KERBEROS:
                case self::KEY:
                case self::KEY_LENGTH:
                case self::KEYSIZE:
                case self::KEYS:
                case self::KEYSTORE:
                case self::KILL:
                case self::LABEL:
                case self::LANGUAGE:
                case self::LAST_DAY:
                case self::LAST:
                case self::LAST_VALUE:
                case self::LATERAL:
                case self::LAX:
                case self::LAYER:
                case self::LDAP_REGISTRATION_ENABLED:
                case self::LDAP_REGISTRATION:
                case self::LDAP_REG_SYNC_INTERVAL:
                case self::LEADING:
                case self::LEFT:
                case self::LENGTH2:
                case self::LENGTH4:
                case self::LENGTHB:
                case self::LENGTHC:
                case self::LENGTH:
                case self::LESS:
                case self::LEVEL:
                case self::LEVELS:
                case self::LIBRARY:
                case self::LIFECYCLE:
                case self::LIFE:
                case self::LIFETIME:
                case self::LIKE2:
                case self::LIKE4:
                case self::LIKEC:
                case self::LIKE_EXPAND:
                case self::LIMIT:
                case self::LINEAR:
                case self::LINK:
                case self::LIST:
                case self::LN:
                case self::LNNVL:
                case self::LOAD:
                case self::LOB:
                case self::LOBNVL:
                case self::LOBS:
                case self::LOCAL_INDEXES:
                case self::LOCAL:
                case self::LOCALTIME:
                case self::LOCALTIMESTAMP:
                case self::LOCATION:
                case self::LOCATOR:
                case self::LOCKED:
                case self::LOCKING:
                case self::LOGFILE:
                case self::LOGFILES:
                case self::LOGGING:
                case self::LOGICAL:
                case self::LOGICAL_READS_PER_CALL:
                case self::LOGICAL_READS_PER_SESSION:
                case self::LOG:
                case self::LOGMINING:
                case self::LOGOFF:
                case self::LOGON:
                case self::LOG_READ_ONLY_VIOLATIONS:
                case self::LONG:
                case self::LOOP:
                case self::LOWER:
                case self::LOW:
                case self::LPAD:
                case self::LTRIM:
                case self::MAIN:
                case self::MAKE_REF:
                case self::MANAGED:
                case self::MANAGE:
                case self::MANAGEMENT:
                case self::MANAGER:
                case self::MANUAL:
                case self::MAP:
                case self::MAPPING:
                case self::MASTER:
                case self::MATCHED:
                case self::MATCHES:
                case self::MATCH:
                case self::MATCH_NUMBER:
                case self::MATCH_RECOGNIZE:
                case self::MATERIALIZED:
                case self::MATERIALIZE:
                case self::MAXARCHLOGS:
                case self::MAXDATAFILES:
                case self::MAXEXTENTS:
                case self::MAXIMIZE:
                case self::MAXINSTANCES:
                case self::MAXLOGFILES:
                case self::MAXLOGHISTORY:
                case self::MAXLOGMEMBERS:
                case self::MAX_SHARED_TEMP_SIZE:
                case self::MAXSIZE:
                case self::MAXTRANS:
                case self::MAXVALUE:
                case self::MEASURE:
                case self::MEASURES:
                case self::MEDIUM:
                case self::MEMBER:
                case self::MEMCOMPRESS:
                case self::MEMORY:
                case self::MERGEACTIONS:
                case self::MERGE_AJ:
                case self::MERGE_CONST_ON:
                case self::MERGE:
                case self::MERGE_SJ:
                case self::METADATA:
                case self::METHOD:
                case self::MIGRATE:
                case self::MIGRATION:
                case self::MINEXTENTS:
                case self::MINIMIZE:
                case self::MINIMUM:
                case self::MINING:
                case self::MINUS_NULL:
                case self::MINUTE:
                case self::MINVALUE:
                case self::MIRRORCOLD:
                case self::MIRRORHOT:
                case self::MIRROR:
                case self::MLSLABEL:
                case self::MODEL_COMPILE_SUBQUERY:
                case self::MODEL_DONTVERIFY_UNIQUENESS:
                case self::MODEL_DYNAMIC_SUBQUERY:
                case self::MODEL_MIN_ANALYSIS:
                case self::MODEL:
                case self::MODEL_NB:
                case self::MODEL_NO_ANALYSIS:
                case self::MODEL_PBY:
                case self::MODEL_PUSH_REF:
                case self::MODEL_SV:
                case self::MODIFICATION:
                case self::MODIFY_COLUMN_TYPE:
                case self::MODIFY:
                case self::MOD:
                case self::MODULE:
                case self::MONITORING:
                case self::MONITOR:
                case self::MONTH:
                case self::MONTHS_BETWEEN:
                case self::MONTHS:
                case self::MOUNT:
                case self::MOUNTPATH:
                case self::MOVEMENT:
                case self::MOVE:
                case self::MULTIDIMENSIONAL:
                case self::MULTISET:
                case self::MV_MERGE:
                case self::NAMED:
                case self::NAME:
                case self::NAMESPACE:
                case self::NAN:
                case self::NANVL:
                case self::NATIONAL:
                case self::NATIVE_FULL_OUTER_JOIN:
                case self::NATIVE:
                case self::NATURAL:
                case self::NAV:
                case self::NCHAR_CS:
                case self::NCHAR:
                case self::NCHR:
                case self::NCLOB:
                case self::NEEDED:
                case self::NEG:
                case self::NESTED:
                case self::NESTED_TABLE_FAST_INSERT:
                case self::NESTED_TABLE_GET_REFS:
                case self::NESTED_TABLE_ID:
                case self::NESTED_TABLE_SET_REFS:
                case self::NESTED_TABLE_SET_SETID:
                case self::NETWORK:
                case self::NEVER:
                case self::NEW:
                case self::NEW_TIME:
                case self::NEXT_DAY:
                case self::NEXT:
                case self::NL_AJ:
                case self::NLJ_BATCHING:
                case self::NLJ_INDEX_FILTER:
                case self::NLJ_INDEX_SCAN:
                case self::NLJ_PREFETCH:
                case self::NLS_CALENDAR:
                case self::NLS_CHARACTERSET:
                case self::NLS_CHARSET_DECL_LEN:
                case self::NLS_CHARSET_ID:
                case self::NLS_CHARSET_NAME:
                case self::NLS_COMP:
                case self::NLS_CURRENCY:
                case self::NLS_DATE_FORMAT:
                case self::NLS_DATE_LANGUAGE:
                case self::NLS_INITCAP:
                case self::NLS_ISO_CURRENCY:
                case self::NL_SJ:
                case self::NLS_LANG:
                case self::NLS_LANGUAGE:
                case self::NLS_LENGTH_SEMANTICS:
                case self::NLS_LOWER:
                case self::NLS_NCHAR_CONV_EXCP:
                case self::NLS_NUMERIC_CHARACTERS:
                case self::NLS_SORT:
                case self::NLSSORT:
                case self::NLS_SPECIAL_CHARS:
                case self::NLS_TERRITORY:
                case self::NLS_UPPER:
                case self::NO_ACCESS:
                case self::NO_ADAPTIVE_PLAN:
                case self::NO_ANSI_REARCH:
                case self::NOAPPEND:
                case self::NOARCHIVELOG:
                case self::NOAUDIT:
                case self::NO_AUTO_REOPTIMIZE:
                case self::NO_BASETABLE_MULTIMV_REWRITE:
                case self::NO_BATCH_TABLE_ACCESS_BY_ROWID:
                case self::NO_BIND_AWARE:
                case self::NO_BUFFER:
                case self::NOCACHE:
                case self::NO_CARTESIAN:
                case self::NO_CHECK_ACL_REWRITE:
                case self::NO_CLUSTER_BY_ROWID:
                case self::NO_CLUSTERING:
                case self::NO_COALESCE_SQ:
                case self::NO_COMMON_DATA:
                case self::NO_CONNECT_BY_CB_WHR_ONLY:
                case self::NO_CONNECT_BY_COMBINE_SW:
                case self::NO_CONNECT_BY_COST_BASED:
                case self::NO_CONNECT_BY_ELIM_DUPS:
                case self::NO_CONNECT_BY_FILTERING:
                case self::NOCOPY:
                case self::NO_COST_XML_QUERY_REWRITE:
                case self::NO_CPU_COSTING:
                case self::NOCPU_COSTING:
                case self::NOCYCLE:
                case self::NO_DATA_SECURITY_REWRITE:
                case self::NO_DECORRELATE:
                case self::NODELAY:
                case self::NO_DOMAIN_INDEX_FILTER:
                case self::NO_DST_UPGRADE_INSERT_CONV:
                case self::NO_ELIM_GROUPBY:
                case self::NO_ELIMINATE_JOIN:
                case self::NO_ELIMINATE_OBY:
                case self::NO_ELIMINATE_OUTER_JOIN:
                case self::NOENTITYESCAPING:
                case self::NO_EXPAND_GSET_TO_UNION:
                case self::NO_EXPAND:
                case self::NO_EXPAND_TABLE:
                case self::NO_FACT:
                case self::NO_FACTORIZE_JOIN:
                case self::NO_FILTERING:
                case self::NOFORCE:
                case self::NO_FULL_OUTER_JOIN_TO_OUTER:
                case self::NO_GATHER_OPTIMIZER_STATISTICS:
                case self::NO_GBY_PUSHDOWN:
                case self::NOGUARANTEE:
                case self::NO_INDEX_FFS:
                case self::NO_INDEX:
                case self::NO_INDEX_SS:
                case self::NO_INMEMORY:
                case self::NO_INMEMORY_PRUNING:
                case self::NOKEEP:
                case self::NO_LOAD:
                case self::NOLOCAL:
                case self::NOLOGGING:
                case self::NOMAPPING:
                case self::NOMAXVALUE:
                case self::NO_MERGE:
                case self::NOMINIMIZE:
                case self::NOMINVALUE:
                case self::NO_MODEL_PUSH_REF:
                case self::NO_MONITORING:
                case self::NOMONITORING:
                case self::NO_MONITOR:
                case self::NO_MULTIMV_REWRITE:
                case self::NO_NATIVE_FULL_OUTER_JOIN:
                case self::NONBLOCKING:
                case self::NONEDITIONABLE:
                case self::NONE:
                case self::NO_NLJ_BATCHING:
                case self::NO_NLJ_PREFETCH:
                case self::NO:
                case self::NONSCHEMA:
                case self::NO_OBJECT_LINK:
                case self::NOORDER:
                case self::NO_ORDER_ROLLUPS:
                case self::NO_OUTER_JOIN_TO_ANTI:
                case self::NO_OUTER_JOIN_TO_INNER:
                case self::NOOVERRIDE:
                case self::NO_PARALLEL_INDEX:
                case self::NOPARALLEL_INDEX:
                case self::NO_PARALLEL:
                case self::NOPARALLEL:
                case self::NO_PARTIAL_COMMIT:
                case self::NO_PARTIAL_JOIN:
                case self::NO_PARTIAL_ROLLUP_PUSHDOWN:
                case self::NOPARTITION:
                case self::NO_PLACE_DISTINCT:
                case self::NO_PLACE_GROUP_BY:
                case self::NO_PQ_CONCURRENT_UNION:
                case self::NO_PQ_MAP:
                case self::NO_PQ_REPLICATE:
                case self::NO_PQ_SKEW:
                case self::NO_PRUNE_GSETS:
                case self::NO_PULL_PRED:
                case self::NO_PUSH_PRED:
                case self::NO_PUSH_SUBQ:
                case self::NO_PX_FAULT_TOLERANCE:
                case self::NO_PX_JOIN_FILTER:
                case self::NO_QKN_BUFF:
                case self::NO_QUERY_TRANSFORMATION:
                case self::NO_REF_CASCADE:
                case self::NORELOCATE:
                case self::NORELY:
                case self::NOREPAIR:
                case self::NOREPLAY:
                case self::NORESETLOGS:
                case self::NO_RESULT_CACHE:
                case self::NOREVERSE:
                case self::NO_REWRITE:
                case self::NOREWRITE:
                case self::NORMAL:
                case self::NO_ROOT_SW_FOR_LOCAL:
                case self::NOROWDEPENDENCIES:
                case self::NOSCHEMACHECK:
                case self::NOSEGMENT:
                case self::NO_SEMIJOIN:
                case self::NO_SEMI_TO_INNER:
                case self::NO_SET_TO_JOIN:
                case self::NOSORT:
                case self::NO_SQL_TRANSLATION:
                case self::NO_SQL_TUNE:
                case self::NO_STAR_TRANSFORMATION:
                case self::NO_STATEMENT_QUEUING:
                case self::NO_STATS_GSETS:
                case self::NOSTRICT:
                case self::NO_SUBQUERY_PRUNING:
                case self::NO_SUBSTRB_PAD:
                case self::NO_SWAP_JOIN_INPUTS:
                case self::NOSWITCH:
                case self::NO_TABLE_LOOKUP_BY_NL:
                case self::NO_TEMP_TABLE:
                case self::NOTHING:
                case self::NOTIFICATION:
                case self::NO_TRANSFORM_DISTINCT_AGG:
                case self::NO_UNNEST:
                case self::NO_USE_CUBE:
                case self::NO_USE_HASH_AGGREGATION:
                case self::NO_USE_HASH_GBY_FOR_PUSHDOWN:
                case self::NO_USE_HASH:
                case self::NO_USE_INVISIBLE_INDEXES:
                case self::NO_USE_MERGE:
                case self::NO_USE_NL:
                case self::NO_USE_VECTOR_AGGREGATION:
                case self::NOVALIDATE:
                case self::NO_VECTOR_TRANSFORM_DIMS:
                case self::NO_VECTOR_TRANSFORM_FACT:
                case self::NO_VECTOR_TRANSFORM:
                case self::NO_XDB_FASTPATH_INSERT:
                case self::NO_XML_DML_REWRITE:
                case self::NO_XMLINDEX_REWRITE_IN_SELECT:
                case self::NO_XMLINDEX_REWRITE:
                case self::NO_XML_QUERY_REWRITE:
                case self::NO_ZONEMAP:
                case self::NTH_VALUE:
                case self::NULLIF:
                case self::NULLS:
                case self::NUMBER:
                case self::NUMERIC:
                case self::NUM_INDEX_KEYS:
                case self::NUMTODSINTERVAL:
                case self::NUMTOYMINTERVAL:
                case self::NVARCHAR2:
                case self::NVL2:
                case self::OBJECT2XML:
                case self::OBJECT:
                case self::OBJ_ID:
                case self::OBJNO:
                case self::OBJNO_REUSE:
                case self::OCCURENCES:
                case self::OFFLINE:
                case self::OFF:
                case self::OFFSET:
                case self::OIDINDEX:
                case self::OID:
                case self::OLAP:
                case self::OLD:
                case self::OLD_PUSH_PRED:
                case self::OLS:
                case self::OLTP:
                case self::OMIT:
                case self::ONE:
                case self::ONLINE:
                case self::ONLY:
                case self::OPAQUE:
                case self::OPAQUE_TRANSFORM:
                case self::OPAQUE_XCANONICAL:
                case self::OPCODE:
                case self::OPEN:
                case self::OPERATIONS:
                case self::OPERATOR:
                case self::OPT_ESTIMATE:
                case self::OPTIMAL:
                case self::OPTIMIZE:
                case self::OPTIMIZER_FEATURES_ENABLE:
                case self::OPTIMIZER_GOAL:
                case self::OPT_PARAM:
                case self::ORA_BRANCH:
                case self::ORA_CHECK_ACL:
                case self::ORA_CHECK_PRIVILEGE:
                case self::ORA_CLUSTERING:
                case self::ORADATA:
                case self::ORADEBUG:
                case self::ORA_DST_AFFECTED:
                case self::ORA_DST_CONVERT:
                case self::ORA_DST_ERROR:
                case self::ORA_GET_ACLIDS:
                case self::ORA_GET_PRIVILEGES:
                case self::ORA_HASH:
                case self::ORA_INVOKING_USERID:
                case self::ORA_INVOKING_USER:
                case self::ORA_INVOKING_XS_USER_GUID:
                case self::ORA_INVOKING_XS_USER:
                case self::ORA_RAWCOMPARE:
                case self::ORA_RAWCONCAT:
                case self::ORA_ROWSCN:
                case self::ORA_ROWSCN_RAW:
                case self::ORA_ROWVERSION:
                case self::ORA_TABVERSION:
                case self::ORA_WRITE_TIME:
                case self::ORDERED:
                case self::ORDERED_PREDICATES:
                case self::ORDINALITY:
                case self::OR_EXPAND:
                case self::ORGANIZATION:
                case self::OR_PREDICATES:
                case self::OSERROR:
                case self::OTHER:
                case self::OUTER_JOIN_TO_ANTI:
                case self::OUTER_JOIN_TO_INNER:
                case self::OUTER:
                case self::OUTLINE_LEAF:
                case self::OUTLINE:
                case self::OUT_OF_LINE:
                case self::OUT:
                case self::OVERFLOW_NOMOVE:
                case self::OVERFLOW:
                case self::OVERLAPS:
                case self::OVER:
                case self::OVERRIDING:
                case self::OWNER:
                case self::OWNERSHIP:
                case self::OWN:
                case self::PACKAGE:
                case self::PACKAGES:
                case self::PARALLEL_ENABLE:
                case self::PARALLEL_INDEX:
                case self::PARALLEL:
                case self::PARAMETERS:
                case self::PARAM:
                case self::PARENT:
                case self::PARITY:
                case self::PARTIAL_JOIN:
                case self::PARTIALLY:
                case self::PARTIAL:
                case self::PARTIAL_ROLLUP_PUSHDOWN:
                case self::PARTITION_HASH:
                case self::PARTITION_LIST:
                case self::PARTITION:
                case self::PARTITION_RANGE:
                case self::PARTITIONS:
                case self::PARTNUMINST:
                case self::PASSING:
                case self::PASSWORD_GRACE_TIME:
                case self::PASSWORD_LIFE_TIME:
                case self::PASSWORD_LOCK_TIME:
                case self::PASSWORD:
                case self::PASSWORD_REUSE_MAX:
                case self::PASSWORD_REUSE_TIME:
                case self::PASSWORD_VERIFY_FUNCTION:
                case self::PAST:
                case self::PATCH:
                case self::PATH:
                case self::PATH_PREFIX:
                case self::PATHS:
                case self::PATTERN:
                case self::PBL_HS_BEGIN:
                case self::PBL_HS_END:
                case self::PCTINCREASE:
                case self::PCTTHRESHOLD:
                case self::PCTUSED:
                case self::PCTVERSION:
                case self::PENDING:
                case self::PERCENT_KEYWORD:
                case self::PERCENT_RANKM:
                case self::PERFORMANCE:
                case self::PERIOD_KEYWORD:
                case self::PERMANENT:
                case self::PERMISSION:
                case self::PERMUTE:
                case self::PER:
                case self::PFILE:
                case self::PHYSICAL:
                case self::PIKEY:
                case self::PIPELINED:
                case self::PIV_GB:
                case self::PIVOT:
                case self::PIV_SSF:
                case self::PLACE_DISTINCT:
                case self::PLACE_GROUP_BY:
                case self::PLAN:
                case self::PLSCOPE_SETTINGS:
                case self::PLS_INTEGER:
                case self::PLSQL_CCFLAGS:
                case self::PLSQL_CODE_TYPE:
                case self::PLSQL_DEBUG:
                case self::PLSQL_OPTIMIZE_LEVEL:
                case self::PLSQL_WARNINGS:
                case self::PLUGGABLE:
                case self::POINT:
                case self::POLICY:
                case self::POOL_16K:
                case self::POOL_2K:
                case self::POOL_32K:
                case self::POOL_4K:
                case self::POOL_8K:
                case self::POSITIVEN:
                case self::POSITIVE:
                case self::POST_TRANSACTION:
                case self::POWERMULTISET_BY_CARDINALITY:
                case self::POWERMULTISET:
                case self::POWER:
                case self::PQ_CONCURRENT_UNION:
                case self::PQ_DISTRIBUTE:
                case self::PQ_DISTRIBUTE_WINDOW:
                case self::PQ_FILTER:
                case self::PQ_MAP:
                case self::PQ_NOMAP:
                case self::PQ_REPLICATE:
                case self::PQ_SKEW:
                case self::PRAGMA:
                case self::PREBUILT:
                case self::PRECEDES:
                case self::PRECEDING:
                case self::PRECISION:
                case self::PRECOMPUTE_SUBQUERY:
                case self::PREDICATE_REORDERS:
                case self::PRELOAD:
                case self::PREPARE:
                case self::PRESENTNNV:
                case self::PRESENT:
                case self::PRESENTV:
                case self::PRESERVE_OID:
                case self::PRESERVE:
                case self::PRETTY:
                case self::PREVIOUS:
                case self::PREV:
                case self::PRIMARY:
                case self::PRINTBLOBTOCLOB:
                case self::PRIORITY:
                case self::PRIVATE:
                case self::PRIVATE_SGA:
                case self::PRIVILEGED:
                case self::PRIVILEGE:
                case self::PRIVILEGES:
                case self::PROCEDURAL:
                case self::PROCEDURE:
                case self::PROCESS:
                case self::PROFILE:
                case self::PROGRAM:
                case self::PROJECT:
                case self::PROPAGATE:
                case self::PROTECTED:
                case self::PROTECTION:
                case self::PROXY:
                case self::PRUNING:
                case self::PULL_PRED:
                case self::PURGE:
                case self::PUSH_PRED:
                case self::PUSH_SUBQ:
                case self::PX_FAULT_TOLERANCE:
                case self::PX_GRANULE:
                case self::PX_JOIN_FILTER:
                case self::QB_NAME:
                case self::QUERY_BLOCK:
                case self::QUERY:
                case self::QUEUE_CURR:
                case self::QUEUE:
                case self::QUEUE_ROWP:
                case self::QUIESCE:
                case self::QUORUM:
                case self::QUOTA:
                case self::RAISE:
                case self::RANDOM_LOCAL:
                case self::RANDOM:
                case self::RANGE:
                case self::RANKM:
                case self::RAPIDLY:
                case self::RAW:
                case self::RAWTOHEX:
                case self::RAWTONHEX:
                case self::RBA:
                case self::RBO_OUTLINE:
                case self::RDBA:
                case self::READ:
                case self::READS:
                case self::REALM:
                case self::REAL:
                case self::REBALANCE:
                case self::REBUILD:
                case self::RECORD:
                case self::RECORDS_PER_BLOCK:
                case self::RECOVERABLE:
                case self::RECOVER:
                case self::RECOVERY:
                case self::RECYCLEBIN:
                case self::RECYCLE:
                case self::REDACTION:
                case self::REDEFINE:
                case self::REDO:
                case self::REDUCED:
                case self::REDUNDANCY:
                case self::REF_CASCADE_CURSOR:
                case self::REFERENCED:
                case self::REFERENCE:
                case self::REFERENCES:
                case self::REFERENCING:
                case self::REF:
                case self::REFRESH:
                case self::REFTOHEX:
                case self::REGEXP_COUNT:
                case self::REGEXP_INSTR:
                case self::REGEXP_LIKE:
                case self::REGEXP_REPLACE:
                case self::REGEXP_SUBSTR:
                case self::REGISTER:
                case self::REGR_AVGX:
                case self::REGR_AVGY:
                case self::REGR_COUNT:
                case self::REGR_INTERCEPT:
                case self::REGR_R2:
                case self::REGR_SLOPE:
                case self::REGR_SXX:
                case self::REGR_SXY:
                case self::REGR_SYY:
                case self::REGULAR:
                case self::REJECT:
                case self::REKEY:
                case self::RELATIONAL:
                case self::RELOCATE:
                case self::RELY:
                case self::REMAINDER:
                case self::REMOTE_MAPPED:
                case self::REMOVE:
                case self::RENAME:
                case self::REPAIR:
                case self::REPEAT:
                case self::REPLACE:
                case self::REPLICATION:
                case self::REQUIRED:
                case self::RESETLOGS:
                case self::RESET:
                case self::RESIZE:
                case self::RESOLVE:
                case self::RESOLVER:
                case self::RESPECT:
                case self::RESTART:
                case self::RESTORE_AS_INTERVALS:
                case self::RESTORE:
                case self::RESTRICT_ALL_REF_CONS:
                case self::RESTRICTED:
                case self::RESTRICT_REFERENCES:
                case self::RESTRICT:
                case self::RESULT_CACHE:
                case self::RESULT:
                case self::RESUMABLE:
                case self::RESUME:
                case self::RETENTION:
                case self::RETRY_ON_ROW_CHANGE:
                case self::RETURNING:
                case self::RETURN:
                case self::REUSE:
                case self::REVERSE:
                case self::REWRITE_OR_ERROR:
                case self::REWRITE:
                case self::RIGHT:
                case self::ROLE:
                case self::ROLESET:
                case self::ROLES:
                case self::ROLLBACK:
                case self::ROLLING:
                case self::ROLLUP:
                case self::ROWDEPENDENCIES:
                case self::ROWID_MAPPING_TABLE:
                case self::ROWID:
                case self::ROWIDTOCHAR:
                case self::ROWIDTONCHAR:
                case self::ROW_LENGTH:
                case self::ROWNUM:
                case self::ROW:
                case self::ROWS:
                case self::RPAD:
                case self::RTRIM:
                case self::RULE:
                case self::RULES:
                case self::RUNNING:
                case self::SALT:
                case self::SAMPLE:
                case self::SAVE_AS_INTERVALS:
                case self::SAVEPOINT:
                case self::SAVE:
                case self::SB4:
                case self::SCALE_ROWS:
                case self::SCALE:
                case self::SCAN_INSTANCES:
                case self::SCAN:
                case self::SCHEDULER:
                case self::SCHEMACHECK:
                case self::SCHEMA:
                case self::SCN_ASCENDING:
                case self::SCN:
                case self::SCOPE:
                case self::SCRUB:
                case self::SD_ALL:
                case self::SD_INHIBIT:
                case self::SDO_GEOM_MBR:
                case self::SD_SHOW:
                case self::SEARCH:
                case self::SECOND:
                case self::SECRET:
                case self::SECUREFILE_DBA:
                case self::SECUREFILE:
                case self::SECURITY:
                case self::SEED:
                case self::SEG_BLOCK:
                case self::SEG_FILE:
                case self::SEGMENT:
                case self::SELECTIVITY:
                case self::SELF:
                case self::SEMIJOIN_DRIVER:
                case self::SEMIJOIN:
                case self::SEMI_TO_INNER:
                case self::SEQUENCED:
                case self::SEQUENCE:
                case self::SEQUENTIAL:
                case self::SERIALIZABLE:
                case self::SERIALLY_REUSABLE:
                case self::SERIAL:
                case self::SERVERERROR:
                case self::SERVICE_NAME_CONVERT:
                case self::SERVICES:
                case self::SESSION_CACHED_CURSORS:
                case self::SESSION:
                case self::SESSIONS_PER_USER:
                case self::SESSIONTIMEZONE:
                case self::SESSIONTZNAME:
                case self::SET:
                case self::SETS:
                case self::SETTINGS:
                case self::SET_TO_JOIN:
                case self::SEVERE:
                case self::SHARED_POOL:
                case self::SHARED:
                case self::SHARING:
                case self::SHELFLIFE:
                case self::SHOW:
                case self::SHRINK:
                case self::SHUTDOWN:
                case self::SIBLINGS:
                case self::SID:
                case self::SIGNAL_COMPONENT:
                case self::SIGNAL_FUNCTION:
                case self::SIGN:
                case self::SIGNTYPE:
                case self::SIMPLE_INTEGER:
                case self::SIMPLE:
                case self::SINGLE:
                case self::SINGLETASK:
                case self::SINH:
                case self::SIN:
                case self::SKIP_EXT_OPTIMIZER:
                case self::SKIP_:
                case self::SKIP_UNQ_UNUSABLE_IDX:
                case self::SKIP_UNUSABLE_INDEXES:
                case self::SMALLFILE:
                case self::SMALLINT:
                case self::SNAPSHOT:
                case self::SOME:
                case self::SORT:
                case self::SOUNDEX:
                case self::SOURCE_FILE_DIRECTORY:
                case self::SOURCE_FILE_NAME_CONVERT:
                case self::SOURCE:
                case self::SPACE_KEYWORD:
                case self::SPECIFICATION:
                case self::SPFILE:
                case self::SPLIT:
                case self::SPREADSHEET:
                case self::SQLDATA:
                case self::SQLERROR:
                case self::SQLLDR:
                case self::SQL:
                case self::SQL_TRACE:
                case self::SQL_TRANSLATION_PROFILE:
                case self::SQRT:
                case self::STALE:
                case self::STANDALONE:
                case self::STANDARD_HASH:
                case self::STANDBY_MAX_DATA_DELAY:
                case self::STANDBYS:
                case self::STANDBY:
                case self::STAR:
                case self::STAR_TRANSFORMATION:
                case self::STARTUP:
                case self::STATEMENT_ID:
                case self::STATEMENT_QUEUING:
                case self::STATEMENTS:
                case self::STATEMENT:
                case self::STATE:
                case self::STATIC:
                case self::STATISTICS:
                case self::STATS_BINOMIAL_TEST:
                case self::STATS_CROSSTAB:
                case self::STATS_F_TEST:
                case self::STATS_KS_TEST:
                case self::STATS_MODE:
                case self::STATS_MW_TEST:
                case self::STATS_ONE_WAY_ANOVA:
                case self::STATS_T_TEST_INDEP:
                case self::STATS_T_TEST_INDEPU:
                case self::STATS_T_TEST_ONE:
                case self::STATS_T_TEST_PAIRED:
                case self::STATS_WSR_TEST:
                case self::STDDEV_POP:
                case self::STDDEV_SAMP:
                case self::STOP:
                case self::STORAGE:
                case self::STORE:
                case self::STREAMS:
                case self::STREAM:
                case self::STRICT:
                case self::STRING:
                case self::STRIPE_COLUMNS:
                case self::STRIPE_WIDTH:
                case self::STRIP:
                case self::STRUCTURE:
                case self::SUBMULTISET:
                case self::SUBPARTITION_REL:
                case self::SUBPARTITIONS:
                case self::SUBPARTITION:
                case self::SUBQUERIES:
                case self::SUBQUERY_PRUNING:
                case self::SUBSCRIBE:
                case self::SUBSET:
                case self::SUBSTITUTABLE:
                case self::SUBSTR2:
                case self::SUBSTR4:
                case self::SUBSTRB:
                case self::SUBSTRC:
                case self::SUBTYPE:
                case self::SUCCESSFUL:
                case self::SUCCESS:
                case self::SUMMARY:
                case self::SUPPLEMENTAL:
                case self::SUSPEND:
                case self::SWAP_JOIN_INPUTS:
                case self::SWITCHOVER:
                case self::SWITCH:
                case self::SYNCHRONOUS:
                case self::SYNC:
                case self::SYSASM:
                case self::SYS_AUDIT:
                case self::SYSAUX:
                case self::SYSBACKUP:
                case self::SYS_CHECKACL:
                case self::SYS_CHECK_PRIVILEGE:
                case self::SYS_CONNECT_BY_PATH:
                case self::SYS_CONTEXT:
                case self::SYSDATE:
                case self::SYSDBA:
                case self::SYS_DBURIGEN:
                case self::SYSDG:
                case self::SYS_DL_CURSOR:
                case self::SYS_DM_RXFORM_CHR:
                case self::SYS_DM_RXFORM_NUM:
                case self::SYS_DOM_COMPARE:
                case self::SYS_DST_PRIM2SEC:
                case self::SYS_DST_SEC2PRIM:
                case self::SYS_ET_BFILE_TO_RAW:
                case self::SYS_ET_BLOB_TO_IMAGE:
                case self::SYS_ET_IMAGE_TO_BLOB:
                case self::SYS_ET_RAW_TO_BFILE:
                case self::SYS_EXTPDTXT:
                case self::SYS_EXTRACT_UTC:
                case self::SYS_FBT_INSDEL:
                case self::SYS_FILTER_ACLS:
                case self::SYS_FNMATCHES:
                case self::SYS_FNREPLACE:
                case self::SYS_GET_ACLIDS:
                case self::SYS_GET_COL_ACLIDS:
                case self::SYS_GET_PRIVILEGES:
                case self::SYS_GETTOKENID:
                case self::SYS_GETXTIVAL:
                case self::SYS_GUID:
                case self::SYSGUID:
                case self::SYSKM:
                case self::SYS_MAKE_XMLNODEID:
                case self::SYS_MAKEXML:
                case self::SYS_MKXMLATTR:
                case self::SYS_MKXTI:
                case self::SYSOBJ:
                case self::SYS_OP_ADT2BIN:
                case self::SYS_OP_ADTCONS:
                case self::SYS_OP_ALSCRVAL:
                case self::SYS_OP_ATG:
                case self::SYS_OP_BIN2ADT:
                case self::SYS_OP_BITVEC:
                case self::SYS_OP_BL2R:
                case self::SYS_OP_BLOOM_FILTER_LIST:
                case self::SYS_OP_BLOOM_FILTER:
                case self::SYS_OP_C2C:
                case self::SYS_OP_CAST:
                case self::SYS_OP_CEG:
                case self::SYS_OP_CL2C:
                case self::SYS_OP_COMBINED_HASH:
                case self::SYS_OP_COMP:
                case self::SYS_OP_CONVERT:
                case self::SYS_OP_COUNTCHG:
                case self::SYS_OP_CSCONV:
                case self::SYS_OP_CSCONVTEST:
                case self::SYS_OP_CSR:
                case self::SYS_OP_CSX_PATCH:
                case self::SYS_OP_CYCLED_SEQ:
                case self::SYS_OP_DECOMP:
                case self::SYS_OP_DESCEND:
                case self::SYS_OP_DISTINCT:
                case self::SYS_OP_DRA:
                case self::SYS_OP_DUMP:
                case self::SYS_OP_DV_CHECK:
                case self::SYS_OP_ENFORCE_NOT_NULL:
                case self::SYSOPER:
                case self::SYS_OP_EXTRACT:
                case self::SYS_OP_GROUPING:
                case self::SYS_OP_GUID:
                case self::SYS_OP_HASH:
                case self::SYS_OP_IIX:
                case self::SYS_OP_ITR:
                case self::SYS_OP_KEY_VECTOR_CREATE:
                case self::SYS_OP_KEY_VECTOR_FILTER_LIST:
                case self::SYS_OP_KEY_VECTOR_FILTER:
                case self::SYS_OP_KEY_VECTOR_SUCCEEDED:
                case self::SYS_OP_KEY_VECTOR_USE:
                case self::SYS_OP_LBID:
                case self::SYS_OP_LOBLOC2BLOB:
                case self::SYS_OP_LOBLOC2CLOB:
                case self::SYS_OP_LOBLOC2ID:
                case self::SYS_OP_LOBLOC2NCLOB:
                case self::SYS_OP_LOBLOC2TYP:
                case self::SYS_OP_LSVI:
                case self::SYS_OP_LVL:
                case self::SYS_OP_MAKEOID:
                case self::SYS_OP_MAP_NONNULL:
                case self::SYS_OP_MSR:
                case self::SYS_OP_NICOMBINE:
                case self::SYS_OP_NIEXTRACT:
                case self::SYS_OP_NII:
                case self::SYS_OP_NIX:
                case self::SYS_OP_NOEXPAND:
                case self::SYS_OP_NTCIMG:
                case self::SYS_OP_NUMTORAW:
                case self::SYS_OP_OIDVALUE:
                case self::SYS_OP_OPNSIZE:
                case self::SYS_OP_PAR_1:
                case self::SYS_OP_PARGID_1:
                case self::SYS_OP_PARGID:
                case self::SYS_OP_PAR:
                case self::SYS_OP_PART_ID:
                case self::SYS_OP_PIVOT:
                case self::SYS_OP_R2O:
                case self::SYS_OP_RAWTONUM:
                case self::SYS_OP_RDTM:
                case self::SYS_OP_REF:
                case self::SYS_OP_RMTD:
                case self::SYS_OP_ROWIDTOOBJ:
                case self::SYS_OP_RPB:
                case self::SYS_OPTLOBPRBSC:
                case self::SYS_OP_TOSETID:
                case self::SYS_OP_TPR:
                case self::SYS_OP_TRTB:
                case self::SYS_OPTXICMP:
                case self::SYS_OPTXQCASTASNQ:
                case self::SYS_OP_UNDESCEND:
                case self::SYS_OP_VECAND:
                case self::SYS_OP_VECBIT:
                case self::SYS_OP_VECOR:
                case self::SYS_OP_VECXOR:
                case self::SYS_OP_VERSION:
                case self::SYS_OP_VREF:
                case self::SYS_OP_VVD:
                case self::SYS_OP_XMLCONS_FOR_CSX:
                case self::SYS_OP_XPTHATG:
                case self::SYS_OP_XPTHIDX:
                case self::SYS_OP_XPTHOP:
                case self::SYS_OP_XTXT2SQLT:
                case self::SYS_OP_ZONE_ID:
                case self::SYS_ORDERKEY_DEPTH:
                case self::SYS_ORDERKEY_MAXCHILD:
                case self::SYS_ORDERKEY_PARENT:
                case self::SYS_PARALLEL_TXN:
                case self::SYS_PATHID_IS_ATTR:
                case self::SYS_PATHID_IS_NMSPC:
                case self::SYS_PATHID_LASTNAME:
                case self::SYS_PATHID_LASTNMSPC:
                case self::SYS_PATH_REVERSE:
                case self::SYS_PXQEXTRACT:
                case self::SYS_RAW_TO_XSID:
                case self::SYS_RID_ORDER:
                case self::SYS_ROW_DELTA:
                case self::SYS_SC_2_XMLT:
                case self::SYS_SYNRCIREDO:
                case self::SYSTEM_DEFINED:
                case self::SYSTEM:
                case self::SYSTIMESTAMP:
                case self::SYS_TYPEID:
                case self::SYS_UMAKEXML:
                case self::SYS_XMLANALYZE:
                case self::SYS_XMLCONTAINS:
                case self::SYS_XMLCONV:
                case self::SYS_XMLEXNSURI:
                case self::SYS_XMLGEN:
                case self::SYS_XMLI_LOC_ISNODE:
                case self::SYS_XMLI_LOC_ISTEXT:
                case self::SYS_XMLINSTR:
                case self::SYS_XMLLOCATOR_GETSVAL:
                case self::SYS_XMLNODEID_GETCID:
                case self::SYS_XMLNODEID_GETLOCATOR:
                case self::SYS_XMLNODEID_GETOKEY:
                case self::SYS_XMLNODEID_GETPATHID:
                case self::SYS_XMLNODEID_GETPTRID:
                case self::SYS_XMLNODEID_GETRID:
                case self::SYS_XMLNODEID_GETSVAL:
                case self::SYS_XMLNODEID_GETTID:
                case self::SYS_XMLNODEID:
                case self::SYS_XMLT_2_SC:
                case self::SYS_XMLTRANSLATE:
                case self::SYS_XMLTYPE2SQL:
                case self::SYS_XQ_ASQLCNV:
                case self::SYS_XQ_ATOMCNVCHK:
                case self::SYS_XQBASEURI:
                case self::SYS_XQCASTABLEERRH:
                case self::SYS_XQCODEP2STR:
                case self::SYS_XQCODEPEQ:
                case self::SYS_XQCON2SEQ:
                case self::SYS_XQCONCAT:
                case self::SYS_XQDELETE:
                case self::SYS_XQDFLTCOLATION:
                case self::SYS_XQDOC:
                case self::SYS_XQDOCURI:
                case self::SYS_XQDURDIV:
                case self::SYS_XQED4URI:
                case self::SYS_XQENDSWITH:
                case self::SYS_XQERRH:
                case self::SYS_XQERR:
                case self::SYS_XQESHTMLURI:
                case self::SYS_XQEXLOBVAL:
                case self::SYS_XQEXSTWRP:
                case self::SYS_XQEXTRACT:
                case self::SYS_XQEXTRREF:
                case self::SYS_XQEXVAL:
                case self::SYS_XQFB2STR:
                case self::SYS_XQFNBOOL:
                case self::SYS_XQFNCMP:
                case self::SYS_XQFNDATIM:
                case self::SYS_XQFNLNAME:
                case self::SYS_XQFNNM:
                case self::SYS_XQFNNSURI:
                case self::SYS_XQFNPREDTRUTH:
                case self::SYS_XQFNQNM:
                case self::SYS_XQFNROOT:
                case self::SYS_XQFORMATNUM:
                case self::SYS_XQFTCONTAIN:
                case self::SYS_XQFUNCR:
                case self::SYS_XQGETCONTENT:
                case self::SYS_XQINDXOF:
                case self::SYS_XQINSERT:
                case self::SYS_XQINSPFX:
                case self::SYS_XQIRI2URI:
                case self::SYS_XQLANG:
                case self::SYS_XQLLNMFRMQNM:
                case self::SYS_XQMKNODEREF:
                case self::SYS_XQNILLED:
                case self::SYS_XQNODENAME:
                case self::SYS_XQNORMSPACE:
                case self::SYS_XQNORMUCODE:
                case self::SYS_XQ_NRNG:
                case self::SYS_XQNSP4PFX:
                case self::SYS_XQNSPFRMQNM:
                case self::SYS_XQPFXFRMQNM:
                case self::SYS_XQ_PKSQL2XML:
                case self::SYS_XQPOLYABS:
                case self::SYS_XQPOLYADD:
                case self::SYS_XQPOLYCEL:
                case self::SYS_XQPOLYCSTBL:
                case self::SYS_XQPOLYCST:
                case self::SYS_XQPOLYDIV:
                case self::SYS_XQPOLYFLR:
                case self::SYS_XQPOLYMOD:
                case self::SYS_XQPOLYMUL:
                case self::SYS_XQPOLYRND:
                case self::SYS_XQPOLYSQRT:
                case self::SYS_XQPOLYSUB:
                case self::SYS_XQPOLYUMUS:
                case self::SYS_XQPOLYUPLS:
                case self::SYS_XQPOLYVEQ:
                case self::SYS_XQPOLYVGE:
                case self::SYS_XQPOLYVGT:
                case self::SYS_XQPOLYVLE:
                case self::SYS_XQPOLYVLT:
                case self::SYS_XQPOLYVNE:
                case self::SYS_XQREF2VAL:
                case self::SYS_XQRENAME:
                case self::SYS_XQREPLACE:
                case self::SYS_XQRESVURI:
                case self::SYS_XQRNDHALF2EVN:
                case self::SYS_XQRSLVQNM:
                case self::SYS_XQRYENVPGET:
                case self::SYS_XQRYVARGET:
                case self::SYS_XQRYWRP:
                case self::SYS_XQSEQ2CON4XC:
                case self::SYS_XQSEQ2CON:
                case self::SYS_XQSEQDEEPEQ:
                case self::SYS_XQSEQINSB:
                case self::SYS_XQSEQRM:
                case self::SYS_XQSEQRVS:
                case self::SYS_XQSEQSUB:
                case self::SYS_XQSEQTYPMATCH:
                case self::SYS_XQSTARTSWITH:
                case self::SYS_XQSTATBURI:
                case self::SYS_XQSTR2CODEP:
                case self::SYS_XQSTRJOIN:
                case self::SYS_XQSUBSTRAFT:
                case self::SYS_XQSUBSTRBEF:
                case self::SYS_XQTOKENIZE:
                case self::SYS_XQTREATAS:
                case self::SYS_XQ_UPKXML2SQL:
                case self::SYS_XQXFORM:
                case self::SYS_XSID_TO_RAW:
                case self::SYS_ZMAP_FILTER:
                case self::SYS_ZMAP_REFRESH:
                case self::TABLE_LOOKUP_BY_NL:
                case self::TABLESPACE_NO:
                case self::TABLESPACE:
                case self::TABLES:
                case self::TABLE_STATS:
                case self::TABLE:
                case self::TABNO:
                case self::TAG:
                case self::TANH:
                case self::TAN:
                case self::TBLORIDXPARTNUM:
                case self::TEMPFILE:
                case self::TEMPLATE:
                case self::TEMPORARY:
                case self::TEMP_TABLE:
                case self::TEST:
                case self::TEXT:
                case self::THAN:
                case self::THEN:
                case self::THE:
                case self::THREAD:
                case self::THROUGH:
                case self::TIER:
                case self::TIES:
                case self::TIMEOUT:
                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                case self::TIMESTAMP:
                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                case self::TIMESTAMP_UNCONSTRAINED:
                case self::TIMES:
                case self::TIME:
                case self::TIMEZONE_ABBR:
                case self::TIMEZONE_HOUR:
                case self::TIMEZONE_MINUTE:
                case self::TIMEZONE_OFFSET:
                case self::TIMEZONE_REGION:
                case self::TIME_ZONE:
                case self::TIV_GB:
                case self::TIV_SSF:
                case self::TO_ACLID:
                case self::TO_BINARY_DOUBLE:
                case self::TO_BINARY_FLOAT:
                case self::TO_BLOB:
                case self::TO_CLOB:
                case self::TO_DSINTERVAL:
                case self::TO_LOB:
                case self::TO_MULTI_BYTE:
                case self::TO_NCHAR:
                case self::TO_NCLOB:
                case self::TO_NUMBER:
                case self::TOPLEVEL:
                case self::TO_SINGLE_BYTE:
                case self::TO_TIMESTAMP:
                case self::TO_TIMESTAMP_TZ:
                case self::TO_TIME:
                case self::TO_TIME_TZ:
                case self::TO_YMINTERVAL:
                case self::TRACE:
                case self::TRACING:
                case self::TRACKING:
                case self::TRAILING:
                case self::TRANSACTION:
                case self::TRANSFORM_DISTINCT_AGG:
                case self::TRANSITIONAL:
                case self::TRANSITION:
                case self::TRANSLATE:
                case self::TRANSLATION:
                case self::TREAT:
                case self::TRIGGERS:
                case self::TRIGGER:
                case self::TRUE:
                case self::TRUNCATE:
                case self::TRUNC:
                case self::TRUSTED:
                case self::TRUST:
                case self::TUNING:
                case self::TX:
                case self::TYPES:
                case self::TYPE:
                case self::TZ_OFFSET:
                case self::UB2:
                case self::UBA:
                case self::UCS2:
                case self::UID:
                case self::UNARCHIVED:
                case self::UNBOUNDED:
                case self::UNBOUND:
                case self::UNCONDITIONAL:
                case self::UNDER:
                case self::UNDO:
                case self::UNDROP:
                case self::UNIFORM:
                case self::UNISTR:
                case self::UNLIMITED:
                case self::UNLOAD:
                case self::UNLOCK:
                case self::UNMATCHED:
                case self::UNNEST_INNERJ_DISTINCT_VIEW:
                case self::UNNEST_NOSEMIJ_NODISTINCTVIEW:
                case self::UNNEST_SEMIJ_VIEW:
                case self::UNNEST:
                case self::UNPACKED:
                case self::UNPIVOT:
                case self::UNPLUG:
                case self::UNPROTECTED:
                case self::UNQUIESCE:
                case self::UNRECOVERABLE:
                case self::UNRESTRICTED:
                case self::UNSUBSCRIBE:
                case self::UNTIL:
                case self::UNUSABLE:
                case self::UNUSED:
                case self::UPDATABLE:
                case self::UPDATED:
                case self::UPDATEXML:
                case self::UPD_INDEXES:
                case self::UPD_JOININDEX:
                case self::UPGRADE:
                case self::UPPER:
                case self::UPSERT:
                case self::UROWID:
                case self::USABLE:
                case self::USAGE:
                case self::USE_ANTI:
                case self::USE_CONCAT:
                case self::USE_CUBE:
                case self::USE_HASH_AGGREGATION:
                case self::USE_HASH_GBY_FOR_PUSHDOWN:
                case self::USE_HASH:
                case self::USE_HIDDEN_PARTITIONS:
                case self::USE_INVISIBLE_INDEXES:
                case self::USE_MERGE_CARTESIAN:
                case self::USE_MERGE:
                case self::USE_NL:
                case self::USE_NL_WITH_INDEX:
                case self::USE_PRIVATE_OUTLINES:
                case self::USER_DATA:
                case self::USER_DEFINED:
                case self::USERENV:
                case self::USERGROUP:
                case self::USER_RECYCLEBIN:
                case self::USERS:
                case self::USER_TABLESPACES:
                case self::USER:
                case self::USE_SEMI:
                case self::USE_STORED_OUTLINES:
                case self::USE_TTT_FOR_GSETS:
                case self::USE:
                case self::USE_VECTOR_AGGREGATION:
                case self::USE_WEAK_NAME_RESL:
                case self::USING_NO_EXPAND:
                case self::USING:
                case self::UTF16BE:
                case self::UTF16LE:
                case self::UTF32:
                case self::UTF8:
                case self::V1:
                case self::V2:
                case self::VALIDATE:
                case self::VALIDATION:
                case self::VALID_TIME_END:
                case self::VALUE:
                case self::VARCHAR2:
                case self::VARCHAR:
                case self::VARIABLE:
                case self::VAR_POP:
                case self::VARRAYS:
                case self::VARRAY:
                case self::VAR_SAMP:
                case self::VARYING:
                case self::VECTOR_READ_TRACE:
                case self::VECTOR_READ:
                case self::VECTOR_TRANSFORM_DIMS:
                case self::VECTOR_TRANSFORM_FACT:
                case self::VECTOR_TRANSFORM:
                case self::VERIFIER:
                case self::VERIFY:
                case self::VERSIONING:
                case self::VERSIONS_ENDSCN:
                case self::VERSIONS_ENDTIME:
                case self::VERSIONS_OPERATION:
                case self::VERSIONS_STARTSCN:
                case self::VERSIONS_STARTTIME:
                case self::VERSIONS:
                case self::VERSIONS_XID:
                case self::VERSION:
                case self::VIOLATION:
                case self::VIRTUAL:
                case self::VISIBILITY:
                case self::VISIBLE:
                case self::VOLUME:
                case self::VSIZE:
                case self::WAIT:
                case self::WALLET:
                case self::WARNING:
                case self::WEEKS:
                case self::WEEK:
                case self::WELLFORMED:
                case self::WHENEVER:
                case self::WHEN:
                case self::WHILE:
                case self::WHITESPACE:
                case self::WIDTH_BUCKET:
                case self::WITHIN:
                case self::WITHOUT:
                case self::WITH_PLSQL:
                case self::WORK:
                case self::WRAPPED:
                case self::WRAPPER:
                case self::WRITE:
                case self::XDB_FASTPATH_INSERT:
                case self::X_DYN_PRUNE:
                case self::XID:
                case self::XML2OBJECT:
                case self::XMLAGG:
                case self::XMLATTRIBUTES:
                case self::XMLCAST:
                case self::XMLCDATA:
                case self::XMLCOLATTVAL:
                case self::XMLCOMMENT:
                case self::XMLCONCAT:
                case self::XMLDIFF:
                case self::XML_DML_RWT_STMT:
                case self::XMLELEMENT:
                case self::XMLEXISTS2:
                case self::XMLEXISTS:
                case self::XMLFOREST:
                case self::XMLINDEX_REWRITE_IN_SELECT:
                case self::XMLINDEX_REWRITE:
                case self::XMLINDEX_SEL_IDX_TBL:
                case self::XMLISNODE:
                case self::XMLISVALID:
                case self::XMLNAMESPACES:
                case self::XMLPARSE:
                case self::XMLPATCH:
                case self::XMLPI:
                case self::XMLQUERYVAL:
                case self::XMLQUERY:
                case self::XMLROOT:
                case self::XMLSCHEMA:
                case self::XMLSERIALIZE:
                case self::XMLTABLE:
                case self::XMLTRANSFORMBLOB:
                case self::XMLTRANSFORM:
                case self::XMLTYPE:
                case self::XML:
                case self::XPATHTABLE:
                case self::XS_SYS_CONTEXT:
                case self::XS:
                case self::YEARS:
                case self::YEAR:
                case self::YES:
                case self::YMINTERVAL_UNCONSTRAINED:
                case self::ZONEMAP:
                case self::ZONE:
                case self::PREDICTION:
                case self::PREDICTION_BOUNDS:
                case self::PREDICTION_COST:
                case self::PREDICTION_DETAILS:
                case self::PREDICTION_PROBABILITY:
                case self::PREDICTION_SET:
                case self::CUME_DIST:
                case self::DENSE_RANK:
                case self::LISTAGG:
                case self::PERCENT_RANK:
                case self::PERCENTILE_CONT:
                case self::PERCENTILE_DISC:
                case self::RANK:
                case self::AVG:
                case self::CORR:
                case self::COVAR_:
                case self::LAG:
                case self::LEAD:
                case self::MAX:
                case self::MEDIAN:
                case self::MIN:
                case self::NTILE:
                case self::NVL:
                case self::RATIO_TO_REPORT:
                case self::REGR_:
                case self::ROUND:
                case self::ROW_NUMBER:
                case self::SUBSTR:
                case self::TO_CHAR:
                case self::TRIM:
                case self::SUM:
                case self::STDDEV:
                case self::VAR_:
                case self::VARIANCE:
                case self::LEAST:
                case self::GREATEST:
                case self::TO_DATE:
                case self::PERIOD:
                case self::DELIMITED_ID:
                case self::INTRODUCER:
                case self::REGULAR_ID:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11182);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::INTRODUCER) {
                        $this->setState(11180);
                        $this->match(self::INTRODUCER);
                        $this->setState(11181);
                        $this->char_set_name();
                    }
                    $this->setState(11184);
                    $this->id_expression();
                    $this->setState(11187);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1540, $this->ctx)) {
                        case 1:
                            $this->setState(11185);
                            $this->match(self::PERIOD);
                            $this->setState(11186);
                            $this->id_expression();
                            break;
                    }
                    break;

                case self::BINDVAR:
                case self::COLON:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11189);
                    $this->bind_variable();
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function index_name(): Context\Index_nameContext
    {
        $localContext = new Context\Index_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1414, self::RULE_index_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11192);
            $this->identifier();
            $this->setState(11195);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1542, $this->ctx)) {
                case 1:
                    $this->setState(11193);
                    $this->match(self::PERIOD);
                    $this->setState(11194);
                    $this->id_expression();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function cursor_name(): Context\Cursor_nameContext
    {
        $localContext = new Context\Cursor_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1416, self::RULE_cursor_name);

        try {
            $this->setState(11199);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::ABORT:
                case self::ABS:
                case self::ACCESS:
                case self::ACCESSED:
                case self::ACCOUNT:
                case self::ACL:
                case self::ACOS:
                case self::ACTION:
                case self::ACTIONS:
                case self::ACTIVATE:
                case self::ACTIVE:
                case self::ACTIVE_COMPONENT:
                case self::ACTIVE_DATA:
                case self::ACTIVE_FUNCTION:
                case self::ACTIVE_TAG:
                case self::ACTIVITY:
                case self::ADAPTIVE_PLAN:
                case self::ADD:
                case self::ADD_COLUMN:
                case self::ADD_GROUP:
                case self::ADD_MONTHS:
                case self::ADJ_DATE:
                case self::ADMIN:
                case self::ADMINISTER:
                case self::ADMINISTRATOR:
                case self::ADVANCED:
                case self::ADVISE:
                case self::ADVISOR:
                case self::AFD_DISKSTRING:
                case self::AFTER:
                case self::AGENT:
                case self::AGGREGATE:
                case self::A_LETTER:
                case self::ALIAS:
                case self::ALLOCATE:
                case self::ALLOW:
                case self::ALL_ROWS:
                case self::ALWAYS:
                case self::ANALYZE:
                case self::ANCILLARY:
                case self::AND_EQUAL:
                case self::ANOMALY:
                case self::ANSI_REARCH:
                case self::ANTIJOIN:
                case self::ANYSCHEMA:
                case self::APPEND:
                case self::APPENDCHILDXML:
                case self::APPEND_VALUES:
                case self::APPLICATION:
                case self::APPLY:
                case self::APPROX_COUNT_DISTINCT:
                case self::ARCHIVAL:
                case self::ARCHIVE:
                case self::ARCHIVED:
                case self::ARCHIVELOG:
                case self::ARRAY:
                case self::ASCII:
                case self::ASCIISTR:
                case self::ASIN:
                case self::ASIS:
                case self::ASSEMBLY:
                case self::ASSIGN:
                case self::ASSOCIATE:
                case self::ASYNC:
                case self::ASYNCHRONOUS:
                case self::ATAN2:
                case self::ATAN:
                case self::AT:
                case self::ATTRIBUTE:
                case self::ATTRIBUTES:
                case self::AUTHENTICATED:
                case self::AUTHENTICATION:
                case self::AUTHID:
                case self::AUTHORIZATION:
                case self::AUTOALLOCATE:
                case self::AUTO:
                case self::AUTOEXTEND:
                case self::AUTO_LOGIN:
                case self::AUTOMATIC:
                case self::AUTONOMOUS_TRANSACTION:
                case self::AUTO_REOPTIMIZE:
                case self::AVAILABILITY:
                case self::AVRO:
                case self::BACKGROUND:
                case self::BACKUP:
                case self::BASIC:
                case self::BASICFILE:
                case self::BATCH:
                case self::BATCHSIZE:
                case self::BATCH_TABLE_ACCESS_BY_ROWID:
                case self::BECOME:
                case self::BEFORE:
                case self::BEGIN:
                case self::BEGINNING:
                case self::BEGIN_OUTLINE_DATA:
                case self::BEHALF:
                case self::BEQUEATH:
                case self::BFILE:
                case self::BFILENAME:
                case self::BIGFILE:
                case self::BINARY:
                case self::BINARY_DOUBLE:
                case self::BINARY_DOUBLE_INFINITY:
                case self::BINARY_DOUBLE_NAN:
                case self::BINARY_FLOAT:
                case self::BINARY_FLOAT_INFINITY:
                case self::BINARY_FLOAT_NAN:
                case self::BINARY_INTEGER:
                case self::BIND_AWARE:
                case self::BINDING:
                case self::BIN_TO_NUM:
                case self::BITAND:
                case self::BITMAP_AND:
                case self::BITMAP:
                case self::BITMAPS:
                case self::BITMAP_TREE:
                case self::BITS:
                case self::BLOB:
                case self::BLOCK:
                case self::BLOCK_RANGE:
                case self::BLOCKS:
                case self::BLOCKSIZE:
                case self::BODY:
                case self::BOOLEAN:
                case self::BOTH:
                case self::BOUND:
                case self::BRANCH:
                case self::BREADTH:
                case self::BROADCAST:
                case self::BSON:
                case self::BUFFER:
                case self::BUFFER_CACHE:
                case self::BUFFER_POOL:
                case self::BUILD:
                case self::BULK:
                case self::BYPASS_RECURSIVE_CHECK:
                case self::BYPASS_UJVC:
                case self::BYTE:
                case self::CACHE:
                case self::CACHE_CB:
                case self::CACHE_INSTANCES:
                case self::CACHE_TEMP_TABLE:
                case self::CACHING:
                case self::CALCULATED:
                case self::CALLBACK:
                case self::CALL:
                case self::CANCEL:
                case self::CAPACITY:
                case self::CARDINALITY:
                case self::CASCADE:
                case self::CASE:
                case self::CAST:
                case self::CATEGORY:
                case self::CDBDEFAULT:
                case self::CEIL:
                case self::CELL_FLASH_CACHE:
                case self::CERTIFICATE:
                case self::CFILE:
                case self::CHAINED:
                case self::CHANGE:
                case self::CHANGE_DUPKEY_ERROR_INDEX:
                case self::CHARACTER:
                case self::CHAR:
                case self::CHAR_CS:
                case self::CHARTOROWID:
                case self::CHECK_ACL_REWRITE:
                case self::CHECKPOINT:
                case self::CHILD:
                case self::CHOOSE:
                case self::CHR:
                case self::CHUNK:
                case self::CLASS:
                case self::CLASSIFIER:
                case self::CLEANUP:
                case self::CLEAR:
                case self::C_LETTER:
                case self::CLIENT:
                case self::CLOB:
                case self::CLONE:
                case self::CLOSE_CACHED_OPEN_CURSORS:
                case self::CLOSE:
                case self::CLUSTER_BY_ROWID:
                case self::CLUSTER:
                case self::CLUSTER_DETAILS:
                case self::CLUSTER_DISTANCE:
                case self::CLUSTER_ID:
                case self::CLUSTERING:
                case self::CLUSTERING_FACTOR:
                case self::CLUSTER_PROBABILITY:
                case self::CLUSTER_SET:
                case self::COALESCE:
                case self::COALESCE_SQ:
                case self::COARSE:
                case self::CO_AUTH_IND:
                case self::COLD:
                case self::COLLECT:
                case self::COLUMNAR:
                case self::COLUMN_AUTH_INDICATOR:
                case self::COLUMN:
                case self::COLUMNS:
                case self::COLUMN_STATS:
                case self::COLUMN_VALUE:
                case self::COMMENT:
                case self::COMMIT:
                case self::COMMITTED:
                case self::COMMON_DATA:
                case self::COMPACT:
                case self::COMPATIBILITY:
                case self::COMPILE:
                case self::COMPLETE:
                case self::COMPLIANCE:
                case self::COMPONENT:
                case self::COMPONENTS:
                case self::COMPOSE:
                case self::COMPOSITE:
                case self::COMPOSITE_LIMIT:
                case self::COMPOUND:
                case self::COMPUTE:
                case self::CONCAT:
                case self::CON_DBID_TO_ID:
                case self::CONDITIONAL:
                case self::CONDITION:
                case self::CONFIRM:
                case self::CONFORMING:
                case self::CON_GUID_TO_ID:
                case self::CON_ID:
                case self::CON_NAME_TO_ID:
                case self::CONNECT_BY_CB_WHR_ONLY:
                case self::CONNECT_BY_COMBINE_SW:
                case self::CONNECT_BY_COST_BASED:
                case self::CONNECT_BY_ELIM_DUPS:
                case self::CONNECT_BY_FILTERING:
                case self::CONNECT_BY_ISCYCLE:
                case self::CONNECT_BY_ISLEAF:
                case self::CONNECT_BY_ROOT:
                case self::CONNECT_TIME:
                case self::CONSIDER:
                case self::CONSISTENT:
                case self::CONSTANT:
                case self::CONST:
                case self::CONSTRAINT:
                case self::CONSTRAINTS:
                case self::CONSTRUCTOR:
                case self::CONTAINER:
                case self::CONTAINER_DATA:
                case self::CONTAINERS:
                case self::CONTENT:
                case self::CONTENTS:
                case self::CONTEXT:
                case self::CONTINUE:
                case self::CONTROLFILE:
                case self::CON_UID_TO_ID:
                case self::CONVERT:
                case self::COOKIE:
                case self::COPY:
                case self::CORR_K:
                case self::CORR_S:
                case self::CORRUPTION:
                case self::CORRUPT_XID_ALL:
                case self::CORRUPT_XID:
                case self::COS:
                case self::COSH:
                case self::COST:
                case self::COST_XML_QUERY_REWRITE:
                case self::COUNT:
                case self::COVAR_POP:
                case self::COVAR_SAMP:
                case self::CPU_COSTING:
                case self::CPU_PER_CALL:
                case self::CPU_PER_SESSION:
                case self::CRASH:
                case self::CREATE_FILE_DEST:
                case self::CREATE_STORED_OUTLINES:
                case self::CREATION:
                case self::CREDENTIAL:
                case self::CRITICAL:
                case self::CROSS:
                case self::CROSSEDITION:
                case self::CSCONVERT:
                case self::CUBE_AJ:
                case self::CUBE:
                case self::CUBE_GB:
                case self::CUBE_SJ:
                case self::CUME_DISTM:
                case self::CURRENT:
                case self::CURRENT_DATE:
                case self::CURRENT_SCHEMA:
                case self::CURRENT_TIME:
                case self::CURRENT_TIMESTAMP:
                case self::CURRENT_USER:
                case self::CURRENTV:
                case self::CURSOR:
                case self::CURSOR_SHARING_EXACT:
                case self::CURSOR_SPECIFIC_SEGMENT:
                case self::CUSTOMDATUM:
                case self::CV:
                case self::CYCLE:
                case self::DANGLING:
                case self::DATABASE:
                case self::DATA:
                case self::DATAFILE:
                case self::DATAFILES:
                case self::DATAMOVEMENT:
                case self::DATAOBJNO:
                case self::DATAOBJ_TO_MAT_PARTITION:
                case self::DATAOBJ_TO_PARTITION:
                case self::DATAPUMP:
                case self::DATA_SECURITY_REWRITE_LIMIT:
                case self::DATE_MODE:
                case self::DAY:
                case self::DAYS:
                case self::DBA:
                case self::DBA_RECYCLEBIN:
                case self::DBMS_STATS:
                case self::DB_ROLE_CHANGE:
                case self::DBTIMEZONE:
                case self::DB_UNIQUE_NAME:
                case self::DB_VERSION:
                case self::DDL:
                case self::DEALLOCATE:
                case self::DEBUG:
                case self::DEBUGGER:
                case self::DEC:
                case self::DECIMAL:
                case self::DECLARE:
                case self::DECOMPOSE:
                case self::DECORRELATE:
                case self::DECR:
                case self::DECREMENT:
                case self::DECRYPT:
                case self::DEDUPLICATE:
                case self::DEFAULTS:
                case self::DEFERRABLE:
                case self::DEFERRED:
                case self::DEFINED:
                case self::DEFINE:
                case self::DEFINER:
                case self::DEGREE:
                case self::DELAY:
                case self::DELEGATE:
                case self::DELETE_ALL:
                case self::DELETE:
                case self::DELETEXML:
                case self::DEMAND:
                case self::DENSE_RANKM:
                case self::DEPENDENT:
                case self::DEPTH:
                case self::DEQUEUE:
                case self::DEREF:
                case self::DEREF_NO_REWRITE:
                case self::DESTROY:
                case self::DETACHED:
                case self::DETERMINES:
                case self::DETERMINISTIC:
                case self::DICTIONARY:
                case self::DIMENSION:
                case self::DIMENSIONS:
                case self::DIRECT_LOAD:
                case self::DIRECTORY:
                case self::DIRECT_PATH:
                case self::DISABLE_ALL:
                case self::DISABLE:
                case self::DISABLE_PARALLEL_DML:
                case self::DISABLE_PRESET:
                case self::DISABLE_RPKE:
                case self::DISALLOW:
                case self::DISASSOCIATE:
                case self::DISCARD:
                case self::DISCONNECT:
                case self::DISK:
                case self::DISKGROUP:
                case self::DISKS:
                case self::DISMOUNT:
                case self::DISTINGUISHED:
                case self::DISTRIBUTED:
                case self::DISTRIBUTE:
                case self::DML:
                case self::DML_UPDATE:
                case self::DOCFIDELITY:
                case self::DOCUMENT:
                case self::DOMAIN_INDEX_FILTER:
                case self::DOMAIN_INDEX_NO_SORT:
                case self::DOMAIN_INDEX_SORT:
                case self::DOUBLE:
                case self::DOWNGRADE:
                case self::DRIVING_SITE:
                case self::DROP_COLUMN:
                case self::DROP_GROUP:
                case self::DSINTERVAL_UNCONSTRAINED:
                case self::DST_UPGRADE_INSERT_CONV:
                case self::DUMP:
                case self::DUPLICATE:
                case self::DV:
                case self::DYNAMIC:
                case self::DYNAMIC_SAMPLING:
                case self::DYNAMIC_SAMPLING_EST_CDN:
                case self::EACH:
                case self::EDITIONABLE:
                case self::EDITION:
                case self::EDITIONING:
                case self::EDITIONS:
                case self::ELEMENT:
                case self::ELIM_GROUPBY:
                case self::ELIMINATE_JOIN:
                case self::ELIMINATE_OBY:
                case self::ELIMINATE_OUTER_JOIN:
                case self::EM:
                case self::EMPTY_BLOB:
                case self::EMPTY_CLOB:
                case self::EMPTY:
                case self::ENABLE_ALL:
                case self::ENABLE:
                case self::ENABLE_PARALLEL_DML:
                case self::ENABLE_PRESET:
                case self::ENCODING:
                case self::ENCRYPT:
                case self::ENCRYPTION:
                case self::END_OUTLINE_DATA:
                case self::ENFORCED:
                case self::ENFORCE:
                case self::ENQUEUE:
                case self::ENTERPRISE:
                case self::ENTITYESCAPING:
                case self::ENTRY:
                case self::EQUIPART:
                case self::ERR:
                case self::ERROR_ARGUMENT:
                case self::ERROR:
                case self::ERROR_ON_OVERLAP_TIME:
                case self::ERRORS:
                case self::ESCAPE:
                case self::ESTIMATE:
                case self::EVAL:
                case self::EVALNAME:
                case self::EVALUATE:
                case self::EVALUATION:
                case self::EVENTS:
                case self::EVERY:
                case self::EXCEPT:
                case self::EXCEPTION:
                case self::EXCEPTION_INIT:
                case self::EXCEPTIONS:
                case self::EXCHANGE:
                case self::EXCLUDE:
                case self::EXCLUDING:
                case self::EXECUTE:
                case self::EXEMPT:
                case self::EXISTING:
                case self::EXISTS:
                case self::EXISTSNODE:
                case self::EXIT:
                case self::EXPAND_GSET_TO_UNION:
                case self::EXPAND_TABLE:
                case self::EXP:
                case self::EXPIRE:
                case self::EXPLAIN:
                case self::EXPLOSION:
                case self::EXPORT:
                case self::EXPR_CORR_CHECK:
                case self::EXPRESS:
                case self::EXTENDS:
                case self::EXTENT:
                case self::EXTENTS:
                case self::EXTERNAL:
                case self::EXTERNALLY:
                case self::EXTRACTCLOBXML:
                case self::EXTRACT:
                case self::EXTRACTVALUE:
                case self::EXTRA:
                case self::FACILITY:
                case self::FACT:
                case self::FACTOR:
                case self::FACTORIZE_JOIN:
                case self::FAILED:
                case self::FAILED_LOGIN_ATTEMPTS:
                case self::FAILGROUP:
                case self::FAILOVER:
                case self::FAILURE:
                case self::FALSE:
                case self::FAMILY:
                case self::FAR:
                case self::FAST:
                case self::FASTSTART:
                case self::FBTSCAN:
                case self::FEATURE_DETAILS:
                case self::FEATURE_ID:
                case self::FEATURE_SET:
                case self::FEATURE_VALUE:
                case self::FETCH:
                case self::FILE:
                case self::FILE_NAME_CONVERT:
                case self::FILESYSTEM_LIKE_LOGGING:
                case self::FILTER:
                case self::FINAL:
                case self::FINE:
                case self::FINISH:
                case self::FIRST:
                case self::FIRSTM:
                case self::FIRST_ROWS:
                case self::FIRST_VALUE:
                case self::FIXED_VIEW_DATA:
                case self::FLAGGER:
                case self::FLASHBACK:
                case self::FLASH_CACHE:
                case self::FLOAT:
                case self::FLOB:
                case self::FLOOR:
                case self::FLUSH:
                case self::FOLDER:
                case self::FOLLOWING:
                case self::FOLLOWS:
                case self::FORALL:
                case self::FORCE:
                case self::FORCE_XML_QUERY_REWRITE:
                case self::FOREIGN:
                case self::FOREVER:
                case self::FORMAT:
                case self::FORWARD:
                case self::FRAGMENT_NUMBER:
                case self::FREELIST:
                case self::FREELISTS:
                case self::FREEPOOLS:
                case self::FRESH:
                case self::FROM_TZ:
                case self::FULL:
                case self::FULL_OUTER_JOIN_TO_OUTER:
                case self::FUNCTION:
                case self::FUNCTIONS:
                case self::GATHER_OPTIMIZER_STATISTICS:
                case self::GATHER_PLAN_STATISTICS:
                case self::GBY_CONC_ROLLUP:
                case self::GBY_PUSHDOWN:
                case self::GENERATED:
                case self::GET:
                case self::GLOBAL:
                case self::GLOBALLY:
                case self::GLOBAL_NAME:
                case self::GLOBAL_TOPIC_ENABLED:
                case self::GROUP_BY:
                case self::GROUP_ID:
                case self::GROUPING:
                case self::GROUPING_ID:
                case self::GROUPS:
                case self::GUARANTEED:
                case self::GUARANTEE:
                case self::GUARD:
                case self::HASH_AJ:
                case self::HASH:
                case self::HASHKEYS:
                case self::HASH_SJ:
                case self::HEADER:
                case self::HEAP:
                case self::HELP:
                case self::HEXTORAW:
                case self::HEXTOREF:
                case self::HIDDEN_KEYWORD:
                case self::HIDE:
                case self::HIERARCHY:
                case self::HIGH:
                case self::HINTSET_BEGIN:
                case self::HINTSET_END:
                case self::HOT:
                case self::HOUR:
                case self::HWM_BROKERED:
                case self::HYBRID:
                case self::IDENTIFIER:
                case self::IDENTITY:
                case self::IDGENERATORS:
                case self::ID:
                case self::IDLE_TIME:
                case self::IF:
                case self::IGNORE:
                case self::IGNORE_OPTIM_EMBEDDED_HINTS:
                case self::IGNORE_ROW_ON_DUPKEY_INDEX:
                case self::IGNORE_WHERE_CLAUSE:
                case self::ILM:
                case self::IMMEDIATE:
                case self::IMPACT:
                case self::IMPORT:
                case self::INACTIVE:
                case self::INCLUDE:
                case self::INCLUDE_VERSION:
                case self::INCLUDING:
                case self::INCREMENTAL:
                case self::INCREMENT:
                case self::INCR:
                case self::INDENT:
                case self::INDEX_ASC:
                case self::INDEX_COMBINE:
                case self::INDEX_DESC:
                case self::INDEXED:
                case self::INDEXES:
                case self::INDEX_FFS:
                case self::INDEX_FILTER:
                case self::INDEXING:
                case self::INDEX_JOIN:
                case self::INDEX_ROWS:
                case self::INDEX_RRS:
                case self::INDEX_RS_ASC:
                case self::INDEX_RS_DESC:
                case self::INDEX_RS:
                case self::INDEX_SCAN:
                case self::INDEX_SKIP_SCAN:
                case self::INDEX_SS_ASC:
                case self::INDEX_SS_DESC:
                case self::INDEX_SS:
                case self::INDEX_STATS:
                case self::INDEXTYPE:
                case self::INDEXTYPES:
                case self::INDICATOR:
                case self::INDICES:
                case self::INFINITE:
                case self::INFORMATIONAL:
                case self::INHERIT:
                case self::INITCAP:
                case self::INITIAL:
                case self::INITIALIZED:
                case self::INITIALLY:
                case self::INITRANS:
                case self::INLINE:
                case self::INLINE_XMLTYPE_NT:
                case self::INMEMORY:
                case self::IN_MEMORY_METADATA:
                case self::INMEMORY_PRUNING:
                case self::INNER:
                case self::INOUT:
                case self::INPLACE:
                case self::INSERTCHILDXMLAFTER:
                case self::INSERTCHILDXMLBEFORE:
                case self::INSERTCHILDXML:
                case self::INSERTXMLAFTER:
                case self::INSERTXMLBEFORE:
                case self::INSTANCE:
                case self::INSTANCES:
                case self::INSTANTIABLE:
                case self::INSTANTLY:
                case self::INSTEAD:
                case self::INSTR2:
                case self::INSTR4:
                case self::INSTRB:
                case self::INSTRC:
                case self::INSTR:
                case self::INTEGER:
                case self::INTERLEAVED:
                case self::INTERMEDIATE:
                case self::INTERNAL_CONVERT:
                case self::INTERNAL_USE:
                case self::INTERPRETED:
                case self::INTERVAL:
                case self::INT:
                case self::INVALIDATE:
                case self::INVISIBLE:
                case self::IN_XQUERY:
                case self::ISOLATION:
                case self::ISOLATION_LEVEL:
                case self::ITERATE:
                case self::ITERATION_NUMBER:
                case self::JAVA:
                case self::JOB:
                case self::JOIN:
                case self::JSON_ARRAYAGG:
                case self::JSON_ARRAY:
                case self::JSON_EQUAL:
                case self::JSON_EXISTS2:
                case self::JSON_EXISTS:
                case self::JSONGET:
                case self::JSON:
                case self::JSON_OBJECTAGG:
                case self::JSON_OBJECT:
                case self::JSONPARSE:
                case self::JSON_QUERY:
                case self::JSON_SERIALIZE:
                case self::JSON_TABLE:
                case self::JSON_TEXTCONTAINS2:
                case self::JSON_TEXTCONTAINS:
                case self::JSON_VALUE:
                case self::KEEP_DUPLICATES:
                case self::KEEP:
                case self::KERBEROS:
                case self::KEY:
                case self::KEY_LENGTH:
                case self::KEYSIZE:
                case self::KEYS:
                case self::KEYSTORE:
                case self::KILL:
                case self::LABEL:
                case self::LANGUAGE:
                case self::LAST_DAY:
                case self::LAST:
                case self::LAST_VALUE:
                case self::LATERAL:
                case self::LAX:
                case self::LAYER:
                case self::LDAP_REGISTRATION_ENABLED:
                case self::LDAP_REGISTRATION:
                case self::LDAP_REG_SYNC_INTERVAL:
                case self::LEADING:
                case self::LEFT:
                case self::LENGTH2:
                case self::LENGTH4:
                case self::LENGTHB:
                case self::LENGTHC:
                case self::LENGTH:
                case self::LESS:
                case self::LEVEL:
                case self::LEVELS:
                case self::LIBRARY:
                case self::LIFECYCLE:
                case self::LIFE:
                case self::LIFETIME:
                case self::LIKE2:
                case self::LIKE4:
                case self::LIKEC:
                case self::LIKE_EXPAND:
                case self::LIMIT:
                case self::LINEAR:
                case self::LINK:
                case self::LIST:
                case self::LN:
                case self::LNNVL:
                case self::LOAD:
                case self::LOB:
                case self::LOBNVL:
                case self::LOBS:
                case self::LOCAL_INDEXES:
                case self::LOCAL:
                case self::LOCALTIME:
                case self::LOCALTIMESTAMP:
                case self::LOCATION:
                case self::LOCATOR:
                case self::LOCKED:
                case self::LOCKING:
                case self::LOGFILE:
                case self::LOGFILES:
                case self::LOGGING:
                case self::LOGICAL:
                case self::LOGICAL_READS_PER_CALL:
                case self::LOGICAL_READS_PER_SESSION:
                case self::LOG:
                case self::LOGMINING:
                case self::LOGOFF:
                case self::LOGON:
                case self::LOG_READ_ONLY_VIOLATIONS:
                case self::LONG:
                case self::LOOP:
                case self::LOWER:
                case self::LOW:
                case self::LPAD:
                case self::LTRIM:
                case self::MAIN:
                case self::MAKE_REF:
                case self::MANAGED:
                case self::MANAGE:
                case self::MANAGEMENT:
                case self::MANAGER:
                case self::MANUAL:
                case self::MAP:
                case self::MAPPING:
                case self::MASTER:
                case self::MATCHED:
                case self::MATCHES:
                case self::MATCH:
                case self::MATCH_NUMBER:
                case self::MATCH_RECOGNIZE:
                case self::MATERIALIZED:
                case self::MATERIALIZE:
                case self::MAXARCHLOGS:
                case self::MAXDATAFILES:
                case self::MAXEXTENTS:
                case self::MAXIMIZE:
                case self::MAXINSTANCES:
                case self::MAXLOGFILES:
                case self::MAXLOGHISTORY:
                case self::MAXLOGMEMBERS:
                case self::MAX_SHARED_TEMP_SIZE:
                case self::MAXSIZE:
                case self::MAXTRANS:
                case self::MAXVALUE:
                case self::MEASURE:
                case self::MEASURES:
                case self::MEDIUM:
                case self::MEMBER:
                case self::MEMCOMPRESS:
                case self::MEMORY:
                case self::MERGEACTIONS:
                case self::MERGE_AJ:
                case self::MERGE_CONST_ON:
                case self::MERGE:
                case self::MERGE_SJ:
                case self::METADATA:
                case self::METHOD:
                case self::MIGRATE:
                case self::MIGRATION:
                case self::MINEXTENTS:
                case self::MINIMIZE:
                case self::MINIMUM:
                case self::MINING:
                case self::MINUS_NULL:
                case self::MINUTE:
                case self::MINVALUE:
                case self::MIRRORCOLD:
                case self::MIRRORHOT:
                case self::MIRROR:
                case self::MLSLABEL:
                case self::MODEL_COMPILE_SUBQUERY:
                case self::MODEL_DONTVERIFY_UNIQUENESS:
                case self::MODEL_DYNAMIC_SUBQUERY:
                case self::MODEL_MIN_ANALYSIS:
                case self::MODEL:
                case self::MODEL_NB:
                case self::MODEL_NO_ANALYSIS:
                case self::MODEL_PBY:
                case self::MODEL_PUSH_REF:
                case self::MODEL_SV:
                case self::MODIFICATION:
                case self::MODIFY_COLUMN_TYPE:
                case self::MODIFY:
                case self::MOD:
                case self::MODULE:
                case self::MONITORING:
                case self::MONITOR:
                case self::MONTH:
                case self::MONTHS_BETWEEN:
                case self::MONTHS:
                case self::MOUNT:
                case self::MOUNTPATH:
                case self::MOVEMENT:
                case self::MOVE:
                case self::MULTIDIMENSIONAL:
                case self::MULTISET:
                case self::MV_MERGE:
                case self::NAMED:
                case self::NAME:
                case self::NAMESPACE:
                case self::NAN:
                case self::NANVL:
                case self::NATIONAL:
                case self::NATIVE_FULL_OUTER_JOIN:
                case self::NATIVE:
                case self::NATURAL:
                case self::NAV:
                case self::NCHAR_CS:
                case self::NCHAR:
                case self::NCHR:
                case self::NCLOB:
                case self::NEEDED:
                case self::NEG:
                case self::NESTED:
                case self::NESTED_TABLE_FAST_INSERT:
                case self::NESTED_TABLE_GET_REFS:
                case self::NESTED_TABLE_ID:
                case self::NESTED_TABLE_SET_REFS:
                case self::NESTED_TABLE_SET_SETID:
                case self::NETWORK:
                case self::NEVER:
                case self::NEW:
                case self::NEW_TIME:
                case self::NEXT_DAY:
                case self::NEXT:
                case self::NL_AJ:
                case self::NLJ_BATCHING:
                case self::NLJ_INDEX_FILTER:
                case self::NLJ_INDEX_SCAN:
                case self::NLJ_PREFETCH:
                case self::NLS_CALENDAR:
                case self::NLS_CHARACTERSET:
                case self::NLS_CHARSET_DECL_LEN:
                case self::NLS_CHARSET_ID:
                case self::NLS_CHARSET_NAME:
                case self::NLS_COMP:
                case self::NLS_CURRENCY:
                case self::NLS_DATE_FORMAT:
                case self::NLS_DATE_LANGUAGE:
                case self::NLS_INITCAP:
                case self::NLS_ISO_CURRENCY:
                case self::NL_SJ:
                case self::NLS_LANG:
                case self::NLS_LANGUAGE:
                case self::NLS_LENGTH_SEMANTICS:
                case self::NLS_LOWER:
                case self::NLS_NCHAR_CONV_EXCP:
                case self::NLS_NUMERIC_CHARACTERS:
                case self::NLS_SORT:
                case self::NLSSORT:
                case self::NLS_SPECIAL_CHARS:
                case self::NLS_TERRITORY:
                case self::NLS_UPPER:
                case self::NO_ACCESS:
                case self::NO_ADAPTIVE_PLAN:
                case self::NO_ANSI_REARCH:
                case self::NOAPPEND:
                case self::NOARCHIVELOG:
                case self::NOAUDIT:
                case self::NO_AUTO_REOPTIMIZE:
                case self::NO_BASETABLE_MULTIMV_REWRITE:
                case self::NO_BATCH_TABLE_ACCESS_BY_ROWID:
                case self::NO_BIND_AWARE:
                case self::NO_BUFFER:
                case self::NOCACHE:
                case self::NO_CARTESIAN:
                case self::NO_CHECK_ACL_REWRITE:
                case self::NO_CLUSTER_BY_ROWID:
                case self::NO_CLUSTERING:
                case self::NO_COALESCE_SQ:
                case self::NO_COMMON_DATA:
                case self::NO_CONNECT_BY_CB_WHR_ONLY:
                case self::NO_CONNECT_BY_COMBINE_SW:
                case self::NO_CONNECT_BY_COST_BASED:
                case self::NO_CONNECT_BY_ELIM_DUPS:
                case self::NO_CONNECT_BY_FILTERING:
                case self::NOCOPY:
                case self::NO_COST_XML_QUERY_REWRITE:
                case self::NO_CPU_COSTING:
                case self::NOCPU_COSTING:
                case self::NOCYCLE:
                case self::NO_DATA_SECURITY_REWRITE:
                case self::NO_DECORRELATE:
                case self::NODELAY:
                case self::NO_DOMAIN_INDEX_FILTER:
                case self::NO_DST_UPGRADE_INSERT_CONV:
                case self::NO_ELIM_GROUPBY:
                case self::NO_ELIMINATE_JOIN:
                case self::NO_ELIMINATE_OBY:
                case self::NO_ELIMINATE_OUTER_JOIN:
                case self::NOENTITYESCAPING:
                case self::NO_EXPAND_GSET_TO_UNION:
                case self::NO_EXPAND:
                case self::NO_EXPAND_TABLE:
                case self::NO_FACT:
                case self::NO_FACTORIZE_JOIN:
                case self::NO_FILTERING:
                case self::NOFORCE:
                case self::NO_FULL_OUTER_JOIN_TO_OUTER:
                case self::NO_GATHER_OPTIMIZER_STATISTICS:
                case self::NO_GBY_PUSHDOWN:
                case self::NOGUARANTEE:
                case self::NO_INDEX_FFS:
                case self::NO_INDEX:
                case self::NO_INDEX_SS:
                case self::NO_INMEMORY:
                case self::NO_INMEMORY_PRUNING:
                case self::NOKEEP:
                case self::NO_LOAD:
                case self::NOLOCAL:
                case self::NOLOGGING:
                case self::NOMAPPING:
                case self::NOMAXVALUE:
                case self::NO_MERGE:
                case self::NOMINIMIZE:
                case self::NOMINVALUE:
                case self::NO_MODEL_PUSH_REF:
                case self::NO_MONITORING:
                case self::NOMONITORING:
                case self::NO_MONITOR:
                case self::NO_MULTIMV_REWRITE:
                case self::NO_NATIVE_FULL_OUTER_JOIN:
                case self::NONBLOCKING:
                case self::NONEDITIONABLE:
                case self::NONE:
                case self::NO_NLJ_BATCHING:
                case self::NO_NLJ_PREFETCH:
                case self::NO:
                case self::NONSCHEMA:
                case self::NO_OBJECT_LINK:
                case self::NOORDER:
                case self::NO_ORDER_ROLLUPS:
                case self::NO_OUTER_JOIN_TO_ANTI:
                case self::NO_OUTER_JOIN_TO_INNER:
                case self::NOOVERRIDE:
                case self::NO_PARALLEL_INDEX:
                case self::NOPARALLEL_INDEX:
                case self::NO_PARALLEL:
                case self::NOPARALLEL:
                case self::NO_PARTIAL_COMMIT:
                case self::NO_PARTIAL_JOIN:
                case self::NO_PARTIAL_ROLLUP_PUSHDOWN:
                case self::NOPARTITION:
                case self::NO_PLACE_DISTINCT:
                case self::NO_PLACE_GROUP_BY:
                case self::NO_PQ_CONCURRENT_UNION:
                case self::NO_PQ_MAP:
                case self::NO_PQ_REPLICATE:
                case self::NO_PQ_SKEW:
                case self::NO_PRUNE_GSETS:
                case self::NO_PULL_PRED:
                case self::NO_PUSH_PRED:
                case self::NO_PUSH_SUBQ:
                case self::NO_PX_FAULT_TOLERANCE:
                case self::NO_PX_JOIN_FILTER:
                case self::NO_QKN_BUFF:
                case self::NO_QUERY_TRANSFORMATION:
                case self::NO_REF_CASCADE:
                case self::NORELOCATE:
                case self::NORELY:
                case self::NOREPAIR:
                case self::NOREPLAY:
                case self::NORESETLOGS:
                case self::NO_RESULT_CACHE:
                case self::NOREVERSE:
                case self::NO_REWRITE:
                case self::NOREWRITE:
                case self::NORMAL:
                case self::NO_ROOT_SW_FOR_LOCAL:
                case self::NOROWDEPENDENCIES:
                case self::NOSCHEMACHECK:
                case self::NOSEGMENT:
                case self::NO_SEMIJOIN:
                case self::NO_SEMI_TO_INNER:
                case self::NO_SET_TO_JOIN:
                case self::NOSORT:
                case self::NO_SQL_TRANSLATION:
                case self::NO_SQL_TUNE:
                case self::NO_STAR_TRANSFORMATION:
                case self::NO_STATEMENT_QUEUING:
                case self::NO_STATS_GSETS:
                case self::NOSTRICT:
                case self::NO_SUBQUERY_PRUNING:
                case self::NO_SUBSTRB_PAD:
                case self::NO_SWAP_JOIN_INPUTS:
                case self::NOSWITCH:
                case self::NO_TABLE_LOOKUP_BY_NL:
                case self::NO_TEMP_TABLE:
                case self::NOTHING:
                case self::NOTIFICATION:
                case self::NO_TRANSFORM_DISTINCT_AGG:
                case self::NO_UNNEST:
                case self::NO_USE_CUBE:
                case self::NO_USE_HASH_AGGREGATION:
                case self::NO_USE_HASH_GBY_FOR_PUSHDOWN:
                case self::NO_USE_HASH:
                case self::NO_USE_INVISIBLE_INDEXES:
                case self::NO_USE_MERGE:
                case self::NO_USE_NL:
                case self::NO_USE_VECTOR_AGGREGATION:
                case self::NOVALIDATE:
                case self::NO_VECTOR_TRANSFORM_DIMS:
                case self::NO_VECTOR_TRANSFORM_FACT:
                case self::NO_VECTOR_TRANSFORM:
                case self::NO_XDB_FASTPATH_INSERT:
                case self::NO_XML_DML_REWRITE:
                case self::NO_XMLINDEX_REWRITE_IN_SELECT:
                case self::NO_XMLINDEX_REWRITE:
                case self::NO_XML_QUERY_REWRITE:
                case self::NO_ZONEMAP:
                case self::NTH_VALUE:
                case self::NULLIF:
                case self::NULLS:
                case self::NUMBER:
                case self::NUMERIC:
                case self::NUM_INDEX_KEYS:
                case self::NUMTODSINTERVAL:
                case self::NUMTOYMINTERVAL:
                case self::NVARCHAR2:
                case self::NVL2:
                case self::OBJECT2XML:
                case self::OBJECT:
                case self::OBJ_ID:
                case self::OBJNO:
                case self::OBJNO_REUSE:
                case self::OCCURENCES:
                case self::OFFLINE:
                case self::OFF:
                case self::OFFSET:
                case self::OIDINDEX:
                case self::OID:
                case self::OLAP:
                case self::OLD:
                case self::OLD_PUSH_PRED:
                case self::OLS:
                case self::OLTP:
                case self::OMIT:
                case self::ONE:
                case self::ONLINE:
                case self::ONLY:
                case self::OPAQUE:
                case self::OPAQUE_TRANSFORM:
                case self::OPAQUE_XCANONICAL:
                case self::OPCODE:
                case self::OPEN:
                case self::OPERATIONS:
                case self::OPERATOR:
                case self::OPT_ESTIMATE:
                case self::OPTIMAL:
                case self::OPTIMIZE:
                case self::OPTIMIZER_FEATURES_ENABLE:
                case self::OPTIMIZER_GOAL:
                case self::OPT_PARAM:
                case self::ORA_BRANCH:
                case self::ORA_CHECK_ACL:
                case self::ORA_CHECK_PRIVILEGE:
                case self::ORA_CLUSTERING:
                case self::ORADATA:
                case self::ORADEBUG:
                case self::ORA_DST_AFFECTED:
                case self::ORA_DST_CONVERT:
                case self::ORA_DST_ERROR:
                case self::ORA_GET_ACLIDS:
                case self::ORA_GET_PRIVILEGES:
                case self::ORA_HASH:
                case self::ORA_INVOKING_USERID:
                case self::ORA_INVOKING_USER:
                case self::ORA_INVOKING_XS_USER_GUID:
                case self::ORA_INVOKING_XS_USER:
                case self::ORA_RAWCOMPARE:
                case self::ORA_RAWCONCAT:
                case self::ORA_ROWSCN:
                case self::ORA_ROWSCN_RAW:
                case self::ORA_ROWVERSION:
                case self::ORA_TABVERSION:
                case self::ORA_WRITE_TIME:
                case self::ORDERED:
                case self::ORDERED_PREDICATES:
                case self::ORDINALITY:
                case self::OR_EXPAND:
                case self::ORGANIZATION:
                case self::OR_PREDICATES:
                case self::OSERROR:
                case self::OTHER:
                case self::OUTER_JOIN_TO_ANTI:
                case self::OUTER_JOIN_TO_INNER:
                case self::OUTER:
                case self::OUTLINE_LEAF:
                case self::OUTLINE:
                case self::OUT_OF_LINE:
                case self::OUT:
                case self::OVERFLOW_NOMOVE:
                case self::OVERFLOW:
                case self::OVERLAPS:
                case self::OVER:
                case self::OVERRIDING:
                case self::OWNER:
                case self::OWNERSHIP:
                case self::OWN:
                case self::PACKAGE:
                case self::PACKAGES:
                case self::PARALLEL_ENABLE:
                case self::PARALLEL_INDEX:
                case self::PARALLEL:
                case self::PARAMETERS:
                case self::PARAM:
                case self::PARENT:
                case self::PARITY:
                case self::PARTIAL_JOIN:
                case self::PARTIALLY:
                case self::PARTIAL:
                case self::PARTIAL_ROLLUP_PUSHDOWN:
                case self::PARTITION_HASH:
                case self::PARTITION_LIST:
                case self::PARTITION:
                case self::PARTITION_RANGE:
                case self::PARTITIONS:
                case self::PARTNUMINST:
                case self::PASSING:
                case self::PASSWORD_GRACE_TIME:
                case self::PASSWORD_LIFE_TIME:
                case self::PASSWORD_LOCK_TIME:
                case self::PASSWORD:
                case self::PASSWORD_REUSE_MAX:
                case self::PASSWORD_REUSE_TIME:
                case self::PASSWORD_VERIFY_FUNCTION:
                case self::PAST:
                case self::PATCH:
                case self::PATH:
                case self::PATH_PREFIX:
                case self::PATHS:
                case self::PATTERN:
                case self::PBL_HS_BEGIN:
                case self::PBL_HS_END:
                case self::PCTINCREASE:
                case self::PCTTHRESHOLD:
                case self::PCTUSED:
                case self::PCTVERSION:
                case self::PENDING:
                case self::PERCENT_KEYWORD:
                case self::PERCENT_RANKM:
                case self::PERFORMANCE:
                case self::PERIOD_KEYWORD:
                case self::PERMANENT:
                case self::PERMISSION:
                case self::PERMUTE:
                case self::PER:
                case self::PFILE:
                case self::PHYSICAL:
                case self::PIKEY:
                case self::PIPELINED:
                case self::PIV_GB:
                case self::PIVOT:
                case self::PIV_SSF:
                case self::PLACE_DISTINCT:
                case self::PLACE_GROUP_BY:
                case self::PLAN:
                case self::PLSCOPE_SETTINGS:
                case self::PLS_INTEGER:
                case self::PLSQL_CCFLAGS:
                case self::PLSQL_CODE_TYPE:
                case self::PLSQL_DEBUG:
                case self::PLSQL_OPTIMIZE_LEVEL:
                case self::PLSQL_WARNINGS:
                case self::PLUGGABLE:
                case self::POINT:
                case self::POLICY:
                case self::POOL_16K:
                case self::POOL_2K:
                case self::POOL_32K:
                case self::POOL_4K:
                case self::POOL_8K:
                case self::POSITIVEN:
                case self::POSITIVE:
                case self::POST_TRANSACTION:
                case self::POWERMULTISET_BY_CARDINALITY:
                case self::POWERMULTISET:
                case self::POWER:
                case self::PQ_CONCURRENT_UNION:
                case self::PQ_DISTRIBUTE:
                case self::PQ_DISTRIBUTE_WINDOW:
                case self::PQ_FILTER:
                case self::PQ_MAP:
                case self::PQ_NOMAP:
                case self::PQ_REPLICATE:
                case self::PQ_SKEW:
                case self::PRAGMA:
                case self::PREBUILT:
                case self::PRECEDES:
                case self::PRECEDING:
                case self::PRECISION:
                case self::PRECOMPUTE_SUBQUERY:
                case self::PREDICATE_REORDERS:
                case self::PRELOAD:
                case self::PREPARE:
                case self::PRESENTNNV:
                case self::PRESENT:
                case self::PRESENTV:
                case self::PRESERVE_OID:
                case self::PRESERVE:
                case self::PRETTY:
                case self::PREVIOUS:
                case self::PREV:
                case self::PRIMARY:
                case self::PRINTBLOBTOCLOB:
                case self::PRIORITY:
                case self::PRIVATE:
                case self::PRIVATE_SGA:
                case self::PRIVILEGED:
                case self::PRIVILEGE:
                case self::PRIVILEGES:
                case self::PROCEDURAL:
                case self::PROCEDURE:
                case self::PROCESS:
                case self::PROFILE:
                case self::PROGRAM:
                case self::PROJECT:
                case self::PROPAGATE:
                case self::PROTECTED:
                case self::PROTECTION:
                case self::PROXY:
                case self::PRUNING:
                case self::PULL_PRED:
                case self::PURGE:
                case self::PUSH_PRED:
                case self::PUSH_SUBQ:
                case self::PX_FAULT_TOLERANCE:
                case self::PX_GRANULE:
                case self::PX_JOIN_FILTER:
                case self::QB_NAME:
                case self::QUERY_BLOCK:
                case self::QUERY:
                case self::QUEUE_CURR:
                case self::QUEUE:
                case self::QUEUE_ROWP:
                case self::QUIESCE:
                case self::QUORUM:
                case self::QUOTA:
                case self::RAISE:
                case self::RANDOM_LOCAL:
                case self::RANDOM:
                case self::RANGE:
                case self::RANKM:
                case self::RAPIDLY:
                case self::RAW:
                case self::RAWTOHEX:
                case self::RAWTONHEX:
                case self::RBA:
                case self::RBO_OUTLINE:
                case self::RDBA:
                case self::READ:
                case self::READS:
                case self::REALM:
                case self::REAL:
                case self::REBALANCE:
                case self::REBUILD:
                case self::RECORD:
                case self::RECORDS_PER_BLOCK:
                case self::RECOVERABLE:
                case self::RECOVER:
                case self::RECOVERY:
                case self::RECYCLEBIN:
                case self::RECYCLE:
                case self::REDACTION:
                case self::REDEFINE:
                case self::REDO:
                case self::REDUCED:
                case self::REDUNDANCY:
                case self::REF_CASCADE_CURSOR:
                case self::REFERENCED:
                case self::REFERENCE:
                case self::REFERENCES:
                case self::REFERENCING:
                case self::REF:
                case self::REFRESH:
                case self::REFTOHEX:
                case self::REGEXP_COUNT:
                case self::REGEXP_INSTR:
                case self::REGEXP_LIKE:
                case self::REGEXP_REPLACE:
                case self::REGEXP_SUBSTR:
                case self::REGISTER:
                case self::REGR_AVGX:
                case self::REGR_AVGY:
                case self::REGR_COUNT:
                case self::REGR_INTERCEPT:
                case self::REGR_R2:
                case self::REGR_SLOPE:
                case self::REGR_SXX:
                case self::REGR_SXY:
                case self::REGR_SYY:
                case self::REGULAR:
                case self::REJECT:
                case self::REKEY:
                case self::RELATIONAL:
                case self::RELOCATE:
                case self::RELY:
                case self::REMAINDER:
                case self::REMOTE_MAPPED:
                case self::REMOVE:
                case self::RENAME:
                case self::REPAIR:
                case self::REPEAT:
                case self::REPLACE:
                case self::REPLICATION:
                case self::REQUIRED:
                case self::RESETLOGS:
                case self::RESET:
                case self::RESIZE:
                case self::RESOLVE:
                case self::RESOLVER:
                case self::RESPECT:
                case self::RESTART:
                case self::RESTORE_AS_INTERVALS:
                case self::RESTORE:
                case self::RESTRICT_ALL_REF_CONS:
                case self::RESTRICTED:
                case self::RESTRICT_REFERENCES:
                case self::RESTRICT:
                case self::RESULT_CACHE:
                case self::RESULT:
                case self::RESUMABLE:
                case self::RESUME:
                case self::RETENTION:
                case self::RETRY_ON_ROW_CHANGE:
                case self::RETURNING:
                case self::RETURN:
                case self::REUSE:
                case self::REVERSE:
                case self::REWRITE_OR_ERROR:
                case self::REWRITE:
                case self::RIGHT:
                case self::ROLE:
                case self::ROLESET:
                case self::ROLES:
                case self::ROLLBACK:
                case self::ROLLING:
                case self::ROLLUP:
                case self::ROWDEPENDENCIES:
                case self::ROWID_MAPPING_TABLE:
                case self::ROWID:
                case self::ROWIDTOCHAR:
                case self::ROWIDTONCHAR:
                case self::ROW_LENGTH:
                case self::ROWNUM:
                case self::ROW:
                case self::ROWS:
                case self::RPAD:
                case self::RTRIM:
                case self::RULE:
                case self::RULES:
                case self::RUNNING:
                case self::SALT:
                case self::SAMPLE:
                case self::SAVE_AS_INTERVALS:
                case self::SAVEPOINT:
                case self::SAVE:
                case self::SB4:
                case self::SCALE_ROWS:
                case self::SCALE:
                case self::SCAN_INSTANCES:
                case self::SCAN:
                case self::SCHEDULER:
                case self::SCHEMACHECK:
                case self::SCHEMA:
                case self::SCN_ASCENDING:
                case self::SCN:
                case self::SCOPE:
                case self::SCRUB:
                case self::SD_ALL:
                case self::SD_INHIBIT:
                case self::SDO_GEOM_MBR:
                case self::SD_SHOW:
                case self::SEARCH:
                case self::SECOND:
                case self::SECRET:
                case self::SECUREFILE_DBA:
                case self::SECUREFILE:
                case self::SECURITY:
                case self::SEED:
                case self::SEG_BLOCK:
                case self::SEG_FILE:
                case self::SEGMENT:
                case self::SELECTIVITY:
                case self::SELF:
                case self::SEMIJOIN_DRIVER:
                case self::SEMIJOIN:
                case self::SEMI_TO_INNER:
                case self::SEQUENCED:
                case self::SEQUENCE:
                case self::SEQUENTIAL:
                case self::SERIALIZABLE:
                case self::SERIALLY_REUSABLE:
                case self::SERIAL:
                case self::SERVERERROR:
                case self::SERVICE_NAME_CONVERT:
                case self::SERVICES:
                case self::SESSION_CACHED_CURSORS:
                case self::SESSION:
                case self::SESSIONS_PER_USER:
                case self::SESSIONTIMEZONE:
                case self::SESSIONTZNAME:
                case self::SET:
                case self::SETS:
                case self::SETTINGS:
                case self::SET_TO_JOIN:
                case self::SEVERE:
                case self::SHARED_POOL:
                case self::SHARED:
                case self::SHARING:
                case self::SHELFLIFE:
                case self::SHOW:
                case self::SHRINK:
                case self::SHUTDOWN:
                case self::SIBLINGS:
                case self::SID:
                case self::SIGNAL_COMPONENT:
                case self::SIGNAL_FUNCTION:
                case self::SIGN:
                case self::SIGNTYPE:
                case self::SIMPLE_INTEGER:
                case self::SIMPLE:
                case self::SINGLE:
                case self::SINGLETASK:
                case self::SINH:
                case self::SIN:
                case self::SKIP_EXT_OPTIMIZER:
                case self::SKIP_:
                case self::SKIP_UNQ_UNUSABLE_IDX:
                case self::SKIP_UNUSABLE_INDEXES:
                case self::SMALLFILE:
                case self::SMALLINT:
                case self::SNAPSHOT:
                case self::SOME:
                case self::SORT:
                case self::SOUNDEX:
                case self::SOURCE_FILE_DIRECTORY:
                case self::SOURCE_FILE_NAME_CONVERT:
                case self::SOURCE:
                case self::SPACE_KEYWORD:
                case self::SPECIFICATION:
                case self::SPFILE:
                case self::SPLIT:
                case self::SPREADSHEET:
                case self::SQLDATA:
                case self::SQLERROR:
                case self::SQLLDR:
                case self::SQL:
                case self::SQL_TRACE:
                case self::SQL_TRANSLATION_PROFILE:
                case self::SQRT:
                case self::STALE:
                case self::STANDALONE:
                case self::STANDARD_HASH:
                case self::STANDBY_MAX_DATA_DELAY:
                case self::STANDBYS:
                case self::STANDBY:
                case self::STAR:
                case self::STAR_TRANSFORMATION:
                case self::STARTUP:
                case self::STATEMENT_ID:
                case self::STATEMENT_QUEUING:
                case self::STATEMENTS:
                case self::STATEMENT:
                case self::STATE:
                case self::STATIC:
                case self::STATISTICS:
                case self::STATS_BINOMIAL_TEST:
                case self::STATS_CROSSTAB:
                case self::STATS_F_TEST:
                case self::STATS_KS_TEST:
                case self::STATS_MODE:
                case self::STATS_MW_TEST:
                case self::STATS_ONE_WAY_ANOVA:
                case self::STATS_T_TEST_INDEP:
                case self::STATS_T_TEST_INDEPU:
                case self::STATS_T_TEST_ONE:
                case self::STATS_T_TEST_PAIRED:
                case self::STATS_WSR_TEST:
                case self::STDDEV_POP:
                case self::STDDEV_SAMP:
                case self::STOP:
                case self::STORAGE:
                case self::STORE:
                case self::STREAMS:
                case self::STREAM:
                case self::STRICT:
                case self::STRING:
                case self::STRIPE_COLUMNS:
                case self::STRIPE_WIDTH:
                case self::STRIP:
                case self::STRUCTURE:
                case self::SUBMULTISET:
                case self::SUBPARTITION_REL:
                case self::SUBPARTITIONS:
                case self::SUBPARTITION:
                case self::SUBQUERIES:
                case self::SUBQUERY_PRUNING:
                case self::SUBSCRIBE:
                case self::SUBSET:
                case self::SUBSTITUTABLE:
                case self::SUBSTR2:
                case self::SUBSTR4:
                case self::SUBSTRB:
                case self::SUBSTRC:
                case self::SUBTYPE:
                case self::SUCCESSFUL:
                case self::SUCCESS:
                case self::SUMMARY:
                case self::SUPPLEMENTAL:
                case self::SUSPEND:
                case self::SWAP_JOIN_INPUTS:
                case self::SWITCHOVER:
                case self::SWITCH:
                case self::SYNCHRONOUS:
                case self::SYNC:
                case self::SYSASM:
                case self::SYS_AUDIT:
                case self::SYSAUX:
                case self::SYSBACKUP:
                case self::SYS_CHECKACL:
                case self::SYS_CHECK_PRIVILEGE:
                case self::SYS_CONNECT_BY_PATH:
                case self::SYS_CONTEXT:
                case self::SYSDATE:
                case self::SYSDBA:
                case self::SYS_DBURIGEN:
                case self::SYSDG:
                case self::SYS_DL_CURSOR:
                case self::SYS_DM_RXFORM_CHR:
                case self::SYS_DM_RXFORM_NUM:
                case self::SYS_DOM_COMPARE:
                case self::SYS_DST_PRIM2SEC:
                case self::SYS_DST_SEC2PRIM:
                case self::SYS_ET_BFILE_TO_RAW:
                case self::SYS_ET_BLOB_TO_IMAGE:
                case self::SYS_ET_IMAGE_TO_BLOB:
                case self::SYS_ET_RAW_TO_BFILE:
                case self::SYS_EXTPDTXT:
                case self::SYS_EXTRACT_UTC:
                case self::SYS_FBT_INSDEL:
                case self::SYS_FILTER_ACLS:
                case self::SYS_FNMATCHES:
                case self::SYS_FNREPLACE:
                case self::SYS_GET_ACLIDS:
                case self::SYS_GET_COL_ACLIDS:
                case self::SYS_GET_PRIVILEGES:
                case self::SYS_GETTOKENID:
                case self::SYS_GETXTIVAL:
                case self::SYS_GUID:
                case self::SYSGUID:
                case self::SYSKM:
                case self::SYS_MAKE_XMLNODEID:
                case self::SYS_MAKEXML:
                case self::SYS_MKXMLATTR:
                case self::SYS_MKXTI:
                case self::SYSOBJ:
                case self::SYS_OP_ADT2BIN:
                case self::SYS_OP_ADTCONS:
                case self::SYS_OP_ALSCRVAL:
                case self::SYS_OP_ATG:
                case self::SYS_OP_BIN2ADT:
                case self::SYS_OP_BITVEC:
                case self::SYS_OP_BL2R:
                case self::SYS_OP_BLOOM_FILTER_LIST:
                case self::SYS_OP_BLOOM_FILTER:
                case self::SYS_OP_C2C:
                case self::SYS_OP_CAST:
                case self::SYS_OP_CEG:
                case self::SYS_OP_CL2C:
                case self::SYS_OP_COMBINED_HASH:
                case self::SYS_OP_COMP:
                case self::SYS_OP_CONVERT:
                case self::SYS_OP_COUNTCHG:
                case self::SYS_OP_CSCONV:
                case self::SYS_OP_CSCONVTEST:
                case self::SYS_OP_CSR:
                case self::SYS_OP_CSX_PATCH:
                case self::SYS_OP_CYCLED_SEQ:
                case self::SYS_OP_DECOMP:
                case self::SYS_OP_DESCEND:
                case self::SYS_OP_DISTINCT:
                case self::SYS_OP_DRA:
                case self::SYS_OP_DUMP:
                case self::SYS_OP_DV_CHECK:
                case self::SYS_OP_ENFORCE_NOT_NULL:
                case self::SYSOPER:
                case self::SYS_OP_EXTRACT:
                case self::SYS_OP_GROUPING:
                case self::SYS_OP_GUID:
                case self::SYS_OP_HASH:
                case self::SYS_OP_IIX:
                case self::SYS_OP_ITR:
                case self::SYS_OP_KEY_VECTOR_CREATE:
                case self::SYS_OP_KEY_VECTOR_FILTER_LIST:
                case self::SYS_OP_KEY_VECTOR_FILTER:
                case self::SYS_OP_KEY_VECTOR_SUCCEEDED:
                case self::SYS_OP_KEY_VECTOR_USE:
                case self::SYS_OP_LBID:
                case self::SYS_OP_LOBLOC2BLOB:
                case self::SYS_OP_LOBLOC2CLOB:
                case self::SYS_OP_LOBLOC2ID:
                case self::SYS_OP_LOBLOC2NCLOB:
                case self::SYS_OP_LOBLOC2TYP:
                case self::SYS_OP_LSVI:
                case self::SYS_OP_LVL:
                case self::SYS_OP_MAKEOID:
                case self::SYS_OP_MAP_NONNULL:
                case self::SYS_OP_MSR:
                case self::SYS_OP_NICOMBINE:
                case self::SYS_OP_NIEXTRACT:
                case self::SYS_OP_NII:
                case self::SYS_OP_NIX:
                case self::SYS_OP_NOEXPAND:
                case self::SYS_OP_NTCIMG:
                case self::SYS_OP_NUMTORAW:
                case self::SYS_OP_OIDVALUE:
                case self::SYS_OP_OPNSIZE:
                case self::SYS_OP_PAR_1:
                case self::SYS_OP_PARGID_1:
                case self::SYS_OP_PARGID:
                case self::SYS_OP_PAR:
                case self::SYS_OP_PART_ID:
                case self::SYS_OP_PIVOT:
                case self::SYS_OP_R2O:
                case self::SYS_OP_RAWTONUM:
                case self::SYS_OP_RDTM:
                case self::SYS_OP_REF:
                case self::SYS_OP_RMTD:
                case self::SYS_OP_ROWIDTOOBJ:
                case self::SYS_OP_RPB:
                case self::SYS_OPTLOBPRBSC:
                case self::SYS_OP_TOSETID:
                case self::SYS_OP_TPR:
                case self::SYS_OP_TRTB:
                case self::SYS_OPTXICMP:
                case self::SYS_OPTXQCASTASNQ:
                case self::SYS_OP_UNDESCEND:
                case self::SYS_OP_VECAND:
                case self::SYS_OP_VECBIT:
                case self::SYS_OP_VECOR:
                case self::SYS_OP_VECXOR:
                case self::SYS_OP_VERSION:
                case self::SYS_OP_VREF:
                case self::SYS_OP_VVD:
                case self::SYS_OP_XMLCONS_FOR_CSX:
                case self::SYS_OP_XPTHATG:
                case self::SYS_OP_XPTHIDX:
                case self::SYS_OP_XPTHOP:
                case self::SYS_OP_XTXT2SQLT:
                case self::SYS_OP_ZONE_ID:
                case self::SYS_ORDERKEY_DEPTH:
                case self::SYS_ORDERKEY_MAXCHILD:
                case self::SYS_ORDERKEY_PARENT:
                case self::SYS_PARALLEL_TXN:
                case self::SYS_PATHID_IS_ATTR:
                case self::SYS_PATHID_IS_NMSPC:
                case self::SYS_PATHID_LASTNAME:
                case self::SYS_PATHID_LASTNMSPC:
                case self::SYS_PATH_REVERSE:
                case self::SYS_PXQEXTRACT:
                case self::SYS_RAW_TO_XSID:
                case self::SYS_RID_ORDER:
                case self::SYS_ROW_DELTA:
                case self::SYS_SC_2_XMLT:
                case self::SYS_SYNRCIREDO:
                case self::SYSTEM_DEFINED:
                case self::SYSTEM:
                case self::SYSTIMESTAMP:
                case self::SYS_TYPEID:
                case self::SYS_UMAKEXML:
                case self::SYS_XMLANALYZE:
                case self::SYS_XMLCONTAINS:
                case self::SYS_XMLCONV:
                case self::SYS_XMLEXNSURI:
                case self::SYS_XMLGEN:
                case self::SYS_XMLI_LOC_ISNODE:
                case self::SYS_XMLI_LOC_ISTEXT:
                case self::SYS_XMLINSTR:
                case self::SYS_XMLLOCATOR_GETSVAL:
                case self::SYS_XMLNODEID_GETCID:
                case self::SYS_XMLNODEID_GETLOCATOR:
                case self::SYS_XMLNODEID_GETOKEY:
                case self::SYS_XMLNODEID_GETPATHID:
                case self::SYS_XMLNODEID_GETPTRID:
                case self::SYS_XMLNODEID_GETRID:
                case self::SYS_XMLNODEID_GETSVAL:
                case self::SYS_XMLNODEID_GETTID:
                case self::SYS_XMLNODEID:
                case self::SYS_XMLT_2_SC:
                case self::SYS_XMLTRANSLATE:
                case self::SYS_XMLTYPE2SQL:
                case self::SYS_XQ_ASQLCNV:
                case self::SYS_XQ_ATOMCNVCHK:
                case self::SYS_XQBASEURI:
                case self::SYS_XQCASTABLEERRH:
                case self::SYS_XQCODEP2STR:
                case self::SYS_XQCODEPEQ:
                case self::SYS_XQCON2SEQ:
                case self::SYS_XQCONCAT:
                case self::SYS_XQDELETE:
                case self::SYS_XQDFLTCOLATION:
                case self::SYS_XQDOC:
                case self::SYS_XQDOCURI:
                case self::SYS_XQDURDIV:
                case self::SYS_XQED4URI:
                case self::SYS_XQENDSWITH:
                case self::SYS_XQERRH:
                case self::SYS_XQERR:
                case self::SYS_XQESHTMLURI:
                case self::SYS_XQEXLOBVAL:
                case self::SYS_XQEXSTWRP:
                case self::SYS_XQEXTRACT:
                case self::SYS_XQEXTRREF:
                case self::SYS_XQEXVAL:
                case self::SYS_XQFB2STR:
                case self::SYS_XQFNBOOL:
                case self::SYS_XQFNCMP:
                case self::SYS_XQFNDATIM:
                case self::SYS_XQFNLNAME:
                case self::SYS_XQFNNM:
                case self::SYS_XQFNNSURI:
                case self::SYS_XQFNPREDTRUTH:
                case self::SYS_XQFNQNM:
                case self::SYS_XQFNROOT:
                case self::SYS_XQFORMATNUM:
                case self::SYS_XQFTCONTAIN:
                case self::SYS_XQFUNCR:
                case self::SYS_XQGETCONTENT:
                case self::SYS_XQINDXOF:
                case self::SYS_XQINSERT:
                case self::SYS_XQINSPFX:
                case self::SYS_XQIRI2URI:
                case self::SYS_XQLANG:
                case self::SYS_XQLLNMFRMQNM:
                case self::SYS_XQMKNODEREF:
                case self::SYS_XQNILLED:
                case self::SYS_XQNODENAME:
                case self::SYS_XQNORMSPACE:
                case self::SYS_XQNORMUCODE:
                case self::SYS_XQ_NRNG:
                case self::SYS_XQNSP4PFX:
                case self::SYS_XQNSPFRMQNM:
                case self::SYS_XQPFXFRMQNM:
                case self::SYS_XQ_PKSQL2XML:
                case self::SYS_XQPOLYABS:
                case self::SYS_XQPOLYADD:
                case self::SYS_XQPOLYCEL:
                case self::SYS_XQPOLYCSTBL:
                case self::SYS_XQPOLYCST:
                case self::SYS_XQPOLYDIV:
                case self::SYS_XQPOLYFLR:
                case self::SYS_XQPOLYMOD:
                case self::SYS_XQPOLYMUL:
                case self::SYS_XQPOLYRND:
                case self::SYS_XQPOLYSQRT:
                case self::SYS_XQPOLYSUB:
                case self::SYS_XQPOLYUMUS:
                case self::SYS_XQPOLYUPLS:
                case self::SYS_XQPOLYVEQ:
                case self::SYS_XQPOLYVGE:
                case self::SYS_XQPOLYVGT:
                case self::SYS_XQPOLYVLE:
                case self::SYS_XQPOLYVLT:
                case self::SYS_XQPOLYVNE:
                case self::SYS_XQREF2VAL:
                case self::SYS_XQRENAME:
                case self::SYS_XQREPLACE:
                case self::SYS_XQRESVURI:
                case self::SYS_XQRNDHALF2EVN:
                case self::SYS_XQRSLVQNM:
                case self::SYS_XQRYENVPGET:
                case self::SYS_XQRYVARGET:
                case self::SYS_XQRYWRP:
                case self::SYS_XQSEQ2CON4XC:
                case self::SYS_XQSEQ2CON:
                case self::SYS_XQSEQDEEPEQ:
                case self::SYS_XQSEQINSB:
                case self::SYS_XQSEQRM:
                case self::SYS_XQSEQRVS:
                case self::SYS_XQSEQSUB:
                case self::SYS_XQSEQTYPMATCH:
                case self::SYS_XQSTARTSWITH:
                case self::SYS_XQSTATBURI:
                case self::SYS_XQSTR2CODEP:
                case self::SYS_XQSTRJOIN:
                case self::SYS_XQSUBSTRAFT:
                case self::SYS_XQSUBSTRBEF:
                case self::SYS_XQTOKENIZE:
                case self::SYS_XQTREATAS:
                case self::SYS_XQ_UPKXML2SQL:
                case self::SYS_XQXFORM:
                case self::SYS_XSID_TO_RAW:
                case self::SYS_ZMAP_FILTER:
                case self::SYS_ZMAP_REFRESH:
                case self::TABLE_LOOKUP_BY_NL:
                case self::TABLESPACE_NO:
                case self::TABLESPACE:
                case self::TABLES:
                case self::TABLE_STATS:
                case self::TABLE:
                case self::TABNO:
                case self::TAG:
                case self::TANH:
                case self::TAN:
                case self::TBLORIDXPARTNUM:
                case self::TEMPFILE:
                case self::TEMPLATE:
                case self::TEMPORARY:
                case self::TEMP_TABLE:
                case self::TEST:
                case self::TEXT:
                case self::THAN:
                case self::THEN:
                case self::THE:
                case self::THREAD:
                case self::THROUGH:
                case self::TIER:
                case self::TIES:
                case self::TIMEOUT:
                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                case self::TIMESTAMP:
                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                case self::TIMESTAMP_UNCONSTRAINED:
                case self::TIMES:
                case self::TIME:
                case self::TIMEZONE_ABBR:
                case self::TIMEZONE_HOUR:
                case self::TIMEZONE_MINUTE:
                case self::TIMEZONE_OFFSET:
                case self::TIMEZONE_REGION:
                case self::TIME_ZONE:
                case self::TIV_GB:
                case self::TIV_SSF:
                case self::TO_ACLID:
                case self::TO_BINARY_DOUBLE:
                case self::TO_BINARY_FLOAT:
                case self::TO_BLOB:
                case self::TO_CLOB:
                case self::TO_DSINTERVAL:
                case self::TO_LOB:
                case self::TO_MULTI_BYTE:
                case self::TO_NCHAR:
                case self::TO_NCLOB:
                case self::TO_NUMBER:
                case self::TOPLEVEL:
                case self::TO_SINGLE_BYTE:
                case self::TO_TIMESTAMP:
                case self::TO_TIMESTAMP_TZ:
                case self::TO_TIME:
                case self::TO_TIME_TZ:
                case self::TO_YMINTERVAL:
                case self::TRACE:
                case self::TRACING:
                case self::TRACKING:
                case self::TRAILING:
                case self::TRANSACTION:
                case self::TRANSFORM_DISTINCT_AGG:
                case self::TRANSITIONAL:
                case self::TRANSITION:
                case self::TRANSLATE:
                case self::TRANSLATION:
                case self::TREAT:
                case self::TRIGGERS:
                case self::TRIGGER:
                case self::TRUE:
                case self::TRUNCATE:
                case self::TRUNC:
                case self::TRUSTED:
                case self::TRUST:
                case self::TUNING:
                case self::TX:
                case self::TYPES:
                case self::TYPE:
                case self::TZ_OFFSET:
                case self::UB2:
                case self::UBA:
                case self::UCS2:
                case self::UID:
                case self::UNARCHIVED:
                case self::UNBOUNDED:
                case self::UNBOUND:
                case self::UNCONDITIONAL:
                case self::UNDER:
                case self::UNDO:
                case self::UNDROP:
                case self::UNIFORM:
                case self::UNISTR:
                case self::UNLIMITED:
                case self::UNLOAD:
                case self::UNLOCK:
                case self::UNMATCHED:
                case self::UNNEST_INNERJ_DISTINCT_VIEW:
                case self::UNNEST_NOSEMIJ_NODISTINCTVIEW:
                case self::UNNEST_SEMIJ_VIEW:
                case self::UNNEST:
                case self::UNPACKED:
                case self::UNPIVOT:
                case self::UNPLUG:
                case self::UNPROTECTED:
                case self::UNQUIESCE:
                case self::UNRECOVERABLE:
                case self::UNRESTRICTED:
                case self::UNSUBSCRIBE:
                case self::UNTIL:
                case self::UNUSABLE:
                case self::UNUSED:
                case self::UPDATABLE:
                case self::UPDATED:
                case self::UPDATEXML:
                case self::UPD_INDEXES:
                case self::UPD_JOININDEX:
                case self::UPGRADE:
                case self::UPPER:
                case self::UPSERT:
                case self::UROWID:
                case self::USABLE:
                case self::USAGE:
                case self::USE_ANTI:
                case self::USE_CONCAT:
                case self::USE_CUBE:
                case self::USE_HASH_AGGREGATION:
                case self::USE_HASH_GBY_FOR_PUSHDOWN:
                case self::USE_HASH:
                case self::USE_HIDDEN_PARTITIONS:
                case self::USE_INVISIBLE_INDEXES:
                case self::USE_MERGE_CARTESIAN:
                case self::USE_MERGE:
                case self::USE_NL:
                case self::USE_NL_WITH_INDEX:
                case self::USE_PRIVATE_OUTLINES:
                case self::USER_DATA:
                case self::USER_DEFINED:
                case self::USERENV:
                case self::USERGROUP:
                case self::USER_RECYCLEBIN:
                case self::USERS:
                case self::USER_TABLESPACES:
                case self::USER:
                case self::USE_SEMI:
                case self::USE_STORED_OUTLINES:
                case self::USE_TTT_FOR_GSETS:
                case self::USE:
                case self::USE_VECTOR_AGGREGATION:
                case self::USE_WEAK_NAME_RESL:
                case self::USING_NO_EXPAND:
                case self::USING:
                case self::UTF16BE:
                case self::UTF16LE:
                case self::UTF32:
                case self::UTF8:
                case self::V1:
                case self::V2:
                case self::VALIDATE:
                case self::VALIDATION:
                case self::VALID_TIME_END:
                case self::VALUE:
                case self::VARCHAR2:
                case self::VARCHAR:
                case self::VARIABLE:
                case self::VAR_POP:
                case self::VARRAYS:
                case self::VARRAY:
                case self::VAR_SAMP:
                case self::VARYING:
                case self::VECTOR_READ_TRACE:
                case self::VECTOR_READ:
                case self::VECTOR_TRANSFORM_DIMS:
                case self::VECTOR_TRANSFORM_FACT:
                case self::VECTOR_TRANSFORM:
                case self::VERIFIER:
                case self::VERIFY:
                case self::VERSIONING:
                case self::VERSIONS_ENDSCN:
                case self::VERSIONS_ENDTIME:
                case self::VERSIONS_OPERATION:
                case self::VERSIONS_STARTSCN:
                case self::VERSIONS_STARTTIME:
                case self::VERSIONS:
                case self::VERSIONS_XID:
                case self::VERSION:
                case self::VIOLATION:
                case self::VIRTUAL:
                case self::VISIBILITY:
                case self::VISIBLE:
                case self::VOLUME:
                case self::VSIZE:
                case self::WAIT:
                case self::WALLET:
                case self::WARNING:
                case self::WEEKS:
                case self::WEEK:
                case self::WELLFORMED:
                case self::WHENEVER:
                case self::WHEN:
                case self::WHILE:
                case self::WHITESPACE:
                case self::WIDTH_BUCKET:
                case self::WITHIN:
                case self::WITHOUT:
                case self::WITH_PLSQL:
                case self::WORK:
                case self::WRAPPED:
                case self::WRAPPER:
                case self::WRITE:
                case self::XDB_FASTPATH_INSERT:
                case self::X_DYN_PRUNE:
                case self::XID:
                case self::XML2OBJECT:
                case self::XMLAGG:
                case self::XMLATTRIBUTES:
                case self::XMLCAST:
                case self::XMLCDATA:
                case self::XMLCOLATTVAL:
                case self::XMLCOMMENT:
                case self::XMLCONCAT:
                case self::XMLDIFF:
                case self::XML_DML_RWT_STMT:
                case self::XMLELEMENT:
                case self::XMLEXISTS2:
                case self::XMLEXISTS:
                case self::XMLFOREST:
                case self::XMLINDEX_REWRITE_IN_SELECT:
                case self::XMLINDEX_REWRITE:
                case self::XMLINDEX_SEL_IDX_TBL:
                case self::XMLISNODE:
                case self::XMLISVALID:
                case self::XMLNAMESPACES:
                case self::XMLPARSE:
                case self::XMLPATCH:
                case self::XMLPI:
                case self::XMLQUERYVAL:
                case self::XMLQUERY:
                case self::XMLROOT:
                case self::XMLSCHEMA:
                case self::XMLSERIALIZE:
                case self::XMLTABLE:
                case self::XMLTRANSFORMBLOB:
                case self::XMLTRANSFORM:
                case self::XMLTYPE:
                case self::XML:
                case self::XPATHTABLE:
                case self::XS_SYS_CONTEXT:
                case self::XS:
                case self::YEARS:
                case self::YEAR:
                case self::YES:
                case self::YMINTERVAL_UNCONSTRAINED:
                case self::ZONEMAP:
                case self::ZONE:
                case self::PREDICTION:
                case self::PREDICTION_BOUNDS:
                case self::PREDICTION_COST:
                case self::PREDICTION_DETAILS:
                case self::PREDICTION_PROBABILITY:
                case self::PREDICTION_SET:
                case self::CUME_DIST:
                case self::DENSE_RANK:
                case self::LISTAGG:
                case self::PERCENT_RANK:
                case self::PERCENTILE_CONT:
                case self::PERCENTILE_DISC:
                case self::RANK:
                case self::AVG:
                case self::CORR:
                case self::COVAR_:
                case self::LAG:
                case self::LEAD:
                case self::MAX:
                case self::MEDIAN:
                case self::MIN:
                case self::NTILE:
                case self::NVL:
                case self::RATIO_TO_REPORT:
                case self::REGR_:
                case self::ROUND:
                case self::ROW_NUMBER:
                case self::SUBSTR:
                case self::TO_CHAR:
                case self::TRIM:
                case self::SUM:
                case self::STDDEV:
                case self::VAR_:
                case self::VARIANCE:
                case self::LEAST:
                case self::GREATEST:
                case self::TO_DATE:
                case self::PERIOD:
                case self::DELIMITED_ID:
                case self::INTRODUCER:
                case self::REGULAR_ID:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11197);
                    $this->general_element();
                    break;

                case self::BINDVAR:
                case self::COLON:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11198);
                    $this->bind_variable();
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function record_name(): Context\Record_nameContext
    {
        $localContext = new Context\Record_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1418, self::RULE_record_name);

        try {
            $this->setState(11203);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::ABORT:
                case self::ABS:
                case self::ACCESS:
                case self::ACCESSED:
                case self::ACCOUNT:
                case self::ACL:
                case self::ACOS:
                case self::ACTION:
                case self::ACTIONS:
                case self::ACTIVATE:
                case self::ACTIVE:
                case self::ACTIVE_COMPONENT:
                case self::ACTIVE_DATA:
                case self::ACTIVE_FUNCTION:
                case self::ACTIVE_TAG:
                case self::ACTIVITY:
                case self::ADAPTIVE_PLAN:
                case self::ADD:
                case self::ADD_COLUMN:
                case self::ADD_GROUP:
                case self::ADD_MONTHS:
                case self::ADJ_DATE:
                case self::ADMIN:
                case self::ADMINISTER:
                case self::ADMINISTRATOR:
                case self::ADVANCED:
                case self::ADVISE:
                case self::ADVISOR:
                case self::AFD_DISKSTRING:
                case self::AFTER:
                case self::AGENT:
                case self::AGGREGATE:
                case self::A_LETTER:
                case self::ALIAS:
                case self::ALLOCATE:
                case self::ALLOW:
                case self::ALL_ROWS:
                case self::ALWAYS:
                case self::ANALYZE:
                case self::ANCILLARY:
                case self::AND_EQUAL:
                case self::ANOMALY:
                case self::ANSI_REARCH:
                case self::ANTIJOIN:
                case self::ANYSCHEMA:
                case self::APPEND:
                case self::APPENDCHILDXML:
                case self::APPEND_VALUES:
                case self::APPLICATION:
                case self::APPLY:
                case self::APPROX_COUNT_DISTINCT:
                case self::ARCHIVAL:
                case self::ARCHIVE:
                case self::ARCHIVED:
                case self::ARCHIVELOG:
                case self::ARRAY:
                case self::ASCII:
                case self::ASCIISTR:
                case self::ASIN:
                case self::ASIS:
                case self::ASSEMBLY:
                case self::ASSIGN:
                case self::ASSOCIATE:
                case self::ASYNC:
                case self::ASYNCHRONOUS:
                case self::ATAN2:
                case self::ATAN:
                case self::AT:
                case self::ATTRIBUTE:
                case self::ATTRIBUTES:
                case self::AUTHENTICATED:
                case self::AUTHENTICATION:
                case self::AUTHID:
                case self::AUTHORIZATION:
                case self::AUTOALLOCATE:
                case self::AUTO:
                case self::AUTOEXTEND:
                case self::AUTO_LOGIN:
                case self::AUTOMATIC:
                case self::AUTONOMOUS_TRANSACTION:
                case self::AUTO_REOPTIMIZE:
                case self::AVAILABILITY:
                case self::AVRO:
                case self::BACKGROUND:
                case self::BACKUP:
                case self::BASIC:
                case self::BASICFILE:
                case self::BATCH:
                case self::BATCHSIZE:
                case self::BATCH_TABLE_ACCESS_BY_ROWID:
                case self::BECOME:
                case self::BEFORE:
                case self::BEGIN:
                case self::BEGINNING:
                case self::BEGIN_OUTLINE_DATA:
                case self::BEHALF:
                case self::BEQUEATH:
                case self::BFILE:
                case self::BFILENAME:
                case self::BIGFILE:
                case self::BINARY:
                case self::BINARY_DOUBLE:
                case self::BINARY_DOUBLE_INFINITY:
                case self::BINARY_DOUBLE_NAN:
                case self::BINARY_FLOAT:
                case self::BINARY_FLOAT_INFINITY:
                case self::BINARY_FLOAT_NAN:
                case self::BINARY_INTEGER:
                case self::BIND_AWARE:
                case self::BINDING:
                case self::BIN_TO_NUM:
                case self::BITAND:
                case self::BITMAP_AND:
                case self::BITMAP:
                case self::BITMAPS:
                case self::BITMAP_TREE:
                case self::BITS:
                case self::BLOB:
                case self::BLOCK:
                case self::BLOCK_RANGE:
                case self::BLOCKS:
                case self::BLOCKSIZE:
                case self::BODY:
                case self::BOOLEAN:
                case self::BOTH:
                case self::BOUND:
                case self::BRANCH:
                case self::BREADTH:
                case self::BROADCAST:
                case self::BSON:
                case self::BUFFER:
                case self::BUFFER_CACHE:
                case self::BUFFER_POOL:
                case self::BUILD:
                case self::BULK:
                case self::BYPASS_RECURSIVE_CHECK:
                case self::BYPASS_UJVC:
                case self::BYTE:
                case self::CACHE:
                case self::CACHE_CB:
                case self::CACHE_INSTANCES:
                case self::CACHE_TEMP_TABLE:
                case self::CACHING:
                case self::CALCULATED:
                case self::CALLBACK:
                case self::CALL:
                case self::CANCEL:
                case self::CAPACITY:
                case self::CARDINALITY:
                case self::CASCADE:
                case self::CASE:
                case self::CAST:
                case self::CATEGORY:
                case self::CDBDEFAULT:
                case self::CEIL:
                case self::CELL_FLASH_CACHE:
                case self::CERTIFICATE:
                case self::CFILE:
                case self::CHAINED:
                case self::CHANGE:
                case self::CHANGE_DUPKEY_ERROR_INDEX:
                case self::CHARACTER:
                case self::CHAR:
                case self::CHAR_CS:
                case self::CHARTOROWID:
                case self::CHECK_ACL_REWRITE:
                case self::CHECKPOINT:
                case self::CHILD:
                case self::CHOOSE:
                case self::CHR:
                case self::CHUNK:
                case self::CLASS:
                case self::CLASSIFIER:
                case self::CLEANUP:
                case self::CLEAR:
                case self::C_LETTER:
                case self::CLIENT:
                case self::CLOB:
                case self::CLONE:
                case self::CLOSE_CACHED_OPEN_CURSORS:
                case self::CLOSE:
                case self::CLUSTER_BY_ROWID:
                case self::CLUSTER:
                case self::CLUSTER_DETAILS:
                case self::CLUSTER_DISTANCE:
                case self::CLUSTER_ID:
                case self::CLUSTERING:
                case self::CLUSTERING_FACTOR:
                case self::CLUSTER_PROBABILITY:
                case self::CLUSTER_SET:
                case self::COALESCE:
                case self::COALESCE_SQ:
                case self::COARSE:
                case self::CO_AUTH_IND:
                case self::COLD:
                case self::COLLECT:
                case self::COLUMNAR:
                case self::COLUMN_AUTH_INDICATOR:
                case self::COLUMN:
                case self::COLUMNS:
                case self::COLUMN_STATS:
                case self::COLUMN_VALUE:
                case self::COMMENT:
                case self::COMMIT:
                case self::COMMITTED:
                case self::COMMON_DATA:
                case self::COMPACT:
                case self::COMPATIBILITY:
                case self::COMPILE:
                case self::COMPLETE:
                case self::COMPLIANCE:
                case self::COMPONENT:
                case self::COMPONENTS:
                case self::COMPOSE:
                case self::COMPOSITE:
                case self::COMPOSITE_LIMIT:
                case self::COMPOUND:
                case self::COMPUTE:
                case self::CONCAT:
                case self::CON_DBID_TO_ID:
                case self::CONDITIONAL:
                case self::CONDITION:
                case self::CONFIRM:
                case self::CONFORMING:
                case self::CON_GUID_TO_ID:
                case self::CON_ID:
                case self::CON_NAME_TO_ID:
                case self::CONNECT_BY_CB_WHR_ONLY:
                case self::CONNECT_BY_COMBINE_SW:
                case self::CONNECT_BY_COST_BASED:
                case self::CONNECT_BY_ELIM_DUPS:
                case self::CONNECT_BY_FILTERING:
                case self::CONNECT_BY_ISCYCLE:
                case self::CONNECT_BY_ISLEAF:
                case self::CONNECT_BY_ROOT:
                case self::CONNECT_TIME:
                case self::CONSIDER:
                case self::CONSISTENT:
                case self::CONSTANT:
                case self::CONST:
                case self::CONSTRAINT:
                case self::CONSTRAINTS:
                case self::CONSTRUCTOR:
                case self::CONTAINER:
                case self::CONTAINER_DATA:
                case self::CONTAINERS:
                case self::CONTENT:
                case self::CONTENTS:
                case self::CONTEXT:
                case self::CONTINUE:
                case self::CONTROLFILE:
                case self::CON_UID_TO_ID:
                case self::CONVERT:
                case self::COOKIE:
                case self::COPY:
                case self::CORR_K:
                case self::CORR_S:
                case self::CORRUPTION:
                case self::CORRUPT_XID_ALL:
                case self::CORRUPT_XID:
                case self::COS:
                case self::COSH:
                case self::COST:
                case self::COST_XML_QUERY_REWRITE:
                case self::COUNT:
                case self::COVAR_POP:
                case self::COVAR_SAMP:
                case self::CPU_COSTING:
                case self::CPU_PER_CALL:
                case self::CPU_PER_SESSION:
                case self::CRASH:
                case self::CREATE_FILE_DEST:
                case self::CREATE_STORED_OUTLINES:
                case self::CREATION:
                case self::CREDENTIAL:
                case self::CRITICAL:
                case self::CROSS:
                case self::CROSSEDITION:
                case self::CSCONVERT:
                case self::CUBE_AJ:
                case self::CUBE:
                case self::CUBE_GB:
                case self::CUBE_SJ:
                case self::CUME_DISTM:
                case self::CURRENT:
                case self::CURRENT_DATE:
                case self::CURRENT_SCHEMA:
                case self::CURRENT_TIME:
                case self::CURRENT_TIMESTAMP:
                case self::CURRENT_USER:
                case self::CURRENTV:
                case self::CURSOR:
                case self::CURSOR_SHARING_EXACT:
                case self::CURSOR_SPECIFIC_SEGMENT:
                case self::CUSTOMDATUM:
                case self::CV:
                case self::CYCLE:
                case self::DANGLING:
                case self::DATABASE:
                case self::DATA:
                case self::DATAFILE:
                case self::DATAFILES:
                case self::DATAMOVEMENT:
                case self::DATAOBJNO:
                case self::DATAOBJ_TO_MAT_PARTITION:
                case self::DATAOBJ_TO_PARTITION:
                case self::DATAPUMP:
                case self::DATA_SECURITY_REWRITE_LIMIT:
                case self::DATE_MODE:
                case self::DAY:
                case self::DAYS:
                case self::DBA:
                case self::DBA_RECYCLEBIN:
                case self::DBMS_STATS:
                case self::DB_ROLE_CHANGE:
                case self::DBTIMEZONE:
                case self::DB_UNIQUE_NAME:
                case self::DB_VERSION:
                case self::DDL:
                case self::DEALLOCATE:
                case self::DEBUG:
                case self::DEBUGGER:
                case self::DEC:
                case self::DECIMAL:
                case self::DECLARE:
                case self::DECOMPOSE:
                case self::DECORRELATE:
                case self::DECR:
                case self::DECREMENT:
                case self::DECRYPT:
                case self::DEDUPLICATE:
                case self::DEFAULTS:
                case self::DEFERRABLE:
                case self::DEFERRED:
                case self::DEFINED:
                case self::DEFINE:
                case self::DEFINER:
                case self::DEGREE:
                case self::DELAY:
                case self::DELEGATE:
                case self::DELETE_ALL:
                case self::DELETE:
                case self::DELETEXML:
                case self::DEMAND:
                case self::DENSE_RANKM:
                case self::DEPENDENT:
                case self::DEPTH:
                case self::DEQUEUE:
                case self::DEREF:
                case self::DEREF_NO_REWRITE:
                case self::DESTROY:
                case self::DETACHED:
                case self::DETERMINES:
                case self::DETERMINISTIC:
                case self::DICTIONARY:
                case self::DIMENSION:
                case self::DIMENSIONS:
                case self::DIRECT_LOAD:
                case self::DIRECTORY:
                case self::DIRECT_PATH:
                case self::DISABLE_ALL:
                case self::DISABLE:
                case self::DISABLE_PARALLEL_DML:
                case self::DISABLE_PRESET:
                case self::DISABLE_RPKE:
                case self::DISALLOW:
                case self::DISASSOCIATE:
                case self::DISCARD:
                case self::DISCONNECT:
                case self::DISK:
                case self::DISKGROUP:
                case self::DISKS:
                case self::DISMOUNT:
                case self::DISTINGUISHED:
                case self::DISTRIBUTED:
                case self::DISTRIBUTE:
                case self::DML:
                case self::DML_UPDATE:
                case self::DOCFIDELITY:
                case self::DOCUMENT:
                case self::DOMAIN_INDEX_FILTER:
                case self::DOMAIN_INDEX_NO_SORT:
                case self::DOMAIN_INDEX_SORT:
                case self::DOUBLE:
                case self::DOWNGRADE:
                case self::DRIVING_SITE:
                case self::DROP_COLUMN:
                case self::DROP_GROUP:
                case self::DSINTERVAL_UNCONSTRAINED:
                case self::DST_UPGRADE_INSERT_CONV:
                case self::DUMP:
                case self::DUPLICATE:
                case self::DV:
                case self::DYNAMIC:
                case self::DYNAMIC_SAMPLING:
                case self::DYNAMIC_SAMPLING_EST_CDN:
                case self::EACH:
                case self::EDITIONABLE:
                case self::EDITION:
                case self::EDITIONING:
                case self::EDITIONS:
                case self::ELEMENT:
                case self::ELIM_GROUPBY:
                case self::ELIMINATE_JOIN:
                case self::ELIMINATE_OBY:
                case self::ELIMINATE_OUTER_JOIN:
                case self::EM:
                case self::EMPTY_BLOB:
                case self::EMPTY_CLOB:
                case self::EMPTY:
                case self::ENABLE_ALL:
                case self::ENABLE:
                case self::ENABLE_PARALLEL_DML:
                case self::ENABLE_PRESET:
                case self::ENCODING:
                case self::ENCRYPT:
                case self::ENCRYPTION:
                case self::END_OUTLINE_DATA:
                case self::ENFORCED:
                case self::ENFORCE:
                case self::ENQUEUE:
                case self::ENTERPRISE:
                case self::ENTITYESCAPING:
                case self::ENTRY:
                case self::EQUIPART:
                case self::ERR:
                case self::ERROR_ARGUMENT:
                case self::ERROR:
                case self::ERROR_ON_OVERLAP_TIME:
                case self::ERRORS:
                case self::ESCAPE:
                case self::ESTIMATE:
                case self::EVAL:
                case self::EVALNAME:
                case self::EVALUATE:
                case self::EVALUATION:
                case self::EVENTS:
                case self::EVERY:
                case self::EXCEPT:
                case self::EXCEPTION:
                case self::EXCEPTION_INIT:
                case self::EXCEPTIONS:
                case self::EXCHANGE:
                case self::EXCLUDE:
                case self::EXCLUDING:
                case self::EXECUTE:
                case self::EXEMPT:
                case self::EXISTING:
                case self::EXISTS:
                case self::EXISTSNODE:
                case self::EXIT:
                case self::EXPAND_GSET_TO_UNION:
                case self::EXPAND_TABLE:
                case self::EXP:
                case self::EXPIRE:
                case self::EXPLAIN:
                case self::EXPLOSION:
                case self::EXPORT:
                case self::EXPR_CORR_CHECK:
                case self::EXPRESS:
                case self::EXTENDS:
                case self::EXTENT:
                case self::EXTENTS:
                case self::EXTERNAL:
                case self::EXTERNALLY:
                case self::EXTRACTCLOBXML:
                case self::EXTRACT:
                case self::EXTRACTVALUE:
                case self::EXTRA:
                case self::FACILITY:
                case self::FACT:
                case self::FACTOR:
                case self::FACTORIZE_JOIN:
                case self::FAILED:
                case self::FAILED_LOGIN_ATTEMPTS:
                case self::FAILGROUP:
                case self::FAILOVER:
                case self::FAILURE:
                case self::FALSE:
                case self::FAMILY:
                case self::FAR:
                case self::FAST:
                case self::FASTSTART:
                case self::FBTSCAN:
                case self::FEATURE_DETAILS:
                case self::FEATURE_ID:
                case self::FEATURE_SET:
                case self::FEATURE_VALUE:
                case self::FETCH:
                case self::FILE:
                case self::FILE_NAME_CONVERT:
                case self::FILESYSTEM_LIKE_LOGGING:
                case self::FILTER:
                case self::FINAL:
                case self::FINE:
                case self::FINISH:
                case self::FIRST:
                case self::FIRSTM:
                case self::FIRST_ROWS:
                case self::FIRST_VALUE:
                case self::FIXED_VIEW_DATA:
                case self::FLAGGER:
                case self::FLASHBACK:
                case self::FLASH_CACHE:
                case self::FLOAT:
                case self::FLOB:
                case self::FLOOR:
                case self::FLUSH:
                case self::FOLDER:
                case self::FOLLOWING:
                case self::FOLLOWS:
                case self::FORALL:
                case self::FORCE:
                case self::FORCE_XML_QUERY_REWRITE:
                case self::FOREIGN:
                case self::FOREVER:
                case self::FORMAT:
                case self::FORWARD:
                case self::FRAGMENT_NUMBER:
                case self::FREELIST:
                case self::FREELISTS:
                case self::FREEPOOLS:
                case self::FRESH:
                case self::FROM_TZ:
                case self::FULL:
                case self::FULL_OUTER_JOIN_TO_OUTER:
                case self::FUNCTION:
                case self::FUNCTIONS:
                case self::GATHER_OPTIMIZER_STATISTICS:
                case self::GATHER_PLAN_STATISTICS:
                case self::GBY_CONC_ROLLUP:
                case self::GBY_PUSHDOWN:
                case self::GENERATED:
                case self::GET:
                case self::GLOBAL:
                case self::GLOBALLY:
                case self::GLOBAL_NAME:
                case self::GLOBAL_TOPIC_ENABLED:
                case self::GROUP_BY:
                case self::GROUP_ID:
                case self::GROUPING:
                case self::GROUPING_ID:
                case self::GROUPS:
                case self::GUARANTEED:
                case self::GUARANTEE:
                case self::GUARD:
                case self::HASH_AJ:
                case self::HASH:
                case self::HASHKEYS:
                case self::HASH_SJ:
                case self::HEADER:
                case self::HEAP:
                case self::HELP:
                case self::HEXTORAW:
                case self::HEXTOREF:
                case self::HIDDEN_KEYWORD:
                case self::HIDE:
                case self::HIERARCHY:
                case self::HIGH:
                case self::HINTSET_BEGIN:
                case self::HINTSET_END:
                case self::HOT:
                case self::HOUR:
                case self::HWM_BROKERED:
                case self::HYBRID:
                case self::IDENTIFIER:
                case self::IDENTITY:
                case self::IDGENERATORS:
                case self::ID:
                case self::IDLE_TIME:
                case self::IF:
                case self::IGNORE:
                case self::IGNORE_OPTIM_EMBEDDED_HINTS:
                case self::IGNORE_ROW_ON_DUPKEY_INDEX:
                case self::IGNORE_WHERE_CLAUSE:
                case self::ILM:
                case self::IMMEDIATE:
                case self::IMPACT:
                case self::IMPORT:
                case self::INACTIVE:
                case self::INCLUDE:
                case self::INCLUDE_VERSION:
                case self::INCLUDING:
                case self::INCREMENTAL:
                case self::INCREMENT:
                case self::INCR:
                case self::INDENT:
                case self::INDEX_ASC:
                case self::INDEX_COMBINE:
                case self::INDEX_DESC:
                case self::INDEXED:
                case self::INDEXES:
                case self::INDEX_FFS:
                case self::INDEX_FILTER:
                case self::INDEXING:
                case self::INDEX_JOIN:
                case self::INDEX_ROWS:
                case self::INDEX_RRS:
                case self::INDEX_RS_ASC:
                case self::INDEX_RS_DESC:
                case self::INDEX_RS:
                case self::INDEX_SCAN:
                case self::INDEX_SKIP_SCAN:
                case self::INDEX_SS_ASC:
                case self::INDEX_SS_DESC:
                case self::INDEX_SS:
                case self::INDEX_STATS:
                case self::INDEXTYPE:
                case self::INDEXTYPES:
                case self::INDICATOR:
                case self::INDICES:
                case self::INFINITE:
                case self::INFORMATIONAL:
                case self::INHERIT:
                case self::INITCAP:
                case self::INITIAL:
                case self::INITIALIZED:
                case self::INITIALLY:
                case self::INITRANS:
                case self::INLINE:
                case self::INLINE_XMLTYPE_NT:
                case self::INMEMORY:
                case self::IN_MEMORY_METADATA:
                case self::INMEMORY_PRUNING:
                case self::INNER:
                case self::INOUT:
                case self::INPLACE:
                case self::INSERTCHILDXMLAFTER:
                case self::INSERTCHILDXMLBEFORE:
                case self::INSERTCHILDXML:
                case self::INSERTXMLAFTER:
                case self::INSERTXMLBEFORE:
                case self::INSTANCE:
                case self::INSTANCES:
                case self::INSTANTIABLE:
                case self::INSTANTLY:
                case self::INSTEAD:
                case self::INSTR2:
                case self::INSTR4:
                case self::INSTRB:
                case self::INSTRC:
                case self::INSTR:
                case self::INTEGER:
                case self::INTERLEAVED:
                case self::INTERMEDIATE:
                case self::INTERNAL_CONVERT:
                case self::INTERNAL_USE:
                case self::INTERPRETED:
                case self::INTERVAL:
                case self::INT:
                case self::INVALIDATE:
                case self::INVISIBLE:
                case self::IN_XQUERY:
                case self::ISOLATION:
                case self::ISOLATION_LEVEL:
                case self::ITERATE:
                case self::ITERATION_NUMBER:
                case self::JAVA:
                case self::JOB:
                case self::JOIN:
                case self::JSON_ARRAYAGG:
                case self::JSON_ARRAY:
                case self::JSON_EQUAL:
                case self::JSON_EXISTS2:
                case self::JSON_EXISTS:
                case self::JSONGET:
                case self::JSON:
                case self::JSON_OBJECTAGG:
                case self::JSON_OBJECT:
                case self::JSONPARSE:
                case self::JSON_QUERY:
                case self::JSON_SERIALIZE:
                case self::JSON_TABLE:
                case self::JSON_TEXTCONTAINS2:
                case self::JSON_TEXTCONTAINS:
                case self::JSON_VALUE:
                case self::KEEP_DUPLICATES:
                case self::KEEP:
                case self::KERBEROS:
                case self::KEY:
                case self::KEY_LENGTH:
                case self::KEYSIZE:
                case self::KEYS:
                case self::KEYSTORE:
                case self::KILL:
                case self::LABEL:
                case self::LANGUAGE:
                case self::LAST_DAY:
                case self::LAST:
                case self::LAST_VALUE:
                case self::LATERAL:
                case self::LAX:
                case self::LAYER:
                case self::LDAP_REGISTRATION_ENABLED:
                case self::LDAP_REGISTRATION:
                case self::LDAP_REG_SYNC_INTERVAL:
                case self::LEADING:
                case self::LEFT:
                case self::LENGTH2:
                case self::LENGTH4:
                case self::LENGTHB:
                case self::LENGTHC:
                case self::LENGTH:
                case self::LESS:
                case self::LEVEL:
                case self::LEVELS:
                case self::LIBRARY:
                case self::LIFECYCLE:
                case self::LIFE:
                case self::LIFETIME:
                case self::LIKE2:
                case self::LIKE4:
                case self::LIKEC:
                case self::LIKE_EXPAND:
                case self::LIMIT:
                case self::LINEAR:
                case self::LINK:
                case self::LIST:
                case self::LN:
                case self::LNNVL:
                case self::LOAD:
                case self::LOB:
                case self::LOBNVL:
                case self::LOBS:
                case self::LOCAL_INDEXES:
                case self::LOCAL:
                case self::LOCALTIME:
                case self::LOCALTIMESTAMP:
                case self::LOCATION:
                case self::LOCATOR:
                case self::LOCKED:
                case self::LOCKING:
                case self::LOGFILE:
                case self::LOGFILES:
                case self::LOGGING:
                case self::LOGICAL:
                case self::LOGICAL_READS_PER_CALL:
                case self::LOGICAL_READS_PER_SESSION:
                case self::LOG:
                case self::LOGMINING:
                case self::LOGOFF:
                case self::LOGON:
                case self::LOG_READ_ONLY_VIOLATIONS:
                case self::LONG:
                case self::LOOP:
                case self::LOWER:
                case self::LOW:
                case self::LPAD:
                case self::LTRIM:
                case self::MAIN:
                case self::MAKE_REF:
                case self::MANAGED:
                case self::MANAGE:
                case self::MANAGEMENT:
                case self::MANAGER:
                case self::MANUAL:
                case self::MAP:
                case self::MAPPING:
                case self::MASTER:
                case self::MATCHED:
                case self::MATCHES:
                case self::MATCH:
                case self::MATCH_NUMBER:
                case self::MATCH_RECOGNIZE:
                case self::MATERIALIZED:
                case self::MATERIALIZE:
                case self::MAXARCHLOGS:
                case self::MAXDATAFILES:
                case self::MAXEXTENTS:
                case self::MAXIMIZE:
                case self::MAXINSTANCES:
                case self::MAXLOGFILES:
                case self::MAXLOGHISTORY:
                case self::MAXLOGMEMBERS:
                case self::MAX_SHARED_TEMP_SIZE:
                case self::MAXSIZE:
                case self::MAXTRANS:
                case self::MAXVALUE:
                case self::MEASURE:
                case self::MEASURES:
                case self::MEDIUM:
                case self::MEMBER:
                case self::MEMCOMPRESS:
                case self::MEMORY:
                case self::MERGEACTIONS:
                case self::MERGE_AJ:
                case self::MERGE_CONST_ON:
                case self::MERGE:
                case self::MERGE_SJ:
                case self::METADATA:
                case self::METHOD:
                case self::MIGRATE:
                case self::MIGRATION:
                case self::MINEXTENTS:
                case self::MINIMIZE:
                case self::MINIMUM:
                case self::MINING:
                case self::MINUS_NULL:
                case self::MINUTE:
                case self::MINVALUE:
                case self::MIRRORCOLD:
                case self::MIRRORHOT:
                case self::MIRROR:
                case self::MLSLABEL:
                case self::MODEL_COMPILE_SUBQUERY:
                case self::MODEL_DONTVERIFY_UNIQUENESS:
                case self::MODEL_DYNAMIC_SUBQUERY:
                case self::MODEL_MIN_ANALYSIS:
                case self::MODEL:
                case self::MODEL_NB:
                case self::MODEL_NO_ANALYSIS:
                case self::MODEL_PBY:
                case self::MODEL_PUSH_REF:
                case self::MODEL_SV:
                case self::MODIFICATION:
                case self::MODIFY_COLUMN_TYPE:
                case self::MODIFY:
                case self::MOD:
                case self::MODULE:
                case self::MONITORING:
                case self::MONITOR:
                case self::MONTH:
                case self::MONTHS_BETWEEN:
                case self::MONTHS:
                case self::MOUNT:
                case self::MOUNTPATH:
                case self::MOVEMENT:
                case self::MOVE:
                case self::MULTIDIMENSIONAL:
                case self::MULTISET:
                case self::MV_MERGE:
                case self::NAMED:
                case self::NAME:
                case self::NAMESPACE:
                case self::NAN:
                case self::NANVL:
                case self::NATIONAL:
                case self::NATIVE_FULL_OUTER_JOIN:
                case self::NATIVE:
                case self::NATURAL:
                case self::NAV:
                case self::NCHAR_CS:
                case self::NCHAR:
                case self::NCHR:
                case self::NCLOB:
                case self::NEEDED:
                case self::NEG:
                case self::NESTED:
                case self::NESTED_TABLE_FAST_INSERT:
                case self::NESTED_TABLE_GET_REFS:
                case self::NESTED_TABLE_ID:
                case self::NESTED_TABLE_SET_REFS:
                case self::NESTED_TABLE_SET_SETID:
                case self::NETWORK:
                case self::NEVER:
                case self::NEW:
                case self::NEW_TIME:
                case self::NEXT_DAY:
                case self::NEXT:
                case self::NL_AJ:
                case self::NLJ_BATCHING:
                case self::NLJ_INDEX_FILTER:
                case self::NLJ_INDEX_SCAN:
                case self::NLJ_PREFETCH:
                case self::NLS_CALENDAR:
                case self::NLS_CHARACTERSET:
                case self::NLS_CHARSET_DECL_LEN:
                case self::NLS_CHARSET_ID:
                case self::NLS_CHARSET_NAME:
                case self::NLS_COMP:
                case self::NLS_CURRENCY:
                case self::NLS_DATE_FORMAT:
                case self::NLS_DATE_LANGUAGE:
                case self::NLS_INITCAP:
                case self::NLS_ISO_CURRENCY:
                case self::NL_SJ:
                case self::NLS_LANG:
                case self::NLS_LANGUAGE:
                case self::NLS_LENGTH_SEMANTICS:
                case self::NLS_LOWER:
                case self::NLS_NCHAR_CONV_EXCP:
                case self::NLS_NUMERIC_CHARACTERS:
                case self::NLS_SORT:
                case self::NLSSORT:
                case self::NLS_SPECIAL_CHARS:
                case self::NLS_TERRITORY:
                case self::NLS_UPPER:
                case self::NO_ACCESS:
                case self::NO_ADAPTIVE_PLAN:
                case self::NO_ANSI_REARCH:
                case self::NOAPPEND:
                case self::NOARCHIVELOG:
                case self::NOAUDIT:
                case self::NO_AUTO_REOPTIMIZE:
                case self::NO_BASETABLE_MULTIMV_REWRITE:
                case self::NO_BATCH_TABLE_ACCESS_BY_ROWID:
                case self::NO_BIND_AWARE:
                case self::NO_BUFFER:
                case self::NOCACHE:
                case self::NO_CARTESIAN:
                case self::NO_CHECK_ACL_REWRITE:
                case self::NO_CLUSTER_BY_ROWID:
                case self::NO_CLUSTERING:
                case self::NO_COALESCE_SQ:
                case self::NO_COMMON_DATA:
                case self::NO_CONNECT_BY_CB_WHR_ONLY:
                case self::NO_CONNECT_BY_COMBINE_SW:
                case self::NO_CONNECT_BY_COST_BASED:
                case self::NO_CONNECT_BY_ELIM_DUPS:
                case self::NO_CONNECT_BY_FILTERING:
                case self::NOCOPY:
                case self::NO_COST_XML_QUERY_REWRITE:
                case self::NO_CPU_COSTING:
                case self::NOCPU_COSTING:
                case self::NOCYCLE:
                case self::NO_DATA_SECURITY_REWRITE:
                case self::NO_DECORRELATE:
                case self::NODELAY:
                case self::NO_DOMAIN_INDEX_FILTER:
                case self::NO_DST_UPGRADE_INSERT_CONV:
                case self::NO_ELIM_GROUPBY:
                case self::NO_ELIMINATE_JOIN:
                case self::NO_ELIMINATE_OBY:
                case self::NO_ELIMINATE_OUTER_JOIN:
                case self::NOENTITYESCAPING:
                case self::NO_EXPAND_GSET_TO_UNION:
                case self::NO_EXPAND:
                case self::NO_EXPAND_TABLE:
                case self::NO_FACT:
                case self::NO_FACTORIZE_JOIN:
                case self::NO_FILTERING:
                case self::NOFORCE:
                case self::NO_FULL_OUTER_JOIN_TO_OUTER:
                case self::NO_GATHER_OPTIMIZER_STATISTICS:
                case self::NO_GBY_PUSHDOWN:
                case self::NOGUARANTEE:
                case self::NO_INDEX_FFS:
                case self::NO_INDEX:
                case self::NO_INDEX_SS:
                case self::NO_INMEMORY:
                case self::NO_INMEMORY_PRUNING:
                case self::NOKEEP:
                case self::NO_LOAD:
                case self::NOLOCAL:
                case self::NOLOGGING:
                case self::NOMAPPING:
                case self::NOMAXVALUE:
                case self::NO_MERGE:
                case self::NOMINIMIZE:
                case self::NOMINVALUE:
                case self::NO_MODEL_PUSH_REF:
                case self::NO_MONITORING:
                case self::NOMONITORING:
                case self::NO_MONITOR:
                case self::NO_MULTIMV_REWRITE:
                case self::NO_NATIVE_FULL_OUTER_JOIN:
                case self::NONBLOCKING:
                case self::NONEDITIONABLE:
                case self::NONE:
                case self::NO_NLJ_BATCHING:
                case self::NO_NLJ_PREFETCH:
                case self::NO:
                case self::NONSCHEMA:
                case self::NO_OBJECT_LINK:
                case self::NOORDER:
                case self::NO_ORDER_ROLLUPS:
                case self::NO_OUTER_JOIN_TO_ANTI:
                case self::NO_OUTER_JOIN_TO_INNER:
                case self::NOOVERRIDE:
                case self::NO_PARALLEL_INDEX:
                case self::NOPARALLEL_INDEX:
                case self::NO_PARALLEL:
                case self::NOPARALLEL:
                case self::NO_PARTIAL_COMMIT:
                case self::NO_PARTIAL_JOIN:
                case self::NO_PARTIAL_ROLLUP_PUSHDOWN:
                case self::NOPARTITION:
                case self::NO_PLACE_DISTINCT:
                case self::NO_PLACE_GROUP_BY:
                case self::NO_PQ_CONCURRENT_UNION:
                case self::NO_PQ_MAP:
                case self::NO_PQ_REPLICATE:
                case self::NO_PQ_SKEW:
                case self::NO_PRUNE_GSETS:
                case self::NO_PULL_PRED:
                case self::NO_PUSH_PRED:
                case self::NO_PUSH_SUBQ:
                case self::NO_PX_FAULT_TOLERANCE:
                case self::NO_PX_JOIN_FILTER:
                case self::NO_QKN_BUFF:
                case self::NO_QUERY_TRANSFORMATION:
                case self::NO_REF_CASCADE:
                case self::NORELOCATE:
                case self::NORELY:
                case self::NOREPAIR:
                case self::NOREPLAY:
                case self::NORESETLOGS:
                case self::NO_RESULT_CACHE:
                case self::NOREVERSE:
                case self::NO_REWRITE:
                case self::NOREWRITE:
                case self::NORMAL:
                case self::NO_ROOT_SW_FOR_LOCAL:
                case self::NOROWDEPENDENCIES:
                case self::NOSCHEMACHECK:
                case self::NOSEGMENT:
                case self::NO_SEMIJOIN:
                case self::NO_SEMI_TO_INNER:
                case self::NO_SET_TO_JOIN:
                case self::NOSORT:
                case self::NO_SQL_TRANSLATION:
                case self::NO_SQL_TUNE:
                case self::NO_STAR_TRANSFORMATION:
                case self::NO_STATEMENT_QUEUING:
                case self::NO_STATS_GSETS:
                case self::NOSTRICT:
                case self::NO_SUBQUERY_PRUNING:
                case self::NO_SUBSTRB_PAD:
                case self::NO_SWAP_JOIN_INPUTS:
                case self::NOSWITCH:
                case self::NO_TABLE_LOOKUP_BY_NL:
                case self::NO_TEMP_TABLE:
                case self::NOTHING:
                case self::NOTIFICATION:
                case self::NO_TRANSFORM_DISTINCT_AGG:
                case self::NO_UNNEST:
                case self::NO_USE_CUBE:
                case self::NO_USE_HASH_AGGREGATION:
                case self::NO_USE_HASH_GBY_FOR_PUSHDOWN:
                case self::NO_USE_HASH:
                case self::NO_USE_INVISIBLE_INDEXES:
                case self::NO_USE_MERGE:
                case self::NO_USE_NL:
                case self::NO_USE_VECTOR_AGGREGATION:
                case self::NOVALIDATE:
                case self::NO_VECTOR_TRANSFORM_DIMS:
                case self::NO_VECTOR_TRANSFORM_FACT:
                case self::NO_VECTOR_TRANSFORM:
                case self::NO_XDB_FASTPATH_INSERT:
                case self::NO_XML_DML_REWRITE:
                case self::NO_XMLINDEX_REWRITE_IN_SELECT:
                case self::NO_XMLINDEX_REWRITE:
                case self::NO_XML_QUERY_REWRITE:
                case self::NO_ZONEMAP:
                case self::NTH_VALUE:
                case self::NULLIF:
                case self::NULLS:
                case self::NUMBER:
                case self::NUMERIC:
                case self::NUM_INDEX_KEYS:
                case self::NUMTODSINTERVAL:
                case self::NUMTOYMINTERVAL:
                case self::NVARCHAR2:
                case self::NVL2:
                case self::OBJECT2XML:
                case self::OBJECT:
                case self::OBJ_ID:
                case self::OBJNO:
                case self::OBJNO_REUSE:
                case self::OCCURENCES:
                case self::OFFLINE:
                case self::OFF:
                case self::OFFSET:
                case self::OIDINDEX:
                case self::OID:
                case self::OLAP:
                case self::OLD:
                case self::OLD_PUSH_PRED:
                case self::OLS:
                case self::OLTP:
                case self::OMIT:
                case self::ONE:
                case self::ONLINE:
                case self::ONLY:
                case self::OPAQUE:
                case self::OPAQUE_TRANSFORM:
                case self::OPAQUE_XCANONICAL:
                case self::OPCODE:
                case self::OPEN:
                case self::OPERATIONS:
                case self::OPERATOR:
                case self::OPT_ESTIMATE:
                case self::OPTIMAL:
                case self::OPTIMIZE:
                case self::OPTIMIZER_FEATURES_ENABLE:
                case self::OPTIMIZER_GOAL:
                case self::OPT_PARAM:
                case self::ORA_BRANCH:
                case self::ORA_CHECK_ACL:
                case self::ORA_CHECK_PRIVILEGE:
                case self::ORA_CLUSTERING:
                case self::ORADATA:
                case self::ORADEBUG:
                case self::ORA_DST_AFFECTED:
                case self::ORA_DST_CONVERT:
                case self::ORA_DST_ERROR:
                case self::ORA_GET_ACLIDS:
                case self::ORA_GET_PRIVILEGES:
                case self::ORA_HASH:
                case self::ORA_INVOKING_USERID:
                case self::ORA_INVOKING_USER:
                case self::ORA_INVOKING_XS_USER_GUID:
                case self::ORA_INVOKING_XS_USER:
                case self::ORA_RAWCOMPARE:
                case self::ORA_RAWCONCAT:
                case self::ORA_ROWSCN:
                case self::ORA_ROWSCN_RAW:
                case self::ORA_ROWVERSION:
                case self::ORA_TABVERSION:
                case self::ORA_WRITE_TIME:
                case self::ORDERED:
                case self::ORDERED_PREDICATES:
                case self::ORDINALITY:
                case self::OR_EXPAND:
                case self::ORGANIZATION:
                case self::OR_PREDICATES:
                case self::OSERROR:
                case self::OTHER:
                case self::OUTER_JOIN_TO_ANTI:
                case self::OUTER_JOIN_TO_INNER:
                case self::OUTER:
                case self::OUTLINE_LEAF:
                case self::OUTLINE:
                case self::OUT_OF_LINE:
                case self::OUT:
                case self::OVERFLOW_NOMOVE:
                case self::OVERFLOW:
                case self::OVERLAPS:
                case self::OVER:
                case self::OVERRIDING:
                case self::OWNER:
                case self::OWNERSHIP:
                case self::OWN:
                case self::PACKAGE:
                case self::PACKAGES:
                case self::PARALLEL_ENABLE:
                case self::PARALLEL_INDEX:
                case self::PARALLEL:
                case self::PARAMETERS:
                case self::PARAM:
                case self::PARENT:
                case self::PARITY:
                case self::PARTIAL_JOIN:
                case self::PARTIALLY:
                case self::PARTIAL:
                case self::PARTIAL_ROLLUP_PUSHDOWN:
                case self::PARTITION_HASH:
                case self::PARTITION_LIST:
                case self::PARTITION:
                case self::PARTITION_RANGE:
                case self::PARTITIONS:
                case self::PARTNUMINST:
                case self::PASSING:
                case self::PASSWORD_GRACE_TIME:
                case self::PASSWORD_LIFE_TIME:
                case self::PASSWORD_LOCK_TIME:
                case self::PASSWORD:
                case self::PASSWORD_REUSE_MAX:
                case self::PASSWORD_REUSE_TIME:
                case self::PASSWORD_VERIFY_FUNCTION:
                case self::PAST:
                case self::PATCH:
                case self::PATH:
                case self::PATH_PREFIX:
                case self::PATHS:
                case self::PATTERN:
                case self::PBL_HS_BEGIN:
                case self::PBL_HS_END:
                case self::PCTINCREASE:
                case self::PCTTHRESHOLD:
                case self::PCTUSED:
                case self::PCTVERSION:
                case self::PENDING:
                case self::PERCENT_KEYWORD:
                case self::PERCENT_RANKM:
                case self::PERFORMANCE:
                case self::PERIOD_KEYWORD:
                case self::PERMANENT:
                case self::PERMISSION:
                case self::PERMUTE:
                case self::PER:
                case self::PFILE:
                case self::PHYSICAL:
                case self::PIKEY:
                case self::PIPELINED:
                case self::PIV_GB:
                case self::PIVOT:
                case self::PIV_SSF:
                case self::PLACE_DISTINCT:
                case self::PLACE_GROUP_BY:
                case self::PLAN:
                case self::PLSCOPE_SETTINGS:
                case self::PLS_INTEGER:
                case self::PLSQL_CCFLAGS:
                case self::PLSQL_CODE_TYPE:
                case self::PLSQL_DEBUG:
                case self::PLSQL_OPTIMIZE_LEVEL:
                case self::PLSQL_WARNINGS:
                case self::PLUGGABLE:
                case self::POINT:
                case self::POLICY:
                case self::POOL_16K:
                case self::POOL_2K:
                case self::POOL_32K:
                case self::POOL_4K:
                case self::POOL_8K:
                case self::POSITIVEN:
                case self::POSITIVE:
                case self::POST_TRANSACTION:
                case self::POWERMULTISET_BY_CARDINALITY:
                case self::POWERMULTISET:
                case self::POWER:
                case self::PQ_CONCURRENT_UNION:
                case self::PQ_DISTRIBUTE:
                case self::PQ_DISTRIBUTE_WINDOW:
                case self::PQ_FILTER:
                case self::PQ_MAP:
                case self::PQ_NOMAP:
                case self::PQ_REPLICATE:
                case self::PQ_SKEW:
                case self::PRAGMA:
                case self::PREBUILT:
                case self::PRECEDES:
                case self::PRECEDING:
                case self::PRECISION:
                case self::PRECOMPUTE_SUBQUERY:
                case self::PREDICATE_REORDERS:
                case self::PRELOAD:
                case self::PREPARE:
                case self::PRESENTNNV:
                case self::PRESENT:
                case self::PRESENTV:
                case self::PRESERVE_OID:
                case self::PRESERVE:
                case self::PRETTY:
                case self::PREVIOUS:
                case self::PREV:
                case self::PRIMARY:
                case self::PRINTBLOBTOCLOB:
                case self::PRIORITY:
                case self::PRIVATE:
                case self::PRIVATE_SGA:
                case self::PRIVILEGED:
                case self::PRIVILEGE:
                case self::PRIVILEGES:
                case self::PROCEDURAL:
                case self::PROCEDURE:
                case self::PROCESS:
                case self::PROFILE:
                case self::PROGRAM:
                case self::PROJECT:
                case self::PROPAGATE:
                case self::PROTECTED:
                case self::PROTECTION:
                case self::PROXY:
                case self::PRUNING:
                case self::PULL_PRED:
                case self::PURGE:
                case self::PUSH_PRED:
                case self::PUSH_SUBQ:
                case self::PX_FAULT_TOLERANCE:
                case self::PX_GRANULE:
                case self::PX_JOIN_FILTER:
                case self::QB_NAME:
                case self::QUERY_BLOCK:
                case self::QUERY:
                case self::QUEUE_CURR:
                case self::QUEUE:
                case self::QUEUE_ROWP:
                case self::QUIESCE:
                case self::QUORUM:
                case self::QUOTA:
                case self::RAISE:
                case self::RANDOM_LOCAL:
                case self::RANDOM:
                case self::RANGE:
                case self::RANKM:
                case self::RAPIDLY:
                case self::RAW:
                case self::RAWTOHEX:
                case self::RAWTONHEX:
                case self::RBA:
                case self::RBO_OUTLINE:
                case self::RDBA:
                case self::READ:
                case self::READS:
                case self::REALM:
                case self::REAL:
                case self::REBALANCE:
                case self::REBUILD:
                case self::RECORD:
                case self::RECORDS_PER_BLOCK:
                case self::RECOVERABLE:
                case self::RECOVER:
                case self::RECOVERY:
                case self::RECYCLEBIN:
                case self::RECYCLE:
                case self::REDACTION:
                case self::REDEFINE:
                case self::REDO:
                case self::REDUCED:
                case self::REDUNDANCY:
                case self::REF_CASCADE_CURSOR:
                case self::REFERENCED:
                case self::REFERENCE:
                case self::REFERENCES:
                case self::REFERENCING:
                case self::REF:
                case self::REFRESH:
                case self::REFTOHEX:
                case self::REGEXP_COUNT:
                case self::REGEXP_INSTR:
                case self::REGEXP_LIKE:
                case self::REGEXP_REPLACE:
                case self::REGEXP_SUBSTR:
                case self::REGISTER:
                case self::REGR_AVGX:
                case self::REGR_AVGY:
                case self::REGR_COUNT:
                case self::REGR_INTERCEPT:
                case self::REGR_R2:
                case self::REGR_SLOPE:
                case self::REGR_SXX:
                case self::REGR_SXY:
                case self::REGR_SYY:
                case self::REGULAR:
                case self::REJECT:
                case self::REKEY:
                case self::RELATIONAL:
                case self::RELOCATE:
                case self::RELY:
                case self::REMAINDER:
                case self::REMOTE_MAPPED:
                case self::REMOVE:
                case self::RENAME:
                case self::REPAIR:
                case self::REPEAT:
                case self::REPLACE:
                case self::REPLICATION:
                case self::REQUIRED:
                case self::RESETLOGS:
                case self::RESET:
                case self::RESIZE:
                case self::RESOLVE:
                case self::RESOLVER:
                case self::RESPECT:
                case self::RESTART:
                case self::RESTORE_AS_INTERVALS:
                case self::RESTORE:
                case self::RESTRICT_ALL_REF_CONS:
                case self::RESTRICTED:
                case self::RESTRICT_REFERENCES:
                case self::RESTRICT:
                case self::RESULT_CACHE:
                case self::RESULT:
                case self::RESUMABLE:
                case self::RESUME:
                case self::RETENTION:
                case self::RETRY_ON_ROW_CHANGE:
                case self::RETURNING:
                case self::RETURN:
                case self::REUSE:
                case self::REVERSE:
                case self::REWRITE_OR_ERROR:
                case self::REWRITE:
                case self::RIGHT:
                case self::ROLE:
                case self::ROLESET:
                case self::ROLES:
                case self::ROLLBACK:
                case self::ROLLING:
                case self::ROLLUP:
                case self::ROWDEPENDENCIES:
                case self::ROWID_MAPPING_TABLE:
                case self::ROWID:
                case self::ROWIDTOCHAR:
                case self::ROWIDTONCHAR:
                case self::ROW_LENGTH:
                case self::ROWNUM:
                case self::ROW:
                case self::ROWS:
                case self::RPAD:
                case self::RTRIM:
                case self::RULE:
                case self::RULES:
                case self::RUNNING:
                case self::SALT:
                case self::SAMPLE:
                case self::SAVE_AS_INTERVALS:
                case self::SAVEPOINT:
                case self::SAVE:
                case self::SB4:
                case self::SCALE_ROWS:
                case self::SCALE:
                case self::SCAN_INSTANCES:
                case self::SCAN:
                case self::SCHEDULER:
                case self::SCHEMACHECK:
                case self::SCHEMA:
                case self::SCN_ASCENDING:
                case self::SCN:
                case self::SCOPE:
                case self::SCRUB:
                case self::SD_ALL:
                case self::SD_INHIBIT:
                case self::SDO_GEOM_MBR:
                case self::SD_SHOW:
                case self::SEARCH:
                case self::SECOND:
                case self::SECRET:
                case self::SECUREFILE_DBA:
                case self::SECUREFILE:
                case self::SECURITY:
                case self::SEED:
                case self::SEG_BLOCK:
                case self::SEG_FILE:
                case self::SEGMENT:
                case self::SELECTIVITY:
                case self::SELF:
                case self::SEMIJOIN_DRIVER:
                case self::SEMIJOIN:
                case self::SEMI_TO_INNER:
                case self::SEQUENCED:
                case self::SEQUENCE:
                case self::SEQUENTIAL:
                case self::SERIALIZABLE:
                case self::SERIALLY_REUSABLE:
                case self::SERIAL:
                case self::SERVERERROR:
                case self::SERVICE_NAME_CONVERT:
                case self::SERVICES:
                case self::SESSION_CACHED_CURSORS:
                case self::SESSION:
                case self::SESSIONS_PER_USER:
                case self::SESSIONTIMEZONE:
                case self::SESSIONTZNAME:
                case self::SET:
                case self::SETS:
                case self::SETTINGS:
                case self::SET_TO_JOIN:
                case self::SEVERE:
                case self::SHARED_POOL:
                case self::SHARED:
                case self::SHARING:
                case self::SHELFLIFE:
                case self::SHOW:
                case self::SHRINK:
                case self::SHUTDOWN:
                case self::SIBLINGS:
                case self::SID:
                case self::SIGNAL_COMPONENT:
                case self::SIGNAL_FUNCTION:
                case self::SIGN:
                case self::SIGNTYPE:
                case self::SIMPLE_INTEGER:
                case self::SIMPLE:
                case self::SINGLE:
                case self::SINGLETASK:
                case self::SINH:
                case self::SIN:
                case self::SKIP_EXT_OPTIMIZER:
                case self::SKIP_:
                case self::SKIP_UNQ_UNUSABLE_IDX:
                case self::SKIP_UNUSABLE_INDEXES:
                case self::SMALLFILE:
                case self::SMALLINT:
                case self::SNAPSHOT:
                case self::SOME:
                case self::SORT:
                case self::SOUNDEX:
                case self::SOURCE_FILE_DIRECTORY:
                case self::SOURCE_FILE_NAME_CONVERT:
                case self::SOURCE:
                case self::SPACE_KEYWORD:
                case self::SPECIFICATION:
                case self::SPFILE:
                case self::SPLIT:
                case self::SPREADSHEET:
                case self::SQLDATA:
                case self::SQLERROR:
                case self::SQLLDR:
                case self::SQL:
                case self::SQL_TRACE:
                case self::SQL_TRANSLATION_PROFILE:
                case self::SQRT:
                case self::STALE:
                case self::STANDALONE:
                case self::STANDARD_HASH:
                case self::STANDBY_MAX_DATA_DELAY:
                case self::STANDBYS:
                case self::STANDBY:
                case self::STAR:
                case self::STAR_TRANSFORMATION:
                case self::STARTUP:
                case self::STATEMENT_ID:
                case self::STATEMENT_QUEUING:
                case self::STATEMENTS:
                case self::STATEMENT:
                case self::STATE:
                case self::STATIC:
                case self::STATISTICS:
                case self::STATS_BINOMIAL_TEST:
                case self::STATS_CROSSTAB:
                case self::STATS_F_TEST:
                case self::STATS_KS_TEST:
                case self::STATS_MODE:
                case self::STATS_MW_TEST:
                case self::STATS_ONE_WAY_ANOVA:
                case self::STATS_T_TEST_INDEP:
                case self::STATS_T_TEST_INDEPU:
                case self::STATS_T_TEST_ONE:
                case self::STATS_T_TEST_PAIRED:
                case self::STATS_WSR_TEST:
                case self::STDDEV_POP:
                case self::STDDEV_SAMP:
                case self::STOP:
                case self::STORAGE:
                case self::STORE:
                case self::STREAMS:
                case self::STREAM:
                case self::STRICT:
                case self::STRING:
                case self::STRIPE_COLUMNS:
                case self::STRIPE_WIDTH:
                case self::STRIP:
                case self::STRUCTURE:
                case self::SUBMULTISET:
                case self::SUBPARTITION_REL:
                case self::SUBPARTITIONS:
                case self::SUBPARTITION:
                case self::SUBQUERIES:
                case self::SUBQUERY_PRUNING:
                case self::SUBSCRIBE:
                case self::SUBSET:
                case self::SUBSTITUTABLE:
                case self::SUBSTR2:
                case self::SUBSTR4:
                case self::SUBSTRB:
                case self::SUBSTRC:
                case self::SUBTYPE:
                case self::SUCCESSFUL:
                case self::SUCCESS:
                case self::SUMMARY:
                case self::SUPPLEMENTAL:
                case self::SUSPEND:
                case self::SWAP_JOIN_INPUTS:
                case self::SWITCHOVER:
                case self::SWITCH:
                case self::SYNCHRONOUS:
                case self::SYNC:
                case self::SYSASM:
                case self::SYS_AUDIT:
                case self::SYSAUX:
                case self::SYSBACKUP:
                case self::SYS_CHECKACL:
                case self::SYS_CHECK_PRIVILEGE:
                case self::SYS_CONNECT_BY_PATH:
                case self::SYS_CONTEXT:
                case self::SYSDATE:
                case self::SYSDBA:
                case self::SYS_DBURIGEN:
                case self::SYSDG:
                case self::SYS_DL_CURSOR:
                case self::SYS_DM_RXFORM_CHR:
                case self::SYS_DM_RXFORM_NUM:
                case self::SYS_DOM_COMPARE:
                case self::SYS_DST_PRIM2SEC:
                case self::SYS_DST_SEC2PRIM:
                case self::SYS_ET_BFILE_TO_RAW:
                case self::SYS_ET_BLOB_TO_IMAGE:
                case self::SYS_ET_IMAGE_TO_BLOB:
                case self::SYS_ET_RAW_TO_BFILE:
                case self::SYS_EXTPDTXT:
                case self::SYS_EXTRACT_UTC:
                case self::SYS_FBT_INSDEL:
                case self::SYS_FILTER_ACLS:
                case self::SYS_FNMATCHES:
                case self::SYS_FNREPLACE:
                case self::SYS_GET_ACLIDS:
                case self::SYS_GET_COL_ACLIDS:
                case self::SYS_GET_PRIVILEGES:
                case self::SYS_GETTOKENID:
                case self::SYS_GETXTIVAL:
                case self::SYS_GUID:
                case self::SYSGUID:
                case self::SYSKM:
                case self::SYS_MAKE_XMLNODEID:
                case self::SYS_MAKEXML:
                case self::SYS_MKXMLATTR:
                case self::SYS_MKXTI:
                case self::SYSOBJ:
                case self::SYS_OP_ADT2BIN:
                case self::SYS_OP_ADTCONS:
                case self::SYS_OP_ALSCRVAL:
                case self::SYS_OP_ATG:
                case self::SYS_OP_BIN2ADT:
                case self::SYS_OP_BITVEC:
                case self::SYS_OP_BL2R:
                case self::SYS_OP_BLOOM_FILTER_LIST:
                case self::SYS_OP_BLOOM_FILTER:
                case self::SYS_OP_C2C:
                case self::SYS_OP_CAST:
                case self::SYS_OP_CEG:
                case self::SYS_OP_CL2C:
                case self::SYS_OP_COMBINED_HASH:
                case self::SYS_OP_COMP:
                case self::SYS_OP_CONVERT:
                case self::SYS_OP_COUNTCHG:
                case self::SYS_OP_CSCONV:
                case self::SYS_OP_CSCONVTEST:
                case self::SYS_OP_CSR:
                case self::SYS_OP_CSX_PATCH:
                case self::SYS_OP_CYCLED_SEQ:
                case self::SYS_OP_DECOMP:
                case self::SYS_OP_DESCEND:
                case self::SYS_OP_DISTINCT:
                case self::SYS_OP_DRA:
                case self::SYS_OP_DUMP:
                case self::SYS_OP_DV_CHECK:
                case self::SYS_OP_ENFORCE_NOT_NULL:
                case self::SYSOPER:
                case self::SYS_OP_EXTRACT:
                case self::SYS_OP_GROUPING:
                case self::SYS_OP_GUID:
                case self::SYS_OP_HASH:
                case self::SYS_OP_IIX:
                case self::SYS_OP_ITR:
                case self::SYS_OP_KEY_VECTOR_CREATE:
                case self::SYS_OP_KEY_VECTOR_FILTER_LIST:
                case self::SYS_OP_KEY_VECTOR_FILTER:
                case self::SYS_OP_KEY_VECTOR_SUCCEEDED:
                case self::SYS_OP_KEY_VECTOR_USE:
                case self::SYS_OP_LBID:
                case self::SYS_OP_LOBLOC2BLOB:
                case self::SYS_OP_LOBLOC2CLOB:
                case self::SYS_OP_LOBLOC2ID:
                case self::SYS_OP_LOBLOC2NCLOB:
                case self::SYS_OP_LOBLOC2TYP:
                case self::SYS_OP_LSVI:
                case self::SYS_OP_LVL:
                case self::SYS_OP_MAKEOID:
                case self::SYS_OP_MAP_NONNULL:
                case self::SYS_OP_MSR:
                case self::SYS_OP_NICOMBINE:
                case self::SYS_OP_NIEXTRACT:
                case self::SYS_OP_NII:
                case self::SYS_OP_NIX:
                case self::SYS_OP_NOEXPAND:
                case self::SYS_OP_NTCIMG:
                case self::SYS_OP_NUMTORAW:
                case self::SYS_OP_OIDVALUE:
                case self::SYS_OP_OPNSIZE:
                case self::SYS_OP_PAR_1:
                case self::SYS_OP_PARGID_1:
                case self::SYS_OP_PARGID:
                case self::SYS_OP_PAR:
                case self::SYS_OP_PART_ID:
                case self::SYS_OP_PIVOT:
                case self::SYS_OP_R2O:
                case self::SYS_OP_RAWTONUM:
                case self::SYS_OP_RDTM:
                case self::SYS_OP_REF:
                case self::SYS_OP_RMTD:
                case self::SYS_OP_ROWIDTOOBJ:
                case self::SYS_OP_RPB:
                case self::SYS_OPTLOBPRBSC:
                case self::SYS_OP_TOSETID:
                case self::SYS_OP_TPR:
                case self::SYS_OP_TRTB:
                case self::SYS_OPTXICMP:
                case self::SYS_OPTXQCASTASNQ:
                case self::SYS_OP_UNDESCEND:
                case self::SYS_OP_VECAND:
                case self::SYS_OP_VECBIT:
                case self::SYS_OP_VECOR:
                case self::SYS_OP_VECXOR:
                case self::SYS_OP_VERSION:
                case self::SYS_OP_VREF:
                case self::SYS_OP_VVD:
                case self::SYS_OP_XMLCONS_FOR_CSX:
                case self::SYS_OP_XPTHATG:
                case self::SYS_OP_XPTHIDX:
                case self::SYS_OP_XPTHOP:
                case self::SYS_OP_XTXT2SQLT:
                case self::SYS_OP_ZONE_ID:
                case self::SYS_ORDERKEY_DEPTH:
                case self::SYS_ORDERKEY_MAXCHILD:
                case self::SYS_ORDERKEY_PARENT:
                case self::SYS_PARALLEL_TXN:
                case self::SYS_PATHID_IS_ATTR:
                case self::SYS_PATHID_IS_NMSPC:
                case self::SYS_PATHID_LASTNAME:
                case self::SYS_PATHID_LASTNMSPC:
                case self::SYS_PATH_REVERSE:
                case self::SYS_PXQEXTRACT:
                case self::SYS_RAW_TO_XSID:
                case self::SYS_RID_ORDER:
                case self::SYS_ROW_DELTA:
                case self::SYS_SC_2_XMLT:
                case self::SYS_SYNRCIREDO:
                case self::SYSTEM_DEFINED:
                case self::SYSTEM:
                case self::SYSTIMESTAMP:
                case self::SYS_TYPEID:
                case self::SYS_UMAKEXML:
                case self::SYS_XMLANALYZE:
                case self::SYS_XMLCONTAINS:
                case self::SYS_XMLCONV:
                case self::SYS_XMLEXNSURI:
                case self::SYS_XMLGEN:
                case self::SYS_XMLI_LOC_ISNODE:
                case self::SYS_XMLI_LOC_ISTEXT:
                case self::SYS_XMLINSTR:
                case self::SYS_XMLLOCATOR_GETSVAL:
                case self::SYS_XMLNODEID_GETCID:
                case self::SYS_XMLNODEID_GETLOCATOR:
                case self::SYS_XMLNODEID_GETOKEY:
                case self::SYS_XMLNODEID_GETPATHID:
                case self::SYS_XMLNODEID_GETPTRID:
                case self::SYS_XMLNODEID_GETRID:
                case self::SYS_XMLNODEID_GETSVAL:
                case self::SYS_XMLNODEID_GETTID:
                case self::SYS_XMLNODEID:
                case self::SYS_XMLT_2_SC:
                case self::SYS_XMLTRANSLATE:
                case self::SYS_XMLTYPE2SQL:
                case self::SYS_XQ_ASQLCNV:
                case self::SYS_XQ_ATOMCNVCHK:
                case self::SYS_XQBASEURI:
                case self::SYS_XQCASTABLEERRH:
                case self::SYS_XQCODEP2STR:
                case self::SYS_XQCODEPEQ:
                case self::SYS_XQCON2SEQ:
                case self::SYS_XQCONCAT:
                case self::SYS_XQDELETE:
                case self::SYS_XQDFLTCOLATION:
                case self::SYS_XQDOC:
                case self::SYS_XQDOCURI:
                case self::SYS_XQDURDIV:
                case self::SYS_XQED4URI:
                case self::SYS_XQENDSWITH:
                case self::SYS_XQERRH:
                case self::SYS_XQERR:
                case self::SYS_XQESHTMLURI:
                case self::SYS_XQEXLOBVAL:
                case self::SYS_XQEXSTWRP:
                case self::SYS_XQEXTRACT:
                case self::SYS_XQEXTRREF:
                case self::SYS_XQEXVAL:
                case self::SYS_XQFB2STR:
                case self::SYS_XQFNBOOL:
                case self::SYS_XQFNCMP:
                case self::SYS_XQFNDATIM:
                case self::SYS_XQFNLNAME:
                case self::SYS_XQFNNM:
                case self::SYS_XQFNNSURI:
                case self::SYS_XQFNPREDTRUTH:
                case self::SYS_XQFNQNM:
                case self::SYS_XQFNROOT:
                case self::SYS_XQFORMATNUM:
                case self::SYS_XQFTCONTAIN:
                case self::SYS_XQFUNCR:
                case self::SYS_XQGETCONTENT:
                case self::SYS_XQINDXOF:
                case self::SYS_XQINSERT:
                case self::SYS_XQINSPFX:
                case self::SYS_XQIRI2URI:
                case self::SYS_XQLANG:
                case self::SYS_XQLLNMFRMQNM:
                case self::SYS_XQMKNODEREF:
                case self::SYS_XQNILLED:
                case self::SYS_XQNODENAME:
                case self::SYS_XQNORMSPACE:
                case self::SYS_XQNORMUCODE:
                case self::SYS_XQ_NRNG:
                case self::SYS_XQNSP4PFX:
                case self::SYS_XQNSPFRMQNM:
                case self::SYS_XQPFXFRMQNM:
                case self::SYS_XQ_PKSQL2XML:
                case self::SYS_XQPOLYABS:
                case self::SYS_XQPOLYADD:
                case self::SYS_XQPOLYCEL:
                case self::SYS_XQPOLYCSTBL:
                case self::SYS_XQPOLYCST:
                case self::SYS_XQPOLYDIV:
                case self::SYS_XQPOLYFLR:
                case self::SYS_XQPOLYMOD:
                case self::SYS_XQPOLYMUL:
                case self::SYS_XQPOLYRND:
                case self::SYS_XQPOLYSQRT:
                case self::SYS_XQPOLYSUB:
                case self::SYS_XQPOLYUMUS:
                case self::SYS_XQPOLYUPLS:
                case self::SYS_XQPOLYVEQ:
                case self::SYS_XQPOLYVGE:
                case self::SYS_XQPOLYVGT:
                case self::SYS_XQPOLYVLE:
                case self::SYS_XQPOLYVLT:
                case self::SYS_XQPOLYVNE:
                case self::SYS_XQREF2VAL:
                case self::SYS_XQRENAME:
                case self::SYS_XQREPLACE:
                case self::SYS_XQRESVURI:
                case self::SYS_XQRNDHALF2EVN:
                case self::SYS_XQRSLVQNM:
                case self::SYS_XQRYENVPGET:
                case self::SYS_XQRYVARGET:
                case self::SYS_XQRYWRP:
                case self::SYS_XQSEQ2CON4XC:
                case self::SYS_XQSEQ2CON:
                case self::SYS_XQSEQDEEPEQ:
                case self::SYS_XQSEQINSB:
                case self::SYS_XQSEQRM:
                case self::SYS_XQSEQRVS:
                case self::SYS_XQSEQSUB:
                case self::SYS_XQSEQTYPMATCH:
                case self::SYS_XQSTARTSWITH:
                case self::SYS_XQSTATBURI:
                case self::SYS_XQSTR2CODEP:
                case self::SYS_XQSTRJOIN:
                case self::SYS_XQSUBSTRAFT:
                case self::SYS_XQSUBSTRBEF:
                case self::SYS_XQTOKENIZE:
                case self::SYS_XQTREATAS:
                case self::SYS_XQ_UPKXML2SQL:
                case self::SYS_XQXFORM:
                case self::SYS_XSID_TO_RAW:
                case self::SYS_ZMAP_FILTER:
                case self::SYS_ZMAP_REFRESH:
                case self::TABLE_LOOKUP_BY_NL:
                case self::TABLESPACE_NO:
                case self::TABLESPACE:
                case self::TABLES:
                case self::TABLE_STATS:
                case self::TABLE:
                case self::TABNO:
                case self::TAG:
                case self::TANH:
                case self::TAN:
                case self::TBLORIDXPARTNUM:
                case self::TEMPFILE:
                case self::TEMPLATE:
                case self::TEMPORARY:
                case self::TEMP_TABLE:
                case self::TEST:
                case self::TEXT:
                case self::THAN:
                case self::THEN:
                case self::THE:
                case self::THREAD:
                case self::THROUGH:
                case self::TIER:
                case self::TIES:
                case self::TIMEOUT:
                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                case self::TIMESTAMP:
                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                case self::TIMESTAMP_UNCONSTRAINED:
                case self::TIMES:
                case self::TIME:
                case self::TIMEZONE_ABBR:
                case self::TIMEZONE_HOUR:
                case self::TIMEZONE_MINUTE:
                case self::TIMEZONE_OFFSET:
                case self::TIMEZONE_REGION:
                case self::TIME_ZONE:
                case self::TIV_GB:
                case self::TIV_SSF:
                case self::TO_ACLID:
                case self::TO_BINARY_DOUBLE:
                case self::TO_BINARY_FLOAT:
                case self::TO_BLOB:
                case self::TO_CLOB:
                case self::TO_DSINTERVAL:
                case self::TO_LOB:
                case self::TO_MULTI_BYTE:
                case self::TO_NCHAR:
                case self::TO_NCLOB:
                case self::TO_NUMBER:
                case self::TOPLEVEL:
                case self::TO_SINGLE_BYTE:
                case self::TO_TIMESTAMP:
                case self::TO_TIMESTAMP_TZ:
                case self::TO_TIME:
                case self::TO_TIME_TZ:
                case self::TO_YMINTERVAL:
                case self::TRACE:
                case self::TRACING:
                case self::TRACKING:
                case self::TRAILING:
                case self::TRANSACTION:
                case self::TRANSFORM_DISTINCT_AGG:
                case self::TRANSITIONAL:
                case self::TRANSITION:
                case self::TRANSLATE:
                case self::TRANSLATION:
                case self::TREAT:
                case self::TRIGGERS:
                case self::TRIGGER:
                case self::TRUE:
                case self::TRUNCATE:
                case self::TRUNC:
                case self::TRUSTED:
                case self::TRUST:
                case self::TUNING:
                case self::TX:
                case self::TYPES:
                case self::TYPE:
                case self::TZ_OFFSET:
                case self::UB2:
                case self::UBA:
                case self::UCS2:
                case self::UID:
                case self::UNARCHIVED:
                case self::UNBOUNDED:
                case self::UNBOUND:
                case self::UNCONDITIONAL:
                case self::UNDER:
                case self::UNDO:
                case self::UNDROP:
                case self::UNIFORM:
                case self::UNISTR:
                case self::UNLIMITED:
                case self::UNLOAD:
                case self::UNLOCK:
                case self::UNMATCHED:
                case self::UNNEST_INNERJ_DISTINCT_VIEW:
                case self::UNNEST_NOSEMIJ_NODISTINCTVIEW:
                case self::UNNEST_SEMIJ_VIEW:
                case self::UNNEST:
                case self::UNPACKED:
                case self::UNPIVOT:
                case self::UNPLUG:
                case self::UNPROTECTED:
                case self::UNQUIESCE:
                case self::UNRECOVERABLE:
                case self::UNRESTRICTED:
                case self::UNSUBSCRIBE:
                case self::UNTIL:
                case self::UNUSABLE:
                case self::UNUSED:
                case self::UPDATABLE:
                case self::UPDATED:
                case self::UPDATEXML:
                case self::UPD_INDEXES:
                case self::UPD_JOININDEX:
                case self::UPGRADE:
                case self::UPPER:
                case self::UPSERT:
                case self::UROWID:
                case self::USABLE:
                case self::USAGE:
                case self::USE_ANTI:
                case self::USE_CONCAT:
                case self::USE_CUBE:
                case self::USE_HASH_AGGREGATION:
                case self::USE_HASH_GBY_FOR_PUSHDOWN:
                case self::USE_HASH:
                case self::USE_HIDDEN_PARTITIONS:
                case self::USE_INVISIBLE_INDEXES:
                case self::USE_MERGE_CARTESIAN:
                case self::USE_MERGE:
                case self::USE_NL:
                case self::USE_NL_WITH_INDEX:
                case self::USE_PRIVATE_OUTLINES:
                case self::USER_DATA:
                case self::USER_DEFINED:
                case self::USERENV:
                case self::USERGROUP:
                case self::USER_RECYCLEBIN:
                case self::USERS:
                case self::USER_TABLESPACES:
                case self::USER:
                case self::USE_SEMI:
                case self::USE_STORED_OUTLINES:
                case self::USE_TTT_FOR_GSETS:
                case self::USE:
                case self::USE_VECTOR_AGGREGATION:
                case self::USE_WEAK_NAME_RESL:
                case self::USING_NO_EXPAND:
                case self::USING:
                case self::UTF16BE:
                case self::UTF16LE:
                case self::UTF32:
                case self::UTF8:
                case self::V1:
                case self::V2:
                case self::VALIDATE:
                case self::VALIDATION:
                case self::VALID_TIME_END:
                case self::VALUE:
                case self::VARCHAR2:
                case self::VARCHAR:
                case self::VARIABLE:
                case self::VAR_POP:
                case self::VARRAYS:
                case self::VARRAY:
                case self::VAR_SAMP:
                case self::VARYING:
                case self::VECTOR_READ_TRACE:
                case self::VECTOR_READ:
                case self::VECTOR_TRANSFORM_DIMS:
                case self::VECTOR_TRANSFORM_FACT:
                case self::VECTOR_TRANSFORM:
                case self::VERIFIER:
                case self::VERIFY:
                case self::VERSIONING:
                case self::VERSIONS_ENDSCN:
                case self::VERSIONS_ENDTIME:
                case self::VERSIONS_OPERATION:
                case self::VERSIONS_STARTSCN:
                case self::VERSIONS_STARTTIME:
                case self::VERSIONS:
                case self::VERSIONS_XID:
                case self::VERSION:
                case self::VIOLATION:
                case self::VIRTUAL:
                case self::VISIBILITY:
                case self::VISIBLE:
                case self::VOLUME:
                case self::VSIZE:
                case self::WAIT:
                case self::WALLET:
                case self::WARNING:
                case self::WEEKS:
                case self::WEEK:
                case self::WELLFORMED:
                case self::WHENEVER:
                case self::WHEN:
                case self::WHILE:
                case self::WHITESPACE:
                case self::WIDTH_BUCKET:
                case self::WITHIN:
                case self::WITHOUT:
                case self::WITH_PLSQL:
                case self::WORK:
                case self::WRAPPED:
                case self::WRAPPER:
                case self::WRITE:
                case self::XDB_FASTPATH_INSERT:
                case self::X_DYN_PRUNE:
                case self::XID:
                case self::XML2OBJECT:
                case self::XMLAGG:
                case self::XMLATTRIBUTES:
                case self::XMLCAST:
                case self::XMLCDATA:
                case self::XMLCOLATTVAL:
                case self::XMLCOMMENT:
                case self::XMLCONCAT:
                case self::XMLDIFF:
                case self::XML_DML_RWT_STMT:
                case self::XMLELEMENT:
                case self::XMLEXISTS2:
                case self::XMLEXISTS:
                case self::XMLFOREST:
                case self::XMLINDEX_REWRITE_IN_SELECT:
                case self::XMLINDEX_REWRITE:
                case self::XMLINDEX_SEL_IDX_TBL:
                case self::XMLISNODE:
                case self::XMLISVALID:
                case self::XMLNAMESPACES:
                case self::XMLPARSE:
                case self::XMLPATCH:
                case self::XMLPI:
                case self::XMLQUERYVAL:
                case self::XMLQUERY:
                case self::XMLROOT:
                case self::XMLSCHEMA:
                case self::XMLSERIALIZE:
                case self::XMLTABLE:
                case self::XMLTRANSFORMBLOB:
                case self::XMLTRANSFORM:
                case self::XMLTYPE:
                case self::XML:
                case self::XPATHTABLE:
                case self::XS_SYS_CONTEXT:
                case self::XS:
                case self::YEARS:
                case self::YEAR:
                case self::YES:
                case self::YMINTERVAL_UNCONSTRAINED:
                case self::ZONEMAP:
                case self::ZONE:
                case self::PREDICTION:
                case self::PREDICTION_BOUNDS:
                case self::PREDICTION_COST:
                case self::PREDICTION_DETAILS:
                case self::PREDICTION_PROBABILITY:
                case self::PREDICTION_SET:
                case self::CUME_DIST:
                case self::DENSE_RANK:
                case self::LISTAGG:
                case self::PERCENT_RANK:
                case self::PERCENTILE_CONT:
                case self::PERCENTILE_DISC:
                case self::RANK:
                case self::AVG:
                case self::CORR:
                case self::COVAR_:
                case self::LAG:
                case self::LEAD:
                case self::MAX:
                case self::MEDIAN:
                case self::MIN:
                case self::NTILE:
                case self::NVL:
                case self::RATIO_TO_REPORT:
                case self::REGR_:
                case self::ROUND:
                case self::ROW_NUMBER:
                case self::SUBSTR:
                case self::TO_CHAR:
                case self::TRIM:
                case self::SUM:
                case self::STDDEV:
                case self::VAR_:
                case self::VARIANCE:
                case self::LEAST:
                case self::GREATEST:
                case self::TO_DATE:
                case self::PERIOD:
                case self::DELIMITED_ID:
                case self::INTRODUCER:
                case self::REGULAR_ID:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11201);
                    $this->identifier();
                    break;

                case self::BINDVAR:
                case self::COLON:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11202);
                    $this->bind_variable();
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function collection_name(): Context\Collection_nameContext
    {
        $localContext = new Context\Collection_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1420, self::RULE_collection_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11205);
            $this->identifier();
            $this->setState(11208);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::PERIOD) {
                $this->setState(11206);
                $this->match(self::PERIOD);
                $this->setState(11207);
                $this->id_expression();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function link_name(): Context\Link_nameContext
    {
        $localContext = new Context\Link_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1422, self::RULE_link_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11210);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function column_name(): Context\Column_nameContext
    {
        $localContext = new Context\Column_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1424, self::RULE_column_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11212);
            $this->identifier();
            $this->setState(11217);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1546, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11213);
                    $this->match(self::PERIOD);
                    $this->setState(11214);
                    $this->id_expression();
                }

                $this->setState(11219);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1546, $this->ctx);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function tableview_name(): Context\Tableview_nameContext
    {
        $localContext = new Context\Tableview_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1426, self::RULE_tableview_name);

        try {
            $this->setState(11238);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1551, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11220);
                    $this->identifier();
                    $this->setState(11223);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1547, $this->ctx)) {
                        case 1:
                            $this->setState(11221);
                            $this->match(self::PERIOD);
                            $this->setState(11222);
                            $this->id_expression();
                            break;
                    }
                    $this->setState(11232);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1549, $this->ctx)) {
                        case 1:
                            $this->setState(11225);
                            $this->match(self::AT_SIGN);
                            $this->setState(11226);
                            $this->link_name();
                            $this->setState(11229);
                            $this->errorHandler->sync($this);

                            switch ($this->getInterpreter()->adaptivePredict($this->input, 1548, $this->ctx)) {
                                case 1:
                                    $this->setState(11227);
                                    $this->match(self::PERIOD);
                                    $this->setState(11228);
                                    $this->link_name();
                                    break;
                            }
                            break;

                        case 2:
                            $this->setState(11231);
                            $this->partition_extension_clause();
                            break;
                    }
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11234);
                    $this->xmltable();
                    $this->setState(11236);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1550, $this->ctx)) {
                        case 1:
                            $this->setState(11235);
                            $this->outer_join_sign();
                            break;
                    }
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function xmltable(): Context\XmltableContext
    {
        $localContext = new Context\XmltableContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1428, self::RULE_xmltable);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11240);
            $this->match(self::XMLTABLE);
            $this->setState(11241);
            $this->match(self::LEFT_PAREN);
            $this->setState(11245);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1552, $this->ctx)) {
                case 1:
                    $this->setState(11242);
                    $this->xml_namespaces_clause();
                    $this->setState(11243);
                    $this->match(self::COMMA);
                    break;
            }
            $this->setState(11247);
            $this->recursiveConcatenation(0);
            $this->setState(11249);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::PASSING) {
                $this->setState(11248);
                $this->xml_passing_clause();
            }
            $this->setState(11260);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::COLUMNS) {
                $this->setState(11251);
                $this->match(self::COLUMNS);
                $this->setState(11252);
                $this->xml_table_column();
                $this->setState(11257);
                $this->errorHandler->sync($this);

                $_la = $this->input->LA(1);
                while ($_la === self::COMMA) {
                    $this->setState(11253);
                    $this->match(self::COMMA);
                    $this->setState(11254);
                    $this->xml_table_column();
                    $this->setState(11259);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);
                }
            }
            $this->setState(11262);
            $this->match(self::RIGHT_PAREN);
            $this->setState(11265);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1556, $this->ctx)) {
                case 1:
                    $this->setState(11263);
                    $this->match(self::PERIOD);
                    $this->setState(11264);
                    $this->general_element_part();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function char_set_name(): Context\Char_set_nameContext
    {
        $localContext = new Context\Char_set_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1430, self::RULE_char_set_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11267);
            $this->id_expression();
            $this->setState(11272);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1557, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11268);
                    $this->match(self::PERIOD);
                    $this->setState(11269);
                    $this->id_expression();
                }

                $this->setState(11274);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1557, $this->ctx);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function synonym_name(): Context\Synonym_nameContext
    {
        $localContext = new Context\Synonym_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1432, self::RULE_synonym_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11275);
            $this->identifier();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function schema_object_name(): Context\Schema_object_nameContext
    {
        $localContext = new Context\Schema_object_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1434, self::RULE_schema_object_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11277);
            $this->id_expression();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function dir_object_name(): Context\Dir_object_nameContext
    {
        $localContext = new Context\Dir_object_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1436, self::RULE_dir_object_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11279);
            $this->id_expression();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function user_object_name(): Context\User_object_nameContext
    {
        $localContext = new Context\User_object_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1438, self::RULE_user_object_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11281);
            $this->id_expression();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function grant_object_name(): Context\Grant_object_nameContext
    {
        $localContext = new Context\Grant_object_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1440, self::RULE_grant_object_name);

        try {
            $this->setState(11307);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1559, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11283);
                    $this->tableview_name();
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11284);
                    $this->match(self::USER);
                    $this->setState(11285);
                    $this->user_object_name();
                    $this->setState(11290);
                    $this->errorHandler->sync($this);

                    $_la = $this->input->LA(1);
                    while ($_la === self::COMMA) {
                        $this->setState(11286);
                        $this->match(self::COMMA);
                        $this->setState(11287);
                        $this->user_object_name();
                        $this->setState(11292);
                        $this->errorHandler->sync($this);
                        $_la = $this->input->LA(1);
                    }
                    break;

                case 3:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(11293);
                    $this->match(self::DIRECTORY);
                    $this->setState(11294);
                    $this->dir_object_name();
                    break;

                case 4:
                    $this->enterOuterAlt($localContext, 4);
                    $this->setState(11295);
                    $this->match(self::EDITION);
                    $this->setState(11296);
                    $this->schema_object_name();
                    break;

                case 5:
                    $this->enterOuterAlt($localContext, 5);
                    $this->setState(11297);
                    $this->match(self::MINING);
                    $this->setState(11298);
                    $this->match(self::MODEL);
                    $this->setState(11299);
                    $this->schema_object_name();
                    break;

                case 6:
                    $this->enterOuterAlt($localContext, 6);
                    $this->setState(11300);
                    $this->match(self::JAVA);
                    $this->setState(11301);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::RESOURCE || $_la === self::SOURCE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11302);
                    $this->schema_object_name();
                    break;

                case 7:
                    $this->enterOuterAlt($localContext, 7);
                    $this->setState(11303);
                    $this->match(self::SQL);
                    $this->setState(11304);
                    $this->match(self::TRANSLATION);
                    $this->setState(11305);
                    $this->match(self::PROFILE);
                    $this->setState(11306);
                    $this->schema_object_name();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function column_list(): Context\Column_listContext
    {
        $localContext = new Context\Column_listContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1442, self::RULE_column_list);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11309);
            $this->column_name();
            $this->setState(11314);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1560, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11310);
                    $this->match(self::COMMA);
                    $this->setState(11311);
                    $this->column_name();
                }

                $this->setState(11316);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1560, $this->ctx);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function paren_column_list(): Context\Paren_column_listContext
    {
        $localContext = new Context\Paren_column_listContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1444, self::RULE_paren_column_list);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11317);
            $this->match(self::LEFT_PAREN);
            $this->setState(11318);
            $this->column_list();
            $this->setState(11319);
            $this->match(self::RIGHT_PAREN);
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function keep_clause(): Context\Keep_clauseContext
    {
        $localContext = new Context\Keep_clauseContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1446, self::RULE_keep_clause);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11321);
            $this->match(self::KEEP);
            $this->setState(11322);
            $this->match(self::LEFT_PAREN);
            $this->setState(11323);
            $this->match(self::DENSE_RANK);
            $this->setState(11324);

            $_la = $this->input->LA(1);

            if (!($_la === self::FIRST || $_la === self::LAST)) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
            $this->setState(11325);
            $this->order_by_clause();
            $this->setState(11326);
            $this->match(self::RIGHT_PAREN);
            $this->setState(11328);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1561, $this->ctx)) {
                case 1:
                    $this->setState(11327);
                    $this->over_clause();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function function_argument(): Context\Function_argumentContext
    {
        $localContext = new Context\Function_argumentContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1448, self::RULE_function_argument);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11330);
            $this->match(self::LEFT_PAREN);
            $this->setState(11339);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if (((($_la) & ~0x3f) === 0 && ((1 << $_la) & ((1 << self::ABORT) | (1 << self::ABS) | (1 << self::ACCESS) | (1 << self::ACCESSED) | (1 << self::ACCOUNT) | (1 << self::ACL) | (1 << self::ACOS) | (1 << self::ACTION) | (1 << self::ACTIONS) | (1 << self::ACTIVATE) | (1 << self::ACTIVE) | (1 << self::ACTIVE_COMPONENT) | (1 << self::ACTIVE_DATA) | (1 << self::ACTIVE_FUNCTION) | (1 << self::ACTIVE_TAG) | (1 << self::ACTIVITY) | (1 << self::ADAPTIVE_PLAN) | (1 << self::ADD) | (1 << self::ADD_COLUMN) | (1 << self::ADD_GROUP) | (1 << self::ADD_MONTHS) | (1 << self::ADJ_DATE) | (1 << self::ADMIN) | (1 << self::ADMINISTER) | (1 << self::ADMINISTRATOR) | (1 << self::ADVANCED) | (1 << self::ADVISE) | (1 << self::ADVISOR) | (1 << self::AFD_DISKSTRING) | (1 << self::AFTER) | (1 << self::AGENT) | (1 << self::AGGREGATE) | (1 << self::A_LETTER) | (1 << self::ALIAS) | (1 << self::ALL) | (1 << self::ALLOCATE) | (1 << self::ALLOW) | (1 << self::ALL_ROWS) | (1 << self::ALWAYS) | (1 << self::ANALYZE) | (1 << self::ANCILLARY) | (1 << self::AND_EQUAL) | (1 << self::ANOMALY) | (1 << self::ANSI_REARCH) | (1 << self::ANTIJOIN) | (1 << self::ANY) | (1 << self::ANYSCHEMA) | (1 << self::APPEND) | (1 << self::APPENDCHILDXML) | (1 << self::APPEND_VALUES) | (1 << self::APPLICATION) | (1 << self::APPLY) | (1 << self::APPROX_COUNT_DISTINCT) | (1 << self::ARCHIVAL) | (1 << self::ARCHIVE) | (1 << self::ARCHIVED) | (1 << self::ARCHIVELOG) | (1 << self::ARRAY) | (1 << self::ASCII))) !== 0) || (((($_la - 64)) & ~0x3f) === 0 && ((1 << ($_la - 64)) & ((1 << (self::ASCIISTR - 64)) | (1 << (self::ASIN - 64)) | (1 << (self::ASIS - 64)) | (1 << (self::ASSEMBLY - 64)) | (1 << (self::ASSIGN - 64)) | (1 << (self::ASSOCIATE - 64)) | (1 << (self::ASYNC - 64)) | (1 << (self::ASYNCHRONOUS - 64)) | (1 << (self::ATAN2 - 64)) | (1 << (self::ATAN - 64)) | (1 << (self::AT - 64)) | (1 << (self::ATTRIBUTE - 64)) | (1 << (self::ATTRIBUTES - 64)) | (1 << (self::AUTHENTICATED - 64)) | (1 << (self::AUTHENTICATION - 64)) | (1 << (self::AUTHID - 64)) | (1 << (self::AUTHORIZATION - 64)) | (1 << (self::AUTOALLOCATE - 64)) | (1 << (self::AUTO - 64)) | (1 << (self::AUTOEXTEND - 64)) | (1 << (self::AUTO_LOGIN - 64)) | (1 << (self::AUTOMATIC - 64)) | (1 << (self::AUTONOMOUS_TRANSACTION - 64)) | (1 << (self::AUTO_REOPTIMIZE - 64)) | (1 << (self::AVAILABILITY - 64)) | (1 << (self::AVRO - 64)) | (1 << (self::BACKGROUND - 64)) | (1 << (self::BACKUP - 64)) | (1 << (self::BASIC - 64)) | (1 << (self::BASICFILE - 64)) | (1 << (self::BATCH - 64)) | (1 << (self::BATCHSIZE - 64)) | (1 << (self::BATCH_TABLE_ACCESS_BY_ROWID - 64)) | (1 << (self::BECOME - 64)) | (1 << (self::BEFORE - 64)) | (1 << (self::BEGIN - 64)) | (1 << (self::BEGINNING - 64)) | (1 << (self::BEGIN_OUTLINE_DATA - 64)) | (1 << (self::BEHALF - 64)) | (1 << (self::BEQUEATH - 64)) | (1 << (self::BFILE - 64)) | (1 << (self::BFILENAME - 64)) | (1 << (self::BIGFILE - 64)) | (1 << (self::BINARY - 64)) | (1 << (self::BINARY_DOUBLE - 64)) | (1 << (self::BINARY_DOUBLE_INFINITY - 64)) | (1 << (self::BINARY_DOUBLE_NAN - 64)) | (1 << (self::BINARY_FLOAT - 64)) | (1 << (self::BINARY_FLOAT_INFINITY - 64)) | (1 << (self::BINARY_FLOAT_NAN - 64)) | (1 << (self::BINARY_INTEGER - 64)) | (1 << (self::BIND_AWARE - 64)) | (1 << (self::BINDING - 64)) | (1 << (self::BIN_TO_NUM - 64)) | (1 << (self::BITAND - 64)) | (1 << (self::BITMAP_AND - 64)) | (1 << (self::BITMAP - 64)) | (1 << (self::BITMAPS - 64)) | (1 << (self::BITMAP_TREE - 64)) | (1 << (self::BITS - 64)))) !== 0) || (((($_la - 128)) & ~0x3f) === 0 && ((1 << ($_la - 128)) & ((1 << (self::BLOB - 128)) | (1 << (self::BLOCK - 128)) | (1 << (self::BLOCK_RANGE - 128)) | (1 << (self::BLOCKS - 128)) | (1 << (self::BLOCKSIZE - 128)) | (1 << (self::BODY - 128)) | (1 << (self::BOOLEAN - 128)) | (1 << (self::BOTH - 128)) | (1 << (self::BOUND - 128)) | (1 << (self::BRANCH - 128)) | (1 << (self::BREADTH - 128)) | (1 << (self::BROADCAST - 128)) | (1 << (self::BSON - 128)) | (1 << (self::BUFFER - 128)) | (1 << (self::BUFFER_CACHE - 128)) | (1 << (self::BUFFER_POOL - 128)) | (1 << (self::BUILD - 128)) | (1 << (self::BULK - 128)) | (1 << (self::BYPASS_RECURSIVE_CHECK - 128)) | (1 << (self::BYPASS_UJVC - 128)) | (1 << (self::BYTE - 128)) | (1 << (self::CACHE - 128)) | (1 << (self::CACHE_CB - 128)) | (1 << (self::CACHE_INSTANCES - 128)) | (1 << (self::CACHE_TEMP_TABLE - 128)) | (1 << (self::CACHING - 128)) | (1 << (self::CALCULATED - 128)) | (1 << (self::CALLBACK - 128)) | (1 << (self::CALL - 128)) | (1 << (self::CANCEL - 128)) | (1 << (self::CAPACITY - 128)) | (1 << (self::CARDINALITY - 128)) | (1 << (self::CASCADE - 128)) | (1 << (self::CASE - 128)) | (1 << (self::CAST - 128)) | (1 << (self::CATEGORY - 128)) | (1 << (self::CDBDEFAULT - 128)) | (1 << (self::CEIL - 128)) | (1 << (self::CELL_FLASH_CACHE - 128)) | (1 << (self::CERTIFICATE - 128)) | (1 << (self::CFILE - 128)) | (1 << (self::CHAINED - 128)) | (1 << (self::CHANGE - 128)) | (1 << (self::CHANGE_DUPKEY_ERROR_INDEX - 128)) | (1 << (self::CHARACTER - 128)) | (1 << (self::CHAR - 128)) | (1 << (self::CHAR_CS - 128)) | (1 << (self::CHARTOROWID - 128)) | (1 << (self::CHECK_ACL_REWRITE - 128)) | (1 << (self::CHECKPOINT - 128)) | (1 << (self::CHILD - 128)) | (1 << (self::CHOOSE - 128)) | (1 << (self::CHR - 128)) | (1 << (self::CHUNK - 128)) | (1 << (self::CLASS - 128)) | (1 << (self::CLASSIFIER - 128)) | (1 << (self::CLEANUP - 128)) | (1 << (self::CLEAR - 128)) | (1 << (self::C_LETTER - 128)) | (1 << (self::CLIENT - 128)))) !== 0) || (((($_la - 192)) & ~0x3f) === 0 && ((1 << ($_la - 192)) & ((1 << (self::CLOB - 192)) | (1 << (self::CLONE - 192)) | (1 << (self::CLOSE_CACHED_OPEN_CURSORS - 192)) | (1 << (self::CLOSE - 192)) | (1 << (self::CLUSTER_BY_ROWID - 192)) | (1 << (self::CLUSTER - 192)) | (1 << (self::CLUSTER_DETAILS - 192)) | (1 << (self::CLUSTER_DISTANCE - 192)) | (1 << (self::CLUSTER_ID - 192)) | (1 << (self::CLUSTERING - 192)) | (1 << (self::CLUSTERING_FACTOR - 192)) | (1 << (self::CLUSTER_PROBABILITY - 192)) | (1 << (self::CLUSTER_SET - 192)) | (1 << (self::COALESCE - 192)) | (1 << (self::COALESCE_SQ - 192)) | (1 << (self::COARSE - 192)) | (1 << (self::CO_AUTH_IND - 192)) | (1 << (self::COLD - 192)) | (1 << (self::COLLECT - 192)) | (1 << (self::COLUMNAR - 192)) | (1 << (self::COLUMN_AUTH_INDICATOR - 192)) | (1 << (self::COLUMN - 192)) | (1 << (self::COLUMNS - 192)) | (1 << (self::COLUMN_STATS - 192)) | (1 << (self::COLUMN_VALUE - 192)) | (1 << (self::COMMENT - 192)) | (1 << (self::COMMIT - 192)) | (1 << (self::COMMITTED - 192)) | (1 << (self::COMMON_DATA - 192)) | (1 << (self::COMPACT - 192)) | (1 << (self::COMPATIBILITY - 192)) | (1 << (self::COMPILE - 192)) | (1 << (self::COMPLETE - 192)) | (1 << (self::COMPLIANCE - 192)) | (1 << (self::COMPONENT - 192)) | (1 << (self::COMPONENTS - 192)) | (1 << (self::COMPOSE - 192)) | (1 << (self::COMPOSITE - 192)) | (1 << (self::COMPOSITE_LIMIT - 192)) | (1 << (self::COMPOUND - 192)) | (1 << (self::COMPUTE - 192)) | (1 << (self::CONCAT - 192)) | (1 << (self::CON_DBID_TO_ID - 192)) | (1 << (self::CONDITIONAL - 192)) | (1 << (self::CONDITION - 192)) | (1 << (self::CONFIRM - 192)) | (1 << (self::CONFORMING - 192)) | (1 << (self::CON_GUID_TO_ID - 192)) | (1 << (self::CON_ID - 192)) | (1 << (self::CON_NAME_TO_ID - 192)) | (1 << (self::CONNECT_BY_CB_WHR_ONLY - 192)) | (1 << (self::CONNECT_BY_COMBINE_SW - 192)) | (1 << (self::CONNECT_BY_COST_BASED - 192)) | (1 << (self::CONNECT_BY_ELIM_DUPS - 192)) | (1 << (self::CONNECT_BY_FILTERING - 192)) | (1 << (self::CONNECT_BY_ISCYCLE - 192)) | (1 << (self::CONNECT_BY_ISLEAF - 192)) | (1 << (self::CONNECT_BY_ROOT - 192)) | (1 << (self::CONNECT_TIME - 192)) | (1 << (self::CONSIDER - 192)) | (1 << (self::CONSISTENT - 192)) | (1 << (self::CONSTANT - 192)))) !== 0) || (((($_la - 256)) & ~0x3f) === 0 && ((1 << ($_la - 256)) & ((1 << (self::CONST - 256)) | (1 << (self::CONSTRAINT - 256)) | (1 << (self::CONSTRAINTS - 256)) | (1 << (self::CONSTRUCTOR - 256)) | (1 << (self::CONTAINER - 256)) | (1 << (self::CONTAINER_DATA - 256)) | (1 << (self::CONTAINERS - 256)) | (1 << (self::CONTENT - 256)) | (1 << (self::CONTENTS - 256)) | (1 << (self::CONTEXT - 256)) | (1 << (self::CONTINUE - 256)) | (1 << (self::CONTROLFILE - 256)) | (1 << (self::CON_UID_TO_ID - 256)) | (1 << (self::CONVERT - 256)) | (1 << (self::COOKIE - 256)) | (1 << (self::COPY - 256)) | (1 << (self::CORR_K - 256)) | (1 << (self::CORR_S - 256)) | (1 << (self::CORRUPTION - 256)) | (1 << (self::CORRUPT_XID_ALL - 256)) | (1 << (self::CORRUPT_XID - 256)) | (1 << (self::COS - 256)) | (1 << (self::COSH - 256)) | (1 << (self::COST - 256)) | (1 << (self::COST_XML_QUERY_REWRITE - 256)) | (1 << (self::COUNT - 256)) | (1 << (self::COVAR_POP - 256)) | (1 << (self::COVAR_SAMP - 256)) | (1 << (self::CPU_COSTING - 256)) | (1 << (self::CPU_PER_CALL - 256)) | (1 << (self::CPU_PER_SESSION - 256)) | (1 << (self::CRASH - 256)) | (1 << (self::CREATE_FILE_DEST - 256)) | (1 << (self::CREATE_STORED_OUTLINES - 256)) | (1 << (self::CREATION - 256)) | (1 << (self::CREDENTIAL - 256)) | (1 << (self::CRITICAL - 256)) | (1 << (self::CROSS - 256)) | (1 << (self::CROSSEDITION - 256)) | (1 << (self::CSCONVERT - 256)) | (1 << (self::CUBE_AJ - 256)) | (1 << (self::CUBE - 256)) | (1 << (self::CUBE_GB - 256)) | (1 << (self::CUBE_SJ - 256)) | (1 << (self::CUME_DISTM - 256)) | (1 << (self::CURRENT - 256)) | (1 << (self::CURRENT_DATE - 256)) | (1 << (self::CURRENT_SCHEMA - 256)) | (1 << (self::CURRENT_TIME - 256)) | (1 << (self::CURRENT_TIMESTAMP - 256)) | (1 << (self::CURRENT_USER - 256)) | (1 << (self::CURRENTV - 256)) | (1 << (self::CURSOR - 256)) | (1 << (self::CURSOR_SHARING_EXACT - 256)) | (1 << (self::CURSOR_SPECIFIC_SEGMENT - 256)) | (1 << (self::CUSTOMDATUM - 256)) | (1 << (self::CV - 256)) | (1 << (self::CYCLE - 256)) | (1 << (self::DANGLING - 256)) | (1 << (self::DATABASE - 256)) | (1 << (self::DATA - 256)) | (1 << (self::DATAFILE - 256)) | (1 << (self::DATAFILES - 256)))) !== 0) || (((($_la - 321)) & ~0x3f) === 0 && ((1 << ($_la - 321)) & ((1 << (self::DATAMOVEMENT - 321)) | (1 << (self::DATAOBJNO - 321)) | (1 << (self::DATAOBJ_TO_MAT_PARTITION - 321)) | (1 << (self::DATAOBJ_TO_PARTITION - 321)) | (1 << (self::DATAPUMP - 321)) | (1 << (self::DATA_SECURITY_REWRITE_LIMIT - 321)) | (1 << (self::DATE - 321)) | (1 << (self::DATE_MODE - 321)) | (1 << (self::DAY - 321)) | (1 << (self::DAYS - 321)) | (1 << (self::DBA - 321)) | (1 << (self::DBA_RECYCLEBIN - 321)) | (1 << (self::DBMS_STATS - 321)) | (1 << (self::DB_ROLE_CHANGE - 321)) | (1 << (self::DBTIMEZONE - 321)) | (1 << (self::DB_UNIQUE_NAME - 321)) | (1 << (self::DB_VERSION - 321)) | (1 << (self::DDL - 321)) | (1 << (self::DEALLOCATE - 321)) | (1 << (self::DEBUG - 321)) | (1 << (self::DEBUGGER - 321)) | (1 << (self::DEC - 321)) | (1 << (self::DECIMAL - 321)) | (1 << (self::DECLARE - 321)) | (1 << (self::DECOMPOSE - 321)) | (1 << (self::DECORRELATE - 321)) | (1 << (self::DECR - 321)) | (1 << (self::DECREMENT - 321)) | (1 << (self::DECRYPT - 321)) | (1 << (self::DEDUPLICATE - 321)) | (1 << (self::DEFAULT - 321)) | (1 << (self::DEFAULTS - 321)) | (1 << (self::DEFERRABLE - 321)) | (1 << (self::DEFERRED - 321)) | (1 << (self::DEFINED - 321)) | (1 << (self::DEFINE - 321)) | (1 << (self::DEFINER - 321)) | (1 << (self::DEGREE - 321)) | (1 << (self::DELAY - 321)) | (1 << (self::DELEGATE - 321)) | (1 << (self::DELETE_ALL - 321)) | (1 << (self::DELETE - 321)) | (1 << (self::DELETEXML - 321)) | (1 << (self::DEMAND - 321)) | (1 << (self::DENSE_RANKM - 321)) | (1 << (self::DEPENDENT - 321)) | (1 << (self::DEPTH - 321)) | (1 << (self::DEQUEUE - 321)) | (1 << (self::DEREF - 321)) | (1 << (self::DEREF_NO_REWRITE - 321)) | (1 << (self::DESTROY - 321)) | (1 << (self::DETACHED - 321)) | (1 << (self::DETERMINES - 321)) | (1 << (self::DETERMINISTIC - 321)) | (1 << (self::DICTIONARY - 321)) | (1 << (self::DIMENSION - 321)) | (1 << (self::DIMENSIONS - 321)) | (1 << (self::DIRECT_LOAD - 321)) | (1 << (self::DIRECTORY - 321)) | (1 << (self::DIRECT_PATH - 321)) | (1 << (self::DISABLE_ALL - 321)) | (1 << (self::DISABLE - 321)) | (1 << (self::DISABLE_PARALLEL_DML - 321)))) !== 0) || (((($_la - 385)) & ~0x3f) === 0 && ((1 << ($_la - 385)) & ((1 << (self::DISABLE_PRESET - 385)) | (1 << (self::DISABLE_RPKE - 385)) | (1 << (self::DISALLOW - 385)) | (1 << (self::DISASSOCIATE - 385)) | (1 << (self::DISCARD - 385)) | (1 << (self::DISCONNECT - 385)) | (1 << (self::DISK - 385)) | (1 << (self::DISKGROUP - 385)) | (1 << (self::DISKS - 385)) | (1 << (self::DISMOUNT - 385)) | (1 << (self::DISTINCT - 385)) | (1 << (self::DISTINGUISHED - 385)) | (1 << (self::DISTRIBUTED - 385)) | (1 << (self::DISTRIBUTE - 385)) | (1 << (self::DML - 385)) | (1 << (self::DML_UPDATE - 385)) | (1 << (self::DOCFIDELITY - 385)) | (1 << (self::DOCUMENT - 385)) | (1 << (self::DOMAIN_INDEX_FILTER - 385)) | (1 << (self::DOMAIN_INDEX_NO_SORT - 385)) | (1 << (self::DOMAIN_INDEX_SORT - 385)) | (1 << (self::DOUBLE - 385)) | (1 << (self::DOWNGRADE - 385)) | (1 << (self::DRIVING_SITE - 385)) | (1 << (self::DROP_COLUMN - 385)) | (1 << (self::DROP_GROUP - 385)) | (1 << (self::DSINTERVAL_UNCONSTRAINED - 385)) | (1 << (self::DST_UPGRADE_INSERT_CONV - 385)) | (1 << (self::DUMP - 385)) | (1 << (self::DUPLICATE - 385)) | (1 << (self::DV - 385)) | (1 << (self::DYNAMIC - 385)) | (1 << (self::DYNAMIC_SAMPLING - 385)) | (1 << (self::DYNAMIC_SAMPLING_EST_CDN - 385)) | (1 << (self::EACH - 385)) | (1 << (self::EDITIONABLE - 385)) | (1 << (self::EDITION - 385)) | (1 << (self::EDITIONING - 385)) | (1 << (self::EDITIONS - 385)) | (1 << (self::ELEMENT - 385)) | (1 << (self::ELIM_GROUPBY - 385)) | (1 << (self::ELIMINATE_JOIN - 385)) | (1 << (self::ELIMINATE_OBY - 385)) | (1 << (self::ELIMINATE_OUTER_JOIN - 385)) | (1 << (self::EM - 385)) | (1 << (self::EMPTY_BLOB - 385)) | (1 << (self::EMPTY_CLOB - 385)) | (1 << (self::EMPTY - 385)) | (1 << (self::ENABLE_ALL - 385)) | (1 << (self::ENABLE - 385)) | (1 << (self::ENABLE_PARALLEL_DML - 385)) | (1 << (self::ENABLE_PRESET - 385)) | (1 << (self::ENCODING - 385)) | (1 << (self::ENCRYPT - 385)) | (1 << (self::ENCRYPTION - 385)) | (1 << (self::END_OUTLINE_DATA - 385)) | (1 << (self::ENFORCED - 385)) | (1 << (self::ENFORCE - 385)))) !== 0) || (((($_la - 449)) & ~0x3f) === 0 && ((1 << ($_la - 449)) & ((1 << (self::ENQUEUE - 449)) | (1 << (self::ENTERPRISE - 449)) | (1 << (self::ENTITYESCAPING - 449)) | (1 << (self::ENTRY - 449)) | (1 << (self::EQUIPART - 449)) | (1 << (self::ERR - 449)) | (1 << (self::ERROR_ARGUMENT - 449)) | (1 << (self::ERROR - 449)) | (1 << (self::ERROR_ON_OVERLAP_TIME - 449)) | (1 << (self::ERRORS - 449)) | (1 << (self::ESCAPE - 449)) | (1 << (self::ESTIMATE - 449)) | (1 << (self::EVAL - 449)) | (1 << (self::EVALNAME - 449)) | (1 << (self::EVALUATE - 449)) | (1 << (self::EVALUATION - 449)) | (1 << (self::EVENTS - 449)) | (1 << (self::EVERY - 449)) | (1 << (self::EXCEPT - 449)) | (1 << (self::EXCEPTION - 449)) | (1 << (self::EXCEPTION_INIT - 449)) | (1 << (self::EXCEPTIONS - 449)) | (1 << (self::EXCHANGE - 449)) | (1 << (self::EXCLUDE - 449)) | (1 << (self::EXCLUDING - 449)) | (1 << (self::EXECUTE - 449)) | (1 << (self::EXEMPT - 449)) | (1 << (self::EXISTING - 449)) | (1 << (self::EXISTS - 449)) | (1 << (self::EXISTSNODE - 449)) | (1 << (self::EXIT - 449)) | (1 << (self::EXPAND_GSET_TO_UNION - 449)) | (1 << (self::EXPAND_TABLE - 449)) | (1 << (self::EXP - 449)) | (1 << (self::EXPIRE - 449)) | (1 << (self::EXPLAIN - 449)) | (1 << (self::EXPLOSION - 449)) | (1 << (self::EXPORT - 449)) | (1 << (self::EXPR_CORR_CHECK - 449)) | (1 << (self::EXPRESS - 449)) | (1 << (self::EXTENDS - 449)) | (1 << (self::EXTENT - 449)) | (1 << (self::EXTENTS - 449)) | (1 << (self::EXTERNAL - 449)) | (1 << (self::EXTERNALLY - 449)) | (1 << (self::EXTRACTCLOBXML - 449)) | (1 << (self::EXTRACT - 449)) | (1 << (self::EXTRACTVALUE - 449)) | (1 << (self::EXTRA - 449)) | (1 << (self::FACILITY - 449)) | (1 << (self::FACT - 449)) | (1 << (self::FACTOR - 449)) | (1 << (self::FACTORIZE_JOIN - 449)) | (1 << (self::FAILED - 449)) | (1 << (self::FAILED_LOGIN_ATTEMPTS - 449)) | (1 << (self::FAILGROUP - 449)) | (1 << (self::FAILOVER - 449)) | (1 << (self::FAILURE - 449)) | (1 << (self::FALSE - 449)) | (1 << (self::FAMILY - 449)) | (1 << (self::FAR - 449)) | (1 << (self::FAST - 449)) | (1 << (self::FASTSTART - 449)))) !== 0) || (((($_la - 513)) & ~0x3f) === 0 && ((1 << ($_la - 513)) & ((1 << (self::FBTSCAN - 513)) | (1 << (self::FEATURE_DETAILS - 513)) | (1 << (self::FEATURE_ID - 513)) | (1 << (self::FEATURE_SET - 513)) | (1 << (self::FEATURE_VALUE - 513)) | (1 << (self::FETCH - 513)) | (1 << (self::FILE - 513)) | (1 << (self::FILE_NAME_CONVERT - 513)) | (1 << (self::FILESYSTEM_LIKE_LOGGING - 513)) | (1 << (self::FILTER - 513)) | (1 << (self::FINAL - 513)) | (1 << (self::FINE - 513)) | (1 << (self::FINISH - 513)) | (1 << (self::FIRST - 513)) | (1 << (self::FIRSTM - 513)) | (1 << (self::FIRST_ROWS - 513)) | (1 << (self::FIRST_VALUE - 513)) | (1 << (self::FIXED_VIEW_DATA - 513)) | (1 << (self::FLAGGER - 513)) | (1 << (self::FLASHBACK - 513)) | (1 << (self::FLASH_CACHE - 513)) | (1 << (self::FLOAT - 513)) | (1 << (self::FLOB - 513)) | (1 << (self::FLOOR - 513)) | (1 << (self::FLUSH - 513)) | (1 << (self::FOLDER - 513)) | (1 << (self::FOLLOWING - 513)) | (1 << (self::FOLLOWS - 513)) | (1 << (self::FORALL - 513)) | (1 << (self::FORCE - 513)) | (1 << (self::FORCE_XML_QUERY_REWRITE - 513)) | (1 << (self::FOREIGN - 513)) | (1 << (self::FOREVER - 513)) | (1 << (self::FORMAT - 513)) | (1 << (self::FORWARD - 513)) | (1 << (self::FRAGMENT_NUMBER - 513)) | (1 << (self::FREELIST - 513)) | (1 << (self::FREELISTS - 513)) | (1 << (self::FREEPOOLS - 513)) | (1 << (self::FRESH - 513)) | (1 << (self::FROM_TZ - 513)) | (1 << (self::FULL - 513)) | (1 << (self::FULL_OUTER_JOIN_TO_OUTER - 513)) | (1 << (self::FUNCTION - 513)) | (1 << (self::FUNCTIONS - 513)) | (1 << (self::GATHER_OPTIMIZER_STATISTICS - 513)) | (1 << (self::GATHER_PLAN_STATISTICS - 513)) | (1 << (self::GBY_CONC_ROLLUP - 513)) | (1 << (self::GBY_PUSHDOWN - 513)) | (1 << (self::GENERATED - 513)) | (1 << (self::GET - 513)) | (1 << (self::GLOBAL - 513)) | (1 << (self::GLOBALLY - 513)) | (1 << (self::GLOBAL_NAME - 513)) | (1 << (self::GLOBAL_TOPIC_ENABLED - 513)) | (1 << (self::GROUP_BY - 513)) | (1 << (self::GROUP_ID - 513)) | (1 << (self::GROUPING - 513)) | (1 << (self::GROUPING_ID - 513)))) !== 0) || (((($_la - 577)) & ~0x3f) === 0 && ((1 << ($_la - 577)) & ((1 << (self::GROUPS - 577)) | (1 << (self::GUARANTEED - 577)) | (1 << (self::GUARANTEE - 577)) | (1 << (self::GUARD - 577)) | (1 << (self::HASH_AJ - 577)) | (1 << (self::HASH - 577)) | (1 << (self::HASHKEYS - 577)) | (1 << (self::HASH_SJ - 577)) | (1 << (self::HEADER - 577)) | (1 << (self::HEAP - 577)) | (1 << (self::HELP - 577)) | (1 << (self::HEXTORAW - 577)) | (1 << (self::HEXTOREF - 577)) | (1 << (self::HIDDEN_KEYWORD - 577)) | (1 << (self::HIDE - 577)) | (1 << (self::HIERARCHY - 577)) | (1 << (self::HIGH - 577)) | (1 << (self::HINTSET_BEGIN - 577)) | (1 << (self::HINTSET_END - 577)) | (1 << (self::HOT - 577)) | (1 << (self::HOUR - 577)) | (1 << (self::HWM_BROKERED - 577)) | (1 << (self::HYBRID - 577)) | (1 << (self::IDENTIFIER - 577)) | (1 << (self::IDENTITY - 577)) | (1 << (self::IDGENERATORS - 577)) | (1 << (self::ID - 577)) | (1 << (self::IDLE_TIME - 577)) | (1 << (self::IF - 577)) | (1 << (self::IGNORE - 577)) | (1 << (self::IGNORE_OPTIM_EMBEDDED_HINTS - 577)) | (1 << (self::IGNORE_ROW_ON_DUPKEY_INDEX - 577)) | (1 << (self::IGNORE_WHERE_CLAUSE - 577)) | (1 << (self::ILM - 577)) | (1 << (self::IMMEDIATE - 577)) | (1 << (self::IMPACT - 577)) | (1 << (self::IMPORT - 577)) | (1 << (self::INACTIVE - 577)) | (1 << (self::INCLUDE - 577)) | (1 << (self::INCLUDE_VERSION - 577)) | (1 << (self::INCLUDING - 577)) | (1 << (self::INCREMENTAL - 577)) | (1 << (self::INCREMENT - 577)) | (1 << (self::INCR - 577)) | (1 << (self::INDENT - 577)) | (1 << (self::INDEX_ASC - 577)) | (1 << (self::INDEX_COMBINE - 577)) | (1 << (self::INDEX_DESC - 577)) | (1 << (self::INDEXED - 577)) | (1 << (self::INDEXES - 577)) | (1 << (self::INDEX_FFS - 577)) | (1 << (self::INDEX_FILTER - 577)) | (1 << (self::INDEXING - 577)) | (1 << (self::INDEX_JOIN - 577)) | (1 << (self::INDEX_ROWS - 577)) | (1 << (self::INDEX_RRS - 577)) | (1 << (self::INDEX_RS_ASC - 577)) | (1 << (self::INDEX_RS_DESC - 577)) | (1 << (self::INDEX_RS - 577)) | (1 << (self::INDEX_SCAN - 577)) | (1 << (self::INDEX_SKIP_SCAN - 577)))) !== 0) || (((($_la - 641)) & ~0x3f) === 0 && ((1 << ($_la - 641)) & ((1 << (self::INDEX_SS_ASC - 641)) | (1 << (self::INDEX_SS_DESC - 641)) | (1 << (self::INDEX_SS - 641)) | (1 << (self::INDEX_STATS - 641)) | (1 << (self::INDEXTYPE - 641)) | (1 << (self::INDEXTYPES - 641)) | (1 << (self::INDICATOR - 641)) | (1 << (self::INDICES - 641)) | (1 << (self::INFINITE - 641)) | (1 << (self::INFORMATIONAL - 641)) | (1 << (self::INHERIT - 641)) | (1 << (self::INITCAP - 641)) | (1 << (self::INITIAL - 641)) | (1 << (self::INITIALIZED - 641)) | (1 << (self::INITIALLY - 641)) | (1 << (self::INITRANS - 641)) | (1 << (self::INLINE - 641)) | (1 << (self::INLINE_XMLTYPE_NT - 641)) | (1 << (self::INMEMORY - 641)) | (1 << (self::IN_MEMORY_METADATA - 641)) | (1 << (self::INMEMORY_PRUNING - 641)) | (1 << (self::INNER - 641)) | (1 << (self::INOUT - 641)) | (1 << (self::INPLACE - 641)) | (1 << (self::INSERTCHILDXMLAFTER - 641)) | (1 << (self::INSERTCHILDXMLBEFORE - 641)) | (1 << (self::INSERTCHILDXML - 641)) | (1 << (self::INSERTXMLAFTER - 641)) | (1 << (self::INSERTXMLBEFORE - 641)) | (1 << (self::INSTANCE - 641)) | (1 << (self::INSTANCES - 641)) | (1 << (self::INSTANTIABLE - 641)) | (1 << (self::INSTANTLY - 641)) | (1 << (self::INSTEAD - 641)) | (1 << (self::INSTR2 - 641)) | (1 << (self::INSTR4 - 641)) | (1 << (self::INSTRB - 641)) | (1 << (self::INSTRC - 641)) | (1 << (self::INSTR - 641)) | (1 << (self::INTEGER - 641)) | (1 << (self::INTERLEAVED - 641)) | (1 << (self::INTERMEDIATE - 641)) | (1 << (self::INTERNAL_CONVERT - 641)) | (1 << (self::INTERNAL_USE - 641)) | (1 << (self::INTERPRETED - 641)) | (1 << (self::INTERVAL - 641)) | (1 << (self::INT - 641)) | (1 << (self::INVALIDATE - 641)) | (1 << (self::INVISIBLE - 641)) | (1 << (self::IN_XQUERY - 641)) | (1 << (self::ISOLATION - 641)) | (1 << (self::ISOLATION_LEVEL - 641)) | (1 << (self::ITERATE - 641)) | (1 << (self::ITERATION_NUMBER - 641)) | (1 << (self::JAVA - 641)) | (1 << (self::JOB - 641)) | (1 << (self::JOIN - 641)) | (1 << (self::JSON_ARRAYAGG - 641)) | (1 << (self::JSON_ARRAY - 641)))) !== 0) || (((($_la - 705)) & ~0x3f) === 0 && ((1 << ($_la - 705)) & ((1 << (self::JSON_EQUAL - 705)) | (1 << (self::JSON_EXISTS2 - 705)) | (1 << (self::JSON_EXISTS - 705)) | (1 << (self::JSONGET - 705)) | (1 << (self::JSON - 705)) | (1 << (self::JSON_OBJECTAGG - 705)) | (1 << (self::JSON_OBJECT - 705)) | (1 << (self::JSONPARSE - 705)) | (1 << (self::JSON_QUERY - 705)) | (1 << (self::JSON_SERIALIZE - 705)) | (1 << (self::JSON_TABLE - 705)) | (1 << (self::JSON_TEXTCONTAINS2 - 705)) | (1 << (self::JSON_TEXTCONTAINS - 705)) | (1 << (self::JSON_VALUE - 705)) | (1 << (self::KEEP_DUPLICATES - 705)) | (1 << (self::KEEP - 705)) | (1 << (self::KERBEROS - 705)) | (1 << (self::KEY - 705)) | (1 << (self::KEY_LENGTH - 705)) | (1 << (self::KEYSIZE - 705)) | (1 << (self::KEYS - 705)) | (1 << (self::KEYSTORE - 705)) | (1 << (self::KILL - 705)) | (1 << (self::LABEL - 705)) | (1 << (self::LANGUAGE - 705)) | (1 << (self::LAST_DAY - 705)) | (1 << (self::LAST - 705)) | (1 << (self::LAST_VALUE - 705)) | (1 << (self::LATERAL - 705)) | (1 << (self::LAX - 705)) | (1 << (self::LAYER - 705)) | (1 << (self::LDAP_REGISTRATION_ENABLED - 705)) | (1 << (self::LDAP_REGISTRATION - 705)) | (1 << (self::LDAP_REG_SYNC_INTERVAL - 705)) | (1 << (self::LEADING - 705)) | (1 << (self::LEFT - 705)) | (1 << (self::LENGTH2 - 705)) | (1 << (self::LENGTH4 - 705)) | (1 << (self::LENGTHB - 705)) | (1 << (self::LENGTHC - 705)) | (1 << (self::LENGTH - 705)) | (1 << (self::LESS - 705)) | (1 << (self::LEVEL - 705)) | (1 << (self::LEVELS - 705)) | (1 << (self::LIBRARY - 705)) | (1 << (self::LIFECYCLE - 705)) | (1 << (self::LIFE - 705)) | (1 << (self::LIFETIME - 705)) | (1 << (self::LIKE2 - 705)) | (1 << (self::LIKE4 - 705)) | (1 << (self::LIKEC - 705)) | (1 << (self::LIKE_EXPAND - 705)) | (1 << (self::LIMIT - 705)) | (1 << (self::LINEAR - 705)) | (1 << (self::LINK - 705)) | (1 << (self::LIST - 705)) | (1 << (self::LN - 705)) | (1 << (self::LNNVL - 705)) | (1 << (self::LOAD - 705)) | (1 << (self::LOB - 705)) | (1 << (self::LOBNVL - 705)) | (1 << (self::LOBS - 705)) | (1 << (self::LOCAL_INDEXES - 705)))) !== 0) || (((($_la - 769)) & ~0x3f) === 0 && ((1 << ($_la - 769)) & ((1 << (self::LOCAL - 769)) | (1 << (self::LOCALTIME - 769)) | (1 << (self::LOCALTIMESTAMP - 769)) | (1 << (self::LOCATION - 769)) | (1 << (self::LOCATOR - 769)) | (1 << (self::LOCKED - 769)) | (1 << (self::LOCKING - 769)) | (1 << (self::LOGFILE - 769)) | (1 << (self::LOGFILES - 769)) | (1 << (self::LOGGING - 769)) | (1 << (self::LOGICAL - 769)) | (1 << (self::LOGICAL_READS_PER_CALL - 769)) | (1 << (self::LOGICAL_READS_PER_SESSION - 769)) | (1 << (self::LOG - 769)) | (1 << (self::LOGMINING - 769)) | (1 << (self::LOGOFF - 769)) | (1 << (self::LOGON - 769)) | (1 << (self::LOG_READ_ONLY_VIOLATIONS - 769)) | (1 << (self::LONG - 769)) | (1 << (self::LOOP - 769)) | (1 << (self::LOWER - 769)) | (1 << (self::LOW - 769)) | (1 << (self::LPAD - 769)) | (1 << (self::LTRIM - 769)) | (1 << (self::MAIN - 769)) | (1 << (self::MAKE_REF - 769)) | (1 << (self::MANAGED - 769)) | (1 << (self::MANAGE - 769)) | (1 << (self::MANAGEMENT - 769)) | (1 << (self::MANAGER - 769)) | (1 << (self::MANUAL - 769)) | (1 << (self::MAP - 769)) | (1 << (self::MAPPING - 769)) | (1 << (self::MASTER - 769)) | (1 << (self::MATCHED - 769)) | (1 << (self::MATCHES - 769)) | (1 << (self::MATCH - 769)) | (1 << (self::MATCH_NUMBER - 769)) | (1 << (self::MATCH_RECOGNIZE - 769)) | (1 << (self::MATERIALIZED - 769)) | (1 << (self::MATERIALIZE - 769)) | (1 << (self::MAXARCHLOGS - 769)) | (1 << (self::MAXDATAFILES - 769)) | (1 << (self::MAXEXTENTS - 769)) | (1 << (self::MAXIMIZE - 769)) | (1 << (self::MAXINSTANCES - 769)) | (1 << (self::MAXLOGFILES - 769)) | (1 << (self::MAXLOGHISTORY - 769)) | (1 << (self::MAXLOGMEMBERS - 769)) | (1 << (self::MAX_SHARED_TEMP_SIZE - 769)) | (1 << (self::MAXSIZE - 769)) | (1 << (self::MAXTRANS - 769)) | (1 << (self::MAXVALUE - 769)) | (1 << (self::MEASURE - 769)) | (1 << (self::MEASURES - 769)) | (1 << (self::MEDIUM - 769)) | (1 << (self::MEMBER - 769)) | (1 << (self::MEMCOMPRESS - 769)) | (1 << (self::MEMORY - 769)) | (1 << (self::MERGEACTIONS - 769)) | (1 << (self::MERGE_AJ - 769)) | (1 << (self::MERGE_CONST_ON - 769)) | (1 << (self::MERGE - 769)))) !== 0) || (((($_la - 833)) & ~0x3f) === 0 && ((1 << ($_la - 833)) & ((1 << (self::MERGE_SJ - 833)) | (1 << (self::METADATA - 833)) | (1 << (self::METHOD - 833)) | (1 << (self::MIGRATE - 833)) | (1 << (self::MIGRATION - 833)) | (1 << (self::MINEXTENTS - 833)) | (1 << (self::MINIMIZE - 833)) | (1 << (self::MINIMUM - 833)) | (1 << (self::MINING - 833)) | (1 << (self::MINUS_NULL - 833)) | (1 << (self::MINUTE - 833)) | (1 << (self::MINVALUE - 833)) | (1 << (self::MIRRORCOLD - 833)) | (1 << (self::MIRRORHOT - 833)) | (1 << (self::MIRROR - 833)) | (1 << (self::MLSLABEL - 833)) | (1 << (self::MODEL_COMPILE_SUBQUERY - 833)) | (1 << (self::MODEL_DONTVERIFY_UNIQUENESS - 833)) | (1 << (self::MODEL_DYNAMIC_SUBQUERY - 833)) | (1 << (self::MODEL_MIN_ANALYSIS - 833)) | (1 << (self::MODEL - 833)) | (1 << (self::MODEL_NB - 833)) | (1 << (self::MODEL_NO_ANALYSIS - 833)) | (1 << (self::MODEL_PBY - 833)) | (1 << (self::MODEL_PUSH_REF - 833)) | (1 << (self::MODEL_SV - 833)) | (1 << (self::MODIFICATION - 833)) | (1 << (self::MODIFY_COLUMN_TYPE - 833)) | (1 << (self::MODIFY - 833)) | (1 << (self::MOD - 833)) | (1 << (self::MODULE - 833)) | (1 << (self::MONITORING - 833)) | (1 << (self::MONITOR - 833)) | (1 << (self::MONTH - 833)) | (1 << (self::MONTHS_BETWEEN - 833)) | (1 << (self::MONTHS - 833)) | (1 << (self::MOUNT - 833)) | (1 << (self::MOUNTPATH - 833)) | (1 << (self::MOVEMENT - 833)) | (1 << (self::MOVE - 833)) | (1 << (self::MULTIDIMENSIONAL - 833)) | (1 << (self::MULTISET - 833)) | (1 << (self::MV_MERGE - 833)) | (1 << (self::NAMED - 833)) | (1 << (self::NAME - 833)) | (1 << (self::NAMESPACE - 833)) | (1 << (self::NAN - 833)) | (1 << (self::NANVL - 833)) | (1 << (self::NATIONAL - 833)) | (1 << (self::NATIVE_FULL_OUTER_JOIN - 833)) | (1 << (self::NATIVE - 833)) | (1 << (self::NATURAL - 833)) | (1 << (self::NAV - 833)) | (1 << (self::NCHAR_CS - 833)) | (1 << (self::NCHAR - 833)) | (1 << (self::NCHR - 833)) | (1 << (self::NCLOB - 833)) | (1 << (self::NEEDED - 833)) | (1 << (self::NEG - 833)) | (1 << (self::NESTED - 833)) | (1 << (self::NESTED_TABLE_FAST_INSERT - 833)))) !== 0) || (((($_la - 897)) & ~0x3f) === 0 && ((1 << ($_la - 897)) & ((1 << (self::NESTED_TABLE_GET_REFS - 897)) | (1 << (self::NESTED_TABLE_ID - 897)) | (1 << (self::NESTED_TABLE_SET_REFS - 897)) | (1 << (self::NESTED_TABLE_SET_SETID - 897)) | (1 << (self::NETWORK - 897)) | (1 << (self::NEVER - 897)) | (1 << (self::NEW - 897)) | (1 << (self::NEW_TIME - 897)) | (1 << (self::NEXT_DAY - 897)) | (1 << (self::NEXT - 897)) | (1 << (self::NL_AJ - 897)) | (1 << (self::NLJ_BATCHING - 897)) | (1 << (self::NLJ_INDEX_FILTER - 897)) | (1 << (self::NLJ_INDEX_SCAN - 897)) | (1 << (self::NLJ_PREFETCH - 897)) | (1 << (self::NLS_CALENDAR - 897)) | (1 << (self::NLS_CHARACTERSET - 897)) | (1 << (self::NLS_CHARSET_DECL_LEN - 897)) | (1 << (self::NLS_CHARSET_ID - 897)) | (1 << (self::NLS_CHARSET_NAME - 897)) | (1 << (self::NLS_COMP - 897)) | (1 << (self::NLS_CURRENCY - 897)) | (1 << (self::NLS_DATE_FORMAT - 897)) | (1 << (self::NLS_DATE_LANGUAGE - 897)) | (1 << (self::NLS_INITCAP - 897)) | (1 << (self::NLS_ISO_CURRENCY - 897)) | (1 << (self::NL_SJ - 897)) | (1 << (self::NLS_LANG - 897)) | (1 << (self::NLS_LANGUAGE - 897)) | (1 << (self::NLS_LENGTH_SEMANTICS - 897)) | (1 << (self::NLS_LOWER - 897)) | (1 << (self::NLS_NCHAR_CONV_EXCP - 897)) | (1 << (self::NLS_NUMERIC_CHARACTERS - 897)) | (1 << (self::NLS_SORT - 897)) | (1 << (self::NLSSORT - 897)) | (1 << (self::NLS_SPECIAL_CHARS - 897)) | (1 << (self::NLS_TERRITORY - 897)) | (1 << (self::NLS_UPPER - 897)) | (1 << (self::NO_ACCESS - 897)) | (1 << (self::NO_ADAPTIVE_PLAN - 897)) | (1 << (self::NO_ANSI_REARCH - 897)) | (1 << (self::NOAPPEND - 897)) | (1 << (self::NOARCHIVELOG - 897)) | (1 << (self::NOAUDIT - 897)) | (1 << (self::NO_AUTO_REOPTIMIZE - 897)) | (1 << (self::NO_BASETABLE_MULTIMV_REWRITE - 897)) | (1 << (self::NO_BATCH_TABLE_ACCESS_BY_ROWID - 897)) | (1 << (self::NO_BIND_AWARE - 897)) | (1 << (self::NO_BUFFER - 897)) | (1 << (self::NOCACHE - 897)) | (1 << (self::NO_CARTESIAN - 897)) | (1 << (self::NO_CHECK_ACL_REWRITE - 897)) | (1 << (self::NO_CLUSTER_BY_ROWID - 897)) | (1 << (self::NO_CLUSTERING - 897)) | (1 << (self::NO_COALESCE_SQ - 897)) | (1 << (self::NO_COMMON_DATA - 897)) | (1 << (self::NO_CONNECT_BY_CB_WHR_ONLY - 897)) | (1 << (self::NO_CONNECT_BY_COMBINE_SW - 897)) | (1 << (self::NO_CONNECT_BY_COST_BASED - 897)) | (1 << (self::NO_CONNECT_BY_ELIM_DUPS - 897)) | (1 << (self::NO_CONNECT_BY_FILTERING - 897)) | (1 << (self::NOCOPY - 897)) | (1 << (self::NO_COST_XML_QUERY_REWRITE - 897)))) !== 0) || (((($_la - 961)) & ~0x3f) === 0 && ((1 << ($_la - 961)) & ((1 << (self::NO_CPU_COSTING - 961)) | (1 << (self::NOCPU_COSTING - 961)) | (1 << (self::NOCYCLE - 961)) | (1 << (self::NO_DATA_SECURITY_REWRITE - 961)) | (1 << (self::NO_DECORRELATE - 961)) | (1 << (self::NODELAY - 961)) | (1 << (self::NO_DOMAIN_INDEX_FILTER - 961)) | (1 << (self::NO_DST_UPGRADE_INSERT_CONV - 961)) | (1 << (self::NO_ELIM_GROUPBY - 961)) | (1 << (self::NO_ELIMINATE_JOIN - 961)) | (1 << (self::NO_ELIMINATE_OBY - 961)) | (1 << (self::NO_ELIMINATE_OUTER_JOIN - 961)) | (1 << (self::NOENTITYESCAPING - 961)) | (1 << (self::NO_EXPAND_GSET_TO_UNION - 961)) | (1 << (self::NO_EXPAND - 961)) | (1 << (self::NO_EXPAND_TABLE - 961)) | (1 << (self::NO_FACT - 961)) | (1 << (self::NO_FACTORIZE_JOIN - 961)) | (1 << (self::NO_FILTERING - 961)) | (1 << (self::NOFORCE - 961)) | (1 << (self::NO_FULL_OUTER_JOIN_TO_OUTER - 961)) | (1 << (self::NO_GATHER_OPTIMIZER_STATISTICS - 961)) | (1 << (self::NO_GBY_PUSHDOWN - 961)) | (1 << (self::NOGUARANTEE - 961)) | (1 << (self::NO_INDEX_FFS - 961)) | (1 << (self::NO_INDEX - 961)) | (1 << (self::NO_INDEX_SS - 961)) | (1 << (self::NO_INMEMORY - 961)) | (1 << (self::NO_INMEMORY_PRUNING - 961)) | (1 << (self::NOKEEP - 961)) | (1 << (self::NO_LOAD - 961)) | (1 << (self::NOLOCAL - 961)) | (1 << (self::NOLOGGING - 961)) | (1 << (self::NOMAPPING - 961)) | (1 << (self::NOMAXVALUE - 961)) | (1 << (self::NO_MERGE - 961)) | (1 << (self::NOMINIMIZE - 961)) | (1 << (self::NOMINVALUE - 961)) | (1 << (self::NO_MODEL_PUSH_REF - 961)) | (1 << (self::NO_MONITORING - 961)) | (1 << (self::NOMONITORING - 961)) | (1 << (self::NO_MONITOR - 961)) | (1 << (self::NO_MULTIMV_REWRITE - 961)) | (1 << (self::NO_NATIVE_FULL_OUTER_JOIN - 961)) | (1 << (self::NONBLOCKING - 961)) | (1 << (self::NONEDITIONABLE - 961)) | (1 << (self::NONE - 961)) | (1 << (self::NO_NLJ_BATCHING - 961)) | (1 << (self::NO_NLJ_PREFETCH - 961)) | (1 << (self::NO - 961)) | (1 << (self::NONSCHEMA - 961)) | (1 << (self::NO_OBJECT_LINK - 961)) | (1 << (self::NOORDER - 961)) | (1 << (self::NO_ORDER_ROLLUPS - 961)) | (1 << (self::NO_OUTER_JOIN_TO_ANTI - 961)) | (1 << (self::NO_OUTER_JOIN_TO_INNER - 961)) | (1 << (self::NOOVERRIDE - 961)) | (1 << (self::NO_PARALLEL_INDEX - 961)) | (1 << (self::NOPARALLEL_INDEX - 961)) | (1 << (self::NO_PARALLEL - 961)) | (1 << (self::NOPARALLEL - 961)) | (1 << (self::NO_PARTIAL_COMMIT - 961)) | (1 << (self::NO_PARTIAL_JOIN - 961)) | (1 << (self::NO_PARTIAL_ROLLUP_PUSHDOWN - 961)))) !== 0) || (((($_la - 1025)) & ~0x3f) === 0 && ((1 << ($_la - 1025)) & ((1 << (self::NOPARTITION - 1025)) | (1 << (self::NO_PLACE_DISTINCT - 1025)) | (1 << (self::NO_PLACE_GROUP_BY - 1025)) | (1 << (self::NO_PQ_CONCURRENT_UNION - 1025)) | (1 << (self::NO_PQ_MAP - 1025)) | (1 << (self::NO_PQ_REPLICATE - 1025)) | (1 << (self::NO_PQ_SKEW - 1025)) | (1 << (self::NO_PRUNE_GSETS - 1025)) | (1 << (self::NO_PULL_PRED - 1025)) | (1 << (self::NO_PUSH_PRED - 1025)) | (1 << (self::NO_PUSH_SUBQ - 1025)) | (1 << (self::NO_PX_FAULT_TOLERANCE - 1025)) | (1 << (self::NO_PX_JOIN_FILTER - 1025)) | (1 << (self::NO_QKN_BUFF - 1025)) | (1 << (self::NO_QUERY_TRANSFORMATION - 1025)) | (1 << (self::NO_REF_CASCADE - 1025)) | (1 << (self::NORELOCATE - 1025)) | (1 << (self::NORELY - 1025)) | (1 << (self::NOREPAIR - 1025)) | (1 << (self::NOREPLAY - 1025)) | (1 << (self::NORESETLOGS - 1025)) | (1 << (self::NO_RESULT_CACHE - 1025)) | (1 << (self::NOREVERSE - 1025)) | (1 << (self::NO_REWRITE - 1025)) | (1 << (self::NOREWRITE - 1025)) | (1 << (self::NORMAL - 1025)) | (1 << (self::NO_ROOT_SW_FOR_LOCAL - 1025)) | (1 << (self::NOROWDEPENDENCIES - 1025)) | (1 << (self::NOSCHEMACHECK - 1025)) | (1 << (self::NOSEGMENT - 1025)) | (1 << (self::NO_SEMIJOIN - 1025)) | (1 << (self::NO_SEMI_TO_INNER - 1025)) | (1 << (self::NO_SET_TO_JOIN - 1025)) | (1 << (self::NOSORT - 1025)) | (1 << (self::NO_SQL_TRANSLATION - 1025)) | (1 << (self::NO_SQL_TUNE - 1025)) | (1 << (self::NO_STAR_TRANSFORMATION - 1025)) | (1 << (self::NO_STATEMENT_QUEUING - 1025)) | (1 << (self::NO_STATS_GSETS - 1025)) | (1 << (self::NOSTRICT - 1025)) | (1 << (self::NO_SUBQUERY_PRUNING - 1025)) | (1 << (self::NO_SUBSTRB_PAD - 1025)) | (1 << (self::NO_SWAP_JOIN_INPUTS - 1025)) | (1 << (self::NOSWITCH - 1025)) | (1 << (self::NO_TABLE_LOOKUP_BY_NL - 1025)) | (1 << (self::NO_TEMP_TABLE - 1025)) | (1 << (self::NOTHING - 1025)) | (1 << (self::NOTIFICATION - 1025)) | (1 << (self::NOT - 1025)) | (1 << (self::NO_TRANSFORM_DISTINCT_AGG - 1025)) | (1 << (self::NO_UNNEST - 1025)) | (1 << (self::NO_USE_CUBE - 1025)) | (1 << (self::NO_USE_HASH_AGGREGATION - 1025)) | (1 << (self::NO_USE_HASH_GBY_FOR_PUSHDOWN - 1025)) | (1 << (self::NO_USE_HASH - 1025)) | (1 << (self::NO_USE_INVISIBLE_INDEXES - 1025)) | (1 << (self::NO_USE_MERGE - 1025)) | (1 << (self::NO_USE_NL - 1025)) | (1 << (self::NO_USE_VECTOR_AGGREGATION - 1025)) | (1 << (self::NOVALIDATE - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_DIMS - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_FACT - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM - 1025)))) !== 0) || (((($_la - 1089)) & ~0x3f) === 0 && ((1 << ($_la - 1089)) & ((1 << (self::NO_XDB_FASTPATH_INSERT - 1089)) | (1 << (self::NO_XML_DML_REWRITE - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE_IN_SELECT - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE - 1089)) | (1 << (self::NO_XML_QUERY_REWRITE - 1089)) | (1 << (self::NO_ZONEMAP - 1089)) | (1 << (self::NTH_VALUE - 1089)) | (1 << (self::NULLIF - 1089)) | (1 << (self::NULL_ - 1089)) | (1 << (self::NULLS - 1089)) | (1 << (self::NUMBER - 1089)) | (1 << (self::NUMERIC - 1089)) | (1 << (self::NUM_INDEX_KEYS - 1089)) | (1 << (self::NUMTODSINTERVAL - 1089)) | (1 << (self::NUMTOYMINTERVAL - 1089)) | (1 << (self::NVARCHAR2 - 1089)) | (1 << (self::NVL2 - 1089)) | (1 << (self::OBJECT2XML - 1089)) | (1 << (self::OBJECT - 1089)) | (1 << (self::OBJ_ID - 1089)) | (1 << (self::OBJNO - 1089)) | (1 << (self::OBJNO_REUSE - 1089)) | (1 << (self::OCCURENCES - 1089)) | (1 << (self::OFFLINE - 1089)) | (1 << (self::OFF - 1089)) | (1 << (self::OFFSET - 1089)) | (1 << (self::OIDINDEX - 1089)) | (1 << (self::OID - 1089)) | (1 << (self::OLAP - 1089)) | (1 << (self::OLD - 1089)) | (1 << (self::OLD_PUSH_PRED - 1089)) | (1 << (self::OLS - 1089)) | (1 << (self::OLTP - 1089)) | (1 << (self::OMIT - 1089)) | (1 << (self::ONE - 1089)) | (1 << (self::ONLINE - 1089)) | (1 << (self::ONLY - 1089)) | (1 << (self::OPAQUE - 1089)) | (1 << (self::OPAQUE_TRANSFORM - 1089)) | (1 << (self::OPAQUE_XCANONICAL - 1089)) | (1 << (self::OPCODE - 1089)) | (1 << (self::OPEN - 1089)) | (1 << (self::OPERATIONS - 1089)) | (1 << (self::OPERATOR - 1089)) | (1 << (self::OPT_ESTIMATE - 1089)) | (1 << (self::OPTIMAL - 1089)) | (1 << (self::OPTIMIZE - 1089)) | (1 << (self::OPTIMIZER_FEATURES_ENABLE - 1089)) | (1 << (self::OPTIMIZER_GOAL - 1089)) | (1 << (self::OPT_PARAM - 1089)) | (1 << (self::ORA_BRANCH - 1089)) | (1 << (self::ORA_CHECK_ACL - 1089)) | (1 << (self::ORA_CHECK_PRIVILEGE - 1089)) | (1 << (self::ORA_CLUSTERING - 1089)) | (1 << (self::ORADATA - 1089)) | (1 << (self::ORADEBUG - 1089)) | (1 << (self::ORA_DST_AFFECTED - 1089)) | (1 << (self::ORA_DST_CONVERT - 1089)) | (1 << (self::ORA_DST_ERROR - 1089)) | (1 << (self::ORA_GET_ACLIDS - 1089)))) !== 0) || (((($_la - 1153)) & ~0x3f) === 0 && ((1 << ($_la - 1153)) & ((1 << (self::ORA_GET_PRIVILEGES - 1153)) | (1 << (self::ORA_HASH - 1153)) | (1 << (self::ORA_INVOKING_USERID - 1153)) | (1 << (self::ORA_INVOKING_USER - 1153)) | (1 << (self::ORA_INVOKING_XS_USER_GUID - 1153)) | (1 << (self::ORA_INVOKING_XS_USER - 1153)) | (1 << (self::ORA_RAWCOMPARE - 1153)) | (1 << (self::ORA_RAWCONCAT - 1153)) | (1 << (self::ORA_ROWSCN - 1153)) | (1 << (self::ORA_ROWSCN_RAW - 1153)) | (1 << (self::ORA_ROWVERSION - 1153)) | (1 << (self::ORA_TABVERSION - 1153)) | (1 << (self::ORA_WRITE_TIME - 1153)) | (1 << (self::ORDERED - 1153)) | (1 << (self::ORDERED_PREDICATES - 1153)) | (1 << (self::ORDINALITY - 1153)) | (1 << (self::OR_EXPAND - 1153)) | (1 << (self::ORGANIZATION - 1153)) | (1 << (self::OR_PREDICATES - 1153)) | (1 << (self::OSERROR - 1153)) | (1 << (self::OTHER - 1153)) | (1 << (self::OUTER_JOIN_TO_ANTI - 1153)) | (1 << (self::OUTER_JOIN_TO_INNER - 1153)) | (1 << (self::OUTER - 1153)) | (1 << (self::OUTLINE_LEAF - 1153)) | (1 << (self::OUTLINE - 1153)) | (1 << (self::OUT_OF_LINE - 1153)) | (1 << (self::OUT - 1153)) | (1 << (self::OVERFLOW_NOMOVE - 1153)) | (1 << (self::OVERFLOW - 1153)) | (1 << (self::OVERLAPS - 1153)) | (1 << (self::OVER - 1153)) | (1 << (self::OVERRIDING - 1153)) | (1 << (self::OWNER - 1153)) | (1 << (self::OWNERSHIP - 1153)) | (1 << (self::OWN - 1153)) | (1 << (self::PACKAGE - 1153)) | (1 << (self::PACKAGES - 1153)) | (1 << (self::PARALLEL_ENABLE - 1153)) | (1 << (self::PARALLEL_INDEX - 1153)) | (1 << (self::PARALLEL - 1153)) | (1 << (self::PARAMETERS - 1153)) | (1 << (self::PARAM - 1153)) | (1 << (self::PARENT - 1153)) | (1 << (self::PARITY - 1153)) | (1 << (self::PARTIAL_JOIN - 1153)) | (1 << (self::PARTIALLY - 1153)) | (1 << (self::PARTIAL - 1153)) | (1 << (self::PARTIAL_ROLLUP_PUSHDOWN - 1153)) | (1 << (self::PARTITION_HASH - 1153)) | (1 << (self::PARTITION_LIST - 1153)) | (1 << (self::PARTITION - 1153)) | (1 << (self::PARTITION_RANGE - 1153)) | (1 << (self::PARTITIONS - 1153)) | (1 << (self::PARTNUMINST - 1153)) | (1 << (self::PASSING - 1153)) | (1 << (self::PASSWORD_GRACE_TIME - 1153)) | (1 << (self::PASSWORD_LIFE_TIME - 1153)) | (1 << (self::PASSWORD_LOCK_TIME - 1153)) | (1 << (self::PASSWORD - 1153)) | (1 << (self::PASSWORD_REUSE_MAX - 1153)))) !== 0) || (((($_la - 1217)) & ~0x3f) === 0 && ((1 << ($_la - 1217)) & ((1 << (self::PASSWORD_REUSE_TIME - 1217)) | (1 << (self::PASSWORD_VERIFY_FUNCTION - 1217)) | (1 << (self::PAST - 1217)) | (1 << (self::PATCH - 1217)) | (1 << (self::PATH - 1217)) | (1 << (self::PATH_PREFIX - 1217)) | (1 << (self::PATHS - 1217)) | (1 << (self::PATTERN - 1217)) | (1 << (self::PBL_HS_BEGIN - 1217)) | (1 << (self::PBL_HS_END - 1217)) | (1 << (self::PCTINCREASE - 1217)) | (1 << (self::PCTTHRESHOLD - 1217)) | (1 << (self::PCTUSED - 1217)) | (1 << (self::PCTVERSION - 1217)) | (1 << (self::PENDING - 1217)) | (1 << (self::PERCENT_KEYWORD - 1217)) | (1 << (self::PERCENT_RANKM - 1217)) | (1 << (self::PERFORMANCE - 1217)) | (1 << (self::PERIOD_KEYWORD - 1217)) | (1 << (self::PERMANENT - 1217)) | (1 << (self::PERMISSION - 1217)) | (1 << (self::PERMUTE - 1217)) | (1 << (self::PER - 1217)) | (1 << (self::PFILE - 1217)) | (1 << (self::PHYSICAL - 1217)) | (1 << (self::PIKEY - 1217)) | (1 << (self::PIPELINED - 1217)) | (1 << (self::PIV_GB - 1217)) | (1 << (self::PIVOT - 1217)) | (1 << (self::PIV_SSF - 1217)) | (1 << (self::PLACE_DISTINCT - 1217)) | (1 << (self::PLACE_GROUP_BY - 1217)) | (1 << (self::PLAN - 1217)) | (1 << (self::PLSCOPE_SETTINGS - 1217)) | (1 << (self::PLS_INTEGER - 1217)) | (1 << (self::PLSQL_CCFLAGS - 1217)) | (1 << (self::PLSQL_CODE_TYPE - 1217)) | (1 << (self::PLSQL_DEBUG - 1217)) | (1 << (self::PLSQL_OPTIMIZE_LEVEL - 1217)) | (1 << (self::PLSQL_WARNINGS - 1217)) | (1 << (self::PLUGGABLE - 1217)) | (1 << (self::POINT - 1217)) | (1 << (self::POLICY - 1217)) | (1 << (self::POOL_16K - 1217)) | (1 << (self::POOL_2K - 1217)) | (1 << (self::POOL_32K - 1217)) | (1 << (self::POOL_4K - 1217)) | (1 << (self::POOL_8K - 1217)) | (1 << (self::POSITIVEN - 1217)) | (1 << (self::POSITIVE - 1217)) | (1 << (self::POST_TRANSACTION - 1217)) | (1 << (self::POWERMULTISET_BY_CARDINALITY - 1217)) | (1 << (self::POWERMULTISET - 1217)) | (1 << (self::POWER - 1217)) | (1 << (self::PQ_CONCURRENT_UNION - 1217)) | (1 << (self::PQ_DISTRIBUTE - 1217)))) !== 0) || (((($_la - 1281)) & ~0x3f) === 0 && ((1 << ($_la - 1281)) & ((1 << (self::PQ_DISTRIBUTE_WINDOW - 1281)) | (1 << (self::PQ_FILTER - 1281)) | (1 << (self::PQ_MAP - 1281)) | (1 << (self::PQ_NOMAP - 1281)) | (1 << (self::PQ_REPLICATE - 1281)) | (1 << (self::PQ_SKEW - 1281)) | (1 << (self::PRAGMA - 1281)) | (1 << (self::PREBUILT - 1281)) | (1 << (self::PRECEDES - 1281)) | (1 << (self::PRECEDING - 1281)) | (1 << (self::PRECISION - 1281)) | (1 << (self::PRECOMPUTE_SUBQUERY - 1281)) | (1 << (self::PREDICATE_REORDERS - 1281)) | (1 << (self::PRELOAD - 1281)) | (1 << (self::PREPARE - 1281)) | (1 << (self::PRESENTNNV - 1281)) | (1 << (self::PRESENT - 1281)) | (1 << (self::PRESENTV - 1281)) | (1 << (self::PRESERVE_OID - 1281)) | (1 << (self::PRESERVE - 1281)) | (1 << (self::PRETTY - 1281)) | (1 << (self::PREVIOUS - 1281)) | (1 << (self::PREV - 1281)) | (1 << (self::PRIMARY - 1281)) | (1 << (self::PRINTBLOBTOCLOB - 1281)) | (1 << (self::PRIORITY - 1281)) | (1 << (self::PRIOR - 1281)) | (1 << (self::PRIVATE - 1281)) | (1 << (self::PRIVATE_SGA - 1281)) | (1 << (self::PRIVILEGED - 1281)) | (1 << (self::PRIVILEGE - 1281)) | (1 << (self::PRIVILEGES - 1281)) | (1 << (self::PROCEDURAL - 1281)) | (1 << (self::PROCEDURE - 1281)) | (1 << (self::PROCESS - 1281)) | (1 << (self::PROFILE - 1281)) | (1 << (self::PROGRAM - 1281)) | (1 << (self::PROJECT - 1281)) | (1 << (self::PROPAGATE - 1281)) | (1 << (self::PROTECTED - 1281)) | (1 << (self::PROTECTION - 1281)) | (1 << (self::PROXY - 1281)) | (1 << (self::PRUNING - 1281)) | (1 << (self::PULL_PRED - 1281)) | (1 << (self::PURGE - 1281)) | (1 << (self::PUSH_PRED - 1281)) | (1 << (self::PUSH_SUBQ - 1281)) | (1 << (self::PX_FAULT_TOLERANCE - 1281)) | (1 << (self::PX_GRANULE - 1281)) | (1 << (self::PX_JOIN_FILTER - 1281)) | (1 << (self::QB_NAME - 1281)) | (1 << (self::QUERY_BLOCK - 1281)) | (1 << (self::QUERY - 1281)) | (1 << (self::QUEUE_CURR - 1281)) | (1 << (self::QUEUE - 1281)) | (1 << (self::QUEUE_ROWP - 1281)) | (1 << (self::QUIESCE - 1281)) | (1 << (self::QUORUM - 1281)) | (1 << (self::QUOTA - 1281)) | (1 << (self::RAISE - 1281)) | (1 << (self::RANDOM_LOCAL - 1281)) | (1 << (self::RANDOM - 1281)) | (1 << (self::RANGE - 1281)))) !== 0) || (((($_la - 1345)) & ~0x3f) === 0 && ((1 << ($_la - 1345)) & ((1 << (self::RANKM - 1345)) | (1 << (self::RAPIDLY - 1345)) | (1 << (self::RAW - 1345)) | (1 << (self::RAWTOHEX - 1345)) | (1 << (self::RAWTONHEX - 1345)) | (1 << (self::RBA - 1345)) | (1 << (self::RBO_OUTLINE - 1345)) | (1 << (self::RDBA - 1345)) | (1 << (self::READ - 1345)) | (1 << (self::READS - 1345)) | (1 << (self::REALM - 1345)) | (1 << (self::REAL - 1345)) | (1 << (self::REBALANCE - 1345)) | (1 << (self::REBUILD - 1345)) | (1 << (self::RECORD - 1345)) | (1 << (self::RECORDS_PER_BLOCK - 1345)) | (1 << (self::RECOVERABLE - 1345)) | (1 << (self::RECOVER - 1345)) | (1 << (self::RECOVERY - 1345)) | (1 << (self::RECYCLEBIN - 1345)) | (1 << (self::RECYCLE - 1345)) | (1 << (self::REDACTION - 1345)) | (1 << (self::REDEFINE - 1345)) | (1 << (self::REDO - 1345)) | (1 << (self::REDUCED - 1345)) | (1 << (self::REDUNDANCY - 1345)) | (1 << (self::REF_CASCADE_CURSOR - 1345)) | (1 << (self::REFERENCED - 1345)) | (1 << (self::REFERENCE - 1345)) | (1 << (self::REFERENCES - 1345)) | (1 << (self::REFERENCING - 1345)) | (1 << (self::REF - 1345)) | (1 << (self::REFRESH - 1345)) | (1 << (self::REFTOHEX - 1345)) | (1 << (self::REGEXP_COUNT - 1345)) | (1 << (self::REGEXP_INSTR - 1345)) | (1 << (self::REGEXP_LIKE - 1345)) | (1 << (self::REGEXP_REPLACE - 1345)) | (1 << (self::REGEXP_SUBSTR - 1345)) | (1 << (self::REGISTER - 1345)) | (1 << (self::REGR_AVGX - 1345)) | (1 << (self::REGR_AVGY - 1345)) | (1 << (self::REGR_COUNT - 1345)) | (1 << (self::REGR_INTERCEPT - 1345)) | (1 << (self::REGR_R2 - 1345)) | (1 << (self::REGR_SLOPE - 1345)) | (1 << (self::REGR_SXX - 1345)) | (1 << (self::REGR_SXY - 1345)) | (1 << (self::REGR_SYY - 1345)) | (1 << (self::REGULAR - 1345)) | (1 << (self::REJECT - 1345)) | (1 << (self::REKEY - 1345)) | (1 << (self::RELATIONAL - 1345)) | (1 << (self::RELOCATE - 1345)) | (1 << (self::RELY - 1345)) | (1 << (self::REMAINDER - 1345)) | (1 << (self::REMOTE_MAPPED - 1345)) | (1 << (self::REMOVE - 1345)) | (1 << (self::RENAME - 1345)) | (1 << (self::REPAIR - 1345)) | (1 << (self::REPEAT - 1345)) | (1 << (self::REPLACE - 1345)) | (1 << (self::REPLICATION - 1345)))) !== 0) || (((($_la - 1409)) & ~0x3f) === 0 && ((1 << ($_la - 1409)) & ((1 << (self::REQUIRED - 1409)) | (1 << (self::RESETLOGS - 1409)) | (1 << (self::RESET - 1409)) | (1 << (self::RESIZE - 1409)) | (1 << (self::RESOLVE - 1409)) | (1 << (self::RESOLVER - 1409)) | (1 << (self::RESPECT - 1409)) | (1 << (self::RESTART - 1409)) | (1 << (self::RESTORE_AS_INTERVALS - 1409)) | (1 << (self::RESTORE - 1409)) | (1 << (self::RESTRICT_ALL_REF_CONS - 1409)) | (1 << (self::RESTRICTED - 1409)) | (1 << (self::RESTRICT_REFERENCES - 1409)) | (1 << (self::RESTRICT - 1409)) | (1 << (self::RESULT_CACHE - 1409)) | (1 << (self::RESULT - 1409)) | (1 << (self::RESUMABLE - 1409)) | (1 << (self::RESUME - 1409)) | (1 << (self::RETENTION - 1409)) | (1 << (self::RETRY_ON_ROW_CHANGE - 1409)) | (1 << (self::RETURNING - 1409)) | (1 << (self::RETURN - 1409)) | (1 << (self::REUSE - 1409)) | (1 << (self::REVERSE - 1409)) | (1 << (self::REWRITE_OR_ERROR - 1409)) | (1 << (self::REWRITE - 1409)) | (1 << (self::RIGHT - 1409)) | (1 << (self::ROLE - 1409)) | (1 << (self::ROLESET - 1409)) | (1 << (self::ROLES - 1409)) | (1 << (self::ROLLBACK - 1409)) | (1 << (self::ROLLING - 1409)) | (1 << (self::ROLLUP - 1409)) | (1 << (self::ROWDEPENDENCIES - 1409)) | (1 << (self::ROWID_MAPPING_TABLE - 1409)) | (1 << (self::ROWID - 1409)) | (1 << (self::ROWIDTOCHAR - 1409)) | (1 << (self::ROWIDTONCHAR - 1409)) | (1 << (self::ROW_LENGTH - 1409)) | (1 << (self::ROWNUM - 1409)) | (1 << (self::ROW - 1409)) | (1 << (self::ROWS - 1409)) | (1 << (self::RPAD - 1409)) | (1 << (self::RTRIM - 1409)) | (1 << (self::RULE - 1409)) | (1 << (self::RULES - 1409)) | (1 << (self::RUNNING - 1409)) | (1 << (self::SALT - 1409)) | (1 << (self::SAMPLE - 1409)) | (1 << (self::SAVE_AS_INTERVALS - 1409)) | (1 << (self::SAVEPOINT - 1409)) | (1 << (self::SAVE - 1409)) | (1 << (self::SB4 - 1409)) | (1 << (self::SCALE_ROWS - 1409)) | (1 << (self::SCALE - 1409)) | (1 << (self::SCAN_INSTANCES - 1409)) | (1 << (self::SCAN - 1409)) | (1 << (self::SCHEDULER - 1409)) | (1 << (self::SCHEMACHECK - 1409)) | (1 << (self::SCHEMA - 1409)) | (1 << (self::SCN_ASCENDING - 1409)) | (1 << (self::SCN - 1409)))) !== 0) || (((($_la - 1473)) & ~0x3f) === 0 && ((1 << ($_la - 1473)) & ((1 << (self::SCOPE - 1473)) | (1 << (self::SCRUB - 1473)) | (1 << (self::SD_ALL - 1473)) | (1 << (self::SD_INHIBIT - 1473)) | (1 << (self::SDO_GEOM_MBR - 1473)) | (1 << (self::SD_SHOW - 1473)) | (1 << (self::SEARCH - 1473)) | (1 << (self::SECOND - 1473)) | (1 << (self::SECRET - 1473)) | (1 << (self::SECUREFILE_DBA - 1473)) | (1 << (self::SECUREFILE - 1473)) | (1 << (self::SECURITY - 1473)) | (1 << (self::SEED - 1473)) | (1 << (self::SEG_BLOCK - 1473)) | (1 << (self::SEG_FILE - 1473)) | (1 << (self::SEGMENT - 1473)) | (1 << (self::SELECTIVITY - 1473)) | (1 << (self::SELF - 1473)) | (1 << (self::SEMIJOIN_DRIVER - 1473)) | (1 << (self::SEMIJOIN - 1473)) | (1 << (self::SEMI_TO_INNER - 1473)) | (1 << (self::SEQUENCED - 1473)) | (1 << (self::SEQUENCE - 1473)) | (1 << (self::SEQUENTIAL - 1473)) | (1 << (self::SERIALIZABLE - 1473)) | (1 << (self::SERIALLY_REUSABLE - 1473)) | (1 << (self::SERIAL - 1473)) | (1 << (self::SERVERERROR - 1473)) | (1 << (self::SERVICE_NAME_CONVERT - 1473)) | (1 << (self::SERVICES - 1473)) | (1 << (self::SESSION_CACHED_CURSORS - 1473)) | (1 << (self::SESSION - 1473)) | (1 << (self::SESSIONS_PER_USER - 1473)) | (1 << (self::SESSIONTIMEZONE - 1473)) | (1 << (self::SESSIONTZNAME - 1473)) | (1 << (self::SET - 1473)) | (1 << (self::SETS - 1473)) | (1 << (self::SETTINGS - 1473)) | (1 << (self::SET_TO_JOIN - 1473)) | (1 << (self::SEVERE - 1473)) | (1 << (self::SHARED_POOL - 1473)) | (1 << (self::SHARED - 1473)) | (1 << (self::SHARING - 1473)) | (1 << (self::SHELFLIFE - 1473)) | (1 << (self::SHOW - 1473)) | (1 << (self::SHRINK - 1473)) | (1 << (self::SHUTDOWN - 1473)) | (1 << (self::SIBLINGS - 1473)) | (1 << (self::SID - 1473)) | (1 << (self::SIGNAL_COMPONENT - 1473)) | (1 << (self::SIGNAL_FUNCTION - 1473)) | (1 << (self::SIGN - 1473)) | (1 << (self::SIGNTYPE - 1473)) | (1 << (self::SIMPLE_INTEGER - 1473)) | (1 << (self::SIMPLE - 1473)) | (1 << (self::SINGLE - 1473)) | (1 << (self::SINGLETASK - 1473)) | (1 << (self::SINH - 1473)) | (1 << (self::SIN - 1473)) | (1 << (self::SKIP_EXT_OPTIMIZER - 1473)))) !== 0) || (((($_la - 1537)) & ~0x3f) === 0 && ((1 << ($_la - 1537)) & ((1 << (self::SKIP_ - 1537)) | (1 << (self::SKIP_UNQ_UNUSABLE_IDX - 1537)) | (1 << (self::SKIP_UNUSABLE_INDEXES - 1537)) | (1 << (self::SMALLFILE - 1537)) | (1 << (self::SMALLINT - 1537)) | (1 << (self::SNAPSHOT - 1537)) | (1 << (self::SOME - 1537)) | (1 << (self::SORT - 1537)) | (1 << (self::SOUNDEX - 1537)) | (1 << (self::SOURCE_FILE_DIRECTORY - 1537)) | (1 << (self::SOURCE_FILE_NAME_CONVERT - 1537)) | (1 << (self::SOURCE - 1537)) | (1 << (self::SPACE_KEYWORD - 1537)) | (1 << (self::SPECIFICATION - 1537)) | (1 << (self::SPFILE - 1537)) | (1 << (self::SPLIT - 1537)) | (1 << (self::SPREADSHEET - 1537)) | (1 << (self::SQLDATA - 1537)) | (1 << (self::SQLERROR - 1537)) | (1 << (self::SQLLDR - 1537)) | (1 << (self::SQL - 1537)) | (1 << (self::SQL_TRACE - 1537)) | (1 << (self::SQL_TRANSLATION_PROFILE - 1537)) | (1 << (self::SQRT - 1537)) | (1 << (self::STALE - 1537)) | (1 << (self::STANDALONE - 1537)) | (1 << (self::STANDARD_HASH - 1537)) | (1 << (self::STANDBY_MAX_DATA_DELAY - 1537)) | (1 << (self::STANDBYS - 1537)) | (1 << (self::STANDBY - 1537)) | (1 << (self::STAR - 1537)) | (1 << (self::STAR_TRANSFORMATION - 1537)) | (1 << (self::STARTUP - 1537)) | (1 << (self::STATEMENT_ID - 1537)) | (1 << (self::STATEMENT_QUEUING - 1537)) | (1 << (self::STATEMENTS - 1537)) | (1 << (self::STATEMENT - 1537)) | (1 << (self::STATE - 1537)) | (1 << (self::STATIC - 1537)) | (1 << (self::STATISTICS - 1537)) | (1 << (self::STATS_BINOMIAL_TEST - 1537)) | (1 << (self::STATS_CROSSTAB - 1537)) | (1 << (self::STATS_F_TEST - 1537)) | (1 << (self::STATS_KS_TEST - 1537)) | (1 << (self::STATS_MODE - 1537)) | (1 << (self::STATS_MW_TEST - 1537)) | (1 << (self::STATS_ONE_WAY_ANOVA - 1537)) | (1 << (self::STATS_T_TEST_INDEP - 1537)) | (1 << (self::STATS_T_TEST_INDEPU - 1537)) | (1 << (self::STATS_T_TEST_ONE - 1537)) | (1 << (self::STATS_T_TEST_PAIRED - 1537)) | (1 << (self::STATS_WSR_TEST - 1537)) | (1 << (self::STDDEV_POP - 1537)) | (1 << (self::STDDEV_SAMP - 1537)) | (1 << (self::STOP - 1537)) | (1 << (self::STORAGE - 1537)) | (1 << (self::STORE - 1537)) | (1 << (self::STREAMS - 1537)) | (1 << (self::STREAM - 1537)) | (1 << (self::STRICT - 1537)) | (1 << (self::STRING - 1537)) | (1 << (self::STRIPE_COLUMNS - 1537)) | (1 << (self::STRIPE_WIDTH - 1537)))) !== 0) || (((($_la - 1601)) & ~0x3f) === 0 && ((1 << ($_la - 1601)) & ((1 << (self::STRIP - 1601)) | (1 << (self::STRUCTURE - 1601)) | (1 << (self::SUBMULTISET - 1601)) | (1 << (self::SUBPARTITION_REL - 1601)) | (1 << (self::SUBPARTITIONS - 1601)) | (1 << (self::SUBPARTITION - 1601)) | (1 << (self::SUBQUERIES - 1601)) | (1 << (self::SUBQUERY_PRUNING - 1601)) | (1 << (self::SUBSCRIBE - 1601)) | (1 << (self::SUBSET - 1601)) | (1 << (self::SUBSTITUTABLE - 1601)) | (1 << (self::SUBSTR2 - 1601)) | (1 << (self::SUBSTR4 - 1601)) | (1 << (self::SUBSTRB - 1601)) | (1 << (self::SUBSTRC - 1601)) | (1 << (self::SUBTYPE - 1601)) | (1 << (self::SUCCESSFUL - 1601)) | (1 << (self::SUCCESS - 1601)) | (1 << (self::SUMMARY - 1601)) | (1 << (self::SUPPLEMENTAL - 1601)) | (1 << (self::SUSPEND - 1601)) | (1 << (self::SWAP_JOIN_INPUTS - 1601)) | (1 << (self::SWITCHOVER - 1601)) | (1 << (self::SWITCH - 1601)) | (1 << (self::SYNCHRONOUS - 1601)) | (1 << (self::SYNC - 1601)) | (1 << (self::SYSASM - 1601)) | (1 << (self::SYS_AUDIT - 1601)) | (1 << (self::SYSAUX - 1601)) | (1 << (self::SYSBACKUP - 1601)) | (1 << (self::SYS_CHECKACL - 1601)) | (1 << (self::SYS_CHECK_PRIVILEGE - 1601)) | (1 << (self::SYS_CONNECT_BY_PATH - 1601)) | (1 << (self::SYS_CONTEXT - 1601)) | (1 << (self::SYSDATE - 1601)) | (1 << (self::SYSDBA - 1601)) | (1 << (self::SYS_DBURIGEN - 1601)) | (1 << (self::SYSDG - 1601)) | (1 << (self::SYS_DL_CURSOR - 1601)) | (1 << (self::SYS_DM_RXFORM_CHR - 1601)) | (1 << (self::SYS_DM_RXFORM_NUM - 1601)) | (1 << (self::SYS_DOM_COMPARE - 1601)) | (1 << (self::SYS_DST_PRIM2SEC - 1601)) | (1 << (self::SYS_DST_SEC2PRIM - 1601)) | (1 << (self::SYS_ET_BFILE_TO_RAW - 1601)) | (1 << (self::SYS_ET_BLOB_TO_IMAGE - 1601)) | (1 << (self::SYS_ET_IMAGE_TO_BLOB - 1601)) | (1 << (self::SYS_ET_RAW_TO_BFILE - 1601)) | (1 << (self::SYS_EXTPDTXT - 1601)) | (1 << (self::SYS_EXTRACT_UTC - 1601)) | (1 << (self::SYS_FBT_INSDEL - 1601)) | (1 << (self::SYS_FILTER_ACLS - 1601)) | (1 << (self::SYS_FNMATCHES - 1601)) | (1 << (self::SYS_FNREPLACE - 1601)) | (1 << (self::SYS_GET_ACLIDS - 1601)) | (1 << (self::SYS_GET_COL_ACLIDS - 1601)) | (1 << (self::SYS_GET_PRIVILEGES - 1601)) | (1 << (self::SYS_GETTOKENID - 1601)) | (1 << (self::SYS_GETXTIVAL - 1601)) | (1 << (self::SYS_GUID - 1601)) | (1 << (self::SYSGUID - 1601)) | (1 << (self::SYSKM - 1601)) | (1 << (self::SYS_MAKE_XMLNODEID - 1601)))) !== 0) || (((($_la - 1665)) & ~0x3f) === 0 && ((1 << ($_la - 1665)) & ((1 << (self::SYS_MAKEXML - 1665)) | (1 << (self::SYS_MKXMLATTR - 1665)) | (1 << (self::SYS_MKXTI - 1665)) | (1 << (self::SYSOBJ - 1665)) | (1 << (self::SYS_OP_ADT2BIN - 1665)) | (1 << (self::SYS_OP_ADTCONS - 1665)) | (1 << (self::SYS_OP_ALSCRVAL - 1665)) | (1 << (self::SYS_OP_ATG - 1665)) | (1 << (self::SYS_OP_BIN2ADT - 1665)) | (1 << (self::SYS_OP_BITVEC - 1665)) | (1 << (self::SYS_OP_BL2R - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER - 1665)) | (1 << (self::SYS_OP_C2C - 1665)) | (1 << (self::SYS_OP_CAST - 1665)) | (1 << (self::SYS_OP_CEG - 1665)) | (1 << (self::SYS_OP_CL2C - 1665)) | (1 << (self::SYS_OP_COMBINED_HASH - 1665)) | (1 << (self::SYS_OP_COMP - 1665)) | (1 << (self::SYS_OP_CONVERT - 1665)) | (1 << (self::SYS_OP_COUNTCHG - 1665)) | (1 << (self::SYS_OP_CSCONV - 1665)) | (1 << (self::SYS_OP_CSCONVTEST - 1665)) | (1 << (self::SYS_OP_CSR - 1665)) | (1 << (self::SYS_OP_CSX_PATCH - 1665)) | (1 << (self::SYS_OP_CYCLED_SEQ - 1665)) | (1 << (self::SYS_OP_DECOMP - 1665)) | (1 << (self::SYS_OP_DESCEND - 1665)) | (1 << (self::SYS_OP_DISTINCT - 1665)) | (1 << (self::SYS_OP_DRA - 1665)) | (1 << (self::SYS_OP_DUMP - 1665)) | (1 << (self::SYS_OP_DV_CHECK - 1665)) | (1 << (self::SYS_OP_ENFORCE_NOT_NULL - 1665)) | (1 << (self::SYSOPER - 1665)) | (1 << (self::SYS_OP_EXTRACT - 1665)) | (1 << (self::SYS_OP_GROUPING - 1665)) | (1 << (self::SYS_OP_GUID - 1665)) | (1 << (self::SYS_OP_HASH - 1665)) | (1 << (self::SYS_OP_IIX - 1665)) | (1 << (self::SYS_OP_ITR - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_CREATE - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_SUCCEEDED - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_USE - 1665)) | (1 << (self::SYS_OP_LBID - 1665)) | (1 << (self::SYS_OP_LOBLOC2BLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2CLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2ID - 1665)) | (1 << (self::SYS_OP_LOBLOC2NCLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2TYP - 1665)) | (1 << (self::SYS_OP_LSVI - 1665)) | (1 << (self::SYS_OP_LVL - 1665)) | (1 << (self::SYS_OP_MAKEOID - 1665)) | (1 << (self::SYS_OP_MAP_NONNULL - 1665)) | (1 << (self::SYS_OP_MSR - 1665)) | (1 << (self::SYS_OP_NICOMBINE - 1665)) | (1 << (self::SYS_OP_NIEXTRACT - 1665)) | (1 << (self::SYS_OP_NII - 1665)) | (1 << (self::SYS_OP_NIX - 1665)) | (1 << (self::SYS_OP_NOEXPAND - 1665)) | (1 << (self::SYS_OP_NTCIMG - 1665)) | (1 << (self::SYS_OP_NUMTORAW - 1665)) | (1 << (self::SYS_OP_OIDVALUE - 1665)))) !== 0) || (((($_la - 1729)) & ~0x3f) === 0 && ((1 << ($_la - 1729)) & ((1 << (self::SYS_OP_OPNSIZE - 1729)) | (1 << (self::SYS_OP_PAR_1 - 1729)) | (1 << (self::SYS_OP_PARGID_1 - 1729)) | (1 << (self::SYS_OP_PARGID - 1729)) | (1 << (self::SYS_OP_PAR - 1729)) | (1 << (self::SYS_OP_PART_ID - 1729)) | (1 << (self::SYS_OP_PIVOT - 1729)) | (1 << (self::SYS_OP_R2O - 1729)) | (1 << (self::SYS_OP_RAWTONUM - 1729)) | (1 << (self::SYS_OP_RDTM - 1729)) | (1 << (self::SYS_OP_REF - 1729)) | (1 << (self::SYS_OP_RMTD - 1729)) | (1 << (self::SYS_OP_ROWIDTOOBJ - 1729)) | (1 << (self::SYS_OP_RPB - 1729)) | (1 << (self::SYS_OPTLOBPRBSC - 1729)) | (1 << (self::SYS_OP_TOSETID - 1729)) | (1 << (self::SYS_OP_TPR - 1729)) | (1 << (self::SYS_OP_TRTB - 1729)) | (1 << (self::SYS_OPTXICMP - 1729)) | (1 << (self::SYS_OPTXQCASTASNQ - 1729)) | (1 << (self::SYS_OP_UNDESCEND - 1729)) | (1 << (self::SYS_OP_VECAND - 1729)) | (1 << (self::SYS_OP_VECBIT - 1729)) | (1 << (self::SYS_OP_VECOR - 1729)) | (1 << (self::SYS_OP_VECXOR - 1729)) | (1 << (self::SYS_OP_VERSION - 1729)) | (1 << (self::SYS_OP_VREF - 1729)) | (1 << (self::SYS_OP_VVD - 1729)) | (1 << (self::SYS_OP_XMLCONS_FOR_CSX - 1729)) | (1 << (self::SYS_OP_XPTHATG - 1729)) | (1 << (self::SYS_OP_XPTHIDX - 1729)) | (1 << (self::SYS_OP_XPTHOP - 1729)) | (1 << (self::SYS_OP_XTXT2SQLT - 1729)) | (1 << (self::SYS_OP_ZONE_ID - 1729)) | (1 << (self::SYS_ORDERKEY_DEPTH - 1729)) | (1 << (self::SYS_ORDERKEY_MAXCHILD - 1729)) | (1 << (self::SYS_ORDERKEY_PARENT - 1729)) | (1 << (self::SYS_PARALLEL_TXN - 1729)) | (1 << (self::SYS_PATHID_IS_ATTR - 1729)) | (1 << (self::SYS_PATHID_IS_NMSPC - 1729)) | (1 << (self::SYS_PATHID_LASTNAME - 1729)) | (1 << (self::SYS_PATHID_LASTNMSPC - 1729)) | (1 << (self::SYS_PATH_REVERSE - 1729)) | (1 << (self::SYS_PXQEXTRACT - 1729)) | (1 << (self::SYS_RAW_TO_XSID - 1729)) | (1 << (self::SYS_RID_ORDER - 1729)) | (1 << (self::SYS_ROW_DELTA - 1729)) | (1 << (self::SYS_SC_2_XMLT - 1729)) | (1 << (self::SYS_SYNRCIREDO - 1729)) | (1 << (self::SYSTEM_DEFINED - 1729)) | (1 << (self::SYSTEM - 1729)) | (1 << (self::SYSTIMESTAMP - 1729)) | (1 << (self::SYS_TYPEID - 1729)) | (1 << (self::SYS_UMAKEXML - 1729)) | (1 << (self::SYS_XMLANALYZE - 1729)) | (1 << (self::SYS_XMLCONTAINS - 1729)) | (1 << (self::SYS_XMLCONV - 1729)) | (1 << (self::SYS_XMLEXNSURI - 1729)) | (1 << (self::SYS_XMLGEN - 1729)) | (1 << (self::SYS_XMLI_LOC_ISNODE - 1729)) | (1 << (self::SYS_XMLI_LOC_ISTEXT - 1729)) | (1 << (self::SYS_XMLINSTR - 1729)) | (1 << (self::SYS_XMLLOCATOR_GETSVAL - 1729)) | (1 << (self::SYS_XMLNODEID_GETCID - 1729)))) !== 0) || (((($_la - 1793)) & ~0x3f) === 0 && ((1 << ($_la - 1793)) & ((1 << (self::SYS_XMLNODEID_GETLOCATOR - 1793)) | (1 << (self::SYS_XMLNODEID_GETOKEY - 1793)) | (1 << (self::SYS_XMLNODEID_GETPATHID - 1793)) | (1 << (self::SYS_XMLNODEID_GETPTRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETSVAL - 1793)) | (1 << (self::SYS_XMLNODEID_GETTID - 1793)) | (1 << (self::SYS_XMLNODEID - 1793)) | (1 << (self::SYS_XMLT_2_SC - 1793)) | (1 << (self::SYS_XMLTRANSLATE - 1793)) | (1 << (self::SYS_XMLTYPE2SQL - 1793)) | (1 << (self::SYS_XQ_ASQLCNV - 1793)) | (1 << (self::SYS_XQ_ATOMCNVCHK - 1793)) | (1 << (self::SYS_XQBASEURI - 1793)) | (1 << (self::SYS_XQCASTABLEERRH - 1793)) | (1 << (self::SYS_XQCODEP2STR - 1793)) | (1 << (self::SYS_XQCODEPEQ - 1793)) | (1 << (self::SYS_XQCON2SEQ - 1793)) | (1 << (self::SYS_XQCONCAT - 1793)) | (1 << (self::SYS_XQDELETE - 1793)) | (1 << (self::SYS_XQDFLTCOLATION - 1793)) | (1 << (self::SYS_XQDOC - 1793)) | (1 << (self::SYS_XQDOCURI - 1793)) | (1 << (self::SYS_XQDURDIV - 1793)) | (1 << (self::SYS_XQED4URI - 1793)) | (1 << (self::SYS_XQENDSWITH - 1793)) | (1 << (self::SYS_XQERRH - 1793)) | (1 << (self::SYS_XQERR - 1793)) | (1 << (self::SYS_XQESHTMLURI - 1793)) | (1 << (self::SYS_XQEXLOBVAL - 1793)) | (1 << (self::SYS_XQEXSTWRP - 1793)) | (1 << (self::SYS_XQEXTRACT - 1793)) | (1 << (self::SYS_XQEXTRREF - 1793)) | (1 << (self::SYS_XQEXVAL - 1793)) | (1 << (self::SYS_XQFB2STR - 1793)) | (1 << (self::SYS_XQFNBOOL - 1793)) | (1 << (self::SYS_XQFNCMP - 1793)) | (1 << (self::SYS_XQFNDATIM - 1793)) | (1 << (self::SYS_XQFNLNAME - 1793)) | (1 << (self::SYS_XQFNNM - 1793)) | (1 << (self::SYS_XQFNNSURI - 1793)) | (1 << (self::SYS_XQFNPREDTRUTH - 1793)) | (1 << (self::SYS_XQFNQNM - 1793)) | (1 << (self::SYS_XQFNROOT - 1793)) | (1 << (self::SYS_XQFORMATNUM - 1793)) | (1 << (self::SYS_XQFTCONTAIN - 1793)) | (1 << (self::SYS_XQFUNCR - 1793)) | (1 << (self::SYS_XQGETCONTENT - 1793)) | (1 << (self::SYS_XQINDXOF - 1793)) | (1 << (self::SYS_XQINSERT - 1793)) | (1 << (self::SYS_XQINSPFX - 1793)) | (1 << (self::SYS_XQIRI2URI - 1793)) | (1 << (self::SYS_XQLANG - 1793)) | (1 << (self::SYS_XQLLNMFRMQNM - 1793)) | (1 << (self::SYS_XQMKNODEREF - 1793)) | (1 << (self::SYS_XQNILLED - 1793)) | (1 << (self::SYS_XQNODENAME - 1793)) | (1 << (self::SYS_XQNORMSPACE - 1793)) | (1 << (self::SYS_XQNORMUCODE - 1793)) | (1 << (self::SYS_XQ_NRNG - 1793)) | (1 << (self::SYS_XQNSP4PFX - 1793)) | (1 << (self::SYS_XQNSPFRMQNM - 1793)) | (1 << (self::SYS_XQPFXFRMQNM - 1793)) | (1 << (self::SYS_XQ_PKSQL2XML - 1793)))) !== 0) || (((($_la - 1857)) & ~0x3f) === 0 && ((1 << ($_la - 1857)) & ((1 << (self::SYS_XQPOLYABS - 1857)) | (1 << (self::SYS_XQPOLYADD - 1857)) | (1 << (self::SYS_XQPOLYCEL - 1857)) | (1 << (self::SYS_XQPOLYCSTBL - 1857)) | (1 << (self::SYS_XQPOLYCST - 1857)) | (1 << (self::SYS_XQPOLYDIV - 1857)) | (1 << (self::SYS_XQPOLYFLR - 1857)) | (1 << (self::SYS_XQPOLYMOD - 1857)) | (1 << (self::SYS_XQPOLYMUL - 1857)) | (1 << (self::SYS_XQPOLYRND - 1857)) | (1 << (self::SYS_XQPOLYSQRT - 1857)) | (1 << (self::SYS_XQPOLYSUB - 1857)) | (1 << (self::SYS_XQPOLYUMUS - 1857)) | (1 << (self::SYS_XQPOLYUPLS - 1857)) | (1 << (self::SYS_XQPOLYVEQ - 1857)) | (1 << (self::SYS_XQPOLYVGE - 1857)) | (1 << (self::SYS_XQPOLYVGT - 1857)) | (1 << (self::SYS_XQPOLYVLE - 1857)) | (1 << (self::SYS_XQPOLYVLT - 1857)) | (1 << (self::SYS_XQPOLYVNE - 1857)) | (1 << (self::SYS_XQREF2VAL - 1857)) | (1 << (self::SYS_XQRENAME - 1857)) | (1 << (self::SYS_XQREPLACE - 1857)) | (1 << (self::SYS_XQRESVURI - 1857)) | (1 << (self::SYS_XQRNDHALF2EVN - 1857)) | (1 << (self::SYS_XQRSLVQNM - 1857)) | (1 << (self::SYS_XQRYENVPGET - 1857)) | (1 << (self::SYS_XQRYVARGET - 1857)) | (1 << (self::SYS_XQRYWRP - 1857)) | (1 << (self::SYS_XQSEQ2CON4XC - 1857)) | (1 << (self::SYS_XQSEQ2CON - 1857)) | (1 << (self::SYS_XQSEQDEEPEQ - 1857)) | (1 << (self::SYS_XQSEQINSB - 1857)) | (1 << (self::SYS_XQSEQRM - 1857)) | (1 << (self::SYS_XQSEQRVS - 1857)) | (1 << (self::SYS_XQSEQSUB - 1857)) | (1 << (self::SYS_XQSEQTYPMATCH - 1857)) | (1 << (self::SYS_XQSTARTSWITH - 1857)) | (1 << (self::SYS_XQSTATBURI - 1857)) | (1 << (self::SYS_XQSTR2CODEP - 1857)) | (1 << (self::SYS_XQSTRJOIN - 1857)) | (1 << (self::SYS_XQSUBSTRAFT - 1857)) | (1 << (self::SYS_XQSUBSTRBEF - 1857)) | (1 << (self::SYS_XQTOKENIZE - 1857)) | (1 << (self::SYS_XQTREATAS - 1857)) | (1 << (self::SYS_XQ_UPKXML2SQL - 1857)) | (1 << (self::SYS_XQXFORM - 1857)) | (1 << (self::SYS_XSID_TO_RAW - 1857)) | (1 << (self::SYS_ZMAP_FILTER - 1857)) | (1 << (self::SYS_ZMAP_REFRESH - 1857)) | (1 << (self::TABLE_LOOKUP_BY_NL - 1857)) | (1 << (self::TABLESPACE_NO - 1857)) | (1 << (self::TABLESPACE - 1857)) | (1 << (self::TABLES - 1857)) | (1 << (self::TABLE_STATS - 1857)) | (1 << (self::TABLE - 1857)) | (1 << (self::TABNO - 1857)) | (1 << (self::TAG - 1857)) | (1 << (self::TANH - 1857)) | (1 << (self::TAN - 1857)) | (1 << (self::TBLORIDXPARTNUM - 1857)) | (1 << (self::TEMPFILE - 1857)) | (1 << (self::TEMPLATE - 1857)) | (1 << (self::TEMPORARY - 1857)))) !== 0) || (((($_la - 1921)) & ~0x3f) === 0 && ((1 << ($_la - 1921)) & ((1 << (self::TEMP_TABLE - 1921)) | (1 << (self::TEST - 1921)) | (1 << (self::TEXT - 1921)) | (1 << (self::THAN - 1921)) | (1 << (self::THEN - 1921)) | (1 << (self::THE - 1921)) | (1 << (self::THREAD - 1921)) | (1 << (self::THROUGH - 1921)) | (1 << (self::TIER - 1921)) | (1 << (self::TIES - 1921)) | (1 << (self::TIMEOUT - 1921)) | (1 << (self::TIMESTAMP_LTZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP - 1921)) | (1 << (self::TIMESTAMP_TZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP_UNCONSTRAINED - 1921)) | (1 << (self::TIMES - 1921)) | (1 << (self::TIME - 1921)) | (1 << (self::TIMEZONE_ABBR - 1921)) | (1 << (self::TIMEZONE_HOUR - 1921)) | (1 << (self::TIMEZONE_MINUTE - 1921)) | (1 << (self::TIMEZONE_OFFSET - 1921)) | (1 << (self::TIMEZONE_REGION - 1921)) | (1 << (self::TIME_ZONE - 1921)) | (1 << (self::TIV_GB - 1921)) | (1 << (self::TIV_SSF - 1921)) | (1 << (self::TO_ACLID - 1921)) | (1 << (self::TO_BINARY_DOUBLE - 1921)) | (1 << (self::TO_BINARY_FLOAT - 1921)) | (1 << (self::TO_BLOB - 1921)) | (1 << (self::TO_CLOB - 1921)) | (1 << (self::TO_DSINTERVAL - 1921)) | (1 << (self::TO_LOB - 1921)) | (1 << (self::TO_MULTI_BYTE - 1921)) | (1 << (self::TO_NCHAR - 1921)) | (1 << (self::TO_NCLOB - 1921)) | (1 << (self::TO_NUMBER - 1921)) | (1 << (self::TOPLEVEL - 1921)) | (1 << (self::TO_SINGLE_BYTE - 1921)) | (1 << (self::TO_TIMESTAMP - 1921)) | (1 << (self::TO_TIMESTAMP_TZ - 1921)) | (1 << (self::TO_TIME - 1921)) | (1 << (self::TO_TIME_TZ - 1921)) | (1 << (self::TO_YMINTERVAL - 1921)) | (1 << (self::TRACE - 1921)) | (1 << (self::TRACING - 1921)) | (1 << (self::TRACKING - 1921)) | (1 << (self::TRAILING - 1921)) | (1 << (self::TRANSACTION - 1921)) | (1 << (self::TRANSFORM_DISTINCT_AGG - 1921)) | (1 << (self::TRANSITIONAL - 1921)) | (1 << (self::TRANSITION - 1921)) | (1 << (self::TRANSLATE - 1921)) | (1 << (self::TRANSLATION - 1921)) | (1 << (self::TREAT - 1921)) | (1 << (self::TRIGGERS - 1921)) | (1 << (self::TRIGGER - 1921)) | (1 << (self::TRUE - 1921)) | (1 << (self::TRUNCATE - 1921)) | (1 << (self::TRUNC - 1921)) | (1 << (self::TRUSTED - 1921)) | (1 << (self::TRUST - 1921)) | (1 << (self::TUNING - 1921)))) !== 0) || (((($_la - 1985)) & ~0x3f) === 0 && ((1 << ($_la - 1985)) & ((1 << (self::TX - 1985)) | (1 << (self::TYPES - 1985)) | (1 << (self::TYPE - 1985)) | (1 << (self::TZ_OFFSET - 1985)) | (1 << (self::UB2 - 1985)) | (1 << (self::UBA - 1985)) | (1 << (self::UCS2 - 1985)) | (1 << (self::UID - 1985)) | (1 << (self::UNARCHIVED - 1985)) | (1 << (self::UNBOUNDED - 1985)) | (1 << (self::UNBOUND - 1985)) | (1 << (self::UNCONDITIONAL - 1985)) | (1 << (self::UNDER - 1985)) | (1 << (self::UNDO - 1985)) | (1 << (self::UNDROP - 1985)) | (1 << (self::UNIFORM - 1985)) | (1 << (self::UNISTR - 1985)) | (1 << (self::UNLIMITED - 1985)) | (1 << (self::UNLOAD - 1985)) | (1 << (self::UNLOCK - 1985)) | (1 << (self::UNMATCHED - 1985)) | (1 << (self::UNNEST_INNERJ_DISTINCT_VIEW - 1985)) | (1 << (self::UNNEST_NOSEMIJ_NODISTINCTVIEW - 1985)) | (1 << (self::UNNEST_SEMIJ_VIEW - 1985)) | (1 << (self::UNNEST - 1985)) | (1 << (self::UNPACKED - 1985)) | (1 << (self::UNPIVOT - 1985)) | (1 << (self::UNPLUG - 1985)) | (1 << (self::UNPROTECTED - 1985)) | (1 << (self::UNQUIESCE - 1985)) | (1 << (self::UNRECOVERABLE - 1985)) | (1 << (self::UNRESTRICTED - 1985)) | (1 << (self::UNSUBSCRIBE - 1985)) | (1 << (self::UNTIL - 1985)) | (1 << (self::UNUSABLE - 1985)) | (1 << (self::UNUSED - 1985)) | (1 << (self::UPDATABLE - 1985)) | (1 << (self::UPDATED - 1985)) | (1 << (self::UPDATEXML - 1985)) | (1 << (self::UPD_INDEXES - 1985)) | (1 << (self::UPD_JOININDEX - 1985)) | (1 << (self::UPGRADE - 1985)) | (1 << (self::UPPER - 1985)) | (1 << (self::UPSERT - 1985)) | (1 << (self::UROWID - 1985)) | (1 << (self::USABLE - 1985)) | (1 << (self::USAGE - 1985)) | (1 << (self::USE_ANTI - 1985)) | (1 << (self::USE_CONCAT - 1985)) | (1 << (self::USE_CUBE - 1985)) | (1 << (self::USE_HASH_AGGREGATION - 1985)) | (1 << (self::USE_HASH_GBY_FOR_PUSHDOWN - 1985)) | (1 << (self::USE_HASH - 1985)) | (1 << (self::USE_HIDDEN_PARTITIONS - 1985)) | (1 << (self::USE_INVISIBLE_INDEXES - 1985)) | (1 << (self::USE_MERGE_CARTESIAN - 1985)) | (1 << (self::USE_MERGE - 1985)) | (1 << (self::USE_NL - 1985)) | (1 << (self::USE_NL_WITH_INDEX - 1985)) | (1 << (self::USE_PRIVATE_OUTLINES - 1985)) | (1 << (self::USER_DATA - 1985)))) !== 0) || (((($_la - 2049)) & ~0x3f) === 0 && ((1 << ($_la - 2049)) & ((1 << (self::USER_DEFINED - 2049)) | (1 << (self::USERENV - 2049)) | (1 << (self::USERGROUP - 2049)) | (1 << (self::USER_RECYCLEBIN - 2049)) | (1 << (self::USERS - 2049)) | (1 << (self::USER_TABLESPACES - 2049)) | (1 << (self::USER - 2049)) | (1 << (self::USE_SEMI - 2049)) | (1 << (self::USE_STORED_OUTLINES - 2049)) | (1 << (self::USE_TTT_FOR_GSETS - 2049)) | (1 << (self::USE - 2049)) | (1 << (self::USE_VECTOR_AGGREGATION - 2049)) | (1 << (self::USE_WEAK_NAME_RESL - 2049)) | (1 << (self::USING_NO_EXPAND - 2049)) | (1 << (self::USING - 2049)) | (1 << (self::UTF16BE - 2049)) | (1 << (self::UTF16LE - 2049)) | (1 << (self::UTF32 - 2049)) | (1 << (self::UTF8 - 2049)) | (1 << (self::V1 - 2049)) | (1 << (self::V2 - 2049)) | (1 << (self::VALIDATE - 2049)) | (1 << (self::VALIDATION - 2049)) | (1 << (self::VALID_TIME_END - 2049)) | (1 << (self::VALUE - 2049)) | (1 << (self::VARCHAR2 - 2049)) | (1 << (self::VARCHAR - 2049)) | (1 << (self::VARIABLE - 2049)) | (1 << (self::VAR_POP - 2049)) | (1 << (self::VARRAYS - 2049)) | (1 << (self::VARRAY - 2049)) | (1 << (self::VAR_SAMP - 2049)) | (1 << (self::VARYING - 2049)) | (1 << (self::VECTOR_READ_TRACE - 2049)) | (1 << (self::VECTOR_READ - 2049)) | (1 << (self::VECTOR_TRANSFORM_DIMS - 2049)) | (1 << (self::VECTOR_TRANSFORM_FACT - 2049)) | (1 << (self::VECTOR_TRANSFORM - 2049)) | (1 << (self::VERIFIER - 2049)) | (1 << (self::VERIFY - 2049)) | (1 << (self::VERSIONING - 2049)) | (1 << (self::VERSIONS_ENDSCN - 2049)) | (1 << (self::VERSIONS_ENDTIME - 2049)) | (1 << (self::VERSIONS_OPERATION - 2049)) | (1 << (self::VERSIONS_STARTSCN - 2049)) | (1 << (self::VERSIONS_STARTTIME - 2049)) | (1 << (self::VERSIONS - 2049)) | (1 << (self::VERSIONS_XID - 2049)) | (1 << (self::VERSION - 2049)) | (1 << (self::VIOLATION - 2049)) | (1 << (self::VIRTUAL - 2049)) | (1 << (self::VISIBILITY - 2049)) | (1 << (self::VISIBLE - 2049)) | (1 << (self::VOLUME - 2049)) | (1 << (self::VSIZE - 2049)) | (1 << (self::WAIT - 2049)) | (1 << (self::WALLET - 2049)) | (1 << (self::WARNING - 2049)) | (1 << (self::WEEKS - 2049)) | (1 << (self::WEEK - 2049)) | (1 << (self::WELLFORMED - 2049)) | (1 << (self::WHENEVER - 2049)))) !== 0) || (((($_la - 2113)) & ~0x3f) === 0 && ((1 << ($_la - 2113)) & ((1 << (self::WHEN - 2113)) | (1 << (self::WHILE - 2113)) | (1 << (self::WHITESPACE - 2113)) | (1 << (self::WIDTH_BUCKET - 2113)) | (1 << (self::WITHIN - 2113)) | (1 << (self::WITHOUT - 2113)) | (1 << (self::WITH_PLSQL - 2113)) | (1 << (self::WORK - 2113)) | (1 << (self::WRAPPED - 2113)) | (1 << (self::WRAPPER - 2113)) | (1 << (self::WRITE - 2113)) | (1 << (self::XDB_FASTPATH_INSERT - 2113)) | (1 << (self::X_DYN_PRUNE - 2113)) | (1 << (self::XID - 2113)) | (1 << (self::XML2OBJECT - 2113)) | (1 << (self::XMLAGG - 2113)) | (1 << (self::XMLATTRIBUTES - 2113)) | (1 << (self::XMLCAST - 2113)) | (1 << (self::XMLCDATA - 2113)) | (1 << (self::XMLCOLATTVAL - 2113)) | (1 << (self::XMLCOMMENT - 2113)) | (1 << (self::XMLCONCAT - 2113)) | (1 << (self::XMLDIFF - 2113)) | (1 << (self::XML_DML_RWT_STMT - 2113)) | (1 << (self::XMLELEMENT - 2113)) | (1 << (self::XMLEXISTS2 - 2113)) | (1 << (self::XMLEXISTS - 2113)) | (1 << (self::XMLFOREST - 2113)) | (1 << (self::XMLINDEX_REWRITE_IN_SELECT - 2113)) | (1 << (self::XMLINDEX_REWRITE - 2113)) | (1 << (self::XMLINDEX_SEL_IDX_TBL - 2113)) | (1 << (self::XMLISNODE - 2113)) | (1 << (self::XMLISVALID - 2113)) | (1 << (self::XMLNAMESPACES - 2113)) | (1 << (self::XMLPARSE - 2113)) | (1 << (self::XMLPATCH - 2113)) | (1 << (self::XMLPI - 2113)) | (1 << (self::XMLQUERYVAL - 2113)) | (1 << (self::XMLQUERY - 2113)) | (1 << (self::XMLROOT - 2113)) | (1 << (self::XMLSCHEMA - 2113)) | (1 << (self::XMLSERIALIZE - 2113)) | (1 << (self::XMLTABLE - 2113)) | (1 << (self::XMLTRANSFORMBLOB - 2113)) | (1 << (self::XMLTRANSFORM - 2113)) | (1 << (self::XMLTYPE - 2113)) | (1 << (self::XML - 2113)) | (1 << (self::XPATHTABLE - 2113)) | (1 << (self::XS_SYS_CONTEXT - 2113)) | (1 << (self::XS - 2113)) | (1 << (self::YEARS - 2113)) | (1 << (self::YEAR - 2113)) | (1 << (self::YES - 2113)) | (1 << (self::YMINTERVAL_UNCONSTRAINED - 2113)) | (1 << (self::ZONEMAP - 2113)) | (1 << (self::ZONE - 2113)) | (1 << (self::PREDICTION - 2113)) | (1 << (self::PREDICTION_BOUNDS - 2113)) | (1 << (self::PREDICTION_COST - 2113)))) !== 0) || (((($_la - 2177)) & ~0x3f) === 0 && ((1 << ($_la - 2177)) & ((1 << (self::PREDICTION_DETAILS - 2177)) | (1 << (self::PREDICTION_PROBABILITY - 2177)) | (1 << (self::PREDICTION_SET - 2177)) | (1 << (self::CUME_DIST - 2177)) | (1 << (self::DENSE_RANK - 2177)) | (1 << (self::LISTAGG - 2177)) | (1 << (self::PERCENT_RANK - 2177)) | (1 << (self::PERCENTILE_CONT - 2177)) | (1 << (self::PERCENTILE_DISC - 2177)) | (1 << (self::RANK - 2177)) | (1 << (self::AVG - 2177)) | (1 << (self::CORR - 2177)) | (1 << (self::COVAR_ - 2177)) | (1 << (self::DECODE - 2177)) | (1 << (self::LAG - 2177)) | (1 << (self::LEAD - 2177)) | (1 << (self::MAX - 2177)) | (1 << (self::MEDIAN - 2177)) | (1 << (self::MIN - 2177)) | (1 << (self::NTILE - 2177)) | (1 << (self::NVL - 2177)) | (1 << (self::RATIO_TO_REPORT - 2177)) | (1 << (self::REGR_ - 2177)) | (1 << (self::ROUND - 2177)) | (1 << (self::ROW_NUMBER - 2177)) | (1 << (self::SUBSTR - 2177)) | (1 << (self::TO_CHAR - 2177)) | (1 << (self::TRIM - 2177)) | (1 << (self::SUM - 2177)) | (1 << (self::STDDEV - 2177)) | (1 << (self::VAR_ - 2177)) | (1 << (self::VARIANCE - 2177)) | (1 << (self::LEAST - 2177)) | (1 << (self::GREATEST - 2177)) | (1 << (self::TO_DATE - 2177)) | (1 << (self::NATIONAL_CHAR_STRING_LIT - 2177)) | (1 << (self::PERIOD - 2177)) | (1 << (self::UNSIGNED_INTEGER - 2177)) | (1 << (self::APPROXIMATE_NUM_LIT - 2177)) | (1 << (self::CHAR_STRING - 2177)) | (1 << (self::DELIMITED_ID - 2177)) | (1 << (self::LEFT_PAREN - 2177)) | (1 << (self::PLUS_SIGN - 2177)) | (1 << (self::MINUS_SIGN - 2177)) | (1 << (self::BINDVAR - 2177)) | (1 << (self::COLON - 2177)))) !== 0) || $_la === self::INTRODUCER || $_la === self::REGULAR_ID) {
                $this->setState(11331);
                $this->argument();
                $this->setState(11336);
                $this->errorHandler->sync($this);

                $_la = $this->input->LA(1);
                while ($_la === self::COMMA) {
                    $this->setState(11332);
                    $this->match(self::COMMA);
                    $this->setState(11333);
                    $this->argument();
                    $this->setState(11338);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);
                }
            }
            $this->setState(11341);
            $this->match(self::RIGHT_PAREN);
            $this->setState(11343);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1564, $this->ctx)) {
                case 1:
                    $this->setState(11342);
                    $this->keep_clause();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function function_argument_analytic(): Context\Function_argument_analyticContext
    {
        $localContext = new Context\Function_argument_analyticContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1450, self::RULE_function_argument_analytic);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11345);
            $this->match(self::LEFT_PAREN);
            $this->setState(11360);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if (((($_la) & ~0x3f) === 0 && ((1 << $_la) & ((1 << self::ABORT) | (1 << self::ABS) | (1 << self::ACCESS) | (1 << self::ACCESSED) | (1 << self::ACCOUNT) | (1 << self::ACL) | (1 << self::ACOS) | (1 << self::ACTION) | (1 << self::ACTIONS) | (1 << self::ACTIVATE) | (1 << self::ACTIVE) | (1 << self::ACTIVE_COMPONENT) | (1 << self::ACTIVE_DATA) | (1 << self::ACTIVE_FUNCTION) | (1 << self::ACTIVE_TAG) | (1 << self::ACTIVITY) | (1 << self::ADAPTIVE_PLAN) | (1 << self::ADD) | (1 << self::ADD_COLUMN) | (1 << self::ADD_GROUP) | (1 << self::ADD_MONTHS) | (1 << self::ADJ_DATE) | (1 << self::ADMIN) | (1 << self::ADMINISTER) | (1 << self::ADMINISTRATOR) | (1 << self::ADVANCED) | (1 << self::ADVISE) | (1 << self::ADVISOR) | (1 << self::AFD_DISKSTRING) | (1 << self::AFTER) | (1 << self::AGENT) | (1 << self::AGGREGATE) | (1 << self::A_LETTER) | (1 << self::ALIAS) | (1 << self::ALL) | (1 << self::ALLOCATE) | (1 << self::ALLOW) | (1 << self::ALL_ROWS) | (1 << self::ALWAYS) | (1 << self::ANALYZE) | (1 << self::ANCILLARY) | (1 << self::AND_EQUAL) | (1 << self::ANOMALY) | (1 << self::ANSI_REARCH) | (1 << self::ANTIJOIN) | (1 << self::ANY) | (1 << self::ANYSCHEMA) | (1 << self::APPEND) | (1 << self::APPENDCHILDXML) | (1 << self::APPEND_VALUES) | (1 << self::APPLICATION) | (1 << self::APPLY) | (1 << self::APPROX_COUNT_DISTINCT) | (1 << self::ARCHIVAL) | (1 << self::ARCHIVE) | (1 << self::ARCHIVED) | (1 << self::ARCHIVELOG) | (1 << self::ARRAY) | (1 << self::ASCII))) !== 0) || (((($_la - 64)) & ~0x3f) === 0 && ((1 << ($_la - 64)) & ((1 << (self::ASCIISTR - 64)) | (1 << (self::ASIN - 64)) | (1 << (self::ASIS - 64)) | (1 << (self::ASSEMBLY - 64)) | (1 << (self::ASSIGN - 64)) | (1 << (self::ASSOCIATE - 64)) | (1 << (self::ASYNC - 64)) | (1 << (self::ASYNCHRONOUS - 64)) | (1 << (self::ATAN2 - 64)) | (1 << (self::ATAN - 64)) | (1 << (self::AT - 64)) | (1 << (self::ATTRIBUTE - 64)) | (1 << (self::ATTRIBUTES - 64)) | (1 << (self::AUTHENTICATED - 64)) | (1 << (self::AUTHENTICATION - 64)) | (1 << (self::AUTHID - 64)) | (1 << (self::AUTHORIZATION - 64)) | (1 << (self::AUTOALLOCATE - 64)) | (1 << (self::AUTO - 64)) | (1 << (self::AUTOEXTEND - 64)) | (1 << (self::AUTO_LOGIN - 64)) | (1 << (self::AUTOMATIC - 64)) | (1 << (self::AUTONOMOUS_TRANSACTION - 64)) | (1 << (self::AUTO_REOPTIMIZE - 64)) | (1 << (self::AVAILABILITY - 64)) | (1 << (self::AVRO - 64)) | (1 << (self::BACKGROUND - 64)) | (1 << (self::BACKUP - 64)) | (1 << (self::BASIC - 64)) | (1 << (self::BASICFILE - 64)) | (1 << (self::BATCH - 64)) | (1 << (self::BATCHSIZE - 64)) | (1 << (self::BATCH_TABLE_ACCESS_BY_ROWID - 64)) | (1 << (self::BECOME - 64)) | (1 << (self::BEFORE - 64)) | (1 << (self::BEGIN - 64)) | (1 << (self::BEGINNING - 64)) | (1 << (self::BEGIN_OUTLINE_DATA - 64)) | (1 << (self::BEHALF - 64)) | (1 << (self::BEQUEATH - 64)) | (1 << (self::BFILE - 64)) | (1 << (self::BFILENAME - 64)) | (1 << (self::BIGFILE - 64)) | (1 << (self::BINARY - 64)) | (1 << (self::BINARY_DOUBLE - 64)) | (1 << (self::BINARY_DOUBLE_INFINITY - 64)) | (1 << (self::BINARY_DOUBLE_NAN - 64)) | (1 << (self::BINARY_FLOAT - 64)) | (1 << (self::BINARY_FLOAT_INFINITY - 64)) | (1 << (self::BINARY_FLOAT_NAN - 64)) | (1 << (self::BINARY_INTEGER - 64)) | (1 << (self::BIND_AWARE - 64)) | (1 << (self::BINDING - 64)) | (1 << (self::BIN_TO_NUM - 64)) | (1 << (self::BITAND - 64)) | (1 << (self::BITMAP_AND - 64)) | (1 << (self::BITMAP - 64)) | (1 << (self::BITMAPS - 64)) | (1 << (self::BITMAP_TREE - 64)) | (1 << (self::BITS - 64)))) !== 0) || (((($_la - 128)) & ~0x3f) === 0 && ((1 << ($_la - 128)) & ((1 << (self::BLOB - 128)) | (1 << (self::BLOCK - 128)) | (1 << (self::BLOCK_RANGE - 128)) | (1 << (self::BLOCKS - 128)) | (1 << (self::BLOCKSIZE - 128)) | (1 << (self::BODY - 128)) | (1 << (self::BOOLEAN - 128)) | (1 << (self::BOTH - 128)) | (1 << (self::BOUND - 128)) | (1 << (self::BRANCH - 128)) | (1 << (self::BREADTH - 128)) | (1 << (self::BROADCAST - 128)) | (1 << (self::BSON - 128)) | (1 << (self::BUFFER - 128)) | (1 << (self::BUFFER_CACHE - 128)) | (1 << (self::BUFFER_POOL - 128)) | (1 << (self::BUILD - 128)) | (1 << (self::BULK - 128)) | (1 << (self::BYPASS_RECURSIVE_CHECK - 128)) | (1 << (self::BYPASS_UJVC - 128)) | (1 << (self::BYTE - 128)) | (1 << (self::CACHE - 128)) | (1 << (self::CACHE_CB - 128)) | (1 << (self::CACHE_INSTANCES - 128)) | (1 << (self::CACHE_TEMP_TABLE - 128)) | (1 << (self::CACHING - 128)) | (1 << (self::CALCULATED - 128)) | (1 << (self::CALLBACK - 128)) | (1 << (self::CALL - 128)) | (1 << (self::CANCEL - 128)) | (1 << (self::CAPACITY - 128)) | (1 << (self::CARDINALITY - 128)) | (1 << (self::CASCADE - 128)) | (1 << (self::CASE - 128)) | (1 << (self::CAST - 128)) | (1 << (self::CATEGORY - 128)) | (1 << (self::CDBDEFAULT - 128)) | (1 << (self::CEIL - 128)) | (1 << (self::CELL_FLASH_CACHE - 128)) | (1 << (self::CERTIFICATE - 128)) | (1 << (self::CFILE - 128)) | (1 << (self::CHAINED - 128)) | (1 << (self::CHANGE - 128)) | (1 << (self::CHANGE_DUPKEY_ERROR_INDEX - 128)) | (1 << (self::CHARACTER - 128)) | (1 << (self::CHAR - 128)) | (1 << (self::CHAR_CS - 128)) | (1 << (self::CHARTOROWID - 128)) | (1 << (self::CHECK_ACL_REWRITE - 128)) | (1 << (self::CHECKPOINT - 128)) | (1 << (self::CHILD - 128)) | (1 << (self::CHOOSE - 128)) | (1 << (self::CHR - 128)) | (1 << (self::CHUNK - 128)) | (1 << (self::CLASS - 128)) | (1 << (self::CLASSIFIER - 128)) | (1 << (self::CLEANUP - 128)) | (1 << (self::CLEAR - 128)) | (1 << (self::C_LETTER - 128)) | (1 << (self::CLIENT - 128)))) !== 0) || (((($_la - 192)) & ~0x3f) === 0 && ((1 << ($_la - 192)) & ((1 << (self::CLOB - 192)) | (1 << (self::CLONE - 192)) | (1 << (self::CLOSE_CACHED_OPEN_CURSORS - 192)) | (1 << (self::CLOSE - 192)) | (1 << (self::CLUSTER_BY_ROWID - 192)) | (1 << (self::CLUSTER - 192)) | (1 << (self::CLUSTER_DETAILS - 192)) | (1 << (self::CLUSTER_DISTANCE - 192)) | (1 << (self::CLUSTER_ID - 192)) | (1 << (self::CLUSTERING - 192)) | (1 << (self::CLUSTERING_FACTOR - 192)) | (1 << (self::CLUSTER_PROBABILITY - 192)) | (1 << (self::CLUSTER_SET - 192)) | (1 << (self::COALESCE - 192)) | (1 << (self::COALESCE_SQ - 192)) | (1 << (self::COARSE - 192)) | (1 << (self::CO_AUTH_IND - 192)) | (1 << (self::COLD - 192)) | (1 << (self::COLLECT - 192)) | (1 << (self::COLUMNAR - 192)) | (1 << (self::COLUMN_AUTH_INDICATOR - 192)) | (1 << (self::COLUMN - 192)) | (1 << (self::COLUMNS - 192)) | (1 << (self::COLUMN_STATS - 192)) | (1 << (self::COLUMN_VALUE - 192)) | (1 << (self::COMMENT - 192)) | (1 << (self::COMMIT - 192)) | (1 << (self::COMMITTED - 192)) | (1 << (self::COMMON_DATA - 192)) | (1 << (self::COMPACT - 192)) | (1 << (self::COMPATIBILITY - 192)) | (1 << (self::COMPILE - 192)) | (1 << (self::COMPLETE - 192)) | (1 << (self::COMPLIANCE - 192)) | (1 << (self::COMPONENT - 192)) | (1 << (self::COMPONENTS - 192)) | (1 << (self::COMPOSE - 192)) | (1 << (self::COMPOSITE - 192)) | (1 << (self::COMPOSITE_LIMIT - 192)) | (1 << (self::COMPOUND - 192)) | (1 << (self::COMPUTE - 192)) | (1 << (self::CONCAT - 192)) | (1 << (self::CON_DBID_TO_ID - 192)) | (1 << (self::CONDITIONAL - 192)) | (1 << (self::CONDITION - 192)) | (1 << (self::CONFIRM - 192)) | (1 << (self::CONFORMING - 192)) | (1 << (self::CON_GUID_TO_ID - 192)) | (1 << (self::CON_ID - 192)) | (1 << (self::CON_NAME_TO_ID - 192)) | (1 << (self::CONNECT_BY_CB_WHR_ONLY - 192)) | (1 << (self::CONNECT_BY_COMBINE_SW - 192)) | (1 << (self::CONNECT_BY_COST_BASED - 192)) | (1 << (self::CONNECT_BY_ELIM_DUPS - 192)) | (1 << (self::CONNECT_BY_FILTERING - 192)) | (1 << (self::CONNECT_BY_ISCYCLE - 192)) | (1 << (self::CONNECT_BY_ISLEAF - 192)) | (1 << (self::CONNECT_BY_ROOT - 192)) | (1 << (self::CONNECT_TIME - 192)) | (1 << (self::CONSIDER - 192)) | (1 << (self::CONSISTENT - 192)) | (1 << (self::CONSTANT - 192)))) !== 0) || (((($_la - 256)) & ~0x3f) === 0 && ((1 << ($_la - 256)) & ((1 << (self::CONST - 256)) | (1 << (self::CONSTRAINT - 256)) | (1 << (self::CONSTRAINTS - 256)) | (1 << (self::CONSTRUCTOR - 256)) | (1 << (self::CONTAINER - 256)) | (1 << (self::CONTAINER_DATA - 256)) | (1 << (self::CONTAINERS - 256)) | (1 << (self::CONTENT - 256)) | (1 << (self::CONTENTS - 256)) | (1 << (self::CONTEXT - 256)) | (1 << (self::CONTINUE - 256)) | (1 << (self::CONTROLFILE - 256)) | (1 << (self::CON_UID_TO_ID - 256)) | (1 << (self::CONVERT - 256)) | (1 << (self::COOKIE - 256)) | (1 << (self::COPY - 256)) | (1 << (self::CORR_K - 256)) | (1 << (self::CORR_S - 256)) | (1 << (self::CORRUPTION - 256)) | (1 << (self::CORRUPT_XID_ALL - 256)) | (1 << (self::CORRUPT_XID - 256)) | (1 << (self::COS - 256)) | (1 << (self::COSH - 256)) | (1 << (self::COST - 256)) | (1 << (self::COST_XML_QUERY_REWRITE - 256)) | (1 << (self::COUNT - 256)) | (1 << (self::COVAR_POP - 256)) | (1 << (self::COVAR_SAMP - 256)) | (1 << (self::CPU_COSTING - 256)) | (1 << (self::CPU_PER_CALL - 256)) | (1 << (self::CPU_PER_SESSION - 256)) | (1 << (self::CRASH - 256)) | (1 << (self::CREATE_FILE_DEST - 256)) | (1 << (self::CREATE_STORED_OUTLINES - 256)) | (1 << (self::CREATION - 256)) | (1 << (self::CREDENTIAL - 256)) | (1 << (self::CRITICAL - 256)) | (1 << (self::CROSS - 256)) | (1 << (self::CROSSEDITION - 256)) | (1 << (self::CSCONVERT - 256)) | (1 << (self::CUBE_AJ - 256)) | (1 << (self::CUBE - 256)) | (1 << (self::CUBE_GB - 256)) | (1 << (self::CUBE_SJ - 256)) | (1 << (self::CUME_DISTM - 256)) | (1 << (self::CURRENT - 256)) | (1 << (self::CURRENT_DATE - 256)) | (1 << (self::CURRENT_SCHEMA - 256)) | (1 << (self::CURRENT_TIME - 256)) | (1 << (self::CURRENT_TIMESTAMP - 256)) | (1 << (self::CURRENT_USER - 256)) | (1 << (self::CURRENTV - 256)) | (1 << (self::CURSOR - 256)) | (1 << (self::CURSOR_SHARING_EXACT - 256)) | (1 << (self::CURSOR_SPECIFIC_SEGMENT - 256)) | (1 << (self::CUSTOMDATUM - 256)) | (1 << (self::CV - 256)) | (1 << (self::CYCLE - 256)) | (1 << (self::DANGLING - 256)) | (1 << (self::DATABASE - 256)) | (1 << (self::DATA - 256)) | (1 << (self::DATAFILE - 256)) | (1 << (self::DATAFILES - 256)))) !== 0) || (((($_la - 321)) & ~0x3f) === 0 && ((1 << ($_la - 321)) & ((1 << (self::DATAMOVEMENT - 321)) | (1 << (self::DATAOBJNO - 321)) | (1 << (self::DATAOBJ_TO_MAT_PARTITION - 321)) | (1 << (self::DATAOBJ_TO_PARTITION - 321)) | (1 << (self::DATAPUMP - 321)) | (1 << (self::DATA_SECURITY_REWRITE_LIMIT - 321)) | (1 << (self::DATE - 321)) | (1 << (self::DATE_MODE - 321)) | (1 << (self::DAY - 321)) | (1 << (self::DAYS - 321)) | (1 << (self::DBA - 321)) | (1 << (self::DBA_RECYCLEBIN - 321)) | (1 << (self::DBMS_STATS - 321)) | (1 << (self::DB_ROLE_CHANGE - 321)) | (1 << (self::DBTIMEZONE - 321)) | (1 << (self::DB_UNIQUE_NAME - 321)) | (1 << (self::DB_VERSION - 321)) | (1 << (self::DDL - 321)) | (1 << (self::DEALLOCATE - 321)) | (1 << (self::DEBUG - 321)) | (1 << (self::DEBUGGER - 321)) | (1 << (self::DEC - 321)) | (1 << (self::DECIMAL - 321)) | (1 << (self::DECLARE - 321)) | (1 << (self::DECOMPOSE - 321)) | (1 << (self::DECORRELATE - 321)) | (1 << (self::DECR - 321)) | (1 << (self::DECREMENT - 321)) | (1 << (self::DECRYPT - 321)) | (1 << (self::DEDUPLICATE - 321)) | (1 << (self::DEFAULT - 321)) | (1 << (self::DEFAULTS - 321)) | (1 << (self::DEFERRABLE - 321)) | (1 << (self::DEFERRED - 321)) | (1 << (self::DEFINED - 321)) | (1 << (self::DEFINE - 321)) | (1 << (self::DEFINER - 321)) | (1 << (self::DEGREE - 321)) | (1 << (self::DELAY - 321)) | (1 << (self::DELEGATE - 321)) | (1 << (self::DELETE_ALL - 321)) | (1 << (self::DELETE - 321)) | (1 << (self::DELETEXML - 321)) | (1 << (self::DEMAND - 321)) | (1 << (self::DENSE_RANKM - 321)) | (1 << (self::DEPENDENT - 321)) | (1 << (self::DEPTH - 321)) | (1 << (self::DEQUEUE - 321)) | (1 << (self::DEREF - 321)) | (1 << (self::DEREF_NO_REWRITE - 321)) | (1 << (self::DESTROY - 321)) | (1 << (self::DETACHED - 321)) | (1 << (self::DETERMINES - 321)) | (1 << (self::DETERMINISTIC - 321)) | (1 << (self::DICTIONARY - 321)) | (1 << (self::DIMENSION - 321)) | (1 << (self::DIMENSIONS - 321)) | (1 << (self::DIRECT_LOAD - 321)) | (1 << (self::DIRECTORY - 321)) | (1 << (self::DIRECT_PATH - 321)) | (1 << (self::DISABLE_ALL - 321)) | (1 << (self::DISABLE - 321)) | (1 << (self::DISABLE_PARALLEL_DML - 321)))) !== 0) || (((($_la - 385)) & ~0x3f) === 0 && ((1 << ($_la - 385)) & ((1 << (self::DISABLE_PRESET - 385)) | (1 << (self::DISABLE_RPKE - 385)) | (1 << (self::DISALLOW - 385)) | (1 << (self::DISASSOCIATE - 385)) | (1 << (self::DISCARD - 385)) | (1 << (self::DISCONNECT - 385)) | (1 << (self::DISK - 385)) | (1 << (self::DISKGROUP - 385)) | (1 << (self::DISKS - 385)) | (1 << (self::DISMOUNT - 385)) | (1 << (self::DISTINCT - 385)) | (1 << (self::DISTINGUISHED - 385)) | (1 << (self::DISTRIBUTED - 385)) | (1 << (self::DISTRIBUTE - 385)) | (1 << (self::DML - 385)) | (1 << (self::DML_UPDATE - 385)) | (1 << (self::DOCFIDELITY - 385)) | (1 << (self::DOCUMENT - 385)) | (1 << (self::DOMAIN_INDEX_FILTER - 385)) | (1 << (self::DOMAIN_INDEX_NO_SORT - 385)) | (1 << (self::DOMAIN_INDEX_SORT - 385)) | (1 << (self::DOUBLE - 385)) | (1 << (self::DOWNGRADE - 385)) | (1 << (self::DRIVING_SITE - 385)) | (1 << (self::DROP_COLUMN - 385)) | (1 << (self::DROP_GROUP - 385)) | (1 << (self::DSINTERVAL_UNCONSTRAINED - 385)) | (1 << (self::DST_UPGRADE_INSERT_CONV - 385)) | (1 << (self::DUMP - 385)) | (1 << (self::DUPLICATE - 385)) | (1 << (self::DV - 385)) | (1 << (self::DYNAMIC - 385)) | (1 << (self::DYNAMIC_SAMPLING - 385)) | (1 << (self::DYNAMIC_SAMPLING_EST_CDN - 385)) | (1 << (self::EACH - 385)) | (1 << (self::EDITIONABLE - 385)) | (1 << (self::EDITION - 385)) | (1 << (self::EDITIONING - 385)) | (1 << (self::EDITIONS - 385)) | (1 << (self::ELEMENT - 385)) | (1 << (self::ELIM_GROUPBY - 385)) | (1 << (self::ELIMINATE_JOIN - 385)) | (1 << (self::ELIMINATE_OBY - 385)) | (1 << (self::ELIMINATE_OUTER_JOIN - 385)) | (1 << (self::EM - 385)) | (1 << (self::EMPTY_BLOB - 385)) | (1 << (self::EMPTY_CLOB - 385)) | (1 << (self::EMPTY - 385)) | (1 << (self::ENABLE_ALL - 385)) | (1 << (self::ENABLE - 385)) | (1 << (self::ENABLE_PARALLEL_DML - 385)) | (1 << (self::ENABLE_PRESET - 385)) | (1 << (self::ENCODING - 385)) | (1 << (self::ENCRYPT - 385)) | (1 << (self::ENCRYPTION - 385)) | (1 << (self::END_OUTLINE_DATA - 385)) | (1 << (self::ENFORCED - 385)) | (1 << (self::ENFORCE - 385)))) !== 0) || (((($_la - 449)) & ~0x3f) === 0 && ((1 << ($_la - 449)) & ((1 << (self::ENQUEUE - 449)) | (1 << (self::ENTERPRISE - 449)) | (1 << (self::ENTITYESCAPING - 449)) | (1 << (self::ENTRY - 449)) | (1 << (self::EQUIPART - 449)) | (1 << (self::ERR - 449)) | (1 << (self::ERROR_ARGUMENT - 449)) | (1 << (self::ERROR - 449)) | (1 << (self::ERROR_ON_OVERLAP_TIME - 449)) | (1 << (self::ERRORS - 449)) | (1 << (self::ESCAPE - 449)) | (1 << (self::ESTIMATE - 449)) | (1 << (self::EVAL - 449)) | (1 << (self::EVALNAME - 449)) | (1 << (self::EVALUATE - 449)) | (1 << (self::EVALUATION - 449)) | (1 << (self::EVENTS - 449)) | (1 << (self::EVERY - 449)) | (1 << (self::EXCEPT - 449)) | (1 << (self::EXCEPTION - 449)) | (1 << (self::EXCEPTION_INIT - 449)) | (1 << (self::EXCEPTIONS - 449)) | (1 << (self::EXCHANGE - 449)) | (1 << (self::EXCLUDE - 449)) | (1 << (self::EXCLUDING - 449)) | (1 << (self::EXECUTE - 449)) | (1 << (self::EXEMPT - 449)) | (1 << (self::EXISTING - 449)) | (1 << (self::EXISTS - 449)) | (1 << (self::EXISTSNODE - 449)) | (1 << (self::EXIT - 449)) | (1 << (self::EXPAND_GSET_TO_UNION - 449)) | (1 << (self::EXPAND_TABLE - 449)) | (1 << (self::EXP - 449)) | (1 << (self::EXPIRE - 449)) | (1 << (self::EXPLAIN - 449)) | (1 << (self::EXPLOSION - 449)) | (1 << (self::EXPORT - 449)) | (1 << (self::EXPR_CORR_CHECK - 449)) | (1 << (self::EXPRESS - 449)) | (1 << (self::EXTENDS - 449)) | (1 << (self::EXTENT - 449)) | (1 << (self::EXTENTS - 449)) | (1 << (self::EXTERNAL - 449)) | (1 << (self::EXTERNALLY - 449)) | (1 << (self::EXTRACTCLOBXML - 449)) | (1 << (self::EXTRACT - 449)) | (1 << (self::EXTRACTVALUE - 449)) | (1 << (self::EXTRA - 449)) | (1 << (self::FACILITY - 449)) | (1 << (self::FACT - 449)) | (1 << (self::FACTOR - 449)) | (1 << (self::FACTORIZE_JOIN - 449)) | (1 << (self::FAILED - 449)) | (1 << (self::FAILED_LOGIN_ATTEMPTS - 449)) | (1 << (self::FAILGROUP - 449)) | (1 << (self::FAILOVER - 449)) | (1 << (self::FAILURE - 449)) | (1 << (self::FALSE - 449)) | (1 << (self::FAMILY - 449)) | (1 << (self::FAR - 449)) | (1 << (self::FAST - 449)) | (1 << (self::FASTSTART - 449)))) !== 0) || (((($_la - 513)) & ~0x3f) === 0 && ((1 << ($_la - 513)) & ((1 << (self::FBTSCAN - 513)) | (1 << (self::FEATURE_DETAILS - 513)) | (1 << (self::FEATURE_ID - 513)) | (1 << (self::FEATURE_SET - 513)) | (1 << (self::FEATURE_VALUE - 513)) | (1 << (self::FETCH - 513)) | (1 << (self::FILE - 513)) | (1 << (self::FILE_NAME_CONVERT - 513)) | (1 << (self::FILESYSTEM_LIKE_LOGGING - 513)) | (1 << (self::FILTER - 513)) | (1 << (self::FINAL - 513)) | (1 << (self::FINE - 513)) | (1 << (self::FINISH - 513)) | (1 << (self::FIRST - 513)) | (1 << (self::FIRSTM - 513)) | (1 << (self::FIRST_ROWS - 513)) | (1 << (self::FIRST_VALUE - 513)) | (1 << (self::FIXED_VIEW_DATA - 513)) | (1 << (self::FLAGGER - 513)) | (1 << (self::FLASHBACK - 513)) | (1 << (self::FLASH_CACHE - 513)) | (1 << (self::FLOAT - 513)) | (1 << (self::FLOB - 513)) | (1 << (self::FLOOR - 513)) | (1 << (self::FLUSH - 513)) | (1 << (self::FOLDER - 513)) | (1 << (self::FOLLOWING - 513)) | (1 << (self::FOLLOWS - 513)) | (1 << (self::FORALL - 513)) | (1 << (self::FORCE - 513)) | (1 << (self::FORCE_XML_QUERY_REWRITE - 513)) | (1 << (self::FOREIGN - 513)) | (1 << (self::FOREVER - 513)) | (1 << (self::FORMAT - 513)) | (1 << (self::FORWARD - 513)) | (1 << (self::FRAGMENT_NUMBER - 513)) | (1 << (self::FREELIST - 513)) | (1 << (self::FREELISTS - 513)) | (1 << (self::FREEPOOLS - 513)) | (1 << (self::FRESH - 513)) | (1 << (self::FROM_TZ - 513)) | (1 << (self::FULL - 513)) | (1 << (self::FULL_OUTER_JOIN_TO_OUTER - 513)) | (1 << (self::FUNCTION - 513)) | (1 << (self::FUNCTIONS - 513)) | (1 << (self::GATHER_OPTIMIZER_STATISTICS - 513)) | (1 << (self::GATHER_PLAN_STATISTICS - 513)) | (1 << (self::GBY_CONC_ROLLUP - 513)) | (1 << (self::GBY_PUSHDOWN - 513)) | (1 << (self::GENERATED - 513)) | (1 << (self::GET - 513)) | (1 << (self::GLOBAL - 513)) | (1 << (self::GLOBALLY - 513)) | (1 << (self::GLOBAL_NAME - 513)) | (1 << (self::GLOBAL_TOPIC_ENABLED - 513)) | (1 << (self::GROUP_BY - 513)) | (1 << (self::GROUP_ID - 513)) | (1 << (self::GROUPING - 513)) | (1 << (self::GROUPING_ID - 513)))) !== 0) || (((($_la - 577)) & ~0x3f) === 0 && ((1 << ($_la - 577)) & ((1 << (self::GROUPS - 577)) | (1 << (self::GUARANTEED - 577)) | (1 << (self::GUARANTEE - 577)) | (1 << (self::GUARD - 577)) | (1 << (self::HASH_AJ - 577)) | (1 << (self::HASH - 577)) | (1 << (self::HASHKEYS - 577)) | (1 << (self::HASH_SJ - 577)) | (1 << (self::HEADER - 577)) | (1 << (self::HEAP - 577)) | (1 << (self::HELP - 577)) | (1 << (self::HEXTORAW - 577)) | (1 << (self::HEXTOREF - 577)) | (1 << (self::HIDDEN_KEYWORD - 577)) | (1 << (self::HIDE - 577)) | (1 << (self::HIERARCHY - 577)) | (1 << (self::HIGH - 577)) | (1 << (self::HINTSET_BEGIN - 577)) | (1 << (self::HINTSET_END - 577)) | (1 << (self::HOT - 577)) | (1 << (self::HOUR - 577)) | (1 << (self::HWM_BROKERED - 577)) | (1 << (self::HYBRID - 577)) | (1 << (self::IDENTIFIER - 577)) | (1 << (self::IDENTITY - 577)) | (1 << (self::IDGENERATORS - 577)) | (1 << (self::ID - 577)) | (1 << (self::IDLE_TIME - 577)) | (1 << (self::IF - 577)) | (1 << (self::IGNORE - 577)) | (1 << (self::IGNORE_OPTIM_EMBEDDED_HINTS - 577)) | (1 << (self::IGNORE_ROW_ON_DUPKEY_INDEX - 577)) | (1 << (self::IGNORE_WHERE_CLAUSE - 577)) | (1 << (self::ILM - 577)) | (1 << (self::IMMEDIATE - 577)) | (1 << (self::IMPACT - 577)) | (1 << (self::IMPORT - 577)) | (1 << (self::INACTIVE - 577)) | (1 << (self::INCLUDE - 577)) | (1 << (self::INCLUDE_VERSION - 577)) | (1 << (self::INCLUDING - 577)) | (1 << (self::INCREMENTAL - 577)) | (1 << (self::INCREMENT - 577)) | (1 << (self::INCR - 577)) | (1 << (self::INDENT - 577)) | (1 << (self::INDEX_ASC - 577)) | (1 << (self::INDEX_COMBINE - 577)) | (1 << (self::INDEX_DESC - 577)) | (1 << (self::INDEXED - 577)) | (1 << (self::INDEXES - 577)) | (1 << (self::INDEX_FFS - 577)) | (1 << (self::INDEX_FILTER - 577)) | (1 << (self::INDEXING - 577)) | (1 << (self::INDEX_JOIN - 577)) | (1 << (self::INDEX_ROWS - 577)) | (1 << (self::INDEX_RRS - 577)) | (1 << (self::INDEX_RS_ASC - 577)) | (1 << (self::INDEX_RS_DESC - 577)) | (1 << (self::INDEX_RS - 577)) | (1 << (self::INDEX_SCAN - 577)) | (1 << (self::INDEX_SKIP_SCAN - 577)))) !== 0) || (((($_la - 641)) & ~0x3f) === 0 && ((1 << ($_la - 641)) & ((1 << (self::INDEX_SS_ASC - 641)) | (1 << (self::INDEX_SS_DESC - 641)) | (1 << (self::INDEX_SS - 641)) | (1 << (self::INDEX_STATS - 641)) | (1 << (self::INDEXTYPE - 641)) | (1 << (self::INDEXTYPES - 641)) | (1 << (self::INDICATOR - 641)) | (1 << (self::INDICES - 641)) | (1 << (self::INFINITE - 641)) | (1 << (self::INFORMATIONAL - 641)) | (1 << (self::INHERIT - 641)) | (1 << (self::INITCAP - 641)) | (1 << (self::INITIAL - 641)) | (1 << (self::INITIALIZED - 641)) | (1 << (self::INITIALLY - 641)) | (1 << (self::INITRANS - 641)) | (1 << (self::INLINE - 641)) | (1 << (self::INLINE_XMLTYPE_NT - 641)) | (1 << (self::INMEMORY - 641)) | (1 << (self::IN_MEMORY_METADATA - 641)) | (1 << (self::INMEMORY_PRUNING - 641)) | (1 << (self::INNER - 641)) | (1 << (self::INOUT - 641)) | (1 << (self::INPLACE - 641)) | (1 << (self::INSERTCHILDXMLAFTER - 641)) | (1 << (self::INSERTCHILDXMLBEFORE - 641)) | (1 << (self::INSERTCHILDXML - 641)) | (1 << (self::INSERTXMLAFTER - 641)) | (1 << (self::INSERTXMLBEFORE - 641)) | (1 << (self::INSTANCE - 641)) | (1 << (self::INSTANCES - 641)) | (1 << (self::INSTANTIABLE - 641)) | (1 << (self::INSTANTLY - 641)) | (1 << (self::INSTEAD - 641)) | (1 << (self::INSTR2 - 641)) | (1 << (self::INSTR4 - 641)) | (1 << (self::INSTRB - 641)) | (1 << (self::INSTRC - 641)) | (1 << (self::INSTR - 641)) | (1 << (self::INTEGER - 641)) | (1 << (self::INTERLEAVED - 641)) | (1 << (self::INTERMEDIATE - 641)) | (1 << (self::INTERNAL_CONVERT - 641)) | (1 << (self::INTERNAL_USE - 641)) | (1 << (self::INTERPRETED - 641)) | (1 << (self::INTERVAL - 641)) | (1 << (self::INT - 641)) | (1 << (self::INVALIDATE - 641)) | (1 << (self::INVISIBLE - 641)) | (1 << (self::IN_XQUERY - 641)) | (1 << (self::ISOLATION - 641)) | (1 << (self::ISOLATION_LEVEL - 641)) | (1 << (self::ITERATE - 641)) | (1 << (self::ITERATION_NUMBER - 641)) | (1 << (self::JAVA - 641)) | (1 << (self::JOB - 641)) | (1 << (self::JOIN - 641)) | (1 << (self::JSON_ARRAYAGG - 641)) | (1 << (self::JSON_ARRAY - 641)))) !== 0) || (((($_la - 705)) & ~0x3f) === 0 && ((1 << ($_la - 705)) & ((1 << (self::JSON_EQUAL - 705)) | (1 << (self::JSON_EXISTS2 - 705)) | (1 << (self::JSON_EXISTS - 705)) | (1 << (self::JSONGET - 705)) | (1 << (self::JSON - 705)) | (1 << (self::JSON_OBJECTAGG - 705)) | (1 << (self::JSON_OBJECT - 705)) | (1 << (self::JSONPARSE - 705)) | (1 << (self::JSON_QUERY - 705)) | (1 << (self::JSON_SERIALIZE - 705)) | (1 << (self::JSON_TABLE - 705)) | (1 << (self::JSON_TEXTCONTAINS2 - 705)) | (1 << (self::JSON_TEXTCONTAINS - 705)) | (1 << (self::JSON_VALUE - 705)) | (1 << (self::KEEP_DUPLICATES - 705)) | (1 << (self::KEEP - 705)) | (1 << (self::KERBEROS - 705)) | (1 << (self::KEY - 705)) | (1 << (self::KEY_LENGTH - 705)) | (1 << (self::KEYSIZE - 705)) | (1 << (self::KEYS - 705)) | (1 << (self::KEYSTORE - 705)) | (1 << (self::KILL - 705)) | (1 << (self::LABEL - 705)) | (1 << (self::LANGUAGE - 705)) | (1 << (self::LAST_DAY - 705)) | (1 << (self::LAST - 705)) | (1 << (self::LAST_VALUE - 705)) | (1 << (self::LATERAL - 705)) | (1 << (self::LAX - 705)) | (1 << (self::LAYER - 705)) | (1 << (self::LDAP_REGISTRATION_ENABLED - 705)) | (1 << (self::LDAP_REGISTRATION - 705)) | (1 << (self::LDAP_REG_SYNC_INTERVAL - 705)) | (1 << (self::LEADING - 705)) | (1 << (self::LEFT - 705)) | (1 << (self::LENGTH2 - 705)) | (1 << (self::LENGTH4 - 705)) | (1 << (self::LENGTHB - 705)) | (1 << (self::LENGTHC - 705)) | (1 << (self::LENGTH - 705)) | (1 << (self::LESS - 705)) | (1 << (self::LEVEL - 705)) | (1 << (self::LEVELS - 705)) | (1 << (self::LIBRARY - 705)) | (1 << (self::LIFECYCLE - 705)) | (1 << (self::LIFE - 705)) | (1 << (self::LIFETIME - 705)) | (1 << (self::LIKE2 - 705)) | (1 << (self::LIKE4 - 705)) | (1 << (self::LIKEC - 705)) | (1 << (self::LIKE_EXPAND - 705)) | (1 << (self::LIMIT - 705)) | (1 << (self::LINEAR - 705)) | (1 << (self::LINK - 705)) | (1 << (self::LIST - 705)) | (1 << (self::LN - 705)) | (1 << (self::LNNVL - 705)) | (1 << (self::LOAD - 705)) | (1 << (self::LOB - 705)) | (1 << (self::LOBNVL - 705)) | (1 << (self::LOBS - 705)) | (1 << (self::LOCAL_INDEXES - 705)))) !== 0) || (((($_la - 769)) & ~0x3f) === 0 && ((1 << ($_la - 769)) & ((1 << (self::LOCAL - 769)) | (1 << (self::LOCALTIME - 769)) | (1 << (self::LOCALTIMESTAMP - 769)) | (1 << (self::LOCATION - 769)) | (1 << (self::LOCATOR - 769)) | (1 << (self::LOCKED - 769)) | (1 << (self::LOCKING - 769)) | (1 << (self::LOGFILE - 769)) | (1 << (self::LOGFILES - 769)) | (1 << (self::LOGGING - 769)) | (1 << (self::LOGICAL - 769)) | (1 << (self::LOGICAL_READS_PER_CALL - 769)) | (1 << (self::LOGICAL_READS_PER_SESSION - 769)) | (1 << (self::LOG - 769)) | (1 << (self::LOGMINING - 769)) | (1 << (self::LOGOFF - 769)) | (1 << (self::LOGON - 769)) | (1 << (self::LOG_READ_ONLY_VIOLATIONS - 769)) | (1 << (self::LONG - 769)) | (1 << (self::LOOP - 769)) | (1 << (self::LOWER - 769)) | (1 << (self::LOW - 769)) | (1 << (self::LPAD - 769)) | (1 << (self::LTRIM - 769)) | (1 << (self::MAIN - 769)) | (1 << (self::MAKE_REF - 769)) | (1 << (self::MANAGED - 769)) | (1 << (self::MANAGE - 769)) | (1 << (self::MANAGEMENT - 769)) | (1 << (self::MANAGER - 769)) | (1 << (self::MANUAL - 769)) | (1 << (self::MAP - 769)) | (1 << (self::MAPPING - 769)) | (1 << (self::MASTER - 769)) | (1 << (self::MATCHED - 769)) | (1 << (self::MATCHES - 769)) | (1 << (self::MATCH - 769)) | (1 << (self::MATCH_NUMBER - 769)) | (1 << (self::MATCH_RECOGNIZE - 769)) | (1 << (self::MATERIALIZED - 769)) | (1 << (self::MATERIALIZE - 769)) | (1 << (self::MAXARCHLOGS - 769)) | (1 << (self::MAXDATAFILES - 769)) | (1 << (self::MAXEXTENTS - 769)) | (1 << (self::MAXIMIZE - 769)) | (1 << (self::MAXINSTANCES - 769)) | (1 << (self::MAXLOGFILES - 769)) | (1 << (self::MAXLOGHISTORY - 769)) | (1 << (self::MAXLOGMEMBERS - 769)) | (1 << (self::MAX_SHARED_TEMP_SIZE - 769)) | (1 << (self::MAXSIZE - 769)) | (1 << (self::MAXTRANS - 769)) | (1 << (self::MAXVALUE - 769)) | (1 << (self::MEASURE - 769)) | (1 << (self::MEASURES - 769)) | (1 << (self::MEDIUM - 769)) | (1 << (self::MEMBER - 769)) | (1 << (self::MEMCOMPRESS - 769)) | (1 << (self::MEMORY - 769)) | (1 << (self::MERGEACTIONS - 769)) | (1 << (self::MERGE_AJ - 769)) | (1 << (self::MERGE_CONST_ON - 769)) | (1 << (self::MERGE - 769)))) !== 0) || (((($_la - 833)) & ~0x3f) === 0 && ((1 << ($_la - 833)) & ((1 << (self::MERGE_SJ - 833)) | (1 << (self::METADATA - 833)) | (1 << (self::METHOD - 833)) | (1 << (self::MIGRATE - 833)) | (1 << (self::MIGRATION - 833)) | (1 << (self::MINEXTENTS - 833)) | (1 << (self::MINIMIZE - 833)) | (1 << (self::MINIMUM - 833)) | (1 << (self::MINING - 833)) | (1 << (self::MINUS_NULL - 833)) | (1 << (self::MINUTE - 833)) | (1 << (self::MINVALUE - 833)) | (1 << (self::MIRRORCOLD - 833)) | (1 << (self::MIRRORHOT - 833)) | (1 << (self::MIRROR - 833)) | (1 << (self::MLSLABEL - 833)) | (1 << (self::MODEL_COMPILE_SUBQUERY - 833)) | (1 << (self::MODEL_DONTVERIFY_UNIQUENESS - 833)) | (1 << (self::MODEL_DYNAMIC_SUBQUERY - 833)) | (1 << (self::MODEL_MIN_ANALYSIS - 833)) | (1 << (self::MODEL - 833)) | (1 << (self::MODEL_NB - 833)) | (1 << (self::MODEL_NO_ANALYSIS - 833)) | (1 << (self::MODEL_PBY - 833)) | (1 << (self::MODEL_PUSH_REF - 833)) | (1 << (self::MODEL_SV - 833)) | (1 << (self::MODIFICATION - 833)) | (1 << (self::MODIFY_COLUMN_TYPE - 833)) | (1 << (self::MODIFY - 833)) | (1 << (self::MOD - 833)) | (1 << (self::MODULE - 833)) | (1 << (self::MONITORING - 833)) | (1 << (self::MONITOR - 833)) | (1 << (self::MONTH - 833)) | (1 << (self::MONTHS_BETWEEN - 833)) | (1 << (self::MONTHS - 833)) | (1 << (self::MOUNT - 833)) | (1 << (self::MOUNTPATH - 833)) | (1 << (self::MOVEMENT - 833)) | (1 << (self::MOVE - 833)) | (1 << (self::MULTIDIMENSIONAL - 833)) | (1 << (self::MULTISET - 833)) | (1 << (self::MV_MERGE - 833)) | (1 << (self::NAMED - 833)) | (1 << (self::NAME - 833)) | (1 << (self::NAMESPACE - 833)) | (1 << (self::NAN - 833)) | (1 << (self::NANVL - 833)) | (1 << (self::NATIONAL - 833)) | (1 << (self::NATIVE_FULL_OUTER_JOIN - 833)) | (1 << (self::NATIVE - 833)) | (1 << (self::NATURAL - 833)) | (1 << (self::NAV - 833)) | (1 << (self::NCHAR_CS - 833)) | (1 << (self::NCHAR - 833)) | (1 << (self::NCHR - 833)) | (1 << (self::NCLOB - 833)) | (1 << (self::NEEDED - 833)) | (1 << (self::NEG - 833)) | (1 << (self::NESTED - 833)) | (1 << (self::NESTED_TABLE_FAST_INSERT - 833)))) !== 0) || (((($_la - 897)) & ~0x3f) === 0 && ((1 << ($_la - 897)) & ((1 << (self::NESTED_TABLE_GET_REFS - 897)) | (1 << (self::NESTED_TABLE_ID - 897)) | (1 << (self::NESTED_TABLE_SET_REFS - 897)) | (1 << (self::NESTED_TABLE_SET_SETID - 897)) | (1 << (self::NETWORK - 897)) | (1 << (self::NEVER - 897)) | (1 << (self::NEW - 897)) | (1 << (self::NEW_TIME - 897)) | (1 << (self::NEXT_DAY - 897)) | (1 << (self::NEXT - 897)) | (1 << (self::NL_AJ - 897)) | (1 << (self::NLJ_BATCHING - 897)) | (1 << (self::NLJ_INDEX_FILTER - 897)) | (1 << (self::NLJ_INDEX_SCAN - 897)) | (1 << (self::NLJ_PREFETCH - 897)) | (1 << (self::NLS_CALENDAR - 897)) | (1 << (self::NLS_CHARACTERSET - 897)) | (1 << (self::NLS_CHARSET_DECL_LEN - 897)) | (1 << (self::NLS_CHARSET_ID - 897)) | (1 << (self::NLS_CHARSET_NAME - 897)) | (1 << (self::NLS_COMP - 897)) | (1 << (self::NLS_CURRENCY - 897)) | (1 << (self::NLS_DATE_FORMAT - 897)) | (1 << (self::NLS_DATE_LANGUAGE - 897)) | (1 << (self::NLS_INITCAP - 897)) | (1 << (self::NLS_ISO_CURRENCY - 897)) | (1 << (self::NL_SJ - 897)) | (1 << (self::NLS_LANG - 897)) | (1 << (self::NLS_LANGUAGE - 897)) | (1 << (self::NLS_LENGTH_SEMANTICS - 897)) | (1 << (self::NLS_LOWER - 897)) | (1 << (self::NLS_NCHAR_CONV_EXCP - 897)) | (1 << (self::NLS_NUMERIC_CHARACTERS - 897)) | (1 << (self::NLS_SORT - 897)) | (1 << (self::NLSSORT - 897)) | (1 << (self::NLS_SPECIAL_CHARS - 897)) | (1 << (self::NLS_TERRITORY - 897)) | (1 << (self::NLS_UPPER - 897)) | (1 << (self::NO_ACCESS - 897)) | (1 << (self::NO_ADAPTIVE_PLAN - 897)) | (1 << (self::NO_ANSI_REARCH - 897)) | (1 << (self::NOAPPEND - 897)) | (1 << (self::NOARCHIVELOG - 897)) | (1 << (self::NOAUDIT - 897)) | (1 << (self::NO_AUTO_REOPTIMIZE - 897)) | (1 << (self::NO_BASETABLE_MULTIMV_REWRITE - 897)) | (1 << (self::NO_BATCH_TABLE_ACCESS_BY_ROWID - 897)) | (1 << (self::NO_BIND_AWARE - 897)) | (1 << (self::NO_BUFFER - 897)) | (1 << (self::NOCACHE - 897)) | (1 << (self::NO_CARTESIAN - 897)) | (1 << (self::NO_CHECK_ACL_REWRITE - 897)) | (1 << (self::NO_CLUSTER_BY_ROWID - 897)) | (1 << (self::NO_CLUSTERING - 897)) | (1 << (self::NO_COALESCE_SQ - 897)) | (1 << (self::NO_COMMON_DATA - 897)) | (1 << (self::NO_CONNECT_BY_CB_WHR_ONLY - 897)) | (1 << (self::NO_CONNECT_BY_COMBINE_SW - 897)) | (1 << (self::NO_CONNECT_BY_COST_BASED - 897)) | (1 << (self::NO_CONNECT_BY_ELIM_DUPS - 897)) | (1 << (self::NO_CONNECT_BY_FILTERING - 897)) | (1 << (self::NOCOPY - 897)) | (1 << (self::NO_COST_XML_QUERY_REWRITE - 897)))) !== 0) || (((($_la - 961)) & ~0x3f) === 0 && ((1 << ($_la - 961)) & ((1 << (self::NO_CPU_COSTING - 961)) | (1 << (self::NOCPU_COSTING - 961)) | (1 << (self::NOCYCLE - 961)) | (1 << (self::NO_DATA_SECURITY_REWRITE - 961)) | (1 << (self::NO_DECORRELATE - 961)) | (1 << (self::NODELAY - 961)) | (1 << (self::NO_DOMAIN_INDEX_FILTER - 961)) | (1 << (self::NO_DST_UPGRADE_INSERT_CONV - 961)) | (1 << (self::NO_ELIM_GROUPBY - 961)) | (1 << (self::NO_ELIMINATE_JOIN - 961)) | (1 << (self::NO_ELIMINATE_OBY - 961)) | (1 << (self::NO_ELIMINATE_OUTER_JOIN - 961)) | (1 << (self::NOENTITYESCAPING - 961)) | (1 << (self::NO_EXPAND_GSET_TO_UNION - 961)) | (1 << (self::NO_EXPAND - 961)) | (1 << (self::NO_EXPAND_TABLE - 961)) | (1 << (self::NO_FACT - 961)) | (1 << (self::NO_FACTORIZE_JOIN - 961)) | (1 << (self::NO_FILTERING - 961)) | (1 << (self::NOFORCE - 961)) | (1 << (self::NO_FULL_OUTER_JOIN_TO_OUTER - 961)) | (1 << (self::NO_GATHER_OPTIMIZER_STATISTICS - 961)) | (1 << (self::NO_GBY_PUSHDOWN - 961)) | (1 << (self::NOGUARANTEE - 961)) | (1 << (self::NO_INDEX_FFS - 961)) | (1 << (self::NO_INDEX - 961)) | (1 << (self::NO_INDEX_SS - 961)) | (1 << (self::NO_INMEMORY - 961)) | (1 << (self::NO_INMEMORY_PRUNING - 961)) | (1 << (self::NOKEEP - 961)) | (1 << (self::NO_LOAD - 961)) | (1 << (self::NOLOCAL - 961)) | (1 << (self::NOLOGGING - 961)) | (1 << (self::NOMAPPING - 961)) | (1 << (self::NOMAXVALUE - 961)) | (1 << (self::NO_MERGE - 961)) | (1 << (self::NOMINIMIZE - 961)) | (1 << (self::NOMINVALUE - 961)) | (1 << (self::NO_MODEL_PUSH_REF - 961)) | (1 << (self::NO_MONITORING - 961)) | (1 << (self::NOMONITORING - 961)) | (1 << (self::NO_MONITOR - 961)) | (1 << (self::NO_MULTIMV_REWRITE - 961)) | (1 << (self::NO_NATIVE_FULL_OUTER_JOIN - 961)) | (1 << (self::NONBLOCKING - 961)) | (1 << (self::NONEDITIONABLE - 961)) | (1 << (self::NONE - 961)) | (1 << (self::NO_NLJ_BATCHING - 961)) | (1 << (self::NO_NLJ_PREFETCH - 961)) | (1 << (self::NO - 961)) | (1 << (self::NONSCHEMA - 961)) | (1 << (self::NO_OBJECT_LINK - 961)) | (1 << (self::NOORDER - 961)) | (1 << (self::NO_ORDER_ROLLUPS - 961)) | (1 << (self::NO_OUTER_JOIN_TO_ANTI - 961)) | (1 << (self::NO_OUTER_JOIN_TO_INNER - 961)) | (1 << (self::NOOVERRIDE - 961)) | (1 << (self::NO_PARALLEL_INDEX - 961)) | (1 << (self::NOPARALLEL_INDEX - 961)) | (1 << (self::NO_PARALLEL - 961)) | (1 << (self::NOPARALLEL - 961)) | (1 << (self::NO_PARTIAL_COMMIT - 961)) | (1 << (self::NO_PARTIAL_JOIN - 961)) | (1 << (self::NO_PARTIAL_ROLLUP_PUSHDOWN - 961)))) !== 0) || (((($_la - 1025)) & ~0x3f) === 0 && ((1 << ($_la - 1025)) & ((1 << (self::NOPARTITION - 1025)) | (1 << (self::NO_PLACE_DISTINCT - 1025)) | (1 << (self::NO_PLACE_GROUP_BY - 1025)) | (1 << (self::NO_PQ_CONCURRENT_UNION - 1025)) | (1 << (self::NO_PQ_MAP - 1025)) | (1 << (self::NO_PQ_REPLICATE - 1025)) | (1 << (self::NO_PQ_SKEW - 1025)) | (1 << (self::NO_PRUNE_GSETS - 1025)) | (1 << (self::NO_PULL_PRED - 1025)) | (1 << (self::NO_PUSH_PRED - 1025)) | (1 << (self::NO_PUSH_SUBQ - 1025)) | (1 << (self::NO_PX_FAULT_TOLERANCE - 1025)) | (1 << (self::NO_PX_JOIN_FILTER - 1025)) | (1 << (self::NO_QKN_BUFF - 1025)) | (1 << (self::NO_QUERY_TRANSFORMATION - 1025)) | (1 << (self::NO_REF_CASCADE - 1025)) | (1 << (self::NORELOCATE - 1025)) | (1 << (self::NORELY - 1025)) | (1 << (self::NOREPAIR - 1025)) | (1 << (self::NOREPLAY - 1025)) | (1 << (self::NORESETLOGS - 1025)) | (1 << (self::NO_RESULT_CACHE - 1025)) | (1 << (self::NOREVERSE - 1025)) | (1 << (self::NO_REWRITE - 1025)) | (1 << (self::NOREWRITE - 1025)) | (1 << (self::NORMAL - 1025)) | (1 << (self::NO_ROOT_SW_FOR_LOCAL - 1025)) | (1 << (self::NOROWDEPENDENCIES - 1025)) | (1 << (self::NOSCHEMACHECK - 1025)) | (1 << (self::NOSEGMENT - 1025)) | (1 << (self::NO_SEMIJOIN - 1025)) | (1 << (self::NO_SEMI_TO_INNER - 1025)) | (1 << (self::NO_SET_TO_JOIN - 1025)) | (1 << (self::NOSORT - 1025)) | (1 << (self::NO_SQL_TRANSLATION - 1025)) | (1 << (self::NO_SQL_TUNE - 1025)) | (1 << (self::NO_STAR_TRANSFORMATION - 1025)) | (1 << (self::NO_STATEMENT_QUEUING - 1025)) | (1 << (self::NO_STATS_GSETS - 1025)) | (1 << (self::NOSTRICT - 1025)) | (1 << (self::NO_SUBQUERY_PRUNING - 1025)) | (1 << (self::NO_SUBSTRB_PAD - 1025)) | (1 << (self::NO_SWAP_JOIN_INPUTS - 1025)) | (1 << (self::NOSWITCH - 1025)) | (1 << (self::NO_TABLE_LOOKUP_BY_NL - 1025)) | (1 << (self::NO_TEMP_TABLE - 1025)) | (1 << (self::NOTHING - 1025)) | (1 << (self::NOTIFICATION - 1025)) | (1 << (self::NOT - 1025)) | (1 << (self::NO_TRANSFORM_DISTINCT_AGG - 1025)) | (1 << (self::NO_UNNEST - 1025)) | (1 << (self::NO_USE_CUBE - 1025)) | (1 << (self::NO_USE_HASH_AGGREGATION - 1025)) | (1 << (self::NO_USE_HASH_GBY_FOR_PUSHDOWN - 1025)) | (1 << (self::NO_USE_HASH - 1025)) | (1 << (self::NO_USE_INVISIBLE_INDEXES - 1025)) | (1 << (self::NO_USE_MERGE - 1025)) | (1 << (self::NO_USE_NL - 1025)) | (1 << (self::NO_USE_VECTOR_AGGREGATION - 1025)) | (1 << (self::NOVALIDATE - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_DIMS - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_FACT - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM - 1025)))) !== 0) || (((($_la - 1089)) & ~0x3f) === 0 && ((1 << ($_la - 1089)) & ((1 << (self::NO_XDB_FASTPATH_INSERT - 1089)) | (1 << (self::NO_XML_DML_REWRITE - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE_IN_SELECT - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE - 1089)) | (1 << (self::NO_XML_QUERY_REWRITE - 1089)) | (1 << (self::NO_ZONEMAP - 1089)) | (1 << (self::NTH_VALUE - 1089)) | (1 << (self::NULLIF - 1089)) | (1 << (self::NULL_ - 1089)) | (1 << (self::NULLS - 1089)) | (1 << (self::NUMBER - 1089)) | (1 << (self::NUMERIC - 1089)) | (1 << (self::NUM_INDEX_KEYS - 1089)) | (1 << (self::NUMTODSINTERVAL - 1089)) | (1 << (self::NUMTOYMINTERVAL - 1089)) | (1 << (self::NVARCHAR2 - 1089)) | (1 << (self::NVL2 - 1089)) | (1 << (self::OBJECT2XML - 1089)) | (1 << (self::OBJECT - 1089)) | (1 << (self::OBJ_ID - 1089)) | (1 << (self::OBJNO - 1089)) | (1 << (self::OBJNO_REUSE - 1089)) | (1 << (self::OCCURENCES - 1089)) | (1 << (self::OFFLINE - 1089)) | (1 << (self::OFF - 1089)) | (1 << (self::OFFSET - 1089)) | (1 << (self::OIDINDEX - 1089)) | (1 << (self::OID - 1089)) | (1 << (self::OLAP - 1089)) | (1 << (self::OLD - 1089)) | (1 << (self::OLD_PUSH_PRED - 1089)) | (1 << (self::OLS - 1089)) | (1 << (self::OLTP - 1089)) | (1 << (self::OMIT - 1089)) | (1 << (self::ONE - 1089)) | (1 << (self::ONLINE - 1089)) | (1 << (self::ONLY - 1089)) | (1 << (self::OPAQUE - 1089)) | (1 << (self::OPAQUE_TRANSFORM - 1089)) | (1 << (self::OPAQUE_XCANONICAL - 1089)) | (1 << (self::OPCODE - 1089)) | (1 << (self::OPEN - 1089)) | (1 << (self::OPERATIONS - 1089)) | (1 << (self::OPERATOR - 1089)) | (1 << (self::OPT_ESTIMATE - 1089)) | (1 << (self::OPTIMAL - 1089)) | (1 << (self::OPTIMIZE - 1089)) | (1 << (self::OPTIMIZER_FEATURES_ENABLE - 1089)) | (1 << (self::OPTIMIZER_GOAL - 1089)) | (1 << (self::OPT_PARAM - 1089)) | (1 << (self::ORA_BRANCH - 1089)) | (1 << (self::ORA_CHECK_ACL - 1089)) | (1 << (self::ORA_CHECK_PRIVILEGE - 1089)) | (1 << (self::ORA_CLUSTERING - 1089)) | (1 << (self::ORADATA - 1089)) | (1 << (self::ORADEBUG - 1089)) | (1 << (self::ORA_DST_AFFECTED - 1089)) | (1 << (self::ORA_DST_CONVERT - 1089)) | (1 << (self::ORA_DST_ERROR - 1089)) | (1 << (self::ORA_GET_ACLIDS - 1089)))) !== 0) || (((($_la - 1153)) & ~0x3f) === 0 && ((1 << ($_la - 1153)) & ((1 << (self::ORA_GET_PRIVILEGES - 1153)) | (1 << (self::ORA_HASH - 1153)) | (1 << (self::ORA_INVOKING_USERID - 1153)) | (1 << (self::ORA_INVOKING_USER - 1153)) | (1 << (self::ORA_INVOKING_XS_USER_GUID - 1153)) | (1 << (self::ORA_INVOKING_XS_USER - 1153)) | (1 << (self::ORA_RAWCOMPARE - 1153)) | (1 << (self::ORA_RAWCONCAT - 1153)) | (1 << (self::ORA_ROWSCN - 1153)) | (1 << (self::ORA_ROWSCN_RAW - 1153)) | (1 << (self::ORA_ROWVERSION - 1153)) | (1 << (self::ORA_TABVERSION - 1153)) | (1 << (self::ORA_WRITE_TIME - 1153)) | (1 << (self::ORDERED - 1153)) | (1 << (self::ORDERED_PREDICATES - 1153)) | (1 << (self::ORDINALITY - 1153)) | (1 << (self::OR_EXPAND - 1153)) | (1 << (self::ORGANIZATION - 1153)) | (1 << (self::OR_PREDICATES - 1153)) | (1 << (self::OSERROR - 1153)) | (1 << (self::OTHER - 1153)) | (1 << (self::OUTER_JOIN_TO_ANTI - 1153)) | (1 << (self::OUTER_JOIN_TO_INNER - 1153)) | (1 << (self::OUTER - 1153)) | (1 << (self::OUTLINE_LEAF - 1153)) | (1 << (self::OUTLINE - 1153)) | (1 << (self::OUT_OF_LINE - 1153)) | (1 << (self::OUT - 1153)) | (1 << (self::OVERFLOW_NOMOVE - 1153)) | (1 << (self::OVERFLOW - 1153)) | (1 << (self::OVERLAPS - 1153)) | (1 << (self::OVER - 1153)) | (1 << (self::OVERRIDING - 1153)) | (1 << (self::OWNER - 1153)) | (1 << (self::OWNERSHIP - 1153)) | (1 << (self::OWN - 1153)) | (1 << (self::PACKAGE - 1153)) | (1 << (self::PACKAGES - 1153)) | (1 << (self::PARALLEL_ENABLE - 1153)) | (1 << (self::PARALLEL_INDEX - 1153)) | (1 << (self::PARALLEL - 1153)) | (1 << (self::PARAMETERS - 1153)) | (1 << (self::PARAM - 1153)) | (1 << (self::PARENT - 1153)) | (1 << (self::PARITY - 1153)) | (1 << (self::PARTIAL_JOIN - 1153)) | (1 << (self::PARTIALLY - 1153)) | (1 << (self::PARTIAL - 1153)) | (1 << (self::PARTIAL_ROLLUP_PUSHDOWN - 1153)) | (1 << (self::PARTITION_HASH - 1153)) | (1 << (self::PARTITION_LIST - 1153)) | (1 << (self::PARTITION - 1153)) | (1 << (self::PARTITION_RANGE - 1153)) | (1 << (self::PARTITIONS - 1153)) | (1 << (self::PARTNUMINST - 1153)) | (1 << (self::PASSING - 1153)) | (1 << (self::PASSWORD_GRACE_TIME - 1153)) | (1 << (self::PASSWORD_LIFE_TIME - 1153)) | (1 << (self::PASSWORD_LOCK_TIME - 1153)) | (1 << (self::PASSWORD - 1153)) | (1 << (self::PASSWORD_REUSE_MAX - 1153)))) !== 0) || (((($_la - 1217)) & ~0x3f) === 0 && ((1 << ($_la - 1217)) & ((1 << (self::PASSWORD_REUSE_TIME - 1217)) | (1 << (self::PASSWORD_VERIFY_FUNCTION - 1217)) | (1 << (self::PAST - 1217)) | (1 << (self::PATCH - 1217)) | (1 << (self::PATH - 1217)) | (1 << (self::PATH_PREFIX - 1217)) | (1 << (self::PATHS - 1217)) | (1 << (self::PATTERN - 1217)) | (1 << (self::PBL_HS_BEGIN - 1217)) | (1 << (self::PBL_HS_END - 1217)) | (1 << (self::PCTINCREASE - 1217)) | (1 << (self::PCTTHRESHOLD - 1217)) | (1 << (self::PCTUSED - 1217)) | (1 << (self::PCTVERSION - 1217)) | (1 << (self::PENDING - 1217)) | (1 << (self::PERCENT_KEYWORD - 1217)) | (1 << (self::PERCENT_RANKM - 1217)) | (1 << (self::PERFORMANCE - 1217)) | (1 << (self::PERIOD_KEYWORD - 1217)) | (1 << (self::PERMANENT - 1217)) | (1 << (self::PERMISSION - 1217)) | (1 << (self::PERMUTE - 1217)) | (1 << (self::PER - 1217)) | (1 << (self::PFILE - 1217)) | (1 << (self::PHYSICAL - 1217)) | (1 << (self::PIKEY - 1217)) | (1 << (self::PIPELINED - 1217)) | (1 << (self::PIV_GB - 1217)) | (1 << (self::PIVOT - 1217)) | (1 << (self::PIV_SSF - 1217)) | (1 << (self::PLACE_DISTINCT - 1217)) | (1 << (self::PLACE_GROUP_BY - 1217)) | (1 << (self::PLAN - 1217)) | (1 << (self::PLSCOPE_SETTINGS - 1217)) | (1 << (self::PLS_INTEGER - 1217)) | (1 << (self::PLSQL_CCFLAGS - 1217)) | (1 << (self::PLSQL_CODE_TYPE - 1217)) | (1 << (self::PLSQL_DEBUG - 1217)) | (1 << (self::PLSQL_OPTIMIZE_LEVEL - 1217)) | (1 << (self::PLSQL_WARNINGS - 1217)) | (1 << (self::PLUGGABLE - 1217)) | (1 << (self::POINT - 1217)) | (1 << (self::POLICY - 1217)) | (1 << (self::POOL_16K - 1217)) | (1 << (self::POOL_2K - 1217)) | (1 << (self::POOL_32K - 1217)) | (1 << (self::POOL_4K - 1217)) | (1 << (self::POOL_8K - 1217)) | (1 << (self::POSITIVEN - 1217)) | (1 << (self::POSITIVE - 1217)) | (1 << (self::POST_TRANSACTION - 1217)) | (1 << (self::POWERMULTISET_BY_CARDINALITY - 1217)) | (1 << (self::POWERMULTISET - 1217)) | (1 << (self::POWER - 1217)) | (1 << (self::PQ_CONCURRENT_UNION - 1217)) | (1 << (self::PQ_DISTRIBUTE - 1217)))) !== 0) || (((($_la - 1281)) & ~0x3f) === 0 && ((1 << ($_la - 1281)) & ((1 << (self::PQ_DISTRIBUTE_WINDOW - 1281)) | (1 << (self::PQ_FILTER - 1281)) | (1 << (self::PQ_MAP - 1281)) | (1 << (self::PQ_NOMAP - 1281)) | (1 << (self::PQ_REPLICATE - 1281)) | (1 << (self::PQ_SKEW - 1281)) | (1 << (self::PRAGMA - 1281)) | (1 << (self::PREBUILT - 1281)) | (1 << (self::PRECEDES - 1281)) | (1 << (self::PRECEDING - 1281)) | (1 << (self::PRECISION - 1281)) | (1 << (self::PRECOMPUTE_SUBQUERY - 1281)) | (1 << (self::PREDICATE_REORDERS - 1281)) | (1 << (self::PRELOAD - 1281)) | (1 << (self::PREPARE - 1281)) | (1 << (self::PRESENTNNV - 1281)) | (1 << (self::PRESENT - 1281)) | (1 << (self::PRESENTV - 1281)) | (1 << (self::PRESERVE_OID - 1281)) | (1 << (self::PRESERVE - 1281)) | (1 << (self::PRETTY - 1281)) | (1 << (self::PREVIOUS - 1281)) | (1 << (self::PREV - 1281)) | (1 << (self::PRIMARY - 1281)) | (1 << (self::PRINTBLOBTOCLOB - 1281)) | (1 << (self::PRIORITY - 1281)) | (1 << (self::PRIOR - 1281)) | (1 << (self::PRIVATE - 1281)) | (1 << (self::PRIVATE_SGA - 1281)) | (1 << (self::PRIVILEGED - 1281)) | (1 << (self::PRIVILEGE - 1281)) | (1 << (self::PRIVILEGES - 1281)) | (1 << (self::PROCEDURAL - 1281)) | (1 << (self::PROCEDURE - 1281)) | (1 << (self::PROCESS - 1281)) | (1 << (self::PROFILE - 1281)) | (1 << (self::PROGRAM - 1281)) | (1 << (self::PROJECT - 1281)) | (1 << (self::PROPAGATE - 1281)) | (1 << (self::PROTECTED - 1281)) | (1 << (self::PROTECTION - 1281)) | (1 << (self::PROXY - 1281)) | (1 << (self::PRUNING - 1281)) | (1 << (self::PULL_PRED - 1281)) | (1 << (self::PURGE - 1281)) | (1 << (self::PUSH_PRED - 1281)) | (1 << (self::PUSH_SUBQ - 1281)) | (1 << (self::PX_FAULT_TOLERANCE - 1281)) | (1 << (self::PX_GRANULE - 1281)) | (1 << (self::PX_JOIN_FILTER - 1281)) | (1 << (self::QB_NAME - 1281)) | (1 << (self::QUERY_BLOCK - 1281)) | (1 << (self::QUERY - 1281)) | (1 << (self::QUEUE_CURR - 1281)) | (1 << (self::QUEUE - 1281)) | (1 << (self::QUEUE_ROWP - 1281)) | (1 << (self::QUIESCE - 1281)) | (1 << (self::QUORUM - 1281)) | (1 << (self::QUOTA - 1281)) | (1 << (self::RAISE - 1281)) | (1 << (self::RANDOM_LOCAL - 1281)) | (1 << (self::RANDOM - 1281)) | (1 << (self::RANGE - 1281)))) !== 0) || (((($_la - 1345)) & ~0x3f) === 0 && ((1 << ($_la - 1345)) & ((1 << (self::RANKM - 1345)) | (1 << (self::RAPIDLY - 1345)) | (1 << (self::RAW - 1345)) | (1 << (self::RAWTOHEX - 1345)) | (1 << (self::RAWTONHEX - 1345)) | (1 << (self::RBA - 1345)) | (1 << (self::RBO_OUTLINE - 1345)) | (1 << (self::RDBA - 1345)) | (1 << (self::READ - 1345)) | (1 << (self::READS - 1345)) | (1 << (self::REALM - 1345)) | (1 << (self::REAL - 1345)) | (1 << (self::REBALANCE - 1345)) | (1 << (self::REBUILD - 1345)) | (1 << (self::RECORD - 1345)) | (1 << (self::RECORDS_PER_BLOCK - 1345)) | (1 << (self::RECOVERABLE - 1345)) | (1 << (self::RECOVER - 1345)) | (1 << (self::RECOVERY - 1345)) | (1 << (self::RECYCLEBIN - 1345)) | (1 << (self::RECYCLE - 1345)) | (1 << (self::REDACTION - 1345)) | (1 << (self::REDEFINE - 1345)) | (1 << (self::REDO - 1345)) | (1 << (self::REDUCED - 1345)) | (1 << (self::REDUNDANCY - 1345)) | (1 << (self::REF_CASCADE_CURSOR - 1345)) | (1 << (self::REFERENCED - 1345)) | (1 << (self::REFERENCE - 1345)) | (1 << (self::REFERENCES - 1345)) | (1 << (self::REFERENCING - 1345)) | (1 << (self::REF - 1345)) | (1 << (self::REFRESH - 1345)) | (1 << (self::REFTOHEX - 1345)) | (1 << (self::REGEXP_COUNT - 1345)) | (1 << (self::REGEXP_INSTR - 1345)) | (1 << (self::REGEXP_LIKE - 1345)) | (1 << (self::REGEXP_REPLACE - 1345)) | (1 << (self::REGEXP_SUBSTR - 1345)) | (1 << (self::REGISTER - 1345)) | (1 << (self::REGR_AVGX - 1345)) | (1 << (self::REGR_AVGY - 1345)) | (1 << (self::REGR_COUNT - 1345)) | (1 << (self::REGR_INTERCEPT - 1345)) | (1 << (self::REGR_R2 - 1345)) | (1 << (self::REGR_SLOPE - 1345)) | (1 << (self::REGR_SXX - 1345)) | (1 << (self::REGR_SXY - 1345)) | (1 << (self::REGR_SYY - 1345)) | (1 << (self::REGULAR - 1345)) | (1 << (self::REJECT - 1345)) | (1 << (self::REKEY - 1345)) | (1 << (self::RELATIONAL - 1345)) | (1 << (self::RELOCATE - 1345)) | (1 << (self::RELY - 1345)) | (1 << (self::REMAINDER - 1345)) | (1 << (self::REMOTE_MAPPED - 1345)) | (1 << (self::REMOVE - 1345)) | (1 << (self::RENAME - 1345)) | (1 << (self::REPAIR - 1345)) | (1 << (self::REPEAT - 1345)) | (1 << (self::REPLACE - 1345)) | (1 << (self::REPLICATION - 1345)))) !== 0) || (((($_la - 1409)) & ~0x3f) === 0 && ((1 << ($_la - 1409)) & ((1 << (self::REQUIRED - 1409)) | (1 << (self::RESETLOGS - 1409)) | (1 << (self::RESET - 1409)) | (1 << (self::RESIZE - 1409)) | (1 << (self::RESOLVE - 1409)) | (1 << (self::RESOLVER - 1409)) | (1 << (self::RESPECT - 1409)) | (1 << (self::RESTART - 1409)) | (1 << (self::RESTORE_AS_INTERVALS - 1409)) | (1 << (self::RESTORE - 1409)) | (1 << (self::RESTRICT_ALL_REF_CONS - 1409)) | (1 << (self::RESTRICTED - 1409)) | (1 << (self::RESTRICT_REFERENCES - 1409)) | (1 << (self::RESTRICT - 1409)) | (1 << (self::RESULT_CACHE - 1409)) | (1 << (self::RESULT - 1409)) | (1 << (self::RESUMABLE - 1409)) | (1 << (self::RESUME - 1409)) | (1 << (self::RETENTION - 1409)) | (1 << (self::RETRY_ON_ROW_CHANGE - 1409)) | (1 << (self::RETURNING - 1409)) | (1 << (self::RETURN - 1409)) | (1 << (self::REUSE - 1409)) | (1 << (self::REVERSE - 1409)) | (1 << (self::REWRITE_OR_ERROR - 1409)) | (1 << (self::REWRITE - 1409)) | (1 << (self::RIGHT - 1409)) | (1 << (self::ROLE - 1409)) | (1 << (self::ROLESET - 1409)) | (1 << (self::ROLES - 1409)) | (1 << (self::ROLLBACK - 1409)) | (1 << (self::ROLLING - 1409)) | (1 << (self::ROLLUP - 1409)) | (1 << (self::ROWDEPENDENCIES - 1409)) | (1 << (self::ROWID_MAPPING_TABLE - 1409)) | (1 << (self::ROWID - 1409)) | (1 << (self::ROWIDTOCHAR - 1409)) | (1 << (self::ROWIDTONCHAR - 1409)) | (1 << (self::ROW_LENGTH - 1409)) | (1 << (self::ROWNUM - 1409)) | (1 << (self::ROW - 1409)) | (1 << (self::ROWS - 1409)) | (1 << (self::RPAD - 1409)) | (1 << (self::RTRIM - 1409)) | (1 << (self::RULE - 1409)) | (1 << (self::RULES - 1409)) | (1 << (self::RUNNING - 1409)) | (1 << (self::SALT - 1409)) | (1 << (self::SAMPLE - 1409)) | (1 << (self::SAVE_AS_INTERVALS - 1409)) | (1 << (self::SAVEPOINT - 1409)) | (1 << (self::SAVE - 1409)) | (1 << (self::SB4 - 1409)) | (1 << (self::SCALE_ROWS - 1409)) | (1 << (self::SCALE - 1409)) | (1 << (self::SCAN_INSTANCES - 1409)) | (1 << (self::SCAN - 1409)) | (1 << (self::SCHEDULER - 1409)) | (1 << (self::SCHEMACHECK - 1409)) | (1 << (self::SCHEMA - 1409)) | (1 << (self::SCN_ASCENDING - 1409)) | (1 << (self::SCN - 1409)))) !== 0) || (((($_la - 1473)) & ~0x3f) === 0 && ((1 << ($_la - 1473)) & ((1 << (self::SCOPE - 1473)) | (1 << (self::SCRUB - 1473)) | (1 << (self::SD_ALL - 1473)) | (1 << (self::SD_INHIBIT - 1473)) | (1 << (self::SDO_GEOM_MBR - 1473)) | (1 << (self::SD_SHOW - 1473)) | (1 << (self::SEARCH - 1473)) | (1 << (self::SECOND - 1473)) | (1 << (self::SECRET - 1473)) | (1 << (self::SECUREFILE_DBA - 1473)) | (1 << (self::SECUREFILE - 1473)) | (1 << (self::SECURITY - 1473)) | (1 << (self::SEED - 1473)) | (1 << (self::SEG_BLOCK - 1473)) | (1 << (self::SEG_FILE - 1473)) | (1 << (self::SEGMENT - 1473)) | (1 << (self::SELECTIVITY - 1473)) | (1 << (self::SELF - 1473)) | (1 << (self::SEMIJOIN_DRIVER - 1473)) | (1 << (self::SEMIJOIN - 1473)) | (1 << (self::SEMI_TO_INNER - 1473)) | (1 << (self::SEQUENCED - 1473)) | (1 << (self::SEQUENCE - 1473)) | (1 << (self::SEQUENTIAL - 1473)) | (1 << (self::SERIALIZABLE - 1473)) | (1 << (self::SERIALLY_REUSABLE - 1473)) | (1 << (self::SERIAL - 1473)) | (1 << (self::SERVERERROR - 1473)) | (1 << (self::SERVICE_NAME_CONVERT - 1473)) | (1 << (self::SERVICES - 1473)) | (1 << (self::SESSION_CACHED_CURSORS - 1473)) | (1 << (self::SESSION - 1473)) | (1 << (self::SESSIONS_PER_USER - 1473)) | (1 << (self::SESSIONTIMEZONE - 1473)) | (1 << (self::SESSIONTZNAME - 1473)) | (1 << (self::SET - 1473)) | (1 << (self::SETS - 1473)) | (1 << (self::SETTINGS - 1473)) | (1 << (self::SET_TO_JOIN - 1473)) | (1 << (self::SEVERE - 1473)) | (1 << (self::SHARED_POOL - 1473)) | (1 << (self::SHARED - 1473)) | (1 << (self::SHARING - 1473)) | (1 << (self::SHELFLIFE - 1473)) | (1 << (self::SHOW - 1473)) | (1 << (self::SHRINK - 1473)) | (1 << (self::SHUTDOWN - 1473)) | (1 << (self::SIBLINGS - 1473)) | (1 << (self::SID - 1473)) | (1 << (self::SIGNAL_COMPONENT - 1473)) | (1 << (self::SIGNAL_FUNCTION - 1473)) | (1 << (self::SIGN - 1473)) | (1 << (self::SIGNTYPE - 1473)) | (1 << (self::SIMPLE_INTEGER - 1473)) | (1 << (self::SIMPLE - 1473)) | (1 << (self::SINGLE - 1473)) | (1 << (self::SINGLETASK - 1473)) | (1 << (self::SINH - 1473)) | (1 << (self::SIN - 1473)) | (1 << (self::SKIP_EXT_OPTIMIZER - 1473)))) !== 0) || (((($_la - 1537)) & ~0x3f) === 0 && ((1 << ($_la - 1537)) & ((1 << (self::SKIP_ - 1537)) | (1 << (self::SKIP_UNQ_UNUSABLE_IDX - 1537)) | (1 << (self::SKIP_UNUSABLE_INDEXES - 1537)) | (1 << (self::SMALLFILE - 1537)) | (1 << (self::SMALLINT - 1537)) | (1 << (self::SNAPSHOT - 1537)) | (1 << (self::SOME - 1537)) | (1 << (self::SORT - 1537)) | (1 << (self::SOUNDEX - 1537)) | (1 << (self::SOURCE_FILE_DIRECTORY - 1537)) | (1 << (self::SOURCE_FILE_NAME_CONVERT - 1537)) | (1 << (self::SOURCE - 1537)) | (1 << (self::SPACE_KEYWORD - 1537)) | (1 << (self::SPECIFICATION - 1537)) | (1 << (self::SPFILE - 1537)) | (1 << (self::SPLIT - 1537)) | (1 << (self::SPREADSHEET - 1537)) | (1 << (self::SQLDATA - 1537)) | (1 << (self::SQLERROR - 1537)) | (1 << (self::SQLLDR - 1537)) | (1 << (self::SQL - 1537)) | (1 << (self::SQL_TRACE - 1537)) | (1 << (self::SQL_TRANSLATION_PROFILE - 1537)) | (1 << (self::SQRT - 1537)) | (1 << (self::STALE - 1537)) | (1 << (self::STANDALONE - 1537)) | (1 << (self::STANDARD_HASH - 1537)) | (1 << (self::STANDBY_MAX_DATA_DELAY - 1537)) | (1 << (self::STANDBYS - 1537)) | (1 << (self::STANDBY - 1537)) | (1 << (self::STAR - 1537)) | (1 << (self::STAR_TRANSFORMATION - 1537)) | (1 << (self::STARTUP - 1537)) | (1 << (self::STATEMENT_ID - 1537)) | (1 << (self::STATEMENT_QUEUING - 1537)) | (1 << (self::STATEMENTS - 1537)) | (1 << (self::STATEMENT - 1537)) | (1 << (self::STATE - 1537)) | (1 << (self::STATIC - 1537)) | (1 << (self::STATISTICS - 1537)) | (1 << (self::STATS_BINOMIAL_TEST - 1537)) | (1 << (self::STATS_CROSSTAB - 1537)) | (1 << (self::STATS_F_TEST - 1537)) | (1 << (self::STATS_KS_TEST - 1537)) | (1 << (self::STATS_MODE - 1537)) | (1 << (self::STATS_MW_TEST - 1537)) | (1 << (self::STATS_ONE_WAY_ANOVA - 1537)) | (1 << (self::STATS_T_TEST_INDEP - 1537)) | (1 << (self::STATS_T_TEST_INDEPU - 1537)) | (1 << (self::STATS_T_TEST_ONE - 1537)) | (1 << (self::STATS_T_TEST_PAIRED - 1537)) | (1 << (self::STATS_WSR_TEST - 1537)) | (1 << (self::STDDEV_POP - 1537)) | (1 << (self::STDDEV_SAMP - 1537)) | (1 << (self::STOP - 1537)) | (1 << (self::STORAGE - 1537)) | (1 << (self::STORE - 1537)) | (1 << (self::STREAMS - 1537)) | (1 << (self::STREAM - 1537)) | (1 << (self::STRICT - 1537)) | (1 << (self::STRING - 1537)) | (1 << (self::STRIPE_COLUMNS - 1537)) | (1 << (self::STRIPE_WIDTH - 1537)))) !== 0) || (((($_la - 1601)) & ~0x3f) === 0 && ((1 << ($_la - 1601)) & ((1 << (self::STRIP - 1601)) | (1 << (self::STRUCTURE - 1601)) | (1 << (self::SUBMULTISET - 1601)) | (1 << (self::SUBPARTITION_REL - 1601)) | (1 << (self::SUBPARTITIONS - 1601)) | (1 << (self::SUBPARTITION - 1601)) | (1 << (self::SUBQUERIES - 1601)) | (1 << (self::SUBQUERY_PRUNING - 1601)) | (1 << (self::SUBSCRIBE - 1601)) | (1 << (self::SUBSET - 1601)) | (1 << (self::SUBSTITUTABLE - 1601)) | (1 << (self::SUBSTR2 - 1601)) | (1 << (self::SUBSTR4 - 1601)) | (1 << (self::SUBSTRB - 1601)) | (1 << (self::SUBSTRC - 1601)) | (1 << (self::SUBTYPE - 1601)) | (1 << (self::SUCCESSFUL - 1601)) | (1 << (self::SUCCESS - 1601)) | (1 << (self::SUMMARY - 1601)) | (1 << (self::SUPPLEMENTAL - 1601)) | (1 << (self::SUSPEND - 1601)) | (1 << (self::SWAP_JOIN_INPUTS - 1601)) | (1 << (self::SWITCHOVER - 1601)) | (1 << (self::SWITCH - 1601)) | (1 << (self::SYNCHRONOUS - 1601)) | (1 << (self::SYNC - 1601)) | (1 << (self::SYSASM - 1601)) | (1 << (self::SYS_AUDIT - 1601)) | (1 << (self::SYSAUX - 1601)) | (1 << (self::SYSBACKUP - 1601)) | (1 << (self::SYS_CHECKACL - 1601)) | (1 << (self::SYS_CHECK_PRIVILEGE - 1601)) | (1 << (self::SYS_CONNECT_BY_PATH - 1601)) | (1 << (self::SYS_CONTEXT - 1601)) | (1 << (self::SYSDATE - 1601)) | (1 << (self::SYSDBA - 1601)) | (1 << (self::SYS_DBURIGEN - 1601)) | (1 << (self::SYSDG - 1601)) | (1 << (self::SYS_DL_CURSOR - 1601)) | (1 << (self::SYS_DM_RXFORM_CHR - 1601)) | (1 << (self::SYS_DM_RXFORM_NUM - 1601)) | (1 << (self::SYS_DOM_COMPARE - 1601)) | (1 << (self::SYS_DST_PRIM2SEC - 1601)) | (1 << (self::SYS_DST_SEC2PRIM - 1601)) | (1 << (self::SYS_ET_BFILE_TO_RAW - 1601)) | (1 << (self::SYS_ET_BLOB_TO_IMAGE - 1601)) | (1 << (self::SYS_ET_IMAGE_TO_BLOB - 1601)) | (1 << (self::SYS_ET_RAW_TO_BFILE - 1601)) | (1 << (self::SYS_EXTPDTXT - 1601)) | (1 << (self::SYS_EXTRACT_UTC - 1601)) | (1 << (self::SYS_FBT_INSDEL - 1601)) | (1 << (self::SYS_FILTER_ACLS - 1601)) | (1 << (self::SYS_FNMATCHES - 1601)) | (1 << (self::SYS_FNREPLACE - 1601)) | (1 << (self::SYS_GET_ACLIDS - 1601)) | (1 << (self::SYS_GET_COL_ACLIDS - 1601)) | (1 << (self::SYS_GET_PRIVILEGES - 1601)) | (1 << (self::SYS_GETTOKENID - 1601)) | (1 << (self::SYS_GETXTIVAL - 1601)) | (1 << (self::SYS_GUID - 1601)) | (1 << (self::SYSGUID - 1601)) | (1 << (self::SYSKM - 1601)) | (1 << (self::SYS_MAKE_XMLNODEID - 1601)))) !== 0) || (((($_la - 1665)) & ~0x3f) === 0 && ((1 << ($_la - 1665)) & ((1 << (self::SYS_MAKEXML - 1665)) | (1 << (self::SYS_MKXMLATTR - 1665)) | (1 << (self::SYS_MKXTI - 1665)) | (1 << (self::SYSOBJ - 1665)) | (1 << (self::SYS_OP_ADT2BIN - 1665)) | (1 << (self::SYS_OP_ADTCONS - 1665)) | (1 << (self::SYS_OP_ALSCRVAL - 1665)) | (1 << (self::SYS_OP_ATG - 1665)) | (1 << (self::SYS_OP_BIN2ADT - 1665)) | (1 << (self::SYS_OP_BITVEC - 1665)) | (1 << (self::SYS_OP_BL2R - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER - 1665)) | (1 << (self::SYS_OP_C2C - 1665)) | (1 << (self::SYS_OP_CAST - 1665)) | (1 << (self::SYS_OP_CEG - 1665)) | (1 << (self::SYS_OP_CL2C - 1665)) | (1 << (self::SYS_OP_COMBINED_HASH - 1665)) | (1 << (self::SYS_OP_COMP - 1665)) | (1 << (self::SYS_OP_CONVERT - 1665)) | (1 << (self::SYS_OP_COUNTCHG - 1665)) | (1 << (self::SYS_OP_CSCONV - 1665)) | (1 << (self::SYS_OP_CSCONVTEST - 1665)) | (1 << (self::SYS_OP_CSR - 1665)) | (1 << (self::SYS_OP_CSX_PATCH - 1665)) | (1 << (self::SYS_OP_CYCLED_SEQ - 1665)) | (1 << (self::SYS_OP_DECOMP - 1665)) | (1 << (self::SYS_OP_DESCEND - 1665)) | (1 << (self::SYS_OP_DISTINCT - 1665)) | (1 << (self::SYS_OP_DRA - 1665)) | (1 << (self::SYS_OP_DUMP - 1665)) | (1 << (self::SYS_OP_DV_CHECK - 1665)) | (1 << (self::SYS_OP_ENFORCE_NOT_NULL - 1665)) | (1 << (self::SYSOPER - 1665)) | (1 << (self::SYS_OP_EXTRACT - 1665)) | (1 << (self::SYS_OP_GROUPING - 1665)) | (1 << (self::SYS_OP_GUID - 1665)) | (1 << (self::SYS_OP_HASH - 1665)) | (1 << (self::SYS_OP_IIX - 1665)) | (1 << (self::SYS_OP_ITR - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_CREATE - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_SUCCEEDED - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_USE - 1665)) | (1 << (self::SYS_OP_LBID - 1665)) | (1 << (self::SYS_OP_LOBLOC2BLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2CLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2ID - 1665)) | (1 << (self::SYS_OP_LOBLOC2NCLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2TYP - 1665)) | (1 << (self::SYS_OP_LSVI - 1665)) | (1 << (self::SYS_OP_LVL - 1665)) | (1 << (self::SYS_OP_MAKEOID - 1665)) | (1 << (self::SYS_OP_MAP_NONNULL - 1665)) | (1 << (self::SYS_OP_MSR - 1665)) | (1 << (self::SYS_OP_NICOMBINE - 1665)) | (1 << (self::SYS_OP_NIEXTRACT - 1665)) | (1 << (self::SYS_OP_NII - 1665)) | (1 << (self::SYS_OP_NIX - 1665)) | (1 << (self::SYS_OP_NOEXPAND - 1665)) | (1 << (self::SYS_OP_NTCIMG - 1665)) | (1 << (self::SYS_OP_NUMTORAW - 1665)) | (1 << (self::SYS_OP_OIDVALUE - 1665)))) !== 0) || (((($_la - 1729)) & ~0x3f) === 0 && ((1 << ($_la - 1729)) & ((1 << (self::SYS_OP_OPNSIZE - 1729)) | (1 << (self::SYS_OP_PAR_1 - 1729)) | (1 << (self::SYS_OP_PARGID_1 - 1729)) | (1 << (self::SYS_OP_PARGID - 1729)) | (1 << (self::SYS_OP_PAR - 1729)) | (1 << (self::SYS_OP_PART_ID - 1729)) | (1 << (self::SYS_OP_PIVOT - 1729)) | (1 << (self::SYS_OP_R2O - 1729)) | (1 << (self::SYS_OP_RAWTONUM - 1729)) | (1 << (self::SYS_OP_RDTM - 1729)) | (1 << (self::SYS_OP_REF - 1729)) | (1 << (self::SYS_OP_RMTD - 1729)) | (1 << (self::SYS_OP_ROWIDTOOBJ - 1729)) | (1 << (self::SYS_OP_RPB - 1729)) | (1 << (self::SYS_OPTLOBPRBSC - 1729)) | (1 << (self::SYS_OP_TOSETID - 1729)) | (1 << (self::SYS_OP_TPR - 1729)) | (1 << (self::SYS_OP_TRTB - 1729)) | (1 << (self::SYS_OPTXICMP - 1729)) | (1 << (self::SYS_OPTXQCASTASNQ - 1729)) | (1 << (self::SYS_OP_UNDESCEND - 1729)) | (1 << (self::SYS_OP_VECAND - 1729)) | (1 << (self::SYS_OP_VECBIT - 1729)) | (1 << (self::SYS_OP_VECOR - 1729)) | (1 << (self::SYS_OP_VECXOR - 1729)) | (1 << (self::SYS_OP_VERSION - 1729)) | (1 << (self::SYS_OP_VREF - 1729)) | (1 << (self::SYS_OP_VVD - 1729)) | (1 << (self::SYS_OP_XMLCONS_FOR_CSX - 1729)) | (1 << (self::SYS_OP_XPTHATG - 1729)) | (1 << (self::SYS_OP_XPTHIDX - 1729)) | (1 << (self::SYS_OP_XPTHOP - 1729)) | (1 << (self::SYS_OP_XTXT2SQLT - 1729)) | (1 << (self::SYS_OP_ZONE_ID - 1729)) | (1 << (self::SYS_ORDERKEY_DEPTH - 1729)) | (1 << (self::SYS_ORDERKEY_MAXCHILD - 1729)) | (1 << (self::SYS_ORDERKEY_PARENT - 1729)) | (1 << (self::SYS_PARALLEL_TXN - 1729)) | (1 << (self::SYS_PATHID_IS_ATTR - 1729)) | (1 << (self::SYS_PATHID_IS_NMSPC - 1729)) | (1 << (self::SYS_PATHID_LASTNAME - 1729)) | (1 << (self::SYS_PATHID_LASTNMSPC - 1729)) | (1 << (self::SYS_PATH_REVERSE - 1729)) | (1 << (self::SYS_PXQEXTRACT - 1729)) | (1 << (self::SYS_RAW_TO_XSID - 1729)) | (1 << (self::SYS_RID_ORDER - 1729)) | (1 << (self::SYS_ROW_DELTA - 1729)) | (1 << (self::SYS_SC_2_XMLT - 1729)) | (1 << (self::SYS_SYNRCIREDO - 1729)) | (1 << (self::SYSTEM_DEFINED - 1729)) | (1 << (self::SYSTEM - 1729)) | (1 << (self::SYSTIMESTAMP - 1729)) | (1 << (self::SYS_TYPEID - 1729)) | (1 << (self::SYS_UMAKEXML - 1729)) | (1 << (self::SYS_XMLANALYZE - 1729)) | (1 << (self::SYS_XMLCONTAINS - 1729)) | (1 << (self::SYS_XMLCONV - 1729)) | (1 << (self::SYS_XMLEXNSURI - 1729)) | (1 << (self::SYS_XMLGEN - 1729)) | (1 << (self::SYS_XMLI_LOC_ISNODE - 1729)) | (1 << (self::SYS_XMLI_LOC_ISTEXT - 1729)) | (1 << (self::SYS_XMLINSTR - 1729)) | (1 << (self::SYS_XMLLOCATOR_GETSVAL - 1729)) | (1 << (self::SYS_XMLNODEID_GETCID - 1729)))) !== 0) || (((($_la - 1793)) & ~0x3f) === 0 && ((1 << ($_la - 1793)) & ((1 << (self::SYS_XMLNODEID_GETLOCATOR - 1793)) | (1 << (self::SYS_XMLNODEID_GETOKEY - 1793)) | (1 << (self::SYS_XMLNODEID_GETPATHID - 1793)) | (1 << (self::SYS_XMLNODEID_GETPTRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETSVAL - 1793)) | (1 << (self::SYS_XMLNODEID_GETTID - 1793)) | (1 << (self::SYS_XMLNODEID - 1793)) | (1 << (self::SYS_XMLT_2_SC - 1793)) | (1 << (self::SYS_XMLTRANSLATE - 1793)) | (1 << (self::SYS_XMLTYPE2SQL - 1793)) | (1 << (self::SYS_XQ_ASQLCNV - 1793)) | (1 << (self::SYS_XQ_ATOMCNVCHK - 1793)) | (1 << (self::SYS_XQBASEURI - 1793)) | (1 << (self::SYS_XQCASTABLEERRH - 1793)) | (1 << (self::SYS_XQCODEP2STR - 1793)) | (1 << (self::SYS_XQCODEPEQ - 1793)) | (1 << (self::SYS_XQCON2SEQ - 1793)) | (1 << (self::SYS_XQCONCAT - 1793)) | (1 << (self::SYS_XQDELETE - 1793)) | (1 << (self::SYS_XQDFLTCOLATION - 1793)) | (1 << (self::SYS_XQDOC - 1793)) | (1 << (self::SYS_XQDOCURI - 1793)) | (1 << (self::SYS_XQDURDIV - 1793)) | (1 << (self::SYS_XQED4URI - 1793)) | (1 << (self::SYS_XQENDSWITH - 1793)) | (1 << (self::SYS_XQERRH - 1793)) | (1 << (self::SYS_XQERR - 1793)) | (1 << (self::SYS_XQESHTMLURI - 1793)) | (1 << (self::SYS_XQEXLOBVAL - 1793)) | (1 << (self::SYS_XQEXSTWRP - 1793)) | (1 << (self::SYS_XQEXTRACT - 1793)) | (1 << (self::SYS_XQEXTRREF - 1793)) | (1 << (self::SYS_XQEXVAL - 1793)) | (1 << (self::SYS_XQFB2STR - 1793)) | (1 << (self::SYS_XQFNBOOL - 1793)) | (1 << (self::SYS_XQFNCMP - 1793)) | (1 << (self::SYS_XQFNDATIM - 1793)) | (1 << (self::SYS_XQFNLNAME - 1793)) | (1 << (self::SYS_XQFNNM - 1793)) | (1 << (self::SYS_XQFNNSURI - 1793)) | (1 << (self::SYS_XQFNPREDTRUTH - 1793)) | (1 << (self::SYS_XQFNQNM - 1793)) | (1 << (self::SYS_XQFNROOT - 1793)) | (1 << (self::SYS_XQFORMATNUM - 1793)) | (1 << (self::SYS_XQFTCONTAIN - 1793)) | (1 << (self::SYS_XQFUNCR - 1793)) | (1 << (self::SYS_XQGETCONTENT - 1793)) | (1 << (self::SYS_XQINDXOF - 1793)) | (1 << (self::SYS_XQINSERT - 1793)) | (1 << (self::SYS_XQINSPFX - 1793)) | (1 << (self::SYS_XQIRI2URI - 1793)) | (1 << (self::SYS_XQLANG - 1793)) | (1 << (self::SYS_XQLLNMFRMQNM - 1793)) | (1 << (self::SYS_XQMKNODEREF - 1793)) | (1 << (self::SYS_XQNILLED - 1793)) | (1 << (self::SYS_XQNODENAME - 1793)) | (1 << (self::SYS_XQNORMSPACE - 1793)) | (1 << (self::SYS_XQNORMUCODE - 1793)) | (1 << (self::SYS_XQ_NRNG - 1793)) | (1 << (self::SYS_XQNSP4PFX - 1793)) | (1 << (self::SYS_XQNSPFRMQNM - 1793)) | (1 << (self::SYS_XQPFXFRMQNM - 1793)) | (1 << (self::SYS_XQ_PKSQL2XML - 1793)))) !== 0) || (((($_la - 1857)) & ~0x3f) === 0 && ((1 << ($_la - 1857)) & ((1 << (self::SYS_XQPOLYABS - 1857)) | (1 << (self::SYS_XQPOLYADD - 1857)) | (1 << (self::SYS_XQPOLYCEL - 1857)) | (1 << (self::SYS_XQPOLYCSTBL - 1857)) | (1 << (self::SYS_XQPOLYCST - 1857)) | (1 << (self::SYS_XQPOLYDIV - 1857)) | (1 << (self::SYS_XQPOLYFLR - 1857)) | (1 << (self::SYS_XQPOLYMOD - 1857)) | (1 << (self::SYS_XQPOLYMUL - 1857)) | (1 << (self::SYS_XQPOLYRND - 1857)) | (1 << (self::SYS_XQPOLYSQRT - 1857)) | (1 << (self::SYS_XQPOLYSUB - 1857)) | (1 << (self::SYS_XQPOLYUMUS - 1857)) | (1 << (self::SYS_XQPOLYUPLS - 1857)) | (1 << (self::SYS_XQPOLYVEQ - 1857)) | (1 << (self::SYS_XQPOLYVGE - 1857)) | (1 << (self::SYS_XQPOLYVGT - 1857)) | (1 << (self::SYS_XQPOLYVLE - 1857)) | (1 << (self::SYS_XQPOLYVLT - 1857)) | (1 << (self::SYS_XQPOLYVNE - 1857)) | (1 << (self::SYS_XQREF2VAL - 1857)) | (1 << (self::SYS_XQRENAME - 1857)) | (1 << (self::SYS_XQREPLACE - 1857)) | (1 << (self::SYS_XQRESVURI - 1857)) | (1 << (self::SYS_XQRNDHALF2EVN - 1857)) | (1 << (self::SYS_XQRSLVQNM - 1857)) | (1 << (self::SYS_XQRYENVPGET - 1857)) | (1 << (self::SYS_XQRYVARGET - 1857)) | (1 << (self::SYS_XQRYWRP - 1857)) | (1 << (self::SYS_XQSEQ2CON4XC - 1857)) | (1 << (self::SYS_XQSEQ2CON - 1857)) | (1 << (self::SYS_XQSEQDEEPEQ - 1857)) | (1 << (self::SYS_XQSEQINSB - 1857)) | (1 << (self::SYS_XQSEQRM - 1857)) | (1 << (self::SYS_XQSEQRVS - 1857)) | (1 << (self::SYS_XQSEQSUB - 1857)) | (1 << (self::SYS_XQSEQTYPMATCH - 1857)) | (1 << (self::SYS_XQSTARTSWITH - 1857)) | (1 << (self::SYS_XQSTATBURI - 1857)) | (1 << (self::SYS_XQSTR2CODEP - 1857)) | (1 << (self::SYS_XQSTRJOIN - 1857)) | (1 << (self::SYS_XQSUBSTRAFT - 1857)) | (1 << (self::SYS_XQSUBSTRBEF - 1857)) | (1 << (self::SYS_XQTOKENIZE - 1857)) | (1 << (self::SYS_XQTREATAS - 1857)) | (1 << (self::SYS_XQ_UPKXML2SQL - 1857)) | (1 << (self::SYS_XQXFORM - 1857)) | (1 << (self::SYS_XSID_TO_RAW - 1857)) | (1 << (self::SYS_ZMAP_FILTER - 1857)) | (1 << (self::SYS_ZMAP_REFRESH - 1857)) | (1 << (self::TABLE_LOOKUP_BY_NL - 1857)) | (1 << (self::TABLESPACE_NO - 1857)) | (1 << (self::TABLESPACE - 1857)) | (1 << (self::TABLES - 1857)) | (1 << (self::TABLE_STATS - 1857)) | (1 << (self::TABLE - 1857)) | (1 << (self::TABNO - 1857)) | (1 << (self::TAG - 1857)) | (1 << (self::TANH - 1857)) | (1 << (self::TAN - 1857)) | (1 << (self::TBLORIDXPARTNUM - 1857)) | (1 << (self::TEMPFILE - 1857)) | (1 << (self::TEMPLATE - 1857)) | (1 << (self::TEMPORARY - 1857)))) !== 0) || (((($_la - 1921)) & ~0x3f) === 0 && ((1 << ($_la - 1921)) & ((1 << (self::TEMP_TABLE - 1921)) | (1 << (self::TEST - 1921)) | (1 << (self::TEXT - 1921)) | (1 << (self::THAN - 1921)) | (1 << (self::THEN - 1921)) | (1 << (self::THE - 1921)) | (1 << (self::THREAD - 1921)) | (1 << (self::THROUGH - 1921)) | (1 << (self::TIER - 1921)) | (1 << (self::TIES - 1921)) | (1 << (self::TIMEOUT - 1921)) | (1 << (self::TIMESTAMP_LTZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP - 1921)) | (1 << (self::TIMESTAMP_TZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP_UNCONSTRAINED - 1921)) | (1 << (self::TIMES - 1921)) | (1 << (self::TIME - 1921)) | (1 << (self::TIMEZONE_ABBR - 1921)) | (1 << (self::TIMEZONE_HOUR - 1921)) | (1 << (self::TIMEZONE_MINUTE - 1921)) | (1 << (self::TIMEZONE_OFFSET - 1921)) | (1 << (self::TIMEZONE_REGION - 1921)) | (1 << (self::TIME_ZONE - 1921)) | (1 << (self::TIV_GB - 1921)) | (1 << (self::TIV_SSF - 1921)) | (1 << (self::TO_ACLID - 1921)) | (1 << (self::TO_BINARY_DOUBLE - 1921)) | (1 << (self::TO_BINARY_FLOAT - 1921)) | (1 << (self::TO_BLOB - 1921)) | (1 << (self::TO_CLOB - 1921)) | (1 << (self::TO_DSINTERVAL - 1921)) | (1 << (self::TO_LOB - 1921)) | (1 << (self::TO_MULTI_BYTE - 1921)) | (1 << (self::TO_NCHAR - 1921)) | (1 << (self::TO_NCLOB - 1921)) | (1 << (self::TO_NUMBER - 1921)) | (1 << (self::TOPLEVEL - 1921)) | (1 << (self::TO_SINGLE_BYTE - 1921)) | (1 << (self::TO_TIMESTAMP - 1921)) | (1 << (self::TO_TIMESTAMP_TZ - 1921)) | (1 << (self::TO_TIME - 1921)) | (1 << (self::TO_TIME_TZ - 1921)) | (1 << (self::TO_YMINTERVAL - 1921)) | (1 << (self::TRACE - 1921)) | (1 << (self::TRACING - 1921)) | (1 << (self::TRACKING - 1921)) | (1 << (self::TRAILING - 1921)) | (1 << (self::TRANSACTION - 1921)) | (1 << (self::TRANSFORM_DISTINCT_AGG - 1921)) | (1 << (self::TRANSITIONAL - 1921)) | (1 << (self::TRANSITION - 1921)) | (1 << (self::TRANSLATE - 1921)) | (1 << (self::TRANSLATION - 1921)) | (1 << (self::TREAT - 1921)) | (1 << (self::TRIGGERS - 1921)) | (1 << (self::TRIGGER - 1921)) | (1 << (self::TRUE - 1921)) | (1 << (self::TRUNCATE - 1921)) | (1 << (self::TRUNC - 1921)) | (1 << (self::TRUSTED - 1921)) | (1 << (self::TRUST - 1921)) | (1 << (self::TUNING - 1921)))) !== 0) || (((($_la - 1985)) & ~0x3f) === 0 && ((1 << ($_la - 1985)) & ((1 << (self::TX - 1985)) | (1 << (self::TYPES - 1985)) | (1 << (self::TYPE - 1985)) | (1 << (self::TZ_OFFSET - 1985)) | (1 << (self::UB2 - 1985)) | (1 << (self::UBA - 1985)) | (1 << (self::UCS2 - 1985)) | (1 << (self::UID - 1985)) | (1 << (self::UNARCHIVED - 1985)) | (1 << (self::UNBOUNDED - 1985)) | (1 << (self::UNBOUND - 1985)) | (1 << (self::UNCONDITIONAL - 1985)) | (1 << (self::UNDER - 1985)) | (1 << (self::UNDO - 1985)) | (1 << (self::UNDROP - 1985)) | (1 << (self::UNIFORM - 1985)) | (1 << (self::UNISTR - 1985)) | (1 << (self::UNLIMITED - 1985)) | (1 << (self::UNLOAD - 1985)) | (1 << (self::UNLOCK - 1985)) | (1 << (self::UNMATCHED - 1985)) | (1 << (self::UNNEST_INNERJ_DISTINCT_VIEW - 1985)) | (1 << (self::UNNEST_NOSEMIJ_NODISTINCTVIEW - 1985)) | (1 << (self::UNNEST_SEMIJ_VIEW - 1985)) | (1 << (self::UNNEST - 1985)) | (1 << (self::UNPACKED - 1985)) | (1 << (self::UNPIVOT - 1985)) | (1 << (self::UNPLUG - 1985)) | (1 << (self::UNPROTECTED - 1985)) | (1 << (self::UNQUIESCE - 1985)) | (1 << (self::UNRECOVERABLE - 1985)) | (1 << (self::UNRESTRICTED - 1985)) | (1 << (self::UNSUBSCRIBE - 1985)) | (1 << (self::UNTIL - 1985)) | (1 << (self::UNUSABLE - 1985)) | (1 << (self::UNUSED - 1985)) | (1 << (self::UPDATABLE - 1985)) | (1 << (self::UPDATED - 1985)) | (1 << (self::UPDATEXML - 1985)) | (1 << (self::UPD_INDEXES - 1985)) | (1 << (self::UPD_JOININDEX - 1985)) | (1 << (self::UPGRADE - 1985)) | (1 << (self::UPPER - 1985)) | (1 << (self::UPSERT - 1985)) | (1 << (self::UROWID - 1985)) | (1 << (self::USABLE - 1985)) | (1 << (self::USAGE - 1985)) | (1 << (self::USE_ANTI - 1985)) | (1 << (self::USE_CONCAT - 1985)) | (1 << (self::USE_CUBE - 1985)) | (1 << (self::USE_HASH_AGGREGATION - 1985)) | (1 << (self::USE_HASH_GBY_FOR_PUSHDOWN - 1985)) | (1 << (self::USE_HASH - 1985)) | (1 << (self::USE_HIDDEN_PARTITIONS - 1985)) | (1 << (self::USE_INVISIBLE_INDEXES - 1985)) | (1 << (self::USE_MERGE_CARTESIAN - 1985)) | (1 << (self::USE_MERGE - 1985)) | (1 << (self::USE_NL - 1985)) | (1 << (self::USE_NL_WITH_INDEX - 1985)) | (1 << (self::USE_PRIVATE_OUTLINES - 1985)) | (1 << (self::USER_DATA - 1985)))) !== 0) || (((($_la - 2049)) & ~0x3f) === 0 && ((1 << ($_la - 2049)) & ((1 << (self::USER_DEFINED - 2049)) | (1 << (self::USERENV - 2049)) | (1 << (self::USERGROUP - 2049)) | (1 << (self::USER_RECYCLEBIN - 2049)) | (1 << (self::USERS - 2049)) | (1 << (self::USER_TABLESPACES - 2049)) | (1 << (self::USER - 2049)) | (1 << (self::USE_SEMI - 2049)) | (1 << (self::USE_STORED_OUTLINES - 2049)) | (1 << (self::USE_TTT_FOR_GSETS - 2049)) | (1 << (self::USE - 2049)) | (1 << (self::USE_VECTOR_AGGREGATION - 2049)) | (1 << (self::USE_WEAK_NAME_RESL - 2049)) | (1 << (self::USING_NO_EXPAND - 2049)) | (1 << (self::USING - 2049)) | (1 << (self::UTF16BE - 2049)) | (1 << (self::UTF16LE - 2049)) | (1 << (self::UTF32 - 2049)) | (1 << (self::UTF8 - 2049)) | (1 << (self::V1 - 2049)) | (1 << (self::V2 - 2049)) | (1 << (self::VALIDATE - 2049)) | (1 << (self::VALIDATION - 2049)) | (1 << (self::VALID_TIME_END - 2049)) | (1 << (self::VALUE - 2049)) | (1 << (self::VARCHAR2 - 2049)) | (1 << (self::VARCHAR - 2049)) | (1 << (self::VARIABLE - 2049)) | (1 << (self::VAR_POP - 2049)) | (1 << (self::VARRAYS - 2049)) | (1 << (self::VARRAY - 2049)) | (1 << (self::VAR_SAMP - 2049)) | (1 << (self::VARYING - 2049)) | (1 << (self::VECTOR_READ_TRACE - 2049)) | (1 << (self::VECTOR_READ - 2049)) | (1 << (self::VECTOR_TRANSFORM_DIMS - 2049)) | (1 << (self::VECTOR_TRANSFORM_FACT - 2049)) | (1 << (self::VECTOR_TRANSFORM - 2049)) | (1 << (self::VERIFIER - 2049)) | (1 << (self::VERIFY - 2049)) | (1 << (self::VERSIONING - 2049)) | (1 << (self::VERSIONS_ENDSCN - 2049)) | (1 << (self::VERSIONS_ENDTIME - 2049)) | (1 << (self::VERSIONS_OPERATION - 2049)) | (1 << (self::VERSIONS_STARTSCN - 2049)) | (1 << (self::VERSIONS_STARTTIME - 2049)) | (1 << (self::VERSIONS - 2049)) | (1 << (self::VERSIONS_XID - 2049)) | (1 << (self::VERSION - 2049)) | (1 << (self::VIOLATION - 2049)) | (1 << (self::VIRTUAL - 2049)) | (1 << (self::VISIBILITY - 2049)) | (1 << (self::VISIBLE - 2049)) | (1 << (self::VOLUME - 2049)) | (1 << (self::VSIZE - 2049)) | (1 << (self::WAIT - 2049)) | (1 << (self::WALLET - 2049)) | (1 << (self::WARNING - 2049)) | (1 << (self::WEEKS - 2049)) | (1 << (self::WEEK - 2049)) | (1 << (self::WELLFORMED - 2049)) | (1 << (self::WHENEVER - 2049)))) !== 0) || (((($_la - 2113)) & ~0x3f) === 0 && ((1 << ($_la - 2113)) & ((1 << (self::WHEN - 2113)) | (1 << (self::WHILE - 2113)) | (1 << (self::WHITESPACE - 2113)) | (1 << (self::WIDTH_BUCKET - 2113)) | (1 << (self::WITHIN - 2113)) | (1 << (self::WITHOUT - 2113)) | (1 << (self::WITH_PLSQL - 2113)) | (1 << (self::WORK - 2113)) | (1 << (self::WRAPPED - 2113)) | (1 << (self::WRAPPER - 2113)) | (1 << (self::WRITE - 2113)) | (1 << (self::XDB_FASTPATH_INSERT - 2113)) | (1 << (self::X_DYN_PRUNE - 2113)) | (1 << (self::XID - 2113)) | (1 << (self::XML2OBJECT - 2113)) | (1 << (self::XMLAGG - 2113)) | (1 << (self::XMLATTRIBUTES - 2113)) | (1 << (self::XMLCAST - 2113)) | (1 << (self::XMLCDATA - 2113)) | (1 << (self::XMLCOLATTVAL - 2113)) | (1 << (self::XMLCOMMENT - 2113)) | (1 << (self::XMLCONCAT - 2113)) | (1 << (self::XMLDIFF - 2113)) | (1 << (self::XML_DML_RWT_STMT - 2113)) | (1 << (self::XMLELEMENT - 2113)) | (1 << (self::XMLEXISTS2 - 2113)) | (1 << (self::XMLEXISTS - 2113)) | (1 << (self::XMLFOREST - 2113)) | (1 << (self::XMLINDEX_REWRITE_IN_SELECT - 2113)) | (1 << (self::XMLINDEX_REWRITE - 2113)) | (1 << (self::XMLINDEX_SEL_IDX_TBL - 2113)) | (1 << (self::XMLISNODE - 2113)) | (1 << (self::XMLISVALID - 2113)) | (1 << (self::XMLNAMESPACES - 2113)) | (1 << (self::XMLPARSE - 2113)) | (1 << (self::XMLPATCH - 2113)) | (1 << (self::XMLPI - 2113)) | (1 << (self::XMLQUERYVAL - 2113)) | (1 << (self::XMLQUERY - 2113)) | (1 << (self::XMLROOT - 2113)) | (1 << (self::XMLSCHEMA - 2113)) | (1 << (self::XMLSERIALIZE - 2113)) | (1 << (self::XMLTABLE - 2113)) | (1 << (self::XMLTRANSFORMBLOB - 2113)) | (1 << (self::XMLTRANSFORM - 2113)) | (1 << (self::XMLTYPE - 2113)) | (1 << (self::XML - 2113)) | (1 << (self::XPATHTABLE - 2113)) | (1 << (self::XS_SYS_CONTEXT - 2113)) | (1 << (self::XS - 2113)) | (1 << (self::YEARS - 2113)) | (1 << (self::YEAR - 2113)) | (1 << (self::YES - 2113)) | (1 << (self::YMINTERVAL_UNCONSTRAINED - 2113)) | (1 << (self::ZONEMAP - 2113)) | (1 << (self::ZONE - 2113)) | (1 << (self::PREDICTION - 2113)) | (1 << (self::PREDICTION_BOUNDS - 2113)) | (1 << (self::PREDICTION_COST - 2113)))) !== 0) || (((($_la - 2177)) & ~0x3f) === 0 && ((1 << ($_la - 2177)) & ((1 << (self::PREDICTION_DETAILS - 2177)) | (1 << (self::PREDICTION_PROBABILITY - 2177)) | (1 << (self::PREDICTION_SET - 2177)) | (1 << (self::CUME_DIST - 2177)) | (1 << (self::DENSE_RANK - 2177)) | (1 << (self::LISTAGG - 2177)) | (1 << (self::PERCENT_RANK - 2177)) | (1 << (self::PERCENTILE_CONT - 2177)) | (1 << (self::PERCENTILE_DISC - 2177)) | (1 << (self::RANK - 2177)) | (1 << (self::AVG - 2177)) | (1 << (self::CORR - 2177)) | (1 << (self::COVAR_ - 2177)) | (1 << (self::DECODE - 2177)) | (1 << (self::LAG - 2177)) | (1 << (self::LEAD - 2177)) | (1 << (self::MAX - 2177)) | (1 << (self::MEDIAN - 2177)) | (1 << (self::MIN - 2177)) | (1 << (self::NTILE - 2177)) | (1 << (self::NVL - 2177)) | (1 << (self::RATIO_TO_REPORT - 2177)) | (1 << (self::REGR_ - 2177)) | (1 << (self::ROUND - 2177)) | (1 << (self::ROW_NUMBER - 2177)) | (1 << (self::SUBSTR - 2177)) | (1 << (self::TO_CHAR - 2177)) | (1 << (self::TRIM - 2177)) | (1 << (self::SUM - 2177)) | (1 << (self::STDDEV - 2177)) | (1 << (self::VAR_ - 2177)) | (1 << (self::VARIANCE - 2177)) | (1 << (self::LEAST - 2177)) | (1 << (self::GREATEST - 2177)) | (1 << (self::TO_DATE - 2177)) | (1 << (self::NATIONAL_CHAR_STRING_LIT - 2177)) | (1 << (self::PERIOD - 2177)) | (1 << (self::UNSIGNED_INTEGER - 2177)) | (1 << (self::APPROXIMATE_NUM_LIT - 2177)) | (1 << (self::CHAR_STRING - 2177)) | (1 << (self::DELIMITED_ID - 2177)) | (1 << (self::LEFT_PAREN - 2177)) | (1 << (self::PLUS_SIGN - 2177)) | (1 << (self::MINUS_SIGN - 2177)) | (1 << (self::BINDVAR - 2177)) | (1 << (self::COLON - 2177)))) !== 0) || $_la === self::INTRODUCER || $_la === self::REGULAR_ID) {
                $this->setState(11346);
                $this->argument();
                $this->setState(11348);
                $this->errorHandler->sync($this);
                $_la = $this->input->LA(1);

                if ($_la === self::IGNORE || $_la === self::RESPECT) {
                    $this->setState(11347);
                    $this->respect_or_ignore_nulls();
                }
                $this->setState(11357);
                $this->errorHandler->sync($this);

                $_la = $this->input->LA(1);
                while ($_la === self::COMMA) {
                    $this->setState(11350);
                    $this->match(self::COMMA);
                    $this->setState(11351);
                    $this->argument();
                    $this->setState(11353);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::IGNORE || $_la === self::RESPECT) {
                        $this->setState(11352);
                        $this->respect_or_ignore_nulls();
                    }
                    $this->setState(11359);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);
                }
            }
            $this->setState(11362);
            $this->match(self::RIGHT_PAREN);
            $this->setState(11364);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1569, $this->ctx)) {
                case 1:
                    $this->setState(11363);
                    $this->keep_clause();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function function_argument_modeling(): Context\Function_argument_modelingContext
    {
        $localContext = new Context\Function_argument_modelingContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1452, self::RULE_function_argument_modeling);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11366);
            $this->match(self::LEFT_PAREN);
            $this->setState(11367);
            $this->column_name();
            $this->setState(11380);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::COMMA) {
                $this->setState(11368);
                $this->match(self::COMMA);
                $this->setState(11371);
                $this->errorHandler->sync($this);

                switch ($this->input->LA(1)) {
                    case self::UNSIGNED_INTEGER:
                    case self::APPROXIMATE_NUM_LIT:
                        $this->setState(11369);
                        $this->numeric();
                        break;

                    case self::NULL_:
                        $this->setState(11370);
                        $this->match(self::NULL_);
                        break;

                    default:
                        throw new NoViableAltException($this);
                }
                $this->setState(11378);
                $this->errorHandler->sync($this);
                $_la = $this->input->LA(1);

                if ($_la === self::COMMA) {
                    $this->setState(11373);
                    $this->match(self::COMMA);
                    $this->setState(11376);
                    $this->errorHandler->sync($this);

                    switch ($this->input->LA(1)) {
                        case self::UNSIGNED_INTEGER:
                        case self::APPROXIMATE_NUM_LIT:
                            $this->setState(11374);
                            $this->numeric();
                            break;

                        case self::NULL_:
                            $this->setState(11375);
                            $this->match(self::NULL_);
                            break;

                        default:
                            throw new NoViableAltException($this);
                    }
                }
            }
            $this->setState(11382);
            $this->match(self::USING);
            $this->setState(11402);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1577, $this->ctx)) {
                case 1:
                    $this->setState(11383);
                    $this->tableview_name();
                    $this->setState(11384);
                    $this->match(self::PERIOD);
                    $this->setState(11385);
                    $this->match(self::ASTERISK);
                    break;

                case 2:
                    $this->setState(11387);
                    $this->match(self::ASTERISK);
                    break;

                case 3:
                    $this->setState(11388);
                    $this->expression();
                    $this->setState(11390);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if (((($_la) & ~0x3f) === 0 && ((1 << $_la) & ((1 << self::ABORT) | (1 << self::ABS) | (1 << self::ACCESS) | (1 << self::ACCESSED) | (1 << self::ACCOUNT) | (1 << self::ACL) | (1 << self::ACOS) | (1 << self::ACTION) | (1 << self::ACTIONS) | (1 << self::ACTIVATE) | (1 << self::ACTIVE) | (1 << self::ACTIVE_COMPONENT) | (1 << self::ACTIVE_DATA) | (1 << self::ACTIVE_FUNCTION) | (1 << self::ACTIVE_TAG) | (1 << self::ACTIVITY) | (1 << self::ADAPTIVE_PLAN) | (1 << self::ADD) | (1 << self::ADD_COLUMN) | (1 << self::ADD_GROUP) | (1 << self::ADD_MONTHS) | (1 << self::ADJ_DATE) | (1 << self::ADMIN) | (1 << self::ADMINISTER) | (1 << self::ADMINISTRATOR) | (1 << self::ADVANCED) | (1 << self::ADVISE) | (1 << self::ADVISOR) | (1 << self::AFD_DISKSTRING) | (1 << self::AFTER) | (1 << self::AGENT) | (1 << self::AGGREGATE) | (1 << self::A_LETTER) | (1 << self::ALIAS) | (1 << self::ALLOCATE) | (1 << self::ALLOW) | (1 << self::ALL_ROWS) | (1 << self::ALWAYS) | (1 << self::ANALYZE) | (1 << self::ANCILLARY) | (1 << self::AND_EQUAL) | (1 << self::ANOMALY) | (1 << self::ANSI_REARCH) | (1 << self::ANTIJOIN) | (1 << self::ANYSCHEMA) | (1 << self::APPEND) | (1 << self::APPENDCHILDXML) | (1 << self::APPEND_VALUES) | (1 << self::APPLICATION) | (1 << self::APPLY) | (1 << self::APPROX_COUNT_DISTINCT) | (1 << self::ARCHIVAL) | (1 << self::ARCHIVE) | (1 << self::ARCHIVED) | (1 << self::ARCHIVELOG) | (1 << self::ARRAY) | (1 << self::AS) | (1 << self::ASCII))) !== 0) || (((($_la - 64)) & ~0x3f) === 0 && ((1 << ($_la - 64)) & ((1 << (self::ASCIISTR - 64)) | (1 << (self::ASIN - 64)) | (1 << (self::ASIS - 64)) | (1 << (self::ASSEMBLY - 64)) | (1 << (self::ASSIGN - 64)) | (1 << (self::ASSOCIATE - 64)) | (1 << (self::ASYNC - 64)) | (1 << (self::ASYNCHRONOUS - 64)) | (1 << (self::ATAN2 - 64)) | (1 << (self::ATAN - 64)) | (1 << (self::AT - 64)) | (1 << (self::ATTRIBUTE - 64)) | (1 << (self::ATTRIBUTES - 64)) | (1 << (self::AUTHENTICATED - 64)) | (1 << (self::AUTHENTICATION - 64)) | (1 << (self::AUTHID - 64)) | (1 << (self::AUTHORIZATION - 64)) | (1 << (self::AUTOALLOCATE - 64)) | (1 << (self::AUTO - 64)) | (1 << (self::AUTOEXTEND - 64)) | (1 << (self::AUTO_LOGIN - 64)) | (1 << (self::AUTOMATIC - 64)) | (1 << (self::AUTONOMOUS_TRANSACTION - 64)) | (1 << (self::AUTO_REOPTIMIZE - 64)) | (1 << (self::AVAILABILITY - 64)) | (1 << (self::AVRO - 64)) | (1 << (self::BACKGROUND - 64)) | (1 << (self::BACKUP - 64)) | (1 << (self::BASIC - 64)) | (1 << (self::BASICFILE - 64)) | (1 << (self::BATCH - 64)) | (1 << (self::BATCHSIZE - 64)) | (1 << (self::BATCH_TABLE_ACCESS_BY_ROWID - 64)) | (1 << (self::BECOME - 64)) | (1 << (self::BEFORE - 64)) | (1 << (self::BEGIN - 64)) | (1 << (self::BEGINNING - 64)) | (1 << (self::BEGIN_OUTLINE_DATA - 64)) | (1 << (self::BEHALF - 64)) | (1 << (self::BEQUEATH - 64)) | (1 << (self::BFILE - 64)) | (1 << (self::BFILENAME - 64)) | (1 << (self::BIGFILE - 64)) | (1 << (self::BINARY - 64)) | (1 << (self::BINARY_DOUBLE - 64)) | (1 << (self::BINARY_DOUBLE_INFINITY - 64)) | (1 << (self::BINARY_DOUBLE_NAN - 64)) | (1 << (self::BINARY_FLOAT - 64)) | (1 << (self::BINARY_FLOAT_INFINITY - 64)) | (1 << (self::BINARY_FLOAT_NAN - 64)) | (1 << (self::BINARY_INTEGER - 64)) | (1 << (self::BIND_AWARE - 64)) | (1 << (self::BINDING - 64)) | (1 << (self::BIN_TO_NUM - 64)) | (1 << (self::BITAND - 64)) | (1 << (self::BITMAP_AND - 64)) | (1 << (self::BITMAP - 64)) | (1 << (self::BITMAPS - 64)) | (1 << (self::BITMAP_TREE - 64)) | (1 << (self::BITS - 64)))) !== 0) || (((($_la - 128)) & ~0x3f) === 0 && ((1 << ($_la - 128)) & ((1 << (self::BLOB - 128)) | (1 << (self::BLOCK - 128)) | (1 << (self::BLOCK_RANGE - 128)) | (1 << (self::BLOCKS - 128)) | (1 << (self::BLOCKSIZE - 128)) | (1 << (self::BODY - 128)) | (1 << (self::BOOLEAN - 128)) | (1 << (self::BOTH - 128)) | (1 << (self::BOUND - 128)) | (1 << (self::BRANCH - 128)) | (1 << (self::BREADTH - 128)) | (1 << (self::BROADCAST - 128)) | (1 << (self::BSON - 128)) | (1 << (self::BUFFER - 128)) | (1 << (self::BUFFER_CACHE - 128)) | (1 << (self::BUFFER_POOL - 128)) | (1 << (self::BUILD - 128)) | (1 << (self::BULK - 128)) | (1 << (self::BYPASS_RECURSIVE_CHECK - 128)) | (1 << (self::BYPASS_UJVC - 128)) | (1 << (self::BYTE - 128)) | (1 << (self::CACHE - 128)) | (1 << (self::CACHE_CB - 128)) | (1 << (self::CACHE_INSTANCES - 128)) | (1 << (self::CACHE_TEMP_TABLE - 128)) | (1 << (self::CACHING - 128)) | (1 << (self::CALCULATED - 128)) | (1 << (self::CALLBACK - 128)) | (1 << (self::CALL - 128)) | (1 << (self::CANCEL - 128)) | (1 << (self::CAPACITY - 128)) | (1 << (self::CARDINALITY - 128)) | (1 << (self::CASCADE - 128)) | (1 << (self::CASE - 128)) | (1 << (self::CAST - 128)) | (1 << (self::CATEGORY - 128)) | (1 << (self::CDBDEFAULT - 128)) | (1 << (self::CEIL - 128)) | (1 << (self::CELL_FLASH_CACHE - 128)) | (1 << (self::CERTIFICATE - 128)) | (1 << (self::CFILE - 128)) | (1 << (self::CHAINED - 128)) | (1 << (self::CHANGE - 128)) | (1 << (self::CHANGE_DUPKEY_ERROR_INDEX - 128)) | (1 << (self::CHARACTER - 128)) | (1 << (self::CHAR - 128)) | (1 << (self::CHAR_CS - 128)) | (1 << (self::CHARTOROWID - 128)) | (1 << (self::CHECK_ACL_REWRITE - 128)) | (1 << (self::CHECKPOINT - 128)) | (1 << (self::CHILD - 128)) | (1 << (self::CHOOSE - 128)) | (1 << (self::CHR - 128)) | (1 << (self::CHUNK - 128)) | (1 << (self::CLASS - 128)) | (1 << (self::CLASSIFIER - 128)) | (1 << (self::CLEANUP - 128)) | (1 << (self::CLEAR - 128)) | (1 << (self::C_LETTER - 128)) | (1 << (self::CLIENT - 128)))) !== 0) || (((($_la - 192)) & ~0x3f) === 0 && ((1 << ($_la - 192)) & ((1 << (self::CLOB - 192)) | (1 << (self::CLONE - 192)) | (1 << (self::CLOSE_CACHED_OPEN_CURSORS - 192)) | (1 << (self::CLOSE - 192)) | (1 << (self::CLUSTER_BY_ROWID - 192)) | (1 << (self::CLUSTER - 192)) | (1 << (self::CLUSTER_DETAILS - 192)) | (1 << (self::CLUSTER_DISTANCE - 192)) | (1 << (self::CLUSTER_ID - 192)) | (1 << (self::CLUSTERING - 192)) | (1 << (self::CLUSTERING_FACTOR - 192)) | (1 << (self::CLUSTER_PROBABILITY - 192)) | (1 << (self::CLUSTER_SET - 192)) | (1 << (self::COALESCE - 192)) | (1 << (self::COALESCE_SQ - 192)) | (1 << (self::COARSE - 192)) | (1 << (self::CO_AUTH_IND - 192)) | (1 << (self::COLD - 192)) | (1 << (self::COLLECT - 192)) | (1 << (self::COLUMNAR - 192)) | (1 << (self::COLUMN_AUTH_INDICATOR - 192)) | (1 << (self::COLUMN - 192)) | (1 << (self::COLUMNS - 192)) | (1 << (self::COLUMN_STATS - 192)) | (1 << (self::COLUMN_VALUE - 192)) | (1 << (self::COMMENT - 192)) | (1 << (self::COMMIT - 192)) | (1 << (self::COMMITTED - 192)) | (1 << (self::COMMON_DATA - 192)) | (1 << (self::COMPACT - 192)) | (1 << (self::COMPATIBILITY - 192)) | (1 << (self::COMPILE - 192)) | (1 << (self::COMPLETE - 192)) | (1 << (self::COMPLIANCE - 192)) | (1 << (self::COMPONENT - 192)) | (1 << (self::COMPONENTS - 192)) | (1 << (self::COMPOSE - 192)) | (1 << (self::COMPOSITE - 192)) | (1 << (self::COMPOSITE_LIMIT - 192)) | (1 << (self::COMPOUND - 192)) | (1 << (self::COMPUTE - 192)) | (1 << (self::CONCAT - 192)) | (1 << (self::CON_DBID_TO_ID - 192)) | (1 << (self::CONDITIONAL - 192)) | (1 << (self::CONDITION - 192)) | (1 << (self::CONFIRM - 192)) | (1 << (self::CONFORMING - 192)) | (1 << (self::CON_GUID_TO_ID - 192)) | (1 << (self::CON_ID - 192)) | (1 << (self::CON_NAME_TO_ID - 192)) | (1 << (self::CONNECT_BY_CB_WHR_ONLY - 192)) | (1 << (self::CONNECT_BY_COMBINE_SW - 192)) | (1 << (self::CONNECT_BY_COST_BASED - 192)) | (1 << (self::CONNECT_BY_ELIM_DUPS - 192)) | (1 << (self::CONNECT_BY_FILTERING - 192)) | (1 << (self::CONNECT_BY_ISCYCLE - 192)) | (1 << (self::CONNECT_BY_ISLEAF - 192)) | (1 << (self::CONNECT_BY_ROOT - 192)) | (1 << (self::CONNECT_TIME - 192)) | (1 << (self::CONSIDER - 192)) | (1 << (self::CONSISTENT - 192)) | (1 << (self::CONSTANT - 192)))) !== 0) || (((($_la - 256)) & ~0x3f) === 0 && ((1 << ($_la - 256)) & ((1 << (self::CONST - 256)) | (1 << (self::CONSTRAINT - 256)) | (1 << (self::CONSTRAINTS - 256)) | (1 << (self::CONSTRUCTOR - 256)) | (1 << (self::CONTAINER - 256)) | (1 << (self::CONTAINER_DATA - 256)) | (1 << (self::CONTAINERS - 256)) | (1 << (self::CONTENT - 256)) | (1 << (self::CONTENTS - 256)) | (1 << (self::CONTEXT - 256)) | (1 << (self::CONTINUE - 256)) | (1 << (self::CONTROLFILE - 256)) | (1 << (self::CON_UID_TO_ID - 256)) | (1 << (self::CONVERT - 256)) | (1 << (self::COOKIE - 256)) | (1 << (self::COPY - 256)) | (1 << (self::CORR_K - 256)) | (1 << (self::CORR_S - 256)) | (1 << (self::CORRUPTION - 256)) | (1 << (self::CORRUPT_XID_ALL - 256)) | (1 << (self::CORRUPT_XID - 256)) | (1 << (self::COS - 256)) | (1 << (self::COSH - 256)) | (1 << (self::COST - 256)) | (1 << (self::COST_XML_QUERY_REWRITE - 256)) | (1 << (self::COUNT - 256)) | (1 << (self::COVAR_POP - 256)) | (1 << (self::COVAR_SAMP - 256)) | (1 << (self::CPU_COSTING - 256)) | (1 << (self::CPU_PER_CALL - 256)) | (1 << (self::CPU_PER_SESSION - 256)) | (1 << (self::CRASH - 256)) | (1 << (self::CREATE_FILE_DEST - 256)) | (1 << (self::CREATE_STORED_OUTLINES - 256)) | (1 << (self::CREATION - 256)) | (1 << (self::CREDENTIAL - 256)) | (1 << (self::CRITICAL - 256)) | (1 << (self::CROSS - 256)) | (1 << (self::CROSSEDITION - 256)) | (1 << (self::CSCONVERT - 256)) | (1 << (self::CUBE_AJ - 256)) | (1 << (self::CUBE - 256)) | (1 << (self::CUBE_GB - 256)) | (1 << (self::CUBE_SJ - 256)) | (1 << (self::CUME_DISTM - 256)) | (1 << (self::CURRENT - 256)) | (1 << (self::CURRENT_DATE - 256)) | (1 << (self::CURRENT_SCHEMA - 256)) | (1 << (self::CURRENT_TIME - 256)) | (1 << (self::CURRENT_TIMESTAMP - 256)) | (1 << (self::CURRENT_USER - 256)) | (1 << (self::CURRENTV - 256)) | (1 << (self::CURSOR - 256)) | (1 << (self::CURSOR_SHARING_EXACT - 256)) | (1 << (self::CURSOR_SPECIFIC_SEGMENT - 256)) | (1 << (self::CUSTOMDATUM - 256)) | (1 << (self::CV - 256)) | (1 << (self::CYCLE - 256)) | (1 << (self::DANGLING - 256)) | (1 << (self::DATABASE - 256)) | (1 << (self::DATA - 256)) | (1 << (self::DATAFILE - 256)) | (1 << (self::DATAFILES - 256)))) !== 0) || (((($_la - 321)) & ~0x3f) === 0 && ((1 << ($_la - 321)) & ((1 << (self::DATAMOVEMENT - 321)) | (1 << (self::DATAOBJNO - 321)) | (1 << (self::DATAOBJ_TO_MAT_PARTITION - 321)) | (1 << (self::DATAOBJ_TO_PARTITION - 321)) | (1 << (self::DATAPUMP - 321)) | (1 << (self::DATA_SECURITY_REWRITE_LIMIT - 321)) | (1 << (self::DATE_MODE - 321)) | (1 << (self::DAY - 321)) | (1 << (self::DAYS - 321)) | (1 << (self::DBA - 321)) | (1 << (self::DBA_RECYCLEBIN - 321)) | (1 << (self::DBMS_STATS - 321)) | (1 << (self::DB_ROLE_CHANGE - 321)) | (1 << (self::DBTIMEZONE - 321)) | (1 << (self::DB_UNIQUE_NAME - 321)) | (1 << (self::DB_VERSION - 321)) | (1 << (self::DDL - 321)) | (1 << (self::DEALLOCATE - 321)) | (1 << (self::DEBUG - 321)) | (1 << (self::DEBUGGER - 321)) | (1 << (self::DEC - 321)) | (1 << (self::DECIMAL - 321)) | (1 << (self::DECLARE - 321)) | (1 << (self::DECOMPOSE - 321)) | (1 << (self::DECORRELATE - 321)) | (1 << (self::DECR - 321)) | (1 << (self::DECREMENT - 321)) | (1 << (self::DECRYPT - 321)) | (1 << (self::DEDUPLICATE - 321)) | (1 << (self::DEFAULTS - 321)) | (1 << (self::DEFERRABLE - 321)) | (1 << (self::DEFERRED - 321)) | (1 << (self::DEFINED - 321)) | (1 << (self::DEFINE - 321)) | (1 << (self::DEFINER - 321)) | (1 << (self::DEGREE - 321)) | (1 << (self::DELAY - 321)) | (1 << (self::DELEGATE - 321)) | (1 << (self::DELETE_ALL - 321)) | (1 << (self::DELETE - 321)) | (1 << (self::DELETEXML - 321)) | (1 << (self::DEMAND - 321)) | (1 << (self::DENSE_RANKM - 321)) | (1 << (self::DEPENDENT - 321)) | (1 << (self::DEPTH - 321)) | (1 << (self::DEQUEUE - 321)) | (1 << (self::DEREF - 321)) | (1 << (self::DEREF_NO_REWRITE - 321)) | (1 << (self::DESTROY - 321)) | (1 << (self::DETACHED - 321)) | (1 << (self::DETERMINES - 321)) | (1 << (self::DETERMINISTIC - 321)) | (1 << (self::DICTIONARY - 321)) | (1 << (self::DIMENSION - 321)) | (1 << (self::DIMENSIONS - 321)) | (1 << (self::DIRECT_LOAD - 321)) | (1 << (self::DIRECTORY - 321)) | (1 << (self::DIRECT_PATH - 321)) | (1 << (self::DISABLE_ALL - 321)) | (1 << (self::DISABLE - 321)) | (1 << (self::DISABLE_PARALLEL_DML - 321)))) !== 0) || (((($_la - 385)) & ~0x3f) === 0 && ((1 << ($_la - 385)) & ((1 << (self::DISABLE_PRESET - 385)) | (1 << (self::DISABLE_RPKE - 385)) | (1 << (self::DISALLOW - 385)) | (1 << (self::DISASSOCIATE - 385)) | (1 << (self::DISCARD - 385)) | (1 << (self::DISCONNECT - 385)) | (1 << (self::DISK - 385)) | (1 << (self::DISKGROUP - 385)) | (1 << (self::DISKS - 385)) | (1 << (self::DISMOUNT - 385)) | (1 << (self::DISTINGUISHED - 385)) | (1 << (self::DISTRIBUTED - 385)) | (1 << (self::DISTRIBUTE - 385)) | (1 << (self::DML - 385)) | (1 << (self::DML_UPDATE - 385)) | (1 << (self::DOCFIDELITY - 385)) | (1 << (self::DOCUMENT - 385)) | (1 << (self::DOMAIN_INDEX_FILTER - 385)) | (1 << (self::DOMAIN_INDEX_NO_SORT - 385)) | (1 << (self::DOMAIN_INDEX_SORT - 385)) | (1 << (self::DOUBLE - 385)) | (1 << (self::DOWNGRADE - 385)) | (1 << (self::DRIVING_SITE - 385)) | (1 << (self::DROP_COLUMN - 385)) | (1 << (self::DROP_GROUP - 385)) | (1 << (self::DSINTERVAL_UNCONSTRAINED - 385)) | (1 << (self::DST_UPGRADE_INSERT_CONV - 385)) | (1 << (self::DUMP - 385)) | (1 << (self::DUPLICATE - 385)) | (1 << (self::DV - 385)) | (1 << (self::DYNAMIC - 385)) | (1 << (self::DYNAMIC_SAMPLING - 385)) | (1 << (self::DYNAMIC_SAMPLING_EST_CDN - 385)) | (1 << (self::EACH - 385)) | (1 << (self::EDITIONABLE - 385)) | (1 << (self::EDITION - 385)) | (1 << (self::EDITIONING - 385)) | (1 << (self::EDITIONS - 385)) | (1 << (self::ELEMENT - 385)) | (1 << (self::ELIM_GROUPBY - 385)) | (1 << (self::ELIMINATE_JOIN - 385)) | (1 << (self::ELIMINATE_OBY - 385)) | (1 << (self::ELIMINATE_OUTER_JOIN - 385)) | (1 << (self::EM - 385)) | (1 << (self::EMPTY_BLOB - 385)) | (1 << (self::EMPTY_CLOB - 385)) | (1 << (self::EMPTY - 385)) | (1 << (self::ENABLE_ALL - 385)) | (1 << (self::ENABLE - 385)) | (1 << (self::ENABLE_PARALLEL_DML - 385)) | (1 << (self::ENABLE_PRESET - 385)) | (1 << (self::ENCODING - 385)) | (1 << (self::ENCRYPT - 385)) | (1 << (self::ENCRYPTION - 385)) | (1 << (self::END_OUTLINE_DATA - 385)) | (1 << (self::ENFORCED - 385)) | (1 << (self::ENFORCE - 385)))) !== 0) || (((($_la - 449)) & ~0x3f) === 0 && ((1 << ($_la - 449)) & ((1 << (self::ENQUEUE - 449)) | (1 << (self::ENTERPRISE - 449)) | (1 << (self::ENTITYESCAPING - 449)) | (1 << (self::ENTRY - 449)) | (1 << (self::EQUIPART - 449)) | (1 << (self::ERR - 449)) | (1 << (self::ERROR_ARGUMENT - 449)) | (1 << (self::ERROR - 449)) | (1 << (self::ERROR_ON_OVERLAP_TIME - 449)) | (1 << (self::ERRORS - 449)) | (1 << (self::ESCAPE - 449)) | (1 << (self::ESTIMATE - 449)) | (1 << (self::EVAL - 449)) | (1 << (self::EVALNAME - 449)) | (1 << (self::EVALUATE - 449)) | (1 << (self::EVALUATION - 449)) | (1 << (self::EVENTS - 449)) | (1 << (self::EVERY - 449)) | (1 << (self::EXCEPT - 449)) | (1 << (self::EXCEPTION - 449)) | (1 << (self::EXCEPTION_INIT - 449)) | (1 << (self::EXCEPTIONS - 449)) | (1 << (self::EXCHANGE - 449)) | (1 << (self::EXCLUDE - 449)) | (1 << (self::EXCLUDING - 449)) | (1 << (self::EXECUTE - 449)) | (1 << (self::EXEMPT - 449)) | (1 << (self::EXISTING - 449)) | (1 << (self::EXISTS - 449)) | (1 << (self::EXISTSNODE - 449)) | (1 << (self::EXIT - 449)) | (1 << (self::EXPAND_GSET_TO_UNION - 449)) | (1 << (self::EXPAND_TABLE - 449)) | (1 << (self::EXP - 449)) | (1 << (self::EXPIRE - 449)) | (1 << (self::EXPLAIN - 449)) | (1 << (self::EXPLOSION - 449)) | (1 << (self::EXPORT - 449)) | (1 << (self::EXPR_CORR_CHECK - 449)) | (1 << (self::EXPRESS - 449)) | (1 << (self::EXTENDS - 449)) | (1 << (self::EXTENT - 449)) | (1 << (self::EXTENTS - 449)) | (1 << (self::EXTERNAL - 449)) | (1 << (self::EXTERNALLY - 449)) | (1 << (self::EXTRACTCLOBXML - 449)) | (1 << (self::EXTRACT - 449)) | (1 << (self::EXTRACTVALUE - 449)) | (1 << (self::EXTRA - 449)) | (1 << (self::FACILITY - 449)) | (1 << (self::FACT - 449)) | (1 << (self::FACTOR - 449)) | (1 << (self::FACTORIZE_JOIN - 449)) | (1 << (self::FAILED - 449)) | (1 << (self::FAILED_LOGIN_ATTEMPTS - 449)) | (1 << (self::FAILGROUP - 449)) | (1 << (self::FAILOVER - 449)) | (1 << (self::FAILURE - 449)) | (1 << (self::FALSE - 449)) | (1 << (self::FAMILY - 449)) | (1 << (self::FAR - 449)) | (1 << (self::FAST - 449)) | (1 << (self::FASTSTART - 449)))) !== 0) || (((($_la - 513)) & ~0x3f) === 0 && ((1 << ($_la - 513)) & ((1 << (self::FBTSCAN - 513)) | (1 << (self::FEATURE_DETAILS - 513)) | (1 << (self::FEATURE_ID - 513)) | (1 << (self::FEATURE_SET - 513)) | (1 << (self::FEATURE_VALUE - 513)) | (1 << (self::FETCH - 513)) | (1 << (self::FILE - 513)) | (1 << (self::FILE_NAME_CONVERT - 513)) | (1 << (self::FILESYSTEM_LIKE_LOGGING - 513)) | (1 << (self::FILTER - 513)) | (1 << (self::FINAL - 513)) | (1 << (self::FINE - 513)) | (1 << (self::FINISH - 513)) | (1 << (self::FIRST - 513)) | (1 << (self::FIRSTM - 513)) | (1 << (self::FIRST_ROWS - 513)) | (1 << (self::FIRST_VALUE - 513)) | (1 << (self::FIXED_VIEW_DATA - 513)) | (1 << (self::FLAGGER - 513)) | (1 << (self::FLASHBACK - 513)) | (1 << (self::FLASH_CACHE - 513)) | (1 << (self::FLOAT - 513)) | (1 << (self::FLOB - 513)) | (1 << (self::FLOOR - 513)) | (1 << (self::FLUSH - 513)) | (1 << (self::FOLDER - 513)) | (1 << (self::FOLLOWING - 513)) | (1 << (self::FOLLOWS - 513)) | (1 << (self::FORALL - 513)) | (1 << (self::FORCE - 513)) | (1 << (self::FORCE_XML_QUERY_REWRITE - 513)) | (1 << (self::FOREIGN - 513)) | (1 << (self::FOREVER - 513)) | (1 << (self::FORMAT - 513)) | (1 << (self::FORWARD - 513)) | (1 << (self::FRAGMENT_NUMBER - 513)) | (1 << (self::FREELIST - 513)) | (1 << (self::FREELISTS - 513)) | (1 << (self::FREEPOOLS - 513)) | (1 << (self::FRESH - 513)) | (1 << (self::FROM_TZ - 513)) | (1 << (self::FULL - 513)) | (1 << (self::FULL_OUTER_JOIN_TO_OUTER - 513)) | (1 << (self::FUNCTION - 513)) | (1 << (self::FUNCTIONS - 513)) | (1 << (self::GATHER_OPTIMIZER_STATISTICS - 513)) | (1 << (self::GATHER_PLAN_STATISTICS - 513)) | (1 << (self::GBY_CONC_ROLLUP - 513)) | (1 << (self::GBY_PUSHDOWN - 513)) | (1 << (self::GENERATED - 513)) | (1 << (self::GET - 513)) | (1 << (self::GLOBAL - 513)) | (1 << (self::GLOBALLY - 513)) | (1 << (self::GLOBAL_NAME - 513)) | (1 << (self::GLOBAL_TOPIC_ENABLED - 513)) | (1 << (self::GROUP_BY - 513)) | (1 << (self::GROUP_ID - 513)) | (1 << (self::GROUPING - 513)) | (1 << (self::GROUPING_ID - 513)))) !== 0) || (((($_la - 577)) & ~0x3f) === 0 && ((1 << ($_la - 577)) & ((1 << (self::GROUPS - 577)) | (1 << (self::GUARANTEED - 577)) | (1 << (self::GUARANTEE - 577)) | (1 << (self::GUARD - 577)) | (1 << (self::HASH_AJ - 577)) | (1 << (self::HASH - 577)) | (1 << (self::HASHKEYS - 577)) | (1 << (self::HASH_SJ - 577)) | (1 << (self::HEADER - 577)) | (1 << (self::HEAP - 577)) | (1 << (self::HELP - 577)) | (1 << (self::HEXTORAW - 577)) | (1 << (self::HEXTOREF - 577)) | (1 << (self::HIDDEN_KEYWORD - 577)) | (1 << (self::HIDE - 577)) | (1 << (self::HIERARCHY - 577)) | (1 << (self::HIGH - 577)) | (1 << (self::HINTSET_BEGIN - 577)) | (1 << (self::HINTSET_END - 577)) | (1 << (self::HOT - 577)) | (1 << (self::HOUR - 577)) | (1 << (self::HWM_BROKERED - 577)) | (1 << (self::HYBRID - 577)) | (1 << (self::IDENTIFIER - 577)) | (1 << (self::IDENTITY - 577)) | (1 << (self::IDGENERATORS - 577)) | (1 << (self::ID - 577)) | (1 << (self::IDLE_TIME - 577)) | (1 << (self::IF - 577)) | (1 << (self::IGNORE - 577)) | (1 << (self::IGNORE_OPTIM_EMBEDDED_HINTS - 577)) | (1 << (self::IGNORE_ROW_ON_DUPKEY_INDEX - 577)) | (1 << (self::IGNORE_WHERE_CLAUSE - 577)) | (1 << (self::ILM - 577)) | (1 << (self::IMMEDIATE - 577)) | (1 << (self::IMPACT - 577)) | (1 << (self::IMPORT - 577)) | (1 << (self::INACTIVE - 577)) | (1 << (self::INCLUDE - 577)) | (1 << (self::INCLUDE_VERSION - 577)) | (1 << (self::INCLUDING - 577)) | (1 << (self::INCREMENTAL - 577)) | (1 << (self::INCREMENT - 577)) | (1 << (self::INCR - 577)) | (1 << (self::INDENT - 577)) | (1 << (self::INDEX_ASC - 577)) | (1 << (self::INDEX_COMBINE - 577)) | (1 << (self::INDEX_DESC - 577)) | (1 << (self::INDEXED - 577)) | (1 << (self::INDEXES - 577)) | (1 << (self::INDEX_FFS - 577)) | (1 << (self::INDEX_FILTER - 577)) | (1 << (self::INDEXING - 577)) | (1 << (self::INDEX_JOIN - 577)) | (1 << (self::INDEX_ROWS - 577)) | (1 << (self::INDEX_RRS - 577)) | (1 << (self::INDEX_RS_ASC - 577)) | (1 << (self::INDEX_RS_DESC - 577)) | (1 << (self::INDEX_RS - 577)) | (1 << (self::INDEX_SCAN - 577)) | (1 << (self::INDEX_SKIP_SCAN - 577)))) !== 0) || (((($_la - 641)) & ~0x3f) === 0 && ((1 << ($_la - 641)) & ((1 << (self::INDEX_SS_ASC - 641)) | (1 << (self::INDEX_SS_DESC - 641)) | (1 << (self::INDEX_SS - 641)) | (1 << (self::INDEX_STATS - 641)) | (1 << (self::INDEXTYPE - 641)) | (1 << (self::INDEXTYPES - 641)) | (1 << (self::INDICATOR - 641)) | (1 << (self::INDICES - 641)) | (1 << (self::INFINITE - 641)) | (1 << (self::INFORMATIONAL - 641)) | (1 << (self::INHERIT - 641)) | (1 << (self::INITCAP - 641)) | (1 << (self::INITIAL - 641)) | (1 << (self::INITIALIZED - 641)) | (1 << (self::INITIALLY - 641)) | (1 << (self::INITRANS - 641)) | (1 << (self::INLINE - 641)) | (1 << (self::INLINE_XMLTYPE_NT - 641)) | (1 << (self::INMEMORY - 641)) | (1 << (self::IN_MEMORY_METADATA - 641)) | (1 << (self::INMEMORY_PRUNING - 641)) | (1 << (self::INNER - 641)) | (1 << (self::INOUT - 641)) | (1 << (self::INPLACE - 641)) | (1 << (self::INSERTCHILDXMLAFTER - 641)) | (1 << (self::INSERTCHILDXMLBEFORE - 641)) | (1 << (self::INSERTCHILDXML - 641)) | (1 << (self::INSERTXMLAFTER - 641)) | (1 << (self::INSERTXMLBEFORE - 641)) | (1 << (self::INSTANCE - 641)) | (1 << (self::INSTANCES - 641)) | (1 << (self::INSTANTIABLE - 641)) | (1 << (self::INSTANTLY - 641)) | (1 << (self::INSTEAD - 641)) | (1 << (self::INSTR2 - 641)) | (1 << (self::INSTR4 - 641)) | (1 << (self::INSTRB - 641)) | (1 << (self::INSTRC - 641)) | (1 << (self::INSTR - 641)) | (1 << (self::INTEGER - 641)) | (1 << (self::INTERLEAVED - 641)) | (1 << (self::INTERMEDIATE - 641)) | (1 << (self::INTERNAL_CONVERT - 641)) | (1 << (self::INTERNAL_USE - 641)) | (1 << (self::INTERPRETED - 641)) | (1 << (self::INTERVAL - 641)) | (1 << (self::INT - 641)) | (1 << (self::INVALIDATE - 641)) | (1 << (self::INVISIBLE - 641)) | (1 << (self::IN_XQUERY - 641)) | (1 << (self::ISOLATION - 641)) | (1 << (self::ISOLATION_LEVEL - 641)) | (1 << (self::ITERATE - 641)) | (1 << (self::ITERATION_NUMBER - 641)) | (1 << (self::JAVA - 641)) | (1 << (self::JOB - 641)) | (1 << (self::JOIN - 641)) | (1 << (self::JSON_ARRAYAGG - 641)) | (1 << (self::JSON_ARRAY - 641)))) !== 0) || (((($_la - 705)) & ~0x3f) === 0 && ((1 << ($_la - 705)) & ((1 << (self::JSON_EQUAL - 705)) | (1 << (self::JSON_EXISTS2 - 705)) | (1 << (self::JSON_EXISTS - 705)) | (1 << (self::JSONGET - 705)) | (1 << (self::JSON - 705)) | (1 << (self::JSON_OBJECTAGG - 705)) | (1 << (self::JSON_OBJECT - 705)) | (1 << (self::JSONPARSE - 705)) | (1 << (self::JSON_QUERY - 705)) | (1 << (self::JSON_SERIALIZE - 705)) | (1 << (self::JSON_TABLE - 705)) | (1 << (self::JSON_TEXTCONTAINS2 - 705)) | (1 << (self::JSON_TEXTCONTAINS - 705)) | (1 << (self::JSON_VALUE - 705)) | (1 << (self::KEEP_DUPLICATES - 705)) | (1 << (self::KEEP - 705)) | (1 << (self::KERBEROS - 705)) | (1 << (self::KEY - 705)) | (1 << (self::KEY_LENGTH - 705)) | (1 << (self::KEYSIZE - 705)) | (1 << (self::KEYS - 705)) | (1 << (self::KEYSTORE - 705)) | (1 << (self::KILL - 705)) | (1 << (self::LABEL - 705)) | (1 << (self::LANGUAGE - 705)) | (1 << (self::LAST_DAY - 705)) | (1 << (self::LAST - 705)) | (1 << (self::LAST_VALUE - 705)) | (1 << (self::LATERAL - 705)) | (1 << (self::LAX - 705)) | (1 << (self::LAYER - 705)) | (1 << (self::LDAP_REGISTRATION_ENABLED - 705)) | (1 << (self::LDAP_REGISTRATION - 705)) | (1 << (self::LDAP_REG_SYNC_INTERVAL - 705)) | (1 << (self::LEADING - 705)) | (1 << (self::LEFT - 705)) | (1 << (self::LENGTH2 - 705)) | (1 << (self::LENGTH4 - 705)) | (1 << (self::LENGTHB - 705)) | (1 << (self::LENGTHC - 705)) | (1 << (self::LENGTH - 705)) | (1 << (self::LESS - 705)) | (1 << (self::LEVEL - 705)) | (1 << (self::LEVELS - 705)) | (1 << (self::LIBRARY - 705)) | (1 << (self::LIFECYCLE - 705)) | (1 << (self::LIFE - 705)) | (1 << (self::LIFETIME - 705)) | (1 << (self::LIKE2 - 705)) | (1 << (self::LIKE4 - 705)) | (1 << (self::LIKEC - 705)) | (1 << (self::LIKE_EXPAND - 705)) | (1 << (self::LIMIT - 705)) | (1 << (self::LINEAR - 705)) | (1 << (self::LINK - 705)) | (1 << (self::LIST - 705)) | (1 << (self::LN - 705)) | (1 << (self::LNNVL - 705)) | (1 << (self::LOAD - 705)) | (1 << (self::LOB - 705)) | (1 << (self::LOBNVL - 705)) | (1 << (self::LOBS - 705)) | (1 << (self::LOCAL_INDEXES - 705)))) !== 0) || (((($_la - 769)) & ~0x3f) === 0 && ((1 << ($_la - 769)) & ((1 << (self::LOCAL - 769)) | (1 << (self::LOCALTIME - 769)) | (1 << (self::LOCALTIMESTAMP - 769)) | (1 << (self::LOCATION - 769)) | (1 << (self::LOCATOR - 769)) | (1 << (self::LOCKED - 769)) | (1 << (self::LOCKING - 769)) | (1 << (self::LOGFILE - 769)) | (1 << (self::LOGFILES - 769)) | (1 << (self::LOGGING - 769)) | (1 << (self::LOGICAL - 769)) | (1 << (self::LOGICAL_READS_PER_CALL - 769)) | (1 << (self::LOGICAL_READS_PER_SESSION - 769)) | (1 << (self::LOG - 769)) | (1 << (self::LOGMINING - 769)) | (1 << (self::LOGOFF - 769)) | (1 << (self::LOGON - 769)) | (1 << (self::LOG_READ_ONLY_VIOLATIONS - 769)) | (1 << (self::LONG - 769)) | (1 << (self::LOOP - 769)) | (1 << (self::LOWER - 769)) | (1 << (self::LOW - 769)) | (1 << (self::LPAD - 769)) | (1 << (self::LTRIM - 769)) | (1 << (self::MAIN - 769)) | (1 << (self::MAKE_REF - 769)) | (1 << (self::MANAGED - 769)) | (1 << (self::MANAGE - 769)) | (1 << (self::MANAGEMENT - 769)) | (1 << (self::MANAGER - 769)) | (1 << (self::MANUAL - 769)) | (1 << (self::MAP - 769)) | (1 << (self::MAPPING - 769)) | (1 << (self::MASTER - 769)) | (1 << (self::MATCHED - 769)) | (1 << (self::MATCHES - 769)) | (1 << (self::MATCH - 769)) | (1 << (self::MATCH_NUMBER - 769)) | (1 << (self::MATCH_RECOGNIZE - 769)) | (1 << (self::MATERIALIZED - 769)) | (1 << (self::MATERIALIZE - 769)) | (1 << (self::MAXARCHLOGS - 769)) | (1 << (self::MAXDATAFILES - 769)) | (1 << (self::MAXEXTENTS - 769)) | (1 << (self::MAXIMIZE - 769)) | (1 << (self::MAXINSTANCES - 769)) | (1 << (self::MAXLOGFILES - 769)) | (1 << (self::MAXLOGHISTORY - 769)) | (1 << (self::MAXLOGMEMBERS - 769)) | (1 << (self::MAX_SHARED_TEMP_SIZE - 769)) | (1 << (self::MAXSIZE - 769)) | (1 << (self::MAXTRANS - 769)) | (1 << (self::MAXVALUE - 769)) | (1 << (self::MEASURE - 769)) | (1 << (self::MEASURES - 769)) | (1 << (self::MEDIUM - 769)) | (1 << (self::MEMBER - 769)) | (1 << (self::MEMCOMPRESS - 769)) | (1 << (self::MEMORY - 769)) | (1 << (self::MERGEACTIONS - 769)) | (1 << (self::MERGE_AJ - 769)) | (1 << (self::MERGE_CONST_ON - 769)) | (1 << (self::MERGE - 769)))) !== 0) || (((($_la - 833)) & ~0x3f) === 0 && ((1 << ($_la - 833)) & ((1 << (self::MERGE_SJ - 833)) | (1 << (self::METADATA - 833)) | (1 << (self::METHOD - 833)) | (1 << (self::MIGRATE - 833)) | (1 << (self::MIGRATION - 833)) | (1 << (self::MINEXTENTS - 833)) | (1 << (self::MINIMIZE - 833)) | (1 << (self::MINIMUM - 833)) | (1 << (self::MINING - 833)) | (1 << (self::MINUS_NULL - 833)) | (1 << (self::MINUTE - 833)) | (1 << (self::MINVALUE - 833)) | (1 << (self::MIRRORCOLD - 833)) | (1 << (self::MIRRORHOT - 833)) | (1 << (self::MIRROR - 833)) | (1 << (self::MLSLABEL - 833)) | (1 << (self::MODEL_COMPILE_SUBQUERY - 833)) | (1 << (self::MODEL_DONTVERIFY_UNIQUENESS - 833)) | (1 << (self::MODEL_DYNAMIC_SUBQUERY - 833)) | (1 << (self::MODEL_MIN_ANALYSIS - 833)) | (1 << (self::MODEL - 833)) | (1 << (self::MODEL_NB - 833)) | (1 << (self::MODEL_NO_ANALYSIS - 833)) | (1 << (self::MODEL_PBY - 833)) | (1 << (self::MODEL_PUSH_REF - 833)) | (1 << (self::MODEL_SV - 833)) | (1 << (self::MODIFICATION - 833)) | (1 << (self::MODIFY_COLUMN_TYPE - 833)) | (1 << (self::MODIFY - 833)) | (1 << (self::MOD - 833)) | (1 << (self::MODULE - 833)) | (1 << (self::MONITORING - 833)) | (1 << (self::MONITOR - 833)) | (1 << (self::MONTH - 833)) | (1 << (self::MONTHS_BETWEEN - 833)) | (1 << (self::MONTHS - 833)) | (1 << (self::MOUNT - 833)) | (1 << (self::MOUNTPATH - 833)) | (1 << (self::MOVEMENT - 833)) | (1 << (self::MOVE - 833)) | (1 << (self::MULTIDIMENSIONAL - 833)) | (1 << (self::MULTISET - 833)) | (1 << (self::MV_MERGE - 833)) | (1 << (self::NAMED - 833)) | (1 << (self::NAME - 833)) | (1 << (self::NAMESPACE - 833)) | (1 << (self::NAN - 833)) | (1 << (self::NANVL - 833)) | (1 << (self::NATIONAL - 833)) | (1 << (self::NATIVE_FULL_OUTER_JOIN - 833)) | (1 << (self::NATIVE - 833)) | (1 << (self::NATURAL - 833)) | (1 << (self::NAV - 833)) | (1 << (self::NCHAR_CS - 833)) | (1 << (self::NCHAR - 833)) | (1 << (self::NCHR - 833)) | (1 << (self::NCLOB - 833)) | (1 << (self::NEEDED - 833)) | (1 << (self::NEG - 833)) | (1 << (self::NESTED - 833)) | (1 << (self::NESTED_TABLE_FAST_INSERT - 833)))) !== 0) || (((($_la - 897)) & ~0x3f) === 0 && ((1 << ($_la - 897)) & ((1 << (self::NESTED_TABLE_GET_REFS - 897)) | (1 << (self::NESTED_TABLE_ID - 897)) | (1 << (self::NESTED_TABLE_SET_REFS - 897)) | (1 << (self::NESTED_TABLE_SET_SETID - 897)) | (1 << (self::NETWORK - 897)) | (1 << (self::NEVER - 897)) | (1 << (self::NEW - 897)) | (1 << (self::NEW_TIME - 897)) | (1 << (self::NEXT_DAY - 897)) | (1 << (self::NEXT - 897)) | (1 << (self::NL_AJ - 897)) | (1 << (self::NLJ_BATCHING - 897)) | (1 << (self::NLJ_INDEX_FILTER - 897)) | (1 << (self::NLJ_INDEX_SCAN - 897)) | (1 << (self::NLJ_PREFETCH - 897)) | (1 << (self::NLS_CALENDAR - 897)) | (1 << (self::NLS_CHARACTERSET - 897)) | (1 << (self::NLS_CHARSET_DECL_LEN - 897)) | (1 << (self::NLS_CHARSET_ID - 897)) | (1 << (self::NLS_CHARSET_NAME - 897)) | (1 << (self::NLS_COMP - 897)) | (1 << (self::NLS_CURRENCY - 897)) | (1 << (self::NLS_DATE_FORMAT - 897)) | (1 << (self::NLS_DATE_LANGUAGE - 897)) | (1 << (self::NLS_INITCAP - 897)) | (1 << (self::NLS_ISO_CURRENCY - 897)) | (1 << (self::NL_SJ - 897)) | (1 << (self::NLS_LANG - 897)) | (1 << (self::NLS_LANGUAGE - 897)) | (1 << (self::NLS_LENGTH_SEMANTICS - 897)) | (1 << (self::NLS_LOWER - 897)) | (1 << (self::NLS_NCHAR_CONV_EXCP - 897)) | (1 << (self::NLS_NUMERIC_CHARACTERS - 897)) | (1 << (self::NLS_SORT - 897)) | (1 << (self::NLSSORT - 897)) | (1 << (self::NLS_SPECIAL_CHARS - 897)) | (1 << (self::NLS_TERRITORY - 897)) | (1 << (self::NLS_UPPER - 897)) | (1 << (self::NO_ACCESS - 897)) | (1 << (self::NO_ADAPTIVE_PLAN - 897)) | (1 << (self::NO_ANSI_REARCH - 897)) | (1 << (self::NOAPPEND - 897)) | (1 << (self::NOARCHIVELOG - 897)) | (1 << (self::NOAUDIT - 897)) | (1 << (self::NO_AUTO_REOPTIMIZE - 897)) | (1 << (self::NO_BASETABLE_MULTIMV_REWRITE - 897)) | (1 << (self::NO_BATCH_TABLE_ACCESS_BY_ROWID - 897)) | (1 << (self::NO_BIND_AWARE - 897)) | (1 << (self::NO_BUFFER - 897)) | (1 << (self::NOCACHE - 897)) | (1 << (self::NO_CARTESIAN - 897)) | (1 << (self::NO_CHECK_ACL_REWRITE - 897)) | (1 << (self::NO_CLUSTER_BY_ROWID - 897)) | (1 << (self::NO_CLUSTERING - 897)) | (1 << (self::NO_COALESCE_SQ - 897)) | (1 << (self::NO_COMMON_DATA - 897)) | (1 << (self::NO_CONNECT_BY_CB_WHR_ONLY - 897)) | (1 << (self::NO_CONNECT_BY_COMBINE_SW - 897)) | (1 << (self::NO_CONNECT_BY_COST_BASED - 897)) | (1 << (self::NO_CONNECT_BY_ELIM_DUPS - 897)) | (1 << (self::NO_CONNECT_BY_FILTERING - 897)) | (1 << (self::NOCOPY - 897)) | (1 << (self::NO_COST_XML_QUERY_REWRITE - 897)))) !== 0) || (((($_la - 961)) & ~0x3f) === 0 && ((1 << ($_la - 961)) & ((1 << (self::NO_CPU_COSTING - 961)) | (1 << (self::NOCPU_COSTING - 961)) | (1 << (self::NOCYCLE - 961)) | (1 << (self::NO_DATA_SECURITY_REWRITE - 961)) | (1 << (self::NO_DECORRELATE - 961)) | (1 << (self::NODELAY - 961)) | (1 << (self::NO_DOMAIN_INDEX_FILTER - 961)) | (1 << (self::NO_DST_UPGRADE_INSERT_CONV - 961)) | (1 << (self::NO_ELIM_GROUPBY - 961)) | (1 << (self::NO_ELIMINATE_JOIN - 961)) | (1 << (self::NO_ELIMINATE_OBY - 961)) | (1 << (self::NO_ELIMINATE_OUTER_JOIN - 961)) | (1 << (self::NOENTITYESCAPING - 961)) | (1 << (self::NO_EXPAND_GSET_TO_UNION - 961)) | (1 << (self::NO_EXPAND - 961)) | (1 << (self::NO_EXPAND_TABLE - 961)) | (1 << (self::NO_FACT - 961)) | (1 << (self::NO_FACTORIZE_JOIN - 961)) | (1 << (self::NO_FILTERING - 961)) | (1 << (self::NOFORCE - 961)) | (1 << (self::NO_FULL_OUTER_JOIN_TO_OUTER - 961)) | (1 << (self::NO_GATHER_OPTIMIZER_STATISTICS - 961)) | (1 << (self::NO_GBY_PUSHDOWN - 961)) | (1 << (self::NOGUARANTEE - 961)) | (1 << (self::NO_INDEX_FFS - 961)) | (1 << (self::NO_INDEX - 961)) | (1 << (self::NO_INDEX_SS - 961)) | (1 << (self::NO_INMEMORY - 961)) | (1 << (self::NO_INMEMORY_PRUNING - 961)) | (1 << (self::NOKEEP - 961)) | (1 << (self::NO_LOAD - 961)) | (1 << (self::NOLOCAL - 961)) | (1 << (self::NOLOGGING - 961)) | (1 << (self::NOMAPPING - 961)) | (1 << (self::NOMAXVALUE - 961)) | (1 << (self::NO_MERGE - 961)) | (1 << (self::NOMINIMIZE - 961)) | (1 << (self::NOMINVALUE - 961)) | (1 << (self::NO_MODEL_PUSH_REF - 961)) | (1 << (self::NO_MONITORING - 961)) | (1 << (self::NOMONITORING - 961)) | (1 << (self::NO_MONITOR - 961)) | (1 << (self::NO_MULTIMV_REWRITE - 961)) | (1 << (self::NO_NATIVE_FULL_OUTER_JOIN - 961)) | (1 << (self::NONBLOCKING - 961)) | (1 << (self::NONEDITIONABLE - 961)) | (1 << (self::NONE - 961)) | (1 << (self::NO_NLJ_BATCHING - 961)) | (1 << (self::NO_NLJ_PREFETCH - 961)) | (1 << (self::NO - 961)) | (1 << (self::NONSCHEMA - 961)) | (1 << (self::NO_OBJECT_LINK - 961)) | (1 << (self::NOORDER - 961)) | (1 << (self::NO_ORDER_ROLLUPS - 961)) | (1 << (self::NO_OUTER_JOIN_TO_ANTI - 961)) | (1 << (self::NO_OUTER_JOIN_TO_INNER - 961)) | (1 << (self::NOOVERRIDE - 961)) | (1 << (self::NO_PARALLEL_INDEX - 961)) | (1 << (self::NOPARALLEL_INDEX - 961)) | (1 << (self::NO_PARALLEL - 961)) | (1 << (self::NOPARALLEL - 961)) | (1 << (self::NO_PARTIAL_COMMIT - 961)) | (1 << (self::NO_PARTIAL_JOIN - 961)) | (1 << (self::NO_PARTIAL_ROLLUP_PUSHDOWN - 961)))) !== 0) || (((($_la - 1025)) & ~0x3f) === 0 && ((1 << ($_la - 1025)) & ((1 << (self::NOPARTITION - 1025)) | (1 << (self::NO_PLACE_DISTINCT - 1025)) | (1 << (self::NO_PLACE_GROUP_BY - 1025)) | (1 << (self::NO_PQ_CONCURRENT_UNION - 1025)) | (1 << (self::NO_PQ_MAP - 1025)) | (1 << (self::NO_PQ_REPLICATE - 1025)) | (1 << (self::NO_PQ_SKEW - 1025)) | (1 << (self::NO_PRUNE_GSETS - 1025)) | (1 << (self::NO_PULL_PRED - 1025)) | (1 << (self::NO_PUSH_PRED - 1025)) | (1 << (self::NO_PUSH_SUBQ - 1025)) | (1 << (self::NO_PX_FAULT_TOLERANCE - 1025)) | (1 << (self::NO_PX_JOIN_FILTER - 1025)) | (1 << (self::NO_QKN_BUFF - 1025)) | (1 << (self::NO_QUERY_TRANSFORMATION - 1025)) | (1 << (self::NO_REF_CASCADE - 1025)) | (1 << (self::NORELOCATE - 1025)) | (1 << (self::NORELY - 1025)) | (1 << (self::NOREPAIR - 1025)) | (1 << (self::NOREPLAY - 1025)) | (1 << (self::NORESETLOGS - 1025)) | (1 << (self::NO_RESULT_CACHE - 1025)) | (1 << (self::NOREVERSE - 1025)) | (1 << (self::NO_REWRITE - 1025)) | (1 << (self::NOREWRITE - 1025)) | (1 << (self::NORMAL - 1025)) | (1 << (self::NO_ROOT_SW_FOR_LOCAL - 1025)) | (1 << (self::NOROWDEPENDENCIES - 1025)) | (1 << (self::NOSCHEMACHECK - 1025)) | (1 << (self::NOSEGMENT - 1025)) | (1 << (self::NO_SEMIJOIN - 1025)) | (1 << (self::NO_SEMI_TO_INNER - 1025)) | (1 << (self::NO_SET_TO_JOIN - 1025)) | (1 << (self::NOSORT - 1025)) | (1 << (self::NO_SQL_TRANSLATION - 1025)) | (1 << (self::NO_SQL_TUNE - 1025)) | (1 << (self::NO_STAR_TRANSFORMATION - 1025)) | (1 << (self::NO_STATEMENT_QUEUING - 1025)) | (1 << (self::NO_STATS_GSETS - 1025)) | (1 << (self::NOSTRICT - 1025)) | (1 << (self::NO_SUBQUERY_PRUNING - 1025)) | (1 << (self::NO_SUBSTRB_PAD - 1025)) | (1 << (self::NO_SWAP_JOIN_INPUTS - 1025)) | (1 << (self::NOSWITCH - 1025)) | (1 << (self::NO_TABLE_LOOKUP_BY_NL - 1025)) | (1 << (self::NO_TEMP_TABLE - 1025)) | (1 << (self::NOTHING - 1025)) | (1 << (self::NOTIFICATION - 1025)) | (1 << (self::NO_TRANSFORM_DISTINCT_AGG - 1025)) | (1 << (self::NO_UNNEST - 1025)) | (1 << (self::NO_USE_CUBE - 1025)) | (1 << (self::NO_USE_HASH_AGGREGATION - 1025)) | (1 << (self::NO_USE_HASH_GBY_FOR_PUSHDOWN - 1025)) | (1 << (self::NO_USE_HASH - 1025)) | (1 << (self::NO_USE_INVISIBLE_INDEXES - 1025)) | (1 << (self::NO_USE_MERGE - 1025)) | (1 << (self::NO_USE_NL - 1025)) | (1 << (self::NO_USE_VECTOR_AGGREGATION - 1025)) | (1 << (self::NOVALIDATE - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_DIMS - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_FACT - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM - 1025)))) !== 0) || (((($_la - 1089)) & ~0x3f) === 0 && ((1 << ($_la - 1089)) & ((1 << (self::NO_XDB_FASTPATH_INSERT - 1089)) | (1 << (self::NO_XML_DML_REWRITE - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE_IN_SELECT - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE - 1089)) | (1 << (self::NO_XML_QUERY_REWRITE - 1089)) | (1 << (self::NO_ZONEMAP - 1089)) | (1 << (self::NTH_VALUE - 1089)) | (1 << (self::NULLIF - 1089)) | (1 << (self::NULLS - 1089)) | (1 << (self::NUMBER - 1089)) | (1 << (self::NUMERIC - 1089)) | (1 << (self::NUM_INDEX_KEYS - 1089)) | (1 << (self::NUMTODSINTERVAL - 1089)) | (1 << (self::NUMTOYMINTERVAL - 1089)) | (1 << (self::NVARCHAR2 - 1089)) | (1 << (self::NVL2 - 1089)) | (1 << (self::OBJECT2XML - 1089)) | (1 << (self::OBJECT - 1089)) | (1 << (self::OBJ_ID - 1089)) | (1 << (self::OBJNO - 1089)) | (1 << (self::OBJNO_REUSE - 1089)) | (1 << (self::OCCURENCES - 1089)) | (1 << (self::OFFLINE - 1089)) | (1 << (self::OFF - 1089)) | (1 << (self::OFFSET - 1089)) | (1 << (self::OIDINDEX - 1089)) | (1 << (self::OID - 1089)) | (1 << (self::OLAP - 1089)) | (1 << (self::OLD - 1089)) | (1 << (self::OLD_PUSH_PRED - 1089)) | (1 << (self::OLS - 1089)) | (1 << (self::OLTP - 1089)) | (1 << (self::OMIT - 1089)) | (1 << (self::ONE - 1089)) | (1 << (self::ONLINE - 1089)) | (1 << (self::ONLY - 1089)) | (1 << (self::OPAQUE - 1089)) | (1 << (self::OPAQUE_TRANSFORM - 1089)) | (1 << (self::OPAQUE_XCANONICAL - 1089)) | (1 << (self::OPCODE - 1089)) | (1 << (self::OPEN - 1089)) | (1 << (self::OPERATIONS - 1089)) | (1 << (self::OPERATOR - 1089)) | (1 << (self::OPT_ESTIMATE - 1089)) | (1 << (self::OPTIMAL - 1089)) | (1 << (self::OPTIMIZE - 1089)) | (1 << (self::OPTIMIZER_FEATURES_ENABLE - 1089)) | (1 << (self::OPTIMIZER_GOAL - 1089)) | (1 << (self::OPT_PARAM - 1089)) | (1 << (self::ORA_BRANCH - 1089)) | (1 << (self::ORA_CHECK_ACL - 1089)) | (1 << (self::ORA_CHECK_PRIVILEGE - 1089)) | (1 << (self::ORA_CLUSTERING - 1089)) | (1 << (self::ORADATA - 1089)) | (1 << (self::ORADEBUG - 1089)) | (1 << (self::ORA_DST_AFFECTED - 1089)) | (1 << (self::ORA_DST_CONVERT - 1089)) | (1 << (self::ORA_DST_ERROR - 1089)) | (1 << (self::ORA_GET_ACLIDS - 1089)))) !== 0) || (((($_la - 1153)) & ~0x3f) === 0 && ((1 << ($_la - 1153)) & ((1 << (self::ORA_GET_PRIVILEGES - 1153)) | (1 << (self::ORA_HASH - 1153)) | (1 << (self::ORA_INVOKING_USERID - 1153)) | (1 << (self::ORA_INVOKING_USER - 1153)) | (1 << (self::ORA_INVOKING_XS_USER_GUID - 1153)) | (1 << (self::ORA_INVOKING_XS_USER - 1153)) | (1 << (self::ORA_RAWCOMPARE - 1153)) | (1 << (self::ORA_RAWCONCAT - 1153)) | (1 << (self::ORA_ROWSCN - 1153)) | (1 << (self::ORA_ROWSCN_RAW - 1153)) | (1 << (self::ORA_ROWVERSION - 1153)) | (1 << (self::ORA_TABVERSION - 1153)) | (1 << (self::ORA_WRITE_TIME - 1153)) | (1 << (self::ORDERED - 1153)) | (1 << (self::ORDERED_PREDICATES - 1153)) | (1 << (self::ORDINALITY - 1153)) | (1 << (self::OR_EXPAND - 1153)) | (1 << (self::ORGANIZATION - 1153)) | (1 << (self::OR_PREDICATES - 1153)) | (1 << (self::OSERROR - 1153)) | (1 << (self::OTHER - 1153)) | (1 << (self::OUTER_JOIN_TO_ANTI - 1153)) | (1 << (self::OUTER_JOIN_TO_INNER - 1153)) | (1 << (self::OUTER - 1153)) | (1 << (self::OUTLINE_LEAF - 1153)) | (1 << (self::OUTLINE - 1153)) | (1 << (self::OUT_OF_LINE - 1153)) | (1 << (self::OUT - 1153)) | (1 << (self::OVERFLOW_NOMOVE - 1153)) | (1 << (self::OVERFLOW - 1153)) | (1 << (self::OVERLAPS - 1153)) | (1 << (self::OVER - 1153)) | (1 << (self::OVERRIDING - 1153)) | (1 << (self::OWNER - 1153)) | (1 << (self::OWNERSHIP - 1153)) | (1 << (self::OWN - 1153)) | (1 << (self::PACKAGE - 1153)) | (1 << (self::PACKAGES - 1153)) | (1 << (self::PARALLEL_ENABLE - 1153)) | (1 << (self::PARALLEL_INDEX - 1153)) | (1 << (self::PARALLEL - 1153)) | (1 << (self::PARAMETERS - 1153)) | (1 << (self::PARAM - 1153)) | (1 << (self::PARENT - 1153)) | (1 << (self::PARITY - 1153)) | (1 << (self::PARTIAL_JOIN - 1153)) | (1 << (self::PARTIALLY - 1153)) | (1 << (self::PARTIAL - 1153)) | (1 << (self::PARTIAL_ROLLUP_PUSHDOWN - 1153)) | (1 << (self::PARTITION_HASH - 1153)) | (1 << (self::PARTITION_LIST - 1153)) | (1 << (self::PARTITION - 1153)) | (1 << (self::PARTITION_RANGE - 1153)) | (1 << (self::PARTITIONS - 1153)) | (1 << (self::PARTNUMINST - 1153)) | (1 << (self::PASSING - 1153)) | (1 << (self::PASSWORD_GRACE_TIME - 1153)) | (1 << (self::PASSWORD_LIFE_TIME - 1153)) | (1 << (self::PASSWORD_LOCK_TIME - 1153)) | (1 << (self::PASSWORD - 1153)) | (1 << (self::PASSWORD_REUSE_MAX - 1153)))) !== 0) || (((($_la - 1217)) & ~0x3f) === 0 && ((1 << ($_la - 1217)) & ((1 << (self::PASSWORD_REUSE_TIME - 1217)) | (1 << (self::PASSWORD_VERIFY_FUNCTION - 1217)) | (1 << (self::PAST - 1217)) | (1 << (self::PATCH - 1217)) | (1 << (self::PATH - 1217)) | (1 << (self::PATH_PREFIX - 1217)) | (1 << (self::PATHS - 1217)) | (1 << (self::PATTERN - 1217)) | (1 << (self::PBL_HS_BEGIN - 1217)) | (1 << (self::PBL_HS_END - 1217)) | (1 << (self::PCTINCREASE - 1217)) | (1 << (self::PCTTHRESHOLD - 1217)) | (1 << (self::PCTUSED - 1217)) | (1 << (self::PCTVERSION - 1217)) | (1 << (self::PENDING - 1217)) | (1 << (self::PERCENT_KEYWORD - 1217)) | (1 << (self::PERCENT_RANKM - 1217)) | (1 << (self::PERFORMANCE - 1217)) | (1 << (self::PERIOD_KEYWORD - 1217)) | (1 << (self::PERMANENT - 1217)) | (1 << (self::PERMISSION - 1217)) | (1 << (self::PERMUTE - 1217)) | (1 << (self::PER - 1217)) | (1 << (self::PFILE - 1217)) | (1 << (self::PHYSICAL - 1217)) | (1 << (self::PIKEY - 1217)) | (1 << (self::PIPELINED - 1217)) | (1 << (self::PIV_GB - 1217)) | (1 << (self::PIVOT - 1217)) | (1 << (self::PIV_SSF - 1217)) | (1 << (self::PLACE_DISTINCT - 1217)) | (1 << (self::PLACE_GROUP_BY - 1217)) | (1 << (self::PLAN - 1217)) | (1 << (self::PLSCOPE_SETTINGS - 1217)) | (1 << (self::PLS_INTEGER - 1217)) | (1 << (self::PLSQL_CCFLAGS - 1217)) | (1 << (self::PLSQL_CODE_TYPE - 1217)) | (1 << (self::PLSQL_DEBUG - 1217)) | (1 << (self::PLSQL_OPTIMIZE_LEVEL - 1217)) | (1 << (self::PLSQL_WARNINGS - 1217)) | (1 << (self::PLUGGABLE - 1217)) | (1 << (self::POINT - 1217)) | (1 << (self::POLICY - 1217)) | (1 << (self::POOL_16K - 1217)) | (1 << (self::POOL_2K - 1217)) | (1 << (self::POOL_32K - 1217)) | (1 << (self::POOL_4K - 1217)) | (1 << (self::POOL_8K - 1217)) | (1 << (self::POSITIVEN - 1217)) | (1 << (self::POSITIVE - 1217)) | (1 << (self::POST_TRANSACTION - 1217)) | (1 << (self::POWERMULTISET_BY_CARDINALITY - 1217)) | (1 << (self::POWERMULTISET - 1217)) | (1 << (self::POWER - 1217)) | (1 << (self::PQ_CONCURRENT_UNION - 1217)) | (1 << (self::PQ_DISTRIBUTE - 1217)))) !== 0) || (((($_la - 1281)) & ~0x3f) === 0 && ((1 << ($_la - 1281)) & ((1 << (self::PQ_DISTRIBUTE_WINDOW - 1281)) | (1 << (self::PQ_FILTER - 1281)) | (1 << (self::PQ_MAP - 1281)) | (1 << (self::PQ_NOMAP - 1281)) | (1 << (self::PQ_REPLICATE - 1281)) | (1 << (self::PQ_SKEW - 1281)) | (1 << (self::PRAGMA - 1281)) | (1 << (self::PREBUILT - 1281)) | (1 << (self::PRECEDES - 1281)) | (1 << (self::PRECEDING - 1281)) | (1 << (self::PRECISION - 1281)) | (1 << (self::PRECOMPUTE_SUBQUERY - 1281)) | (1 << (self::PREDICATE_REORDERS - 1281)) | (1 << (self::PRELOAD - 1281)) | (1 << (self::PREPARE - 1281)) | (1 << (self::PRESENTNNV - 1281)) | (1 << (self::PRESENT - 1281)) | (1 << (self::PRESENTV - 1281)) | (1 << (self::PRESERVE_OID - 1281)) | (1 << (self::PRESERVE - 1281)) | (1 << (self::PRETTY - 1281)) | (1 << (self::PREVIOUS - 1281)) | (1 << (self::PREV - 1281)) | (1 << (self::PRIMARY - 1281)) | (1 << (self::PRINTBLOBTOCLOB - 1281)) | (1 << (self::PRIORITY - 1281)) | (1 << (self::PRIVATE - 1281)) | (1 << (self::PRIVATE_SGA - 1281)) | (1 << (self::PRIVILEGED - 1281)) | (1 << (self::PRIVILEGE - 1281)) | (1 << (self::PRIVILEGES - 1281)) | (1 << (self::PROCEDURAL - 1281)) | (1 << (self::PROCEDURE - 1281)) | (1 << (self::PROCESS - 1281)) | (1 << (self::PROFILE - 1281)) | (1 << (self::PROGRAM - 1281)) | (1 << (self::PROJECT - 1281)) | (1 << (self::PROPAGATE - 1281)) | (1 << (self::PROTECTED - 1281)) | (1 << (self::PROTECTION - 1281)) | (1 << (self::PROXY - 1281)) | (1 << (self::PRUNING - 1281)) | (1 << (self::PULL_PRED - 1281)) | (1 << (self::PURGE - 1281)) | (1 << (self::PUSH_PRED - 1281)) | (1 << (self::PUSH_SUBQ - 1281)) | (1 << (self::PX_FAULT_TOLERANCE - 1281)) | (1 << (self::PX_GRANULE - 1281)) | (1 << (self::PX_JOIN_FILTER - 1281)) | (1 << (self::QB_NAME - 1281)) | (1 << (self::QUERY_BLOCK - 1281)) | (1 << (self::QUERY - 1281)) | (1 << (self::QUEUE_CURR - 1281)) | (1 << (self::QUEUE - 1281)) | (1 << (self::QUEUE_ROWP - 1281)) | (1 << (self::QUIESCE - 1281)) | (1 << (self::QUORUM - 1281)) | (1 << (self::QUOTA - 1281)) | (1 << (self::RAISE - 1281)) | (1 << (self::RANDOM_LOCAL - 1281)) | (1 << (self::RANDOM - 1281)) | (1 << (self::RANGE - 1281)))) !== 0) || (((($_la - 1345)) & ~0x3f) === 0 && ((1 << ($_la - 1345)) & ((1 << (self::RANKM - 1345)) | (1 << (self::RAPIDLY - 1345)) | (1 << (self::RAW - 1345)) | (1 << (self::RAWTOHEX - 1345)) | (1 << (self::RAWTONHEX - 1345)) | (1 << (self::RBA - 1345)) | (1 << (self::RBO_OUTLINE - 1345)) | (1 << (self::RDBA - 1345)) | (1 << (self::READ - 1345)) | (1 << (self::READS - 1345)) | (1 << (self::REALM - 1345)) | (1 << (self::REAL - 1345)) | (1 << (self::REBALANCE - 1345)) | (1 << (self::REBUILD - 1345)) | (1 << (self::RECORD - 1345)) | (1 << (self::RECORDS_PER_BLOCK - 1345)) | (1 << (self::RECOVERABLE - 1345)) | (1 << (self::RECOVER - 1345)) | (1 << (self::RECOVERY - 1345)) | (1 << (self::RECYCLEBIN - 1345)) | (1 << (self::RECYCLE - 1345)) | (1 << (self::REDACTION - 1345)) | (1 << (self::REDEFINE - 1345)) | (1 << (self::REDO - 1345)) | (1 << (self::REDUCED - 1345)) | (1 << (self::REDUNDANCY - 1345)) | (1 << (self::REF_CASCADE_CURSOR - 1345)) | (1 << (self::REFERENCED - 1345)) | (1 << (self::REFERENCE - 1345)) | (1 << (self::REFERENCES - 1345)) | (1 << (self::REFERENCING - 1345)) | (1 << (self::REF - 1345)) | (1 << (self::REFRESH - 1345)) | (1 << (self::REFTOHEX - 1345)) | (1 << (self::REGEXP_COUNT - 1345)) | (1 << (self::REGEXP_INSTR - 1345)) | (1 << (self::REGEXP_LIKE - 1345)) | (1 << (self::REGEXP_REPLACE - 1345)) | (1 << (self::REGEXP_SUBSTR - 1345)) | (1 << (self::REGISTER - 1345)) | (1 << (self::REGR_AVGX - 1345)) | (1 << (self::REGR_AVGY - 1345)) | (1 << (self::REGR_COUNT - 1345)) | (1 << (self::REGR_INTERCEPT - 1345)) | (1 << (self::REGR_R2 - 1345)) | (1 << (self::REGR_SLOPE - 1345)) | (1 << (self::REGR_SXX - 1345)) | (1 << (self::REGR_SXY - 1345)) | (1 << (self::REGR_SYY - 1345)) | (1 << (self::REGULAR - 1345)) | (1 << (self::REJECT - 1345)) | (1 << (self::REKEY - 1345)) | (1 << (self::RELATIONAL - 1345)) | (1 << (self::RELOCATE - 1345)) | (1 << (self::RELY - 1345)) | (1 << (self::REMAINDER - 1345)) | (1 << (self::REMOTE_MAPPED - 1345)) | (1 << (self::REMOVE - 1345)) | (1 << (self::RENAME - 1345)) | (1 << (self::REPAIR - 1345)) | (1 << (self::REPEAT - 1345)) | (1 << (self::REPLACE - 1345)) | (1 << (self::REPLICATION - 1345)))) !== 0) || (((($_la - 1409)) & ~0x3f) === 0 && ((1 << ($_la - 1409)) & ((1 << (self::REQUIRED - 1409)) | (1 << (self::RESETLOGS - 1409)) | (1 << (self::RESET - 1409)) | (1 << (self::RESIZE - 1409)) | (1 << (self::RESOLVE - 1409)) | (1 << (self::RESOLVER - 1409)) | (1 << (self::RESPECT - 1409)) | (1 << (self::RESTART - 1409)) | (1 << (self::RESTORE_AS_INTERVALS - 1409)) | (1 << (self::RESTORE - 1409)) | (1 << (self::RESTRICT_ALL_REF_CONS - 1409)) | (1 << (self::RESTRICTED - 1409)) | (1 << (self::RESTRICT_REFERENCES - 1409)) | (1 << (self::RESTRICT - 1409)) | (1 << (self::RESULT_CACHE - 1409)) | (1 << (self::RESULT - 1409)) | (1 << (self::RESUMABLE - 1409)) | (1 << (self::RESUME - 1409)) | (1 << (self::RETENTION - 1409)) | (1 << (self::RETRY_ON_ROW_CHANGE - 1409)) | (1 << (self::RETURNING - 1409)) | (1 << (self::RETURN - 1409)) | (1 << (self::REUSE - 1409)) | (1 << (self::REVERSE - 1409)) | (1 << (self::REWRITE_OR_ERROR - 1409)) | (1 << (self::REWRITE - 1409)) | (1 << (self::RIGHT - 1409)) | (1 << (self::ROLE - 1409)) | (1 << (self::ROLESET - 1409)) | (1 << (self::ROLES - 1409)) | (1 << (self::ROLLBACK - 1409)) | (1 << (self::ROLLING - 1409)) | (1 << (self::ROLLUP - 1409)) | (1 << (self::ROWDEPENDENCIES - 1409)) | (1 << (self::ROWID_MAPPING_TABLE - 1409)) | (1 << (self::ROWID - 1409)) | (1 << (self::ROWIDTOCHAR - 1409)) | (1 << (self::ROWIDTONCHAR - 1409)) | (1 << (self::ROW_LENGTH - 1409)) | (1 << (self::ROWNUM - 1409)) | (1 << (self::ROW - 1409)) | (1 << (self::ROWS - 1409)) | (1 << (self::RPAD - 1409)) | (1 << (self::RTRIM - 1409)) | (1 << (self::RULE - 1409)) | (1 << (self::RULES - 1409)) | (1 << (self::RUNNING - 1409)) | (1 << (self::SALT - 1409)) | (1 << (self::SAMPLE - 1409)) | (1 << (self::SAVE_AS_INTERVALS - 1409)) | (1 << (self::SAVEPOINT - 1409)) | (1 << (self::SAVE - 1409)) | (1 << (self::SB4 - 1409)) | (1 << (self::SCALE_ROWS - 1409)) | (1 << (self::SCALE - 1409)) | (1 << (self::SCAN_INSTANCES - 1409)) | (1 << (self::SCAN - 1409)) | (1 << (self::SCHEDULER - 1409)) | (1 << (self::SCHEMACHECK - 1409)) | (1 << (self::SCHEMA - 1409)) | (1 << (self::SCN_ASCENDING - 1409)) | (1 << (self::SCN - 1409)))) !== 0) || (((($_la - 1473)) & ~0x3f) === 0 && ((1 << ($_la - 1473)) & ((1 << (self::SCOPE - 1473)) | (1 << (self::SCRUB - 1473)) | (1 << (self::SD_ALL - 1473)) | (1 << (self::SD_INHIBIT - 1473)) | (1 << (self::SDO_GEOM_MBR - 1473)) | (1 << (self::SD_SHOW - 1473)) | (1 << (self::SEARCH - 1473)) | (1 << (self::SECOND - 1473)) | (1 << (self::SECRET - 1473)) | (1 << (self::SECUREFILE_DBA - 1473)) | (1 << (self::SECUREFILE - 1473)) | (1 << (self::SECURITY - 1473)) | (1 << (self::SEED - 1473)) | (1 << (self::SEG_BLOCK - 1473)) | (1 << (self::SEG_FILE - 1473)) | (1 << (self::SEGMENT - 1473)) | (1 << (self::SELECTIVITY - 1473)) | (1 << (self::SELF - 1473)) | (1 << (self::SEMIJOIN_DRIVER - 1473)) | (1 << (self::SEMIJOIN - 1473)) | (1 << (self::SEMI_TO_INNER - 1473)) | (1 << (self::SEQUENCED - 1473)) | (1 << (self::SEQUENCE - 1473)) | (1 << (self::SEQUENTIAL - 1473)) | (1 << (self::SERIALIZABLE - 1473)) | (1 << (self::SERIALLY_REUSABLE - 1473)) | (1 << (self::SERIAL - 1473)) | (1 << (self::SERVERERROR - 1473)) | (1 << (self::SERVICE_NAME_CONVERT - 1473)) | (1 << (self::SERVICES - 1473)) | (1 << (self::SESSION_CACHED_CURSORS - 1473)) | (1 << (self::SESSION - 1473)) | (1 << (self::SESSIONS_PER_USER - 1473)) | (1 << (self::SESSIONTIMEZONE - 1473)) | (1 << (self::SESSIONTZNAME - 1473)) | (1 << (self::SET - 1473)) | (1 << (self::SETS - 1473)) | (1 << (self::SETTINGS - 1473)) | (1 << (self::SET_TO_JOIN - 1473)) | (1 << (self::SEVERE - 1473)) | (1 << (self::SHARED_POOL - 1473)) | (1 << (self::SHARED - 1473)) | (1 << (self::SHARING - 1473)) | (1 << (self::SHELFLIFE - 1473)) | (1 << (self::SHOW - 1473)) | (1 << (self::SHRINK - 1473)) | (1 << (self::SHUTDOWN - 1473)) | (1 << (self::SIBLINGS - 1473)) | (1 << (self::SID - 1473)) | (1 << (self::SIGNAL_COMPONENT - 1473)) | (1 << (self::SIGNAL_FUNCTION - 1473)) | (1 << (self::SIGN - 1473)) | (1 << (self::SIGNTYPE - 1473)) | (1 << (self::SIMPLE_INTEGER - 1473)) | (1 << (self::SIMPLE - 1473)) | (1 << (self::SINGLE - 1473)) | (1 << (self::SINGLETASK - 1473)) | (1 << (self::SINH - 1473)) | (1 << (self::SIN - 1473)) | (1 << (self::SKIP_EXT_OPTIMIZER - 1473)))) !== 0) || (((($_la - 1537)) & ~0x3f) === 0 && ((1 << ($_la - 1537)) & ((1 << (self::SKIP_ - 1537)) | (1 << (self::SKIP_UNQ_UNUSABLE_IDX - 1537)) | (1 << (self::SKIP_UNUSABLE_INDEXES - 1537)) | (1 << (self::SMALLFILE - 1537)) | (1 << (self::SMALLINT - 1537)) | (1 << (self::SNAPSHOT - 1537)) | (1 << (self::SOME - 1537)) | (1 << (self::SORT - 1537)) | (1 << (self::SOUNDEX - 1537)) | (1 << (self::SOURCE_FILE_DIRECTORY - 1537)) | (1 << (self::SOURCE_FILE_NAME_CONVERT - 1537)) | (1 << (self::SOURCE - 1537)) | (1 << (self::SPACE_KEYWORD - 1537)) | (1 << (self::SPECIFICATION - 1537)) | (1 << (self::SPFILE - 1537)) | (1 << (self::SPLIT - 1537)) | (1 << (self::SPREADSHEET - 1537)) | (1 << (self::SQLDATA - 1537)) | (1 << (self::SQLERROR - 1537)) | (1 << (self::SQLLDR - 1537)) | (1 << (self::SQL - 1537)) | (1 << (self::SQL_TRACE - 1537)) | (1 << (self::SQL_TRANSLATION_PROFILE - 1537)) | (1 << (self::SQRT - 1537)) | (1 << (self::STALE - 1537)) | (1 << (self::STANDALONE - 1537)) | (1 << (self::STANDARD_HASH - 1537)) | (1 << (self::STANDBY_MAX_DATA_DELAY - 1537)) | (1 << (self::STANDBYS - 1537)) | (1 << (self::STANDBY - 1537)) | (1 << (self::STAR - 1537)) | (1 << (self::STAR_TRANSFORMATION - 1537)) | (1 << (self::STARTUP - 1537)) | (1 << (self::STATEMENT_ID - 1537)) | (1 << (self::STATEMENT_QUEUING - 1537)) | (1 << (self::STATEMENTS - 1537)) | (1 << (self::STATEMENT - 1537)) | (1 << (self::STATE - 1537)) | (1 << (self::STATIC - 1537)) | (1 << (self::STATISTICS - 1537)) | (1 << (self::STATS_BINOMIAL_TEST - 1537)) | (1 << (self::STATS_CROSSTAB - 1537)) | (1 << (self::STATS_F_TEST - 1537)) | (1 << (self::STATS_KS_TEST - 1537)) | (1 << (self::STATS_MODE - 1537)) | (1 << (self::STATS_MW_TEST - 1537)) | (1 << (self::STATS_ONE_WAY_ANOVA - 1537)) | (1 << (self::STATS_T_TEST_INDEP - 1537)) | (1 << (self::STATS_T_TEST_INDEPU - 1537)) | (1 << (self::STATS_T_TEST_ONE - 1537)) | (1 << (self::STATS_T_TEST_PAIRED - 1537)) | (1 << (self::STATS_WSR_TEST - 1537)) | (1 << (self::STDDEV_POP - 1537)) | (1 << (self::STDDEV_SAMP - 1537)) | (1 << (self::STOP - 1537)) | (1 << (self::STORAGE - 1537)) | (1 << (self::STORE - 1537)) | (1 << (self::STREAMS - 1537)) | (1 << (self::STREAM - 1537)) | (1 << (self::STRICT - 1537)) | (1 << (self::STRING - 1537)) | (1 << (self::STRIPE_COLUMNS - 1537)) | (1 << (self::STRIPE_WIDTH - 1537)))) !== 0) || (((($_la - 1601)) & ~0x3f) === 0 && ((1 << ($_la - 1601)) & ((1 << (self::STRIP - 1601)) | (1 << (self::STRUCTURE - 1601)) | (1 << (self::SUBMULTISET - 1601)) | (1 << (self::SUBPARTITION_REL - 1601)) | (1 << (self::SUBPARTITIONS - 1601)) | (1 << (self::SUBPARTITION - 1601)) | (1 << (self::SUBQUERIES - 1601)) | (1 << (self::SUBQUERY_PRUNING - 1601)) | (1 << (self::SUBSCRIBE - 1601)) | (1 << (self::SUBSET - 1601)) | (1 << (self::SUBSTITUTABLE - 1601)) | (1 << (self::SUBSTR2 - 1601)) | (1 << (self::SUBSTR4 - 1601)) | (1 << (self::SUBSTRB - 1601)) | (1 << (self::SUBSTRC - 1601)) | (1 << (self::SUBTYPE - 1601)) | (1 << (self::SUCCESSFUL - 1601)) | (1 << (self::SUCCESS - 1601)) | (1 << (self::SUMMARY - 1601)) | (1 << (self::SUPPLEMENTAL - 1601)) | (1 << (self::SUSPEND - 1601)) | (1 << (self::SWAP_JOIN_INPUTS - 1601)) | (1 << (self::SWITCHOVER - 1601)) | (1 << (self::SWITCH - 1601)) | (1 << (self::SYNCHRONOUS - 1601)) | (1 << (self::SYNC - 1601)) | (1 << (self::SYSASM - 1601)) | (1 << (self::SYS_AUDIT - 1601)) | (1 << (self::SYSAUX - 1601)) | (1 << (self::SYSBACKUP - 1601)) | (1 << (self::SYS_CHECKACL - 1601)) | (1 << (self::SYS_CHECK_PRIVILEGE - 1601)) | (1 << (self::SYS_CONNECT_BY_PATH - 1601)) | (1 << (self::SYS_CONTEXT - 1601)) | (1 << (self::SYSDATE - 1601)) | (1 << (self::SYSDBA - 1601)) | (1 << (self::SYS_DBURIGEN - 1601)) | (1 << (self::SYSDG - 1601)) | (1 << (self::SYS_DL_CURSOR - 1601)) | (1 << (self::SYS_DM_RXFORM_CHR - 1601)) | (1 << (self::SYS_DM_RXFORM_NUM - 1601)) | (1 << (self::SYS_DOM_COMPARE - 1601)) | (1 << (self::SYS_DST_PRIM2SEC - 1601)) | (1 << (self::SYS_DST_SEC2PRIM - 1601)) | (1 << (self::SYS_ET_BFILE_TO_RAW - 1601)) | (1 << (self::SYS_ET_BLOB_TO_IMAGE - 1601)) | (1 << (self::SYS_ET_IMAGE_TO_BLOB - 1601)) | (1 << (self::SYS_ET_RAW_TO_BFILE - 1601)) | (1 << (self::SYS_EXTPDTXT - 1601)) | (1 << (self::SYS_EXTRACT_UTC - 1601)) | (1 << (self::SYS_FBT_INSDEL - 1601)) | (1 << (self::SYS_FILTER_ACLS - 1601)) | (1 << (self::SYS_FNMATCHES - 1601)) | (1 << (self::SYS_FNREPLACE - 1601)) | (1 << (self::SYS_GET_ACLIDS - 1601)) | (1 << (self::SYS_GET_COL_ACLIDS - 1601)) | (1 << (self::SYS_GET_PRIVILEGES - 1601)) | (1 << (self::SYS_GETTOKENID - 1601)) | (1 << (self::SYS_GETXTIVAL - 1601)) | (1 << (self::SYS_GUID - 1601)) | (1 << (self::SYSGUID - 1601)) | (1 << (self::SYSKM - 1601)) | (1 << (self::SYS_MAKE_XMLNODEID - 1601)))) !== 0) || (((($_la - 1665)) & ~0x3f) === 0 && ((1 << ($_la - 1665)) & ((1 << (self::SYS_MAKEXML - 1665)) | (1 << (self::SYS_MKXMLATTR - 1665)) | (1 << (self::SYS_MKXTI - 1665)) | (1 << (self::SYSOBJ - 1665)) | (1 << (self::SYS_OP_ADT2BIN - 1665)) | (1 << (self::SYS_OP_ADTCONS - 1665)) | (1 << (self::SYS_OP_ALSCRVAL - 1665)) | (1 << (self::SYS_OP_ATG - 1665)) | (1 << (self::SYS_OP_BIN2ADT - 1665)) | (1 << (self::SYS_OP_BITVEC - 1665)) | (1 << (self::SYS_OP_BL2R - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER - 1665)) | (1 << (self::SYS_OP_C2C - 1665)) | (1 << (self::SYS_OP_CAST - 1665)) | (1 << (self::SYS_OP_CEG - 1665)) | (1 << (self::SYS_OP_CL2C - 1665)) | (1 << (self::SYS_OP_COMBINED_HASH - 1665)) | (1 << (self::SYS_OP_COMP - 1665)) | (1 << (self::SYS_OP_CONVERT - 1665)) | (1 << (self::SYS_OP_COUNTCHG - 1665)) | (1 << (self::SYS_OP_CSCONV - 1665)) | (1 << (self::SYS_OP_CSCONVTEST - 1665)) | (1 << (self::SYS_OP_CSR - 1665)) | (1 << (self::SYS_OP_CSX_PATCH - 1665)) | (1 << (self::SYS_OP_CYCLED_SEQ - 1665)) | (1 << (self::SYS_OP_DECOMP - 1665)) | (1 << (self::SYS_OP_DESCEND - 1665)) | (1 << (self::SYS_OP_DISTINCT - 1665)) | (1 << (self::SYS_OP_DRA - 1665)) | (1 << (self::SYS_OP_DUMP - 1665)) | (1 << (self::SYS_OP_DV_CHECK - 1665)) | (1 << (self::SYS_OP_ENFORCE_NOT_NULL - 1665)) | (1 << (self::SYSOPER - 1665)) | (1 << (self::SYS_OP_EXTRACT - 1665)) | (1 << (self::SYS_OP_GROUPING - 1665)) | (1 << (self::SYS_OP_GUID - 1665)) | (1 << (self::SYS_OP_HASH - 1665)) | (1 << (self::SYS_OP_IIX - 1665)) | (1 << (self::SYS_OP_ITR - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_CREATE - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_SUCCEEDED - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_USE - 1665)) | (1 << (self::SYS_OP_LBID - 1665)) | (1 << (self::SYS_OP_LOBLOC2BLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2CLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2ID - 1665)) | (1 << (self::SYS_OP_LOBLOC2NCLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2TYP - 1665)) | (1 << (self::SYS_OP_LSVI - 1665)) | (1 << (self::SYS_OP_LVL - 1665)) | (1 << (self::SYS_OP_MAKEOID - 1665)) | (1 << (self::SYS_OP_MAP_NONNULL - 1665)) | (1 << (self::SYS_OP_MSR - 1665)) | (1 << (self::SYS_OP_NICOMBINE - 1665)) | (1 << (self::SYS_OP_NIEXTRACT - 1665)) | (1 << (self::SYS_OP_NII - 1665)) | (1 << (self::SYS_OP_NIX - 1665)) | (1 << (self::SYS_OP_NOEXPAND - 1665)) | (1 << (self::SYS_OP_NTCIMG - 1665)) | (1 << (self::SYS_OP_NUMTORAW - 1665)) | (1 << (self::SYS_OP_OIDVALUE - 1665)))) !== 0) || (((($_la - 1729)) & ~0x3f) === 0 && ((1 << ($_la - 1729)) & ((1 << (self::SYS_OP_OPNSIZE - 1729)) | (1 << (self::SYS_OP_PAR_1 - 1729)) | (1 << (self::SYS_OP_PARGID_1 - 1729)) | (1 << (self::SYS_OP_PARGID - 1729)) | (1 << (self::SYS_OP_PAR - 1729)) | (1 << (self::SYS_OP_PART_ID - 1729)) | (1 << (self::SYS_OP_PIVOT - 1729)) | (1 << (self::SYS_OP_R2O - 1729)) | (1 << (self::SYS_OP_RAWTONUM - 1729)) | (1 << (self::SYS_OP_RDTM - 1729)) | (1 << (self::SYS_OP_REF - 1729)) | (1 << (self::SYS_OP_RMTD - 1729)) | (1 << (self::SYS_OP_ROWIDTOOBJ - 1729)) | (1 << (self::SYS_OP_RPB - 1729)) | (1 << (self::SYS_OPTLOBPRBSC - 1729)) | (1 << (self::SYS_OP_TOSETID - 1729)) | (1 << (self::SYS_OP_TPR - 1729)) | (1 << (self::SYS_OP_TRTB - 1729)) | (1 << (self::SYS_OPTXICMP - 1729)) | (1 << (self::SYS_OPTXQCASTASNQ - 1729)) | (1 << (self::SYS_OP_UNDESCEND - 1729)) | (1 << (self::SYS_OP_VECAND - 1729)) | (1 << (self::SYS_OP_VECBIT - 1729)) | (1 << (self::SYS_OP_VECOR - 1729)) | (1 << (self::SYS_OP_VECXOR - 1729)) | (1 << (self::SYS_OP_VERSION - 1729)) | (1 << (self::SYS_OP_VREF - 1729)) | (1 << (self::SYS_OP_VVD - 1729)) | (1 << (self::SYS_OP_XMLCONS_FOR_CSX - 1729)) | (1 << (self::SYS_OP_XPTHATG - 1729)) | (1 << (self::SYS_OP_XPTHIDX - 1729)) | (1 << (self::SYS_OP_XPTHOP - 1729)) | (1 << (self::SYS_OP_XTXT2SQLT - 1729)) | (1 << (self::SYS_OP_ZONE_ID - 1729)) | (1 << (self::SYS_ORDERKEY_DEPTH - 1729)) | (1 << (self::SYS_ORDERKEY_MAXCHILD - 1729)) | (1 << (self::SYS_ORDERKEY_PARENT - 1729)) | (1 << (self::SYS_PARALLEL_TXN - 1729)) | (1 << (self::SYS_PATHID_IS_ATTR - 1729)) | (1 << (self::SYS_PATHID_IS_NMSPC - 1729)) | (1 << (self::SYS_PATHID_LASTNAME - 1729)) | (1 << (self::SYS_PATHID_LASTNMSPC - 1729)) | (1 << (self::SYS_PATH_REVERSE - 1729)) | (1 << (self::SYS_PXQEXTRACT - 1729)) | (1 << (self::SYS_RAW_TO_XSID - 1729)) | (1 << (self::SYS_RID_ORDER - 1729)) | (1 << (self::SYS_ROW_DELTA - 1729)) | (1 << (self::SYS_SC_2_XMLT - 1729)) | (1 << (self::SYS_SYNRCIREDO - 1729)) | (1 << (self::SYSTEM_DEFINED - 1729)) | (1 << (self::SYSTEM - 1729)) | (1 << (self::SYSTIMESTAMP - 1729)) | (1 << (self::SYS_TYPEID - 1729)) | (1 << (self::SYS_UMAKEXML - 1729)) | (1 << (self::SYS_XMLANALYZE - 1729)) | (1 << (self::SYS_XMLCONTAINS - 1729)) | (1 << (self::SYS_XMLCONV - 1729)) | (1 << (self::SYS_XMLEXNSURI - 1729)) | (1 << (self::SYS_XMLGEN - 1729)) | (1 << (self::SYS_XMLI_LOC_ISNODE - 1729)) | (1 << (self::SYS_XMLI_LOC_ISTEXT - 1729)) | (1 << (self::SYS_XMLINSTR - 1729)) | (1 << (self::SYS_XMLLOCATOR_GETSVAL - 1729)) | (1 << (self::SYS_XMLNODEID_GETCID - 1729)))) !== 0) || (((($_la - 1793)) & ~0x3f) === 0 && ((1 << ($_la - 1793)) & ((1 << (self::SYS_XMLNODEID_GETLOCATOR - 1793)) | (1 << (self::SYS_XMLNODEID_GETOKEY - 1793)) | (1 << (self::SYS_XMLNODEID_GETPATHID - 1793)) | (1 << (self::SYS_XMLNODEID_GETPTRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETSVAL - 1793)) | (1 << (self::SYS_XMLNODEID_GETTID - 1793)) | (1 << (self::SYS_XMLNODEID - 1793)) | (1 << (self::SYS_XMLT_2_SC - 1793)) | (1 << (self::SYS_XMLTRANSLATE - 1793)) | (1 << (self::SYS_XMLTYPE2SQL - 1793)) | (1 << (self::SYS_XQ_ASQLCNV - 1793)) | (1 << (self::SYS_XQ_ATOMCNVCHK - 1793)) | (1 << (self::SYS_XQBASEURI - 1793)) | (1 << (self::SYS_XQCASTABLEERRH - 1793)) | (1 << (self::SYS_XQCODEP2STR - 1793)) | (1 << (self::SYS_XQCODEPEQ - 1793)) | (1 << (self::SYS_XQCON2SEQ - 1793)) | (1 << (self::SYS_XQCONCAT - 1793)) | (1 << (self::SYS_XQDELETE - 1793)) | (1 << (self::SYS_XQDFLTCOLATION - 1793)) | (1 << (self::SYS_XQDOC - 1793)) | (1 << (self::SYS_XQDOCURI - 1793)) | (1 << (self::SYS_XQDURDIV - 1793)) | (1 << (self::SYS_XQED4URI - 1793)) | (1 << (self::SYS_XQENDSWITH - 1793)) | (1 << (self::SYS_XQERRH - 1793)) | (1 << (self::SYS_XQERR - 1793)) | (1 << (self::SYS_XQESHTMLURI - 1793)) | (1 << (self::SYS_XQEXLOBVAL - 1793)) | (1 << (self::SYS_XQEXSTWRP - 1793)) | (1 << (self::SYS_XQEXTRACT - 1793)) | (1 << (self::SYS_XQEXTRREF - 1793)) | (1 << (self::SYS_XQEXVAL - 1793)) | (1 << (self::SYS_XQFB2STR - 1793)) | (1 << (self::SYS_XQFNBOOL - 1793)) | (1 << (self::SYS_XQFNCMP - 1793)) | (1 << (self::SYS_XQFNDATIM - 1793)) | (1 << (self::SYS_XQFNLNAME - 1793)) | (1 << (self::SYS_XQFNNM - 1793)) | (1 << (self::SYS_XQFNNSURI - 1793)) | (1 << (self::SYS_XQFNPREDTRUTH - 1793)) | (1 << (self::SYS_XQFNQNM - 1793)) | (1 << (self::SYS_XQFNROOT - 1793)) | (1 << (self::SYS_XQFORMATNUM - 1793)) | (1 << (self::SYS_XQFTCONTAIN - 1793)) | (1 << (self::SYS_XQFUNCR - 1793)) | (1 << (self::SYS_XQGETCONTENT - 1793)) | (1 << (self::SYS_XQINDXOF - 1793)) | (1 << (self::SYS_XQINSERT - 1793)) | (1 << (self::SYS_XQINSPFX - 1793)) | (1 << (self::SYS_XQIRI2URI - 1793)) | (1 << (self::SYS_XQLANG - 1793)) | (1 << (self::SYS_XQLLNMFRMQNM - 1793)) | (1 << (self::SYS_XQMKNODEREF - 1793)) | (1 << (self::SYS_XQNILLED - 1793)) | (1 << (self::SYS_XQNODENAME - 1793)) | (1 << (self::SYS_XQNORMSPACE - 1793)) | (1 << (self::SYS_XQNORMUCODE - 1793)) | (1 << (self::SYS_XQ_NRNG - 1793)) | (1 << (self::SYS_XQNSP4PFX - 1793)) | (1 << (self::SYS_XQNSPFRMQNM - 1793)) | (1 << (self::SYS_XQPFXFRMQNM - 1793)) | (1 << (self::SYS_XQ_PKSQL2XML - 1793)))) !== 0) || (((($_la - 1857)) & ~0x3f) === 0 && ((1 << ($_la - 1857)) & ((1 << (self::SYS_XQPOLYABS - 1857)) | (1 << (self::SYS_XQPOLYADD - 1857)) | (1 << (self::SYS_XQPOLYCEL - 1857)) | (1 << (self::SYS_XQPOLYCSTBL - 1857)) | (1 << (self::SYS_XQPOLYCST - 1857)) | (1 << (self::SYS_XQPOLYDIV - 1857)) | (1 << (self::SYS_XQPOLYFLR - 1857)) | (1 << (self::SYS_XQPOLYMOD - 1857)) | (1 << (self::SYS_XQPOLYMUL - 1857)) | (1 << (self::SYS_XQPOLYRND - 1857)) | (1 << (self::SYS_XQPOLYSQRT - 1857)) | (1 << (self::SYS_XQPOLYSUB - 1857)) | (1 << (self::SYS_XQPOLYUMUS - 1857)) | (1 << (self::SYS_XQPOLYUPLS - 1857)) | (1 << (self::SYS_XQPOLYVEQ - 1857)) | (1 << (self::SYS_XQPOLYVGE - 1857)) | (1 << (self::SYS_XQPOLYVGT - 1857)) | (1 << (self::SYS_XQPOLYVLE - 1857)) | (1 << (self::SYS_XQPOLYVLT - 1857)) | (1 << (self::SYS_XQPOLYVNE - 1857)) | (1 << (self::SYS_XQREF2VAL - 1857)) | (1 << (self::SYS_XQRENAME - 1857)) | (1 << (self::SYS_XQREPLACE - 1857)) | (1 << (self::SYS_XQRESVURI - 1857)) | (1 << (self::SYS_XQRNDHALF2EVN - 1857)) | (1 << (self::SYS_XQRSLVQNM - 1857)) | (1 << (self::SYS_XQRYENVPGET - 1857)) | (1 << (self::SYS_XQRYVARGET - 1857)) | (1 << (self::SYS_XQRYWRP - 1857)) | (1 << (self::SYS_XQSEQ2CON4XC - 1857)) | (1 << (self::SYS_XQSEQ2CON - 1857)) | (1 << (self::SYS_XQSEQDEEPEQ - 1857)) | (1 << (self::SYS_XQSEQINSB - 1857)) | (1 << (self::SYS_XQSEQRM - 1857)) | (1 << (self::SYS_XQSEQRVS - 1857)) | (1 << (self::SYS_XQSEQSUB - 1857)) | (1 << (self::SYS_XQSEQTYPMATCH - 1857)) | (1 << (self::SYS_XQSTARTSWITH - 1857)) | (1 << (self::SYS_XQSTATBURI - 1857)) | (1 << (self::SYS_XQSTR2CODEP - 1857)) | (1 << (self::SYS_XQSTRJOIN - 1857)) | (1 << (self::SYS_XQSUBSTRAFT - 1857)) | (1 << (self::SYS_XQSUBSTRBEF - 1857)) | (1 << (self::SYS_XQTOKENIZE - 1857)) | (1 << (self::SYS_XQTREATAS - 1857)) | (1 << (self::SYS_XQ_UPKXML2SQL - 1857)) | (1 << (self::SYS_XQXFORM - 1857)) | (1 << (self::SYS_XSID_TO_RAW - 1857)) | (1 << (self::SYS_ZMAP_FILTER - 1857)) | (1 << (self::SYS_ZMAP_REFRESH - 1857)) | (1 << (self::TABLE_LOOKUP_BY_NL - 1857)) | (1 << (self::TABLESPACE_NO - 1857)) | (1 << (self::TABLESPACE - 1857)) | (1 << (self::TABLES - 1857)) | (1 << (self::TABLE_STATS - 1857)) | (1 << (self::TABLE - 1857)) | (1 << (self::TABNO - 1857)) | (1 << (self::TAG - 1857)) | (1 << (self::TANH - 1857)) | (1 << (self::TAN - 1857)) | (1 << (self::TBLORIDXPARTNUM - 1857)) | (1 << (self::TEMPFILE - 1857)) | (1 << (self::TEMPLATE - 1857)) | (1 << (self::TEMPORARY - 1857)))) !== 0) || (((($_la - 1921)) & ~0x3f) === 0 && ((1 << ($_la - 1921)) & ((1 << (self::TEMP_TABLE - 1921)) | (1 << (self::TEST - 1921)) | (1 << (self::TEXT - 1921)) | (1 << (self::THAN - 1921)) | (1 << (self::THEN - 1921)) | (1 << (self::THE - 1921)) | (1 << (self::THREAD - 1921)) | (1 << (self::THROUGH - 1921)) | (1 << (self::TIER - 1921)) | (1 << (self::TIES - 1921)) | (1 << (self::TIMEOUT - 1921)) | (1 << (self::TIMESTAMP_LTZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP - 1921)) | (1 << (self::TIMESTAMP_TZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP_UNCONSTRAINED - 1921)) | (1 << (self::TIMES - 1921)) | (1 << (self::TIME - 1921)) | (1 << (self::TIMEZONE_ABBR - 1921)) | (1 << (self::TIMEZONE_HOUR - 1921)) | (1 << (self::TIMEZONE_MINUTE - 1921)) | (1 << (self::TIMEZONE_OFFSET - 1921)) | (1 << (self::TIMEZONE_REGION - 1921)) | (1 << (self::TIME_ZONE - 1921)) | (1 << (self::TIV_GB - 1921)) | (1 << (self::TIV_SSF - 1921)) | (1 << (self::TO_ACLID - 1921)) | (1 << (self::TO_BINARY_DOUBLE - 1921)) | (1 << (self::TO_BINARY_FLOAT - 1921)) | (1 << (self::TO_BLOB - 1921)) | (1 << (self::TO_CLOB - 1921)) | (1 << (self::TO_DSINTERVAL - 1921)) | (1 << (self::TO_LOB - 1921)) | (1 << (self::TO_MULTI_BYTE - 1921)) | (1 << (self::TO_NCHAR - 1921)) | (1 << (self::TO_NCLOB - 1921)) | (1 << (self::TO_NUMBER - 1921)) | (1 << (self::TOPLEVEL - 1921)) | (1 << (self::TO_SINGLE_BYTE - 1921)) | (1 << (self::TO_TIMESTAMP - 1921)) | (1 << (self::TO_TIMESTAMP_TZ - 1921)) | (1 << (self::TO_TIME - 1921)) | (1 << (self::TO_TIME_TZ - 1921)) | (1 << (self::TO_YMINTERVAL - 1921)) | (1 << (self::TRACE - 1921)) | (1 << (self::TRACING - 1921)) | (1 << (self::TRACKING - 1921)) | (1 << (self::TRAILING - 1921)) | (1 << (self::TRANSACTION - 1921)) | (1 << (self::TRANSFORM_DISTINCT_AGG - 1921)) | (1 << (self::TRANSITIONAL - 1921)) | (1 << (self::TRANSITION - 1921)) | (1 << (self::TRANSLATE - 1921)) | (1 << (self::TRANSLATION - 1921)) | (1 << (self::TREAT - 1921)) | (1 << (self::TRIGGERS - 1921)) | (1 << (self::TRIGGER - 1921)) | (1 << (self::TRUE - 1921)) | (1 << (self::TRUNCATE - 1921)) | (1 << (self::TRUNC - 1921)) | (1 << (self::TRUSTED - 1921)) | (1 << (self::TRUST - 1921)) | (1 << (self::TUNING - 1921)))) !== 0) || (((($_la - 1985)) & ~0x3f) === 0 && ((1 << ($_la - 1985)) & ((1 << (self::TX - 1985)) | (1 << (self::TYPES - 1985)) | (1 << (self::TYPE - 1985)) | (1 << (self::TZ_OFFSET - 1985)) | (1 << (self::UB2 - 1985)) | (1 << (self::UBA - 1985)) | (1 << (self::UCS2 - 1985)) | (1 << (self::UID - 1985)) | (1 << (self::UNARCHIVED - 1985)) | (1 << (self::UNBOUNDED - 1985)) | (1 << (self::UNBOUND - 1985)) | (1 << (self::UNCONDITIONAL - 1985)) | (1 << (self::UNDER - 1985)) | (1 << (self::UNDO - 1985)) | (1 << (self::UNDROP - 1985)) | (1 << (self::UNIFORM - 1985)) | (1 << (self::UNISTR - 1985)) | (1 << (self::UNLIMITED - 1985)) | (1 << (self::UNLOAD - 1985)) | (1 << (self::UNLOCK - 1985)) | (1 << (self::UNMATCHED - 1985)) | (1 << (self::UNNEST_INNERJ_DISTINCT_VIEW - 1985)) | (1 << (self::UNNEST_NOSEMIJ_NODISTINCTVIEW - 1985)) | (1 << (self::UNNEST_SEMIJ_VIEW - 1985)) | (1 << (self::UNNEST - 1985)) | (1 << (self::UNPACKED - 1985)) | (1 << (self::UNPIVOT - 1985)) | (1 << (self::UNPLUG - 1985)) | (1 << (self::UNPROTECTED - 1985)) | (1 << (self::UNQUIESCE - 1985)) | (1 << (self::UNRECOVERABLE - 1985)) | (1 << (self::UNRESTRICTED - 1985)) | (1 << (self::UNSUBSCRIBE - 1985)) | (1 << (self::UNTIL - 1985)) | (1 << (self::UNUSABLE - 1985)) | (1 << (self::UNUSED - 1985)) | (1 << (self::UPDATABLE - 1985)) | (1 << (self::UPDATED - 1985)) | (1 << (self::UPDATEXML - 1985)) | (1 << (self::UPD_INDEXES - 1985)) | (1 << (self::UPD_JOININDEX - 1985)) | (1 << (self::UPGRADE - 1985)) | (1 << (self::UPPER - 1985)) | (1 << (self::UPSERT - 1985)) | (1 << (self::UROWID - 1985)) | (1 << (self::USABLE - 1985)) | (1 << (self::USAGE - 1985)) | (1 << (self::USE_ANTI - 1985)) | (1 << (self::USE_CONCAT - 1985)) | (1 << (self::USE_CUBE - 1985)) | (1 << (self::USE_HASH_AGGREGATION - 1985)) | (1 << (self::USE_HASH_GBY_FOR_PUSHDOWN - 1985)) | (1 << (self::USE_HASH - 1985)) | (1 << (self::USE_HIDDEN_PARTITIONS - 1985)) | (1 << (self::USE_INVISIBLE_INDEXES - 1985)) | (1 << (self::USE_MERGE_CARTESIAN - 1985)) | (1 << (self::USE_MERGE - 1985)) | (1 << (self::USE_NL - 1985)) | (1 << (self::USE_NL_WITH_INDEX - 1985)) | (1 << (self::USE_PRIVATE_OUTLINES - 1985)) | (1 << (self::USER_DATA - 1985)))) !== 0) || (((($_la - 2049)) & ~0x3f) === 0 && ((1 << ($_la - 2049)) & ((1 << (self::USER_DEFINED - 2049)) | (1 << (self::USERENV - 2049)) | (1 << (self::USERGROUP - 2049)) | (1 << (self::USER_RECYCLEBIN - 2049)) | (1 << (self::USERS - 2049)) | (1 << (self::USER_TABLESPACES - 2049)) | (1 << (self::USER - 2049)) | (1 << (self::USE_SEMI - 2049)) | (1 << (self::USE_STORED_OUTLINES - 2049)) | (1 << (self::USE_TTT_FOR_GSETS - 2049)) | (1 << (self::USE - 2049)) | (1 << (self::USE_VECTOR_AGGREGATION - 2049)) | (1 << (self::USE_WEAK_NAME_RESL - 2049)) | (1 << (self::USING_NO_EXPAND - 2049)) | (1 << (self::USING - 2049)) | (1 << (self::UTF16BE - 2049)) | (1 << (self::UTF16LE - 2049)) | (1 << (self::UTF32 - 2049)) | (1 << (self::UTF8 - 2049)) | (1 << (self::V1 - 2049)) | (1 << (self::V2 - 2049)) | (1 << (self::VALIDATE - 2049)) | (1 << (self::VALIDATION - 2049)) | (1 << (self::VALID_TIME_END - 2049)) | (1 << (self::VALUE - 2049)) | (1 << (self::VARCHAR2 - 2049)) | (1 << (self::VARCHAR - 2049)) | (1 << (self::VARIABLE - 2049)) | (1 << (self::VAR_POP - 2049)) | (1 << (self::VARRAYS - 2049)) | (1 << (self::VARRAY - 2049)) | (1 << (self::VAR_SAMP - 2049)) | (1 << (self::VARYING - 2049)) | (1 << (self::VECTOR_READ_TRACE - 2049)) | (1 << (self::VECTOR_READ - 2049)) | (1 << (self::VECTOR_TRANSFORM_DIMS - 2049)) | (1 << (self::VECTOR_TRANSFORM_FACT - 2049)) | (1 << (self::VECTOR_TRANSFORM - 2049)) | (1 << (self::VERIFIER - 2049)) | (1 << (self::VERIFY - 2049)) | (1 << (self::VERSIONING - 2049)) | (1 << (self::VERSIONS_ENDSCN - 2049)) | (1 << (self::VERSIONS_ENDTIME - 2049)) | (1 << (self::VERSIONS_OPERATION - 2049)) | (1 << (self::VERSIONS_STARTSCN - 2049)) | (1 << (self::VERSIONS_STARTTIME - 2049)) | (1 << (self::VERSIONS - 2049)) | (1 << (self::VERSIONS_XID - 2049)) | (1 << (self::VERSION - 2049)) | (1 << (self::VIOLATION - 2049)) | (1 << (self::VIRTUAL - 2049)) | (1 << (self::VISIBILITY - 2049)) | (1 << (self::VISIBLE - 2049)) | (1 << (self::VOLUME - 2049)) | (1 << (self::VSIZE - 2049)) | (1 << (self::WAIT - 2049)) | (1 << (self::WALLET - 2049)) | (1 << (self::WARNING - 2049)) | (1 << (self::WEEKS - 2049)) | (1 << (self::WEEK - 2049)) | (1 << (self::WELLFORMED - 2049)) | (1 << (self::WHENEVER - 2049)))) !== 0) || (((($_la - 2113)) & ~0x3f) === 0 && ((1 << ($_la - 2113)) & ((1 << (self::WHEN - 2113)) | (1 << (self::WHILE - 2113)) | (1 << (self::WHITESPACE - 2113)) | (1 << (self::WIDTH_BUCKET - 2113)) | (1 << (self::WITHIN - 2113)) | (1 << (self::WITHOUT - 2113)) | (1 << (self::WITH_PLSQL - 2113)) | (1 << (self::WORK - 2113)) | (1 << (self::WRAPPED - 2113)) | (1 << (self::WRAPPER - 2113)) | (1 << (self::WRITE - 2113)) | (1 << (self::XDB_FASTPATH_INSERT - 2113)) | (1 << (self::X_DYN_PRUNE - 2113)) | (1 << (self::XID - 2113)) | (1 << (self::XML2OBJECT - 2113)) | (1 << (self::XMLAGG - 2113)) | (1 << (self::XMLATTRIBUTES - 2113)) | (1 << (self::XMLCAST - 2113)) | (1 << (self::XMLCDATA - 2113)) | (1 << (self::XMLCOLATTVAL - 2113)) | (1 << (self::XMLCOMMENT - 2113)) | (1 << (self::XMLCONCAT - 2113)) | (1 << (self::XMLDIFF - 2113)) | (1 << (self::XML_DML_RWT_STMT - 2113)) | (1 << (self::XMLELEMENT - 2113)) | (1 << (self::XMLEXISTS2 - 2113)) | (1 << (self::XMLEXISTS - 2113)) | (1 << (self::XMLFOREST - 2113)) | (1 << (self::XMLINDEX_REWRITE_IN_SELECT - 2113)) | (1 << (self::XMLINDEX_REWRITE - 2113)) | (1 << (self::XMLINDEX_SEL_IDX_TBL - 2113)) | (1 << (self::XMLISNODE - 2113)) | (1 << (self::XMLISVALID - 2113)) | (1 << (self::XMLNAMESPACES - 2113)) | (1 << (self::XMLPARSE - 2113)) | (1 << (self::XMLPATCH - 2113)) | (1 << (self::XMLPI - 2113)) | (1 << (self::XMLQUERYVAL - 2113)) | (1 << (self::XMLQUERY - 2113)) | (1 << (self::XMLROOT - 2113)) | (1 << (self::XMLSCHEMA - 2113)) | (1 << (self::XMLSERIALIZE - 2113)) | (1 << (self::XMLTABLE - 2113)) | (1 << (self::XMLTRANSFORMBLOB - 2113)) | (1 << (self::XMLTRANSFORM - 2113)) | (1 << (self::XMLTYPE - 2113)) | (1 << (self::XML - 2113)) | (1 << (self::XPATHTABLE - 2113)) | (1 << (self::XS_SYS_CONTEXT - 2113)) | (1 << (self::XS - 2113)) | (1 << (self::YEARS - 2113)) | (1 << (self::YEAR - 2113)) | (1 << (self::YES - 2113)) | (1 << (self::YMINTERVAL_UNCONSTRAINED - 2113)) | (1 << (self::ZONEMAP - 2113)) | (1 << (self::ZONE - 2113)) | (1 << (self::PREDICTION - 2113)) | (1 << (self::PREDICTION_BOUNDS - 2113)) | (1 << (self::PREDICTION_COST - 2113)))) !== 0) || (((($_la - 2177)) & ~0x3f) === 0 && ((1 << ($_la - 2177)) & ((1 << (self::PREDICTION_DETAILS - 2177)) | (1 << (self::PREDICTION_PROBABILITY - 2177)) | (1 << (self::PREDICTION_SET - 2177)) | (1 << (self::CUME_DIST - 2177)) | (1 << (self::DENSE_RANK - 2177)) | (1 << (self::LISTAGG - 2177)) | (1 << (self::PERCENT_RANK - 2177)) | (1 << (self::PERCENTILE_CONT - 2177)) | (1 << (self::PERCENTILE_DISC - 2177)) | (1 << (self::RANK - 2177)) | (1 << (self::AVG - 2177)) | (1 << (self::CORR - 2177)) | (1 << (self::COVAR_ - 2177)) | (1 << (self::LAG - 2177)) | (1 << (self::LEAD - 2177)) | (1 << (self::MAX - 2177)) | (1 << (self::MEDIAN - 2177)) | (1 << (self::MIN - 2177)) | (1 << (self::NTILE - 2177)) | (1 << (self::NVL - 2177)) | (1 << (self::RATIO_TO_REPORT - 2177)) | (1 << (self::REGR_ - 2177)) | (1 << (self::ROUND - 2177)) | (1 << (self::ROW_NUMBER - 2177)) | (1 << (self::SUBSTR - 2177)) | (1 << (self::TO_CHAR - 2177)) | (1 << (self::TRIM - 2177)) | (1 << (self::SUM - 2177)) | (1 << (self::STDDEV - 2177)) | (1 << (self::VAR_ - 2177)) | (1 << (self::VARIANCE - 2177)) | (1 << (self::LEAST - 2177)) | (1 << (self::GREATEST - 2177)) | (1 << (self::TO_DATE - 2177)) | (1 << (self::NATIONAL_CHAR_STRING_LIT - 2177)) | (1 << (self::PERIOD - 2177)) | (1 << (self::CHAR_STRING - 2177)) | (1 << (self::DELIMITED_ID - 2177)) | (1 << (self::BINDVAR - 2177)) | (1 << (self::COLON - 2177)))) !== 0) || $_la === self::INTRODUCER || $_la === self::REGULAR_ID) {
                        $this->setState(11389);
                        $this->column_alias();
                    }
                    $this->setState(11399);
                    $this->errorHandler->sync($this);

                    $_la = $this->input->LA(1);
                    while ($_la === self::COMMA) {
                        $this->setState(11392);
                        $this->match(self::COMMA);
                        $this->setState(11393);
                        $this->expression();
                        $this->setState(11395);
                        $this->errorHandler->sync($this);
                        $_la = $this->input->LA(1);

                        if (((($_la) & ~0x3f) === 0 && ((1 << $_la) & ((1 << self::ABORT) | (1 << self::ABS) | (1 << self::ACCESS) | (1 << self::ACCESSED) | (1 << self::ACCOUNT) | (1 << self::ACL) | (1 << self::ACOS) | (1 << self::ACTION) | (1 << self::ACTIONS) | (1 << self::ACTIVATE) | (1 << self::ACTIVE) | (1 << self::ACTIVE_COMPONENT) | (1 << self::ACTIVE_DATA) | (1 << self::ACTIVE_FUNCTION) | (1 << self::ACTIVE_TAG) | (1 << self::ACTIVITY) | (1 << self::ADAPTIVE_PLAN) | (1 << self::ADD) | (1 << self::ADD_COLUMN) | (1 << self::ADD_GROUP) | (1 << self::ADD_MONTHS) | (1 << self::ADJ_DATE) | (1 << self::ADMIN) | (1 << self::ADMINISTER) | (1 << self::ADMINISTRATOR) | (1 << self::ADVANCED) | (1 << self::ADVISE) | (1 << self::ADVISOR) | (1 << self::AFD_DISKSTRING) | (1 << self::AFTER) | (1 << self::AGENT) | (1 << self::AGGREGATE) | (1 << self::A_LETTER) | (1 << self::ALIAS) | (1 << self::ALLOCATE) | (1 << self::ALLOW) | (1 << self::ALL_ROWS) | (1 << self::ALWAYS) | (1 << self::ANALYZE) | (1 << self::ANCILLARY) | (1 << self::AND_EQUAL) | (1 << self::ANOMALY) | (1 << self::ANSI_REARCH) | (1 << self::ANTIJOIN) | (1 << self::ANYSCHEMA) | (1 << self::APPEND) | (1 << self::APPENDCHILDXML) | (1 << self::APPEND_VALUES) | (1 << self::APPLICATION) | (1 << self::APPLY) | (1 << self::APPROX_COUNT_DISTINCT) | (1 << self::ARCHIVAL) | (1 << self::ARCHIVE) | (1 << self::ARCHIVED) | (1 << self::ARCHIVELOG) | (1 << self::ARRAY) | (1 << self::AS) | (1 << self::ASCII))) !== 0) || (((($_la - 64)) & ~0x3f) === 0 && ((1 << ($_la - 64)) & ((1 << (self::ASCIISTR - 64)) | (1 << (self::ASIN - 64)) | (1 << (self::ASIS - 64)) | (1 << (self::ASSEMBLY - 64)) | (1 << (self::ASSIGN - 64)) | (1 << (self::ASSOCIATE - 64)) | (1 << (self::ASYNC - 64)) | (1 << (self::ASYNCHRONOUS - 64)) | (1 << (self::ATAN2 - 64)) | (1 << (self::ATAN - 64)) | (1 << (self::AT - 64)) | (1 << (self::ATTRIBUTE - 64)) | (1 << (self::ATTRIBUTES - 64)) | (1 << (self::AUTHENTICATED - 64)) | (1 << (self::AUTHENTICATION - 64)) | (1 << (self::AUTHID - 64)) | (1 << (self::AUTHORIZATION - 64)) | (1 << (self::AUTOALLOCATE - 64)) | (1 << (self::AUTO - 64)) | (1 << (self::AUTOEXTEND - 64)) | (1 << (self::AUTO_LOGIN - 64)) | (1 << (self::AUTOMATIC - 64)) | (1 << (self::AUTONOMOUS_TRANSACTION - 64)) | (1 << (self::AUTO_REOPTIMIZE - 64)) | (1 << (self::AVAILABILITY - 64)) | (1 << (self::AVRO - 64)) | (1 << (self::BACKGROUND - 64)) | (1 << (self::BACKUP - 64)) | (1 << (self::BASIC - 64)) | (1 << (self::BASICFILE - 64)) | (1 << (self::BATCH - 64)) | (1 << (self::BATCHSIZE - 64)) | (1 << (self::BATCH_TABLE_ACCESS_BY_ROWID - 64)) | (1 << (self::BECOME - 64)) | (1 << (self::BEFORE - 64)) | (1 << (self::BEGIN - 64)) | (1 << (self::BEGINNING - 64)) | (1 << (self::BEGIN_OUTLINE_DATA - 64)) | (1 << (self::BEHALF - 64)) | (1 << (self::BEQUEATH - 64)) | (1 << (self::BFILE - 64)) | (1 << (self::BFILENAME - 64)) | (1 << (self::BIGFILE - 64)) | (1 << (self::BINARY - 64)) | (1 << (self::BINARY_DOUBLE - 64)) | (1 << (self::BINARY_DOUBLE_INFINITY - 64)) | (1 << (self::BINARY_DOUBLE_NAN - 64)) | (1 << (self::BINARY_FLOAT - 64)) | (1 << (self::BINARY_FLOAT_INFINITY - 64)) | (1 << (self::BINARY_FLOAT_NAN - 64)) | (1 << (self::BINARY_INTEGER - 64)) | (1 << (self::BIND_AWARE - 64)) | (1 << (self::BINDING - 64)) | (1 << (self::BIN_TO_NUM - 64)) | (1 << (self::BITAND - 64)) | (1 << (self::BITMAP_AND - 64)) | (1 << (self::BITMAP - 64)) | (1 << (self::BITMAPS - 64)) | (1 << (self::BITMAP_TREE - 64)) | (1 << (self::BITS - 64)))) !== 0) || (((($_la - 128)) & ~0x3f) === 0 && ((1 << ($_la - 128)) & ((1 << (self::BLOB - 128)) | (1 << (self::BLOCK - 128)) | (1 << (self::BLOCK_RANGE - 128)) | (1 << (self::BLOCKS - 128)) | (1 << (self::BLOCKSIZE - 128)) | (1 << (self::BODY - 128)) | (1 << (self::BOOLEAN - 128)) | (1 << (self::BOTH - 128)) | (1 << (self::BOUND - 128)) | (1 << (self::BRANCH - 128)) | (1 << (self::BREADTH - 128)) | (1 << (self::BROADCAST - 128)) | (1 << (self::BSON - 128)) | (1 << (self::BUFFER - 128)) | (1 << (self::BUFFER_CACHE - 128)) | (1 << (self::BUFFER_POOL - 128)) | (1 << (self::BUILD - 128)) | (1 << (self::BULK - 128)) | (1 << (self::BYPASS_RECURSIVE_CHECK - 128)) | (1 << (self::BYPASS_UJVC - 128)) | (1 << (self::BYTE - 128)) | (1 << (self::CACHE - 128)) | (1 << (self::CACHE_CB - 128)) | (1 << (self::CACHE_INSTANCES - 128)) | (1 << (self::CACHE_TEMP_TABLE - 128)) | (1 << (self::CACHING - 128)) | (1 << (self::CALCULATED - 128)) | (1 << (self::CALLBACK - 128)) | (1 << (self::CALL - 128)) | (1 << (self::CANCEL - 128)) | (1 << (self::CAPACITY - 128)) | (1 << (self::CARDINALITY - 128)) | (1 << (self::CASCADE - 128)) | (1 << (self::CASE - 128)) | (1 << (self::CAST - 128)) | (1 << (self::CATEGORY - 128)) | (1 << (self::CDBDEFAULT - 128)) | (1 << (self::CEIL - 128)) | (1 << (self::CELL_FLASH_CACHE - 128)) | (1 << (self::CERTIFICATE - 128)) | (1 << (self::CFILE - 128)) | (1 << (self::CHAINED - 128)) | (1 << (self::CHANGE - 128)) | (1 << (self::CHANGE_DUPKEY_ERROR_INDEX - 128)) | (1 << (self::CHARACTER - 128)) | (1 << (self::CHAR - 128)) | (1 << (self::CHAR_CS - 128)) | (1 << (self::CHARTOROWID - 128)) | (1 << (self::CHECK_ACL_REWRITE - 128)) | (1 << (self::CHECKPOINT - 128)) | (1 << (self::CHILD - 128)) | (1 << (self::CHOOSE - 128)) | (1 << (self::CHR - 128)) | (1 << (self::CHUNK - 128)) | (1 << (self::CLASS - 128)) | (1 << (self::CLASSIFIER - 128)) | (1 << (self::CLEANUP - 128)) | (1 << (self::CLEAR - 128)) | (1 << (self::C_LETTER - 128)) | (1 << (self::CLIENT - 128)))) !== 0) || (((($_la - 192)) & ~0x3f) === 0 && ((1 << ($_la - 192)) & ((1 << (self::CLOB - 192)) | (1 << (self::CLONE - 192)) | (1 << (self::CLOSE_CACHED_OPEN_CURSORS - 192)) | (1 << (self::CLOSE - 192)) | (1 << (self::CLUSTER_BY_ROWID - 192)) | (1 << (self::CLUSTER - 192)) | (1 << (self::CLUSTER_DETAILS - 192)) | (1 << (self::CLUSTER_DISTANCE - 192)) | (1 << (self::CLUSTER_ID - 192)) | (1 << (self::CLUSTERING - 192)) | (1 << (self::CLUSTERING_FACTOR - 192)) | (1 << (self::CLUSTER_PROBABILITY - 192)) | (1 << (self::CLUSTER_SET - 192)) | (1 << (self::COALESCE - 192)) | (1 << (self::COALESCE_SQ - 192)) | (1 << (self::COARSE - 192)) | (1 << (self::CO_AUTH_IND - 192)) | (1 << (self::COLD - 192)) | (1 << (self::COLLECT - 192)) | (1 << (self::COLUMNAR - 192)) | (1 << (self::COLUMN_AUTH_INDICATOR - 192)) | (1 << (self::COLUMN - 192)) | (1 << (self::COLUMNS - 192)) | (1 << (self::COLUMN_STATS - 192)) | (1 << (self::COLUMN_VALUE - 192)) | (1 << (self::COMMENT - 192)) | (1 << (self::COMMIT - 192)) | (1 << (self::COMMITTED - 192)) | (1 << (self::COMMON_DATA - 192)) | (1 << (self::COMPACT - 192)) | (1 << (self::COMPATIBILITY - 192)) | (1 << (self::COMPILE - 192)) | (1 << (self::COMPLETE - 192)) | (1 << (self::COMPLIANCE - 192)) | (1 << (self::COMPONENT - 192)) | (1 << (self::COMPONENTS - 192)) | (1 << (self::COMPOSE - 192)) | (1 << (self::COMPOSITE - 192)) | (1 << (self::COMPOSITE_LIMIT - 192)) | (1 << (self::COMPOUND - 192)) | (1 << (self::COMPUTE - 192)) | (1 << (self::CONCAT - 192)) | (1 << (self::CON_DBID_TO_ID - 192)) | (1 << (self::CONDITIONAL - 192)) | (1 << (self::CONDITION - 192)) | (1 << (self::CONFIRM - 192)) | (1 << (self::CONFORMING - 192)) | (1 << (self::CON_GUID_TO_ID - 192)) | (1 << (self::CON_ID - 192)) | (1 << (self::CON_NAME_TO_ID - 192)) | (1 << (self::CONNECT_BY_CB_WHR_ONLY - 192)) | (1 << (self::CONNECT_BY_COMBINE_SW - 192)) | (1 << (self::CONNECT_BY_COST_BASED - 192)) | (1 << (self::CONNECT_BY_ELIM_DUPS - 192)) | (1 << (self::CONNECT_BY_FILTERING - 192)) | (1 << (self::CONNECT_BY_ISCYCLE - 192)) | (1 << (self::CONNECT_BY_ISLEAF - 192)) | (1 << (self::CONNECT_BY_ROOT - 192)) | (1 << (self::CONNECT_TIME - 192)) | (1 << (self::CONSIDER - 192)) | (1 << (self::CONSISTENT - 192)) | (1 << (self::CONSTANT - 192)))) !== 0) || (((($_la - 256)) & ~0x3f) === 0 && ((1 << ($_la - 256)) & ((1 << (self::CONST - 256)) | (1 << (self::CONSTRAINT - 256)) | (1 << (self::CONSTRAINTS - 256)) | (1 << (self::CONSTRUCTOR - 256)) | (1 << (self::CONTAINER - 256)) | (1 << (self::CONTAINER_DATA - 256)) | (1 << (self::CONTAINERS - 256)) | (1 << (self::CONTENT - 256)) | (1 << (self::CONTENTS - 256)) | (1 << (self::CONTEXT - 256)) | (1 << (self::CONTINUE - 256)) | (1 << (self::CONTROLFILE - 256)) | (1 << (self::CON_UID_TO_ID - 256)) | (1 << (self::CONVERT - 256)) | (1 << (self::COOKIE - 256)) | (1 << (self::COPY - 256)) | (1 << (self::CORR_K - 256)) | (1 << (self::CORR_S - 256)) | (1 << (self::CORRUPTION - 256)) | (1 << (self::CORRUPT_XID_ALL - 256)) | (1 << (self::CORRUPT_XID - 256)) | (1 << (self::COS - 256)) | (1 << (self::COSH - 256)) | (1 << (self::COST - 256)) | (1 << (self::COST_XML_QUERY_REWRITE - 256)) | (1 << (self::COUNT - 256)) | (1 << (self::COVAR_POP - 256)) | (1 << (self::COVAR_SAMP - 256)) | (1 << (self::CPU_COSTING - 256)) | (1 << (self::CPU_PER_CALL - 256)) | (1 << (self::CPU_PER_SESSION - 256)) | (1 << (self::CRASH - 256)) | (1 << (self::CREATE_FILE_DEST - 256)) | (1 << (self::CREATE_STORED_OUTLINES - 256)) | (1 << (self::CREATION - 256)) | (1 << (self::CREDENTIAL - 256)) | (1 << (self::CRITICAL - 256)) | (1 << (self::CROSS - 256)) | (1 << (self::CROSSEDITION - 256)) | (1 << (self::CSCONVERT - 256)) | (1 << (self::CUBE_AJ - 256)) | (1 << (self::CUBE - 256)) | (1 << (self::CUBE_GB - 256)) | (1 << (self::CUBE_SJ - 256)) | (1 << (self::CUME_DISTM - 256)) | (1 << (self::CURRENT - 256)) | (1 << (self::CURRENT_DATE - 256)) | (1 << (self::CURRENT_SCHEMA - 256)) | (1 << (self::CURRENT_TIME - 256)) | (1 << (self::CURRENT_TIMESTAMP - 256)) | (1 << (self::CURRENT_USER - 256)) | (1 << (self::CURRENTV - 256)) | (1 << (self::CURSOR - 256)) | (1 << (self::CURSOR_SHARING_EXACT - 256)) | (1 << (self::CURSOR_SPECIFIC_SEGMENT - 256)) | (1 << (self::CUSTOMDATUM - 256)) | (1 << (self::CV - 256)) | (1 << (self::CYCLE - 256)) | (1 << (self::DANGLING - 256)) | (1 << (self::DATABASE - 256)) | (1 << (self::DATA - 256)) | (1 << (self::DATAFILE - 256)) | (1 << (self::DATAFILES - 256)))) !== 0) || (((($_la - 321)) & ~0x3f) === 0 && ((1 << ($_la - 321)) & ((1 << (self::DATAMOVEMENT - 321)) | (1 << (self::DATAOBJNO - 321)) | (1 << (self::DATAOBJ_TO_MAT_PARTITION - 321)) | (1 << (self::DATAOBJ_TO_PARTITION - 321)) | (1 << (self::DATAPUMP - 321)) | (1 << (self::DATA_SECURITY_REWRITE_LIMIT - 321)) | (1 << (self::DATE_MODE - 321)) | (1 << (self::DAY - 321)) | (1 << (self::DAYS - 321)) | (1 << (self::DBA - 321)) | (1 << (self::DBA_RECYCLEBIN - 321)) | (1 << (self::DBMS_STATS - 321)) | (1 << (self::DB_ROLE_CHANGE - 321)) | (1 << (self::DBTIMEZONE - 321)) | (1 << (self::DB_UNIQUE_NAME - 321)) | (1 << (self::DB_VERSION - 321)) | (1 << (self::DDL - 321)) | (1 << (self::DEALLOCATE - 321)) | (1 << (self::DEBUG - 321)) | (1 << (self::DEBUGGER - 321)) | (1 << (self::DEC - 321)) | (1 << (self::DECIMAL - 321)) | (1 << (self::DECLARE - 321)) | (1 << (self::DECOMPOSE - 321)) | (1 << (self::DECORRELATE - 321)) | (1 << (self::DECR - 321)) | (1 << (self::DECREMENT - 321)) | (1 << (self::DECRYPT - 321)) | (1 << (self::DEDUPLICATE - 321)) | (1 << (self::DEFAULTS - 321)) | (1 << (self::DEFERRABLE - 321)) | (1 << (self::DEFERRED - 321)) | (1 << (self::DEFINED - 321)) | (1 << (self::DEFINE - 321)) | (1 << (self::DEFINER - 321)) | (1 << (self::DEGREE - 321)) | (1 << (self::DELAY - 321)) | (1 << (self::DELEGATE - 321)) | (1 << (self::DELETE_ALL - 321)) | (1 << (self::DELETE - 321)) | (1 << (self::DELETEXML - 321)) | (1 << (self::DEMAND - 321)) | (1 << (self::DENSE_RANKM - 321)) | (1 << (self::DEPENDENT - 321)) | (1 << (self::DEPTH - 321)) | (1 << (self::DEQUEUE - 321)) | (1 << (self::DEREF - 321)) | (1 << (self::DEREF_NO_REWRITE - 321)) | (1 << (self::DESTROY - 321)) | (1 << (self::DETACHED - 321)) | (1 << (self::DETERMINES - 321)) | (1 << (self::DETERMINISTIC - 321)) | (1 << (self::DICTIONARY - 321)) | (1 << (self::DIMENSION - 321)) | (1 << (self::DIMENSIONS - 321)) | (1 << (self::DIRECT_LOAD - 321)) | (1 << (self::DIRECTORY - 321)) | (1 << (self::DIRECT_PATH - 321)) | (1 << (self::DISABLE_ALL - 321)) | (1 << (self::DISABLE - 321)) | (1 << (self::DISABLE_PARALLEL_DML - 321)))) !== 0) || (((($_la - 385)) & ~0x3f) === 0 && ((1 << ($_la - 385)) & ((1 << (self::DISABLE_PRESET - 385)) | (1 << (self::DISABLE_RPKE - 385)) | (1 << (self::DISALLOW - 385)) | (1 << (self::DISASSOCIATE - 385)) | (1 << (self::DISCARD - 385)) | (1 << (self::DISCONNECT - 385)) | (1 << (self::DISK - 385)) | (1 << (self::DISKGROUP - 385)) | (1 << (self::DISKS - 385)) | (1 << (self::DISMOUNT - 385)) | (1 << (self::DISTINGUISHED - 385)) | (1 << (self::DISTRIBUTED - 385)) | (1 << (self::DISTRIBUTE - 385)) | (1 << (self::DML - 385)) | (1 << (self::DML_UPDATE - 385)) | (1 << (self::DOCFIDELITY - 385)) | (1 << (self::DOCUMENT - 385)) | (1 << (self::DOMAIN_INDEX_FILTER - 385)) | (1 << (self::DOMAIN_INDEX_NO_SORT - 385)) | (1 << (self::DOMAIN_INDEX_SORT - 385)) | (1 << (self::DOUBLE - 385)) | (1 << (self::DOWNGRADE - 385)) | (1 << (self::DRIVING_SITE - 385)) | (1 << (self::DROP_COLUMN - 385)) | (1 << (self::DROP_GROUP - 385)) | (1 << (self::DSINTERVAL_UNCONSTRAINED - 385)) | (1 << (self::DST_UPGRADE_INSERT_CONV - 385)) | (1 << (self::DUMP - 385)) | (1 << (self::DUPLICATE - 385)) | (1 << (self::DV - 385)) | (1 << (self::DYNAMIC - 385)) | (1 << (self::DYNAMIC_SAMPLING - 385)) | (1 << (self::DYNAMIC_SAMPLING_EST_CDN - 385)) | (1 << (self::EACH - 385)) | (1 << (self::EDITIONABLE - 385)) | (1 << (self::EDITION - 385)) | (1 << (self::EDITIONING - 385)) | (1 << (self::EDITIONS - 385)) | (1 << (self::ELEMENT - 385)) | (1 << (self::ELIM_GROUPBY - 385)) | (1 << (self::ELIMINATE_JOIN - 385)) | (1 << (self::ELIMINATE_OBY - 385)) | (1 << (self::ELIMINATE_OUTER_JOIN - 385)) | (1 << (self::EM - 385)) | (1 << (self::EMPTY_BLOB - 385)) | (1 << (self::EMPTY_CLOB - 385)) | (1 << (self::EMPTY - 385)) | (1 << (self::ENABLE_ALL - 385)) | (1 << (self::ENABLE - 385)) | (1 << (self::ENABLE_PARALLEL_DML - 385)) | (1 << (self::ENABLE_PRESET - 385)) | (1 << (self::ENCODING - 385)) | (1 << (self::ENCRYPT - 385)) | (1 << (self::ENCRYPTION - 385)) | (1 << (self::END_OUTLINE_DATA - 385)) | (1 << (self::ENFORCED - 385)) | (1 << (self::ENFORCE - 385)))) !== 0) || (((($_la - 449)) & ~0x3f) === 0 && ((1 << ($_la - 449)) & ((1 << (self::ENQUEUE - 449)) | (1 << (self::ENTERPRISE - 449)) | (1 << (self::ENTITYESCAPING - 449)) | (1 << (self::ENTRY - 449)) | (1 << (self::EQUIPART - 449)) | (1 << (self::ERR - 449)) | (1 << (self::ERROR_ARGUMENT - 449)) | (1 << (self::ERROR - 449)) | (1 << (self::ERROR_ON_OVERLAP_TIME - 449)) | (1 << (self::ERRORS - 449)) | (1 << (self::ESCAPE - 449)) | (1 << (self::ESTIMATE - 449)) | (1 << (self::EVAL - 449)) | (1 << (self::EVALNAME - 449)) | (1 << (self::EVALUATE - 449)) | (1 << (self::EVALUATION - 449)) | (1 << (self::EVENTS - 449)) | (1 << (self::EVERY - 449)) | (1 << (self::EXCEPT - 449)) | (1 << (self::EXCEPTION - 449)) | (1 << (self::EXCEPTION_INIT - 449)) | (1 << (self::EXCEPTIONS - 449)) | (1 << (self::EXCHANGE - 449)) | (1 << (self::EXCLUDE - 449)) | (1 << (self::EXCLUDING - 449)) | (1 << (self::EXECUTE - 449)) | (1 << (self::EXEMPT - 449)) | (1 << (self::EXISTING - 449)) | (1 << (self::EXISTS - 449)) | (1 << (self::EXISTSNODE - 449)) | (1 << (self::EXIT - 449)) | (1 << (self::EXPAND_GSET_TO_UNION - 449)) | (1 << (self::EXPAND_TABLE - 449)) | (1 << (self::EXP - 449)) | (1 << (self::EXPIRE - 449)) | (1 << (self::EXPLAIN - 449)) | (1 << (self::EXPLOSION - 449)) | (1 << (self::EXPORT - 449)) | (1 << (self::EXPR_CORR_CHECK - 449)) | (1 << (self::EXPRESS - 449)) | (1 << (self::EXTENDS - 449)) | (1 << (self::EXTENT - 449)) | (1 << (self::EXTENTS - 449)) | (1 << (self::EXTERNAL - 449)) | (1 << (self::EXTERNALLY - 449)) | (1 << (self::EXTRACTCLOBXML - 449)) | (1 << (self::EXTRACT - 449)) | (1 << (self::EXTRACTVALUE - 449)) | (1 << (self::EXTRA - 449)) | (1 << (self::FACILITY - 449)) | (1 << (self::FACT - 449)) | (1 << (self::FACTOR - 449)) | (1 << (self::FACTORIZE_JOIN - 449)) | (1 << (self::FAILED - 449)) | (1 << (self::FAILED_LOGIN_ATTEMPTS - 449)) | (1 << (self::FAILGROUP - 449)) | (1 << (self::FAILOVER - 449)) | (1 << (self::FAILURE - 449)) | (1 << (self::FALSE - 449)) | (1 << (self::FAMILY - 449)) | (1 << (self::FAR - 449)) | (1 << (self::FAST - 449)) | (1 << (self::FASTSTART - 449)))) !== 0) || (((($_la - 513)) & ~0x3f) === 0 && ((1 << ($_la - 513)) & ((1 << (self::FBTSCAN - 513)) | (1 << (self::FEATURE_DETAILS - 513)) | (1 << (self::FEATURE_ID - 513)) | (1 << (self::FEATURE_SET - 513)) | (1 << (self::FEATURE_VALUE - 513)) | (1 << (self::FETCH - 513)) | (1 << (self::FILE - 513)) | (1 << (self::FILE_NAME_CONVERT - 513)) | (1 << (self::FILESYSTEM_LIKE_LOGGING - 513)) | (1 << (self::FILTER - 513)) | (1 << (self::FINAL - 513)) | (1 << (self::FINE - 513)) | (1 << (self::FINISH - 513)) | (1 << (self::FIRST - 513)) | (1 << (self::FIRSTM - 513)) | (1 << (self::FIRST_ROWS - 513)) | (1 << (self::FIRST_VALUE - 513)) | (1 << (self::FIXED_VIEW_DATA - 513)) | (1 << (self::FLAGGER - 513)) | (1 << (self::FLASHBACK - 513)) | (1 << (self::FLASH_CACHE - 513)) | (1 << (self::FLOAT - 513)) | (1 << (self::FLOB - 513)) | (1 << (self::FLOOR - 513)) | (1 << (self::FLUSH - 513)) | (1 << (self::FOLDER - 513)) | (1 << (self::FOLLOWING - 513)) | (1 << (self::FOLLOWS - 513)) | (1 << (self::FORALL - 513)) | (1 << (self::FORCE - 513)) | (1 << (self::FORCE_XML_QUERY_REWRITE - 513)) | (1 << (self::FOREIGN - 513)) | (1 << (self::FOREVER - 513)) | (1 << (self::FORMAT - 513)) | (1 << (self::FORWARD - 513)) | (1 << (self::FRAGMENT_NUMBER - 513)) | (1 << (self::FREELIST - 513)) | (1 << (self::FREELISTS - 513)) | (1 << (self::FREEPOOLS - 513)) | (1 << (self::FRESH - 513)) | (1 << (self::FROM_TZ - 513)) | (1 << (self::FULL - 513)) | (1 << (self::FULL_OUTER_JOIN_TO_OUTER - 513)) | (1 << (self::FUNCTION - 513)) | (1 << (self::FUNCTIONS - 513)) | (1 << (self::GATHER_OPTIMIZER_STATISTICS - 513)) | (1 << (self::GATHER_PLAN_STATISTICS - 513)) | (1 << (self::GBY_CONC_ROLLUP - 513)) | (1 << (self::GBY_PUSHDOWN - 513)) | (1 << (self::GENERATED - 513)) | (1 << (self::GET - 513)) | (1 << (self::GLOBAL - 513)) | (1 << (self::GLOBALLY - 513)) | (1 << (self::GLOBAL_NAME - 513)) | (1 << (self::GLOBAL_TOPIC_ENABLED - 513)) | (1 << (self::GROUP_BY - 513)) | (1 << (self::GROUP_ID - 513)) | (1 << (self::GROUPING - 513)) | (1 << (self::GROUPING_ID - 513)))) !== 0) || (((($_la - 577)) & ~0x3f) === 0 && ((1 << ($_la - 577)) & ((1 << (self::GROUPS - 577)) | (1 << (self::GUARANTEED - 577)) | (1 << (self::GUARANTEE - 577)) | (1 << (self::GUARD - 577)) | (1 << (self::HASH_AJ - 577)) | (1 << (self::HASH - 577)) | (1 << (self::HASHKEYS - 577)) | (1 << (self::HASH_SJ - 577)) | (1 << (self::HEADER - 577)) | (1 << (self::HEAP - 577)) | (1 << (self::HELP - 577)) | (1 << (self::HEXTORAW - 577)) | (1 << (self::HEXTOREF - 577)) | (1 << (self::HIDDEN_KEYWORD - 577)) | (1 << (self::HIDE - 577)) | (1 << (self::HIERARCHY - 577)) | (1 << (self::HIGH - 577)) | (1 << (self::HINTSET_BEGIN - 577)) | (1 << (self::HINTSET_END - 577)) | (1 << (self::HOT - 577)) | (1 << (self::HOUR - 577)) | (1 << (self::HWM_BROKERED - 577)) | (1 << (self::HYBRID - 577)) | (1 << (self::IDENTIFIER - 577)) | (1 << (self::IDENTITY - 577)) | (1 << (self::IDGENERATORS - 577)) | (1 << (self::ID - 577)) | (1 << (self::IDLE_TIME - 577)) | (1 << (self::IF - 577)) | (1 << (self::IGNORE - 577)) | (1 << (self::IGNORE_OPTIM_EMBEDDED_HINTS - 577)) | (1 << (self::IGNORE_ROW_ON_DUPKEY_INDEX - 577)) | (1 << (self::IGNORE_WHERE_CLAUSE - 577)) | (1 << (self::ILM - 577)) | (1 << (self::IMMEDIATE - 577)) | (1 << (self::IMPACT - 577)) | (1 << (self::IMPORT - 577)) | (1 << (self::INACTIVE - 577)) | (1 << (self::INCLUDE - 577)) | (1 << (self::INCLUDE_VERSION - 577)) | (1 << (self::INCLUDING - 577)) | (1 << (self::INCREMENTAL - 577)) | (1 << (self::INCREMENT - 577)) | (1 << (self::INCR - 577)) | (1 << (self::INDENT - 577)) | (1 << (self::INDEX_ASC - 577)) | (1 << (self::INDEX_COMBINE - 577)) | (1 << (self::INDEX_DESC - 577)) | (1 << (self::INDEXED - 577)) | (1 << (self::INDEXES - 577)) | (1 << (self::INDEX_FFS - 577)) | (1 << (self::INDEX_FILTER - 577)) | (1 << (self::INDEXING - 577)) | (1 << (self::INDEX_JOIN - 577)) | (1 << (self::INDEX_ROWS - 577)) | (1 << (self::INDEX_RRS - 577)) | (1 << (self::INDEX_RS_ASC - 577)) | (1 << (self::INDEX_RS_DESC - 577)) | (1 << (self::INDEX_RS - 577)) | (1 << (self::INDEX_SCAN - 577)) | (1 << (self::INDEX_SKIP_SCAN - 577)))) !== 0) || (((($_la - 641)) & ~0x3f) === 0 && ((1 << ($_la - 641)) & ((1 << (self::INDEX_SS_ASC - 641)) | (1 << (self::INDEX_SS_DESC - 641)) | (1 << (self::INDEX_SS - 641)) | (1 << (self::INDEX_STATS - 641)) | (1 << (self::INDEXTYPE - 641)) | (1 << (self::INDEXTYPES - 641)) | (1 << (self::INDICATOR - 641)) | (1 << (self::INDICES - 641)) | (1 << (self::INFINITE - 641)) | (1 << (self::INFORMATIONAL - 641)) | (1 << (self::INHERIT - 641)) | (1 << (self::INITCAP - 641)) | (1 << (self::INITIAL - 641)) | (1 << (self::INITIALIZED - 641)) | (1 << (self::INITIALLY - 641)) | (1 << (self::INITRANS - 641)) | (1 << (self::INLINE - 641)) | (1 << (self::INLINE_XMLTYPE_NT - 641)) | (1 << (self::INMEMORY - 641)) | (1 << (self::IN_MEMORY_METADATA - 641)) | (1 << (self::INMEMORY_PRUNING - 641)) | (1 << (self::INNER - 641)) | (1 << (self::INOUT - 641)) | (1 << (self::INPLACE - 641)) | (1 << (self::INSERTCHILDXMLAFTER - 641)) | (1 << (self::INSERTCHILDXMLBEFORE - 641)) | (1 << (self::INSERTCHILDXML - 641)) | (1 << (self::INSERTXMLAFTER - 641)) | (1 << (self::INSERTXMLBEFORE - 641)) | (1 << (self::INSTANCE - 641)) | (1 << (self::INSTANCES - 641)) | (1 << (self::INSTANTIABLE - 641)) | (1 << (self::INSTANTLY - 641)) | (1 << (self::INSTEAD - 641)) | (1 << (self::INSTR2 - 641)) | (1 << (self::INSTR4 - 641)) | (1 << (self::INSTRB - 641)) | (1 << (self::INSTRC - 641)) | (1 << (self::INSTR - 641)) | (1 << (self::INTEGER - 641)) | (1 << (self::INTERLEAVED - 641)) | (1 << (self::INTERMEDIATE - 641)) | (1 << (self::INTERNAL_CONVERT - 641)) | (1 << (self::INTERNAL_USE - 641)) | (1 << (self::INTERPRETED - 641)) | (1 << (self::INTERVAL - 641)) | (1 << (self::INT - 641)) | (1 << (self::INVALIDATE - 641)) | (1 << (self::INVISIBLE - 641)) | (1 << (self::IN_XQUERY - 641)) | (1 << (self::ISOLATION - 641)) | (1 << (self::ISOLATION_LEVEL - 641)) | (1 << (self::ITERATE - 641)) | (1 << (self::ITERATION_NUMBER - 641)) | (1 << (self::JAVA - 641)) | (1 << (self::JOB - 641)) | (1 << (self::JOIN - 641)) | (1 << (self::JSON_ARRAYAGG - 641)) | (1 << (self::JSON_ARRAY - 641)))) !== 0) || (((($_la - 705)) & ~0x3f) === 0 && ((1 << ($_la - 705)) & ((1 << (self::JSON_EQUAL - 705)) | (1 << (self::JSON_EXISTS2 - 705)) | (1 << (self::JSON_EXISTS - 705)) | (1 << (self::JSONGET - 705)) | (1 << (self::JSON - 705)) | (1 << (self::JSON_OBJECTAGG - 705)) | (1 << (self::JSON_OBJECT - 705)) | (1 << (self::JSONPARSE - 705)) | (1 << (self::JSON_QUERY - 705)) | (1 << (self::JSON_SERIALIZE - 705)) | (1 << (self::JSON_TABLE - 705)) | (1 << (self::JSON_TEXTCONTAINS2 - 705)) | (1 << (self::JSON_TEXTCONTAINS - 705)) | (1 << (self::JSON_VALUE - 705)) | (1 << (self::KEEP_DUPLICATES - 705)) | (1 << (self::KEEP - 705)) | (1 << (self::KERBEROS - 705)) | (1 << (self::KEY - 705)) | (1 << (self::KEY_LENGTH - 705)) | (1 << (self::KEYSIZE - 705)) | (1 << (self::KEYS - 705)) | (1 << (self::KEYSTORE - 705)) | (1 << (self::KILL - 705)) | (1 << (self::LABEL - 705)) | (1 << (self::LANGUAGE - 705)) | (1 << (self::LAST_DAY - 705)) | (1 << (self::LAST - 705)) | (1 << (self::LAST_VALUE - 705)) | (1 << (self::LATERAL - 705)) | (1 << (self::LAX - 705)) | (1 << (self::LAYER - 705)) | (1 << (self::LDAP_REGISTRATION_ENABLED - 705)) | (1 << (self::LDAP_REGISTRATION - 705)) | (1 << (self::LDAP_REG_SYNC_INTERVAL - 705)) | (1 << (self::LEADING - 705)) | (1 << (self::LEFT - 705)) | (1 << (self::LENGTH2 - 705)) | (1 << (self::LENGTH4 - 705)) | (1 << (self::LENGTHB - 705)) | (1 << (self::LENGTHC - 705)) | (1 << (self::LENGTH - 705)) | (1 << (self::LESS - 705)) | (1 << (self::LEVEL - 705)) | (1 << (self::LEVELS - 705)) | (1 << (self::LIBRARY - 705)) | (1 << (self::LIFECYCLE - 705)) | (1 << (self::LIFE - 705)) | (1 << (self::LIFETIME - 705)) | (1 << (self::LIKE2 - 705)) | (1 << (self::LIKE4 - 705)) | (1 << (self::LIKEC - 705)) | (1 << (self::LIKE_EXPAND - 705)) | (1 << (self::LIMIT - 705)) | (1 << (self::LINEAR - 705)) | (1 << (self::LINK - 705)) | (1 << (self::LIST - 705)) | (1 << (self::LN - 705)) | (1 << (self::LNNVL - 705)) | (1 << (self::LOAD - 705)) | (1 << (self::LOB - 705)) | (1 << (self::LOBNVL - 705)) | (1 << (self::LOBS - 705)) | (1 << (self::LOCAL_INDEXES - 705)))) !== 0) || (((($_la - 769)) & ~0x3f) === 0 && ((1 << ($_la - 769)) & ((1 << (self::LOCAL - 769)) | (1 << (self::LOCALTIME - 769)) | (1 << (self::LOCALTIMESTAMP - 769)) | (1 << (self::LOCATION - 769)) | (1 << (self::LOCATOR - 769)) | (1 << (self::LOCKED - 769)) | (1 << (self::LOCKING - 769)) | (1 << (self::LOGFILE - 769)) | (1 << (self::LOGFILES - 769)) | (1 << (self::LOGGING - 769)) | (1 << (self::LOGICAL - 769)) | (1 << (self::LOGICAL_READS_PER_CALL - 769)) | (1 << (self::LOGICAL_READS_PER_SESSION - 769)) | (1 << (self::LOG - 769)) | (1 << (self::LOGMINING - 769)) | (1 << (self::LOGOFF - 769)) | (1 << (self::LOGON - 769)) | (1 << (self::LOG_READ_ONLY_VIOLATIONS - 769)) | (1 << (self::LONG - 769)) | (1 << (self::LOOP - 769)) | (1 << (self::LOWER - 769)) | (1 << (self::LOW - 769)) | (1 << (self::LPAD - 769)) | (1 << (self::LTRIM - 769)) | (1 << (self::MAIN - 769)) | (1 << (self::MAKE_REF - 769)) | (1 << (self::MANAGED - 769)) | (1 << (self::MANAGE - 769)) | (1 << (self::MANAGEMENT - 769)) | (1 << (self::MANAGER - 769)) | (1 << (self::MANUAL - 769)) | (1 << (self::MAP - 769)) | (1 << (self::MAPPING - 769)) | (1 << (self::MASTER - 769)) | (1 << (self::MATCHED - 769)) | (1 << (self::MATCHES - 769)) | (1 << (self::MATCH - 769)) | (1 << (self::MATCH_NUMBER - 769)) | (1 << (self::MATCH_RECOGNIZE - 769)) | (1 << (self::MATERIALIZED - 769)) | (1 << (self::MATERIALIZE - 769)) | (1 << (self::MAXARCHLOGS - 769)) | (1 << (self::MAXDATAFILES - 769)) | (1 << (self::MAXEXTENTS - 769)) | (1 << (self::MAXIMIZE - 769)) | (1 << (self::MAXINSTANCES - 769)) | (1 << (self::MAXLOGFILES - 769)) | (1 << (self::MAXLOGHISTORY - 769)) | (1 << (self::MAXLOGMEMBERS - 769)) | (1 << (self::MAX_SHARED_TEMP_SIZE - 769)) | (1 << (self::MAXSIZE - 769)) | (1 << (self::MAXTRANS - 769)) | (1 << (self::MAXVALUE - 769)) | (1 << (self::MEASURE - 769)) | (1 << (self::MEASURES - 769)) | (1 << (self::MEDIUM - 769)) | (1 << (self::MEMBER - 769)) | (1 << (self::MEMCOMPRESS - 769)) | (1 << (self::MEMORY - 769)) | (1 << (self::MERGEACTIONS - 769)) | (1 << (self::MERGE_AJ - 769)) | (1 << (self::MERGE_CONST_ON - 769)) | (1 << (self::MERGE - 769)))) !== 0) || (((($_la - 833)) & ~0x3f) === 0 && ((1 << ($_la - 833)) & ((1 << (self::MERGE_SJ - 833)) | (1 << (self::METADATA - 833)) | (1 << (self::METHOD - 833)) | (1 << (self::MIGRATE - 833)) | (1 << (self::MIGRATION - 833)) | (1 << (self::MINEXTENTS - 833)) | (1 << (self::MINIMIZE - 833)) | (1 << (self::MINIMUM - 833)) | (1 << (self::MINING - 833)) | (1 << (self::MINUS_NULL - 833)) | (1 << (self::MINUTE - 833)) | (1 << (self::MINVALUE - 833)) | (1 << (self::MIRRORCOLD - 833)) | (1 << (self::MIRRORHOT - 833)) | (1 << (self::MIRROR - 833)) | (1 << (self::MLSLABEL - 833)) | (1 << (self::MODEL_COMPILE_SUBQUERY - 833)) | (1 << (self::MODEL_DONTVERIFY_UNIQUENESS - 833)) | (1 << (self::MODEL_DYNAMIC_SUBQUERY - 833)) | (1 << (self::MODEL_MIN_ANALYSIS - 833)) | (1 << (self::MODEL - 833)) | (1 << (self::MODEL_NB - 833)) | (1 << (self::MODEL_NO_ANALYSIS - 833)) | (1 << (self::MODEL_PBY - 833)) | (1 << (self::MODEL_PUSH_REF - 833)) | (1 << (self::MODEL_SV - 833)) | (1 << (self::MODIFICATION - 833)) | (1 << (self::MODIFY_COLUMN_TYPE - 833)) | (1 << (self::MODIFY - 833)) | (1 << (self::MOD - 833)) | (1 << (self::MODULE - 833)) | (1 << (self::MONITORING - 833)) | (1 << (self::MONITOR - 833)) | (1 << (self::MONTH - 833)) | (1 << (self::MONTHS_BETWEEN - 833)) | (1 << (self::MONTHS - 833)) | (1 << (self::MOUNT - 833)) | (1 << (self::MOUNTPATH - 833)) | (1 << (self::MOVEMENT - 833)) | (1 << (self::MOVE - 833)) | (1 << (self::MULTIDIMENSIONAL - 833)) | (1 << (self::MULTISET - 833)) | (1 << (self::MV_MERGE - 833)) | (1 << (self::NAMED - 833)) | (1 << (self::NAME - 833)) | (1 << (self::NAMESPACE - 833)) | (1 << (self::NAN - 833)) | (1 << (self::NANVL - 833)) | (1 << (self::NATIONAL - 833)) | (1 << (self::NATIVE_FULL_OUTER_JOIN - 833)) | (1 << (self::NATIVE - 833)) | (1 << (self::NATURAL - 833)) | (1 << (self::NAV - 833)) | (1 << (self::NCHAR_CS - 833)) | (1 << (self::NCHAR - 833)) | (1 << (self::NCHR - 833)) | (1 << (self::NCLOB - 833)) | (1 << (self::NEEDED - 833)) | (1 << (self::NEG - 833)) | (1 << (self::NESTED - 833)) | (1 << (self::NESTED_TABLE_FAST_INSERT - 833)))) !== 0) || (((($_la - 897)) & ~0x3f) === 0 && ((1 << ($_la - 897)) & ((1 << (self::NESTED_TABLE_GET_REFS - 897)) | (1 << (self::NESTED_TABLE_ID - 897)) | (1 << (self::NESTED_TABLE_SET_REFS - 897)) | (1 << (self::NESTED_TABLE_SET_SETID - 897)) | (1 << (self::NETWORK - 897)) | (1 << (self::NEVER - 897)) | (1 << (self::NEW - 897)) | (1 << (self::NEW_TIME - 897)) | (1 << (self::NEXT_DAY - 897)) | (1 << (self::NEXT - 897)) | (1 << (self::NL_AJ - 897)) | (1 << (self::NLJ_BATCHING - 897)) | (1 << (self::NLJ_INDEX_FILTER - 897)) | (1 << (self::NLJ_INDEX_SCAN - 897)) | (1 << (self::NLJ_PREFETCH - 897)) | (1 << (self::NLS_CALENDAR - 897)) | (1 << (self::NLS_CHARACTERSET - 897)) | (1 << (self::NLS_CHARSET_DECL_LEN - 897)) | (1 << (self::NLS_CHARSET_ID - 897)) | (1 << (self::NLS_CHARSET_NAME - 897)) | (1 << (self::NLS_COMP - 897)) | (1 << (self::NLS_CURRENCY - 897)) | (1 << (self::NLS_DATE_FORMAT - 897)) | (1 << (self::NLS_DATE_LANGUAGE - 897)) | (1 << (self::NLS_INITCAP - 897)) | (1 << (self::NLS_ISO_CURRENCY - 897)) | (1 << (self::NL_SJ - 897)) | (1 << (self::NLS_LANG - 897)) | (1 << (self::NLS_LANGUAGE - 897)) | (1 << (self::NLS_LENGTH_SEMANTICS - 897)) | (1 << (self::NLS_LOWER - 897)) | (1 << (self::NLS_NCHAR_CONV_EXCP - 897)) | (1 << (self::NLS_NUMERIC_CHARACTERS - 897)) | (1 << (self::NLS_SORT - 897)) | (1 << (self::NLSSORT - 897)) | (1 << (self::NLS_SPECIAL_CHARS - 897)) | (1 << (self::NLS_TERRITORY - 897)) | (1 << (self::NLS_UPPER - 897)) | (1 << (self::NO_ACCESS - 897)) | (1 << (self::NO_ADAPTIVE_PLAN - 897)) | (1 << (self::NO_ANSI_REARCH - 897)) | (1 << (self::NOAPPEND - 897)) | (1 << (self::NOARCHIVELOG - 897)) | (1 << (self::NOAUDIT - 897)) | (1 << (self::NO_AUTO_REOPTIMIZE - 897)) | (1 << (self::NO_BASETABLE_MULTIMV_REWRITE - 897)) | (1 << (self::NO_BATCH_TABLE_ACCESS_BY_ROWID - 897)) | (1 << (self::NO_BIND_AWARE - 897)) | (1 << (self::NO_BUFFER - 897)) | (1 << (self::NOCACHE - 897)) | (1 << (self::NO_CARTESIAN - 897)) | (1 << (self::NO_CHECK_ACL_REWRITE - 897)) | (1 << (self::NO_CLUSTER_BY_ROWID - 897)) | (1 << (self::NO_CLUSTERING - 897)) | (1 << (self::NO_COALESCE_SQ - 897)) | (1 << (self::NO_COMMON_DATA - 897)) | (1 << (self::NO_CONNECT_BY_CB_WHR_ONLY - 897)) | (1 << (self::NO_CONNECT_BY_COMBINE_SW - 897)) | (1 << (self::NO_CONNECT_BY_COST_BASED - 897)) | (1 << (self::NO_CONNECT_BY_ELIM_DUPS - 897)) | (1 << (self::NO_CONNECT_BY_FILTERING - 897)) | (1 << (self::NOCOPY - 897)) | (1 << (self::NO_COST_XML_QUERY_REWRITE - 897)))) !== 0) || (((($_la - 961)) & ~0x3f) === 0 && ((1 << ($_la - 961)) & ((1 << (self::NO_CPU_COSTING - 961)) | (1 << (self::NOCPU_COSTING - 961)) | (1 << (self::NOCYCLE - 961)) | (1 << (self::NO_DATA_SECURITY_REWRITE - 961)) | (1 << (self::NO_DECORRELATE - 961)) | (1 << (self::NODELAY - 961)) | (1 << (self::NO_DOMAIN_INDEX_FILTER - 961)) | (1 << (self::NO_DST_UPGRADE_INSERT_CONV - 961)) | (1 << (self::NO_ELIM_GROUPBY - 961)) | (1 << (self::NO_ELIMINATE_JOIN - 961)) | (1 << (self::NO_ELIMINATE_OBY - 961)) | (1 << (self::NO_ELIMINATE_OUTER_JOIN - 961)) | (1 << (self::NOENTITYESCAPING - 961)) | (1 << (self::NO_EXPAND_GSET_TO_UNION - 961)) | (1 << (self::NO_EXPAND - 961)) | (1 << (self::NO_EXPAND_TABLE - 961)) | (1 << (self::NO_FACT - 961)) | (1 << (self::NO_FACTORIZE_JOIN - 961)) | (1 << (self::NO_FILTERING - 961)) | (1 << (self::NOFORCE - 961)) | (1 << (self::NO_FULL_OUTER_JOIN_TO_OUTER - 961)) | (1 << (self::NO_GATHER_OPTIMIZER_STATISTICS - 961)) | (1 << (self::NO_GBY_PUSHDOWN - 961)) | (1 << (self::NOGUARANTEE - 961)) | (1 << (self::NO_INDEX_FFS - 961)) | (1 << (self::NO_INDEX - 961)) | (1 << (self::NO_INDEX_SS - 961)) | (1 << (self::NO_INMEMORY - 961)) | (1 << (self::NO_INMEMORY_PRUNING - 961)) | (1 << (self::NOKEEP - 961)) | (1 << (self::NO_LOAD - 961)) | (1 << (self::NOLOCAL - 961)) | (1 << (self::NOLOGGING - 961)) | (1 << (self::NOMAPPING - 961)) | (1 << (self::NOMAXVALUE - 961)) | (1 << (self::NO_MERGE - 961)) | (1 << (self::NOMINIMIZE - 961)) | (1 << (self::NOMINVALUE - 961)) | (1 << (self::NO_MODEL_PUSH_REF - 961)) | (1 << (self::NO_MONITORING - 961)) | (1 << (self::NOMONITORING - 961)) | (1 << (self::NO_MONITOR - 961)) | (1 << (self::NO_MULTIMV_REWRITE - 961)) | (1 << (self::NO_NATIVE_FULL_OUTER_JOIN - 961)) | (1 << (self::NONBLOCKING - 961)) | (1 << (self::NONEDITIONABLE - 961)) | (1 << (self::NONE - 961)) | (1 << (self::NO_NLJ_BATCHING - 961)) | (1 << (self::NO_NLJ_PREFETCH - 961)) | (1 << (self::NO - 961)) | (1 << (self::NONSCHEMA - 961)) | (1 << (self::NO_OBJECT_LINK - 961)) | (1 << (self::NOORDER - 961)) | (1 << (self::NO_ORDER_ROLLUPS - 961)) | (1 << (self::NO_OUTER_JOIN_TO_ANTI - 961)) | (1 << (self::NO_OUTER_JOIN_TO_INNER - 961)) | (1 << (self::NOOVERRIDE - 961)) | (1 << (self::NO_PARALLEL_INDEX - 961)) | (1 << (self::NOPARALLEL_INDEX - 961)) | (1 << (self::NO_PARALLEL - 961)) | (1 << (self::NOPARALLEL - 961)) | (1 << (self::NO_PARTIAL_COMMIT - 961)) | (1 << (self::NO_PARTIAL_JOIN - 961)) | (1 << (self::NO_PARTIAL_ROLLUP_PUSHDOWN - 961)))) !== 0) || (((($_la - 1025)) & ~0x3f) === 0 && ((1 << ($_la - 1025)) & ((1 << (self::NOPARTITION - 1025)) | (1 << (self::NO_PLACE_DISTINCT - 1025)) | (1 << (self::NO_PLACE_GROUP_BY - 1025)) | (1 << (self::NO_PQ_CONCURRENT_UNION - 1025)) | (1 << (self::NO_PQ_MAP - 1025)) | (1 << (self::NO_PQ_REPLICATE - 1025)) | (1 << (self::NO_PQ_SKEW - 1025)) | (1 << (self::NO_PRUNE_GSETS - 1025)) | (1 << (self::NO_PULL_PRED - 1025)) | (1 << (self::NO_PUSH_PRED - 1025)) | (1 << (self::NO_PUSH_SUBQ - 1025)) | (1 << (self::NO_PX_FAULT_TOLERANCE - 1025)) | (1 << (self::NO_PX_JOIN_FILTER - 1025)) | (1 << (self::NO_QKN_BUFF - 1025)) | (1 << (self::NO_QUERY_TRANSFORMATION - 1025)) | (1 << (self::NO_REF_CASCADE - 1025)) | (1 << (self::NORELOCATE - 1025)) | (1 << (self::NORELY - 1025)) | (1 << (self::NOREPAIR - 1025)) | (1 << (self::NOREPLAY - 1025)) | (1 << (self::NORESETLOGS - 1025)) | (1 << (self::NO_RESULT_CACHE - 1025)) | (1 << (self::NOREVERSE - 1025)) | (1 << (self::NO_REWRITE - 1025)) | (1 << (self::NOREWRITE - 1025)) | (1 << (self::NORMAL - 1025)) | (1 << (self::NO_ROOT_SW_FOR_LOCAL - 1025)) | (1 << (self::NOROWDEPENDENCIES - 1025)) | (1 << (self::NOSCHEMACHECK - 1025)) | (1 << (self::NOSEGMENT - 1025)) | (1 << (self::NO_SEMIJOIN - 1025)) | (1 << (self::NO_SEMI_TO_INNER - 1025)) | (1 << (self::NO_SET_TO_JOIN - 1025)) | (1 << (self::NOSORT - 1025)) | (1 << (self::NO_SQL_TRANSLATION - 1025)) | (1 << (self::NO_SQL_TUNE - 1025)) | (1 << (self::NO_STAR_TRANSFORMATION - 1025)) | (1 << (self::NO_STATEMENT_QUEUING - 1025)) | (1 << (self::NO_STATS_GSETS - 1025)) | (1 << (self::NOSTRICT - 1025)) | (1 << (self::NO_SUBQUERY_PRUNING - 1025)) | (1 << (self::NO_SUBSTRB_PAD - 1025)) | (1 << (self::NO_SWAP_JOIN_INPUTS - 1025)) | (1 << (self::NOSWITCH - 1025)) | (1 << (self::NO_TABLE_LOOKUP_BY_NL - 1025)) | (1 << (self::NO_TEMP_TABLE - 1025)) | (1 << (self::NOTHING - 1025)) | (1 << (self::NOTIFICATION - 1025)) | (1 << (self::NO_TRANSFORM_DISTINCT_AGG - 1025)) | (1 << (self::NO_UNNEST - 1025)) | (1 << (self::NO_USE_CUBE - 1025)) | (1 << (self::NO_USE_HASH_AGGREGATION - 1025)) | (1 << (self::NO_USE_HASH_GBY_FOR_PUSHDOWN - 1025)) | (1 << (self::NO_USE_HASH - 1025)) | (1 << (self::NO_USE_INVISIBLE_INDEXES - 1025)) | (1 << (self::NO_USE_MERGE - 1025)) | (1 << (self::NO_USE_NL - 1025)) | (1 << (self::NO_USE_VECTOR_AGGREGATION - 1025)) | (1 << (self::NOVALIDATE - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_DIMS - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM_FACT - 1025)) | (1 << (self::NO_VECTOR_TRANSFORM - 1025)))) !== 0) || (((($_la - 1089)) & ~0x3f) === 0 && ((1 << ($_la - 1089)) & ((1 << (self::NO_XDB_FASTPATH_INSERT - 1089)) | (1 << (self::NO_XML_DML_REWRITE - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE_IN_SELECT - 1089)) | (1 << (self::NO_XMLINDEX_REWRITE - 1089)) | (1 << (self::NO_XML_QUERY_REWRITE - 1089)) | (1 << (self::NO_ZONEMAP - 1089)) | (1 << (self::NTH_VALUE - 1089)) | (1 << (self::NULLIF - 1089)) | (1 << (self::NULLS - 1089)) | (1 << (self::NUMBER - 1089)) | (1 << (self::NUMERIC - 1089)) | (1 << (self::NUM_INDEX_KEYS - 1089)) | (1 << (self::NUMTODSINTERVAL - 1089)) | (1 << (self::NUMTOYMINTERVAL - 1089)) | (1 << (self::NVARCHAR2 - 1089)) | (1 << (self::NVL2 - 1089)) | (1 << (self::OBJECT2XML - 1089)) | (1 << (self::OBJECT - 1089)) | (1 << (self::OBJ_ID - 1089)) | (1 << (self::OBJNO - 1089)) | (1 << (self::OBJNO_REUSE - 1089)) | (1 << (self::OCCURENCES - 1089)) | (1 << (self::OFFLINE - 1089)) | (1 << (self::OFF - 1089)) | (1 << (self::OFFSET - 1089)) | (1 << (self::OIDINDEX - 1089)) | (1 << (self::OID - 1089)) | (1 << (self::OLAP - 1089)) | (1 << (self::OLD - 1089)) | (1 << (self::OLD_PUSH_PRED - 1089)) | (1 << (self::OLS - 1089)) | (1 << (self::OLTP - 1089)) | (1 << (self::OMIT - 1089)) | (1 << (self::ONE - 1089)) | (1 << (self::ONLINE - 1089)) | (1 << (self::ONLY - 1089)) | (1 << (self::OPAQUE - 1089)) | (1 << (self::OPAQUE_TRANSFORM - 1089)) | (1 << (self::OPAQUE_XCANONICAL - 1089)) | (1 << (self::OPCODE - 1089)) | (1 << (self::OPEN - 1089)) | (1 << (self::OPERATIONS - 1089)) | (1 << (self::OPERATOR - 1089)) | (1 << (self::OPT_ESTIMATE - 1089)) | (1 << (self::OPTIMAL - 1089)) | (1 << (self::OPTIMIZE - 1089)) | (1 << (self::OPTIMIZER_FEATURES_ENABLE - 1089)) | (1 << (self::OPTIMIZER_GOAL - 1089)) | (1 << (self::OPT_PARAM - 1089)) | (1 << (self::ORA_BRANCH - 1089)) | (1 << (self::ORA_CHECK_ACL - 1089)) | (1 << (self::ORA_CHECK_PRIVILEGE - 1089)) | (1 << (self::ORA_CLUSTERING - 1089)) | (1 << (self::ORADATA - 1089)) | (1 << (self::ORADEBUG - 1089)) | (1 << (self::ORA_DST_AFFECTED - 1089)) | (1 << (self::ORA_DST_CONVERT - 1089)) | (1 << (self::ORA_DST_ERROR - 1089)) | (1 << (self::ORA_GET_ACLIDS - 1089)))) !== 0) || (((($_la - 1153)) & ~0x3f) === 0 && ((1 << ($_la - 1153)) & ((1 << (self::ORA_GET_PRIVILEGES - 1153)) | (1 << (self::ORA_HASH - 1153)) | (1 << (self::ORA_INVOKING_USERID - 1153)) | (1 << (self::ORA_INVOKING_USER - 1153)) | (1 << (self::ORA_INVOKING_XS_USER_GUID - 1153)) | (1 << (self::ORA_INVOKING_XS_USER - 1153)) | (1 << (self::ORA_RAWCOMPARE - 1153)) | (1 << (self::ORA_RAWCONCAT - 1153)) | (1 << (self::ORA_ROWSCN - 1153)) | (1 << (self::ORA_ROWSCN_RAW - 1153)) | (1 << (self::ORA_ROWVERSION - 1153)) | (1 << (self::ORA_TABVERSION - 1153)) | (1 << (self::ORA_WRITE_TIME - 1153)) | (1 << (self::ORDERED - 1153)) | (1 << (self::ORDERED_PREDICATES - 1153)) | (1 << (self::ORDINALITY - 1153)) | (1 << (self::OR_EXPAND - 1153)) | (1 << (self::ORGANIZATION - 1153)) | (1 << (self::OR_PREDICATES - 1153)) | (1 << (self::OSERROR - 1153)) | (1 << (self::OTHER - 1153)) | (1 << (self::OUTER_JOIN_TO_ANTI - 1153)) | (1 << (self::OUTER_JOIN_TO_INNER - 1153)) | (1 << (self::OUTER - 1153)) | (1 << (self::OUTLINE_LEAF - 1153)) | (1 << (self::OUTLINE - 1153)) | (1 << (self::OUT_OF_LINE - 1153)) | (1 << (self::OUT - 1153)) | (1 << (self::OVERFLOW_NOMOVE - 1153)) | (1 << (self::OVERFLOW - 1153)) | (1 << (self::OVERLAPS - 1153)) | (1 << (self::OVER - 1153)) | (1 << (self::OVERRIDING - 1153)) | (1 << (self::OWNER - 1153)) | (1 << (self::OWNERSHIP - 1153)) | (1 << (self::OWN - 1153)) | (1 << (self::PACKAGE - 1153)) | (1 << (self::PACKAGES - 1153)) | (1 << (self::PARALLEL_ENABLE - 1153)) | (1 << (self::PARALLEL_INDEX - 1153)) | (1 << (self::PARALLEL - 1153)) | (1 << (self::PARAMETERS - 1153)) | (1 << (self::PARAM - 1153)) | (1 << (self::PARENT - 1153)) | (1 << (self::PARITY - 1153)) | (1 << (self::PARTIAL_JOIN - 1153)) | (1 << (self::PARTIALLY - 1153)) | (1 << (self::PARTIAL - 1153)) | (1 << (self::PARTIAL_ROLLUP_PUSHDOWN - 1153)) | (1 << (self::PARTITION_HASH - 1153)) | (1 << (self::PARTITION_LIST - 1153)) | (1 << (self::PARTITION - 1153)) | (1 << (self::PARTITION_RANGE - 1153)) | (1 << (self::PARTITIONS - 1153)) | (1 << (self::PARTNUMINST - 1153)) | (1 << (self::PASSING - 1153)) | (1 << (self::PASSWORD_GRACE_TIME - 1153)) | (1 << (self::PASSWORD_LIFE_TIME - 1153)) | (1 << (self::PASSWORD_LOCK_TIME - 1153)) | (1 << (self::PASSWORD - 1153)) | (1 << (self::PASSWORD_REUSE_MAX - 1153)))) !== 0) || (((($_la - 1217)) & ~0x3f) === 0 && ((1 << ($_la - 1217)) & ((1 << (self::PASSWORD_REUSE_TIME - 1217)) | (1 << (self::PASSWORD_VERIFY_FUNCTION - 1217)) | (1 << (self::PAST - 1217)) | (1 << (self::PATCH - 1217)) | (1 << (self::PATH - 1217)) | (1 << (self::PATH_PREFIX - 1217)) | (1 << (self::PATHS - 1217)) | (1 << (self::PATTERN - 1217)) | (1 << (self::PBL_HS_BEGIN - 1217)) | (1 << (self::PBL_HS_END - 1217)) | (1 << (self::PCTINCREASE - 1217)) | (1 << (self::PCTTHRESHOLD - 1217)) | (1 << (self::PCTUSED - 1217)) | (1 << (self::PCTVERSION - 1217)) | (1 << (self::PENDING - 1217)) | (1 << (self::PERCENT_KEYWORD - 1217)) | (1 << (self::PERCENT_RANKM - 1217)) | (1 << (self::PERFORMANCE - 1217)) | (1 << (self::PERIOD_KEYWORD - 1217)) | (1 << (self::PERMANENT - 1217)) | (1 << (self::PERMISSION - 1217)) | (1 << (self::PERMUTE - 1217)) | (1 << (self::PER - 1217)) | (1 << (self::PFILE - 1217)) | (1 << (self::PHYSICAL - 1217)) | (1 << (self::PIKEY - 1217)) | (1 << (self::PIPELINED - 1217)) | (1 << (self::PIV_GB - 1217)) | (1 << (self::PIVOT - 1217)) | (1 << (self::PIV_SSF - 1217)) | (1 << (self::PLACE_DISTINCT - 1217)) | (1 << (self::PLACE_GROUP_BY - 1217)) | (1 << (self::PLAN - 1217)) | (1 << (self::PLSCOPE_SETTINGS - 1217)) | (1 << (self::PLS_INTEGER - 1217)) | (1 << (self::PLSQL_CCFLAGS - 1217)) | (1 << (self::PLSQL_CODE_TYPE - 1217)) | (1 << (self::PLSQL_DEBUG - 1217)) | (1 << (self::PLSQL_OPTIMIZE_LEVEL - 1217)) | (1 << (self::PLSQL_WARNINGS - 1217)) | (1 << (self::PLUGGABLE - 1217)) | (1 << (self::POINT - 1217)) | (1 << (self::POLICY - 1217)) | (1 << (self::POOL_16K - 1217)) | (1 << (self::POOL_2K - 1217)) | (1 << (self::POOL_32K - 1217)) | (1 << (self::POOL_4K - 1217)) | (1 << (self::POOL_8K - 1217)) | (1 << (self::POSITIVEN - 1217)) | (1 << (self::POSITIVE - 1217)) | (1 << (self::POST_TRANSACTION - 1217)) | (1 << (self::POWERMULTISET_BY_CARDINALITY - 1217)) | (1 << (self::POWERMULTISET - 1217)) | (1 << (self::POWER - 1217)) | (1 << (self::PQ_CONCURRENT_UNION - 1217)) | (1 << (self::PQ_DISTRIBUTE - 1217)))) !== 0) || (((($_la - 1281)) & ~0x3f) === 0 && ((1 << ($_la - 1281)) & ((1 << (self::PQ_DISTRIBUTE_WINDOW - 1281)) | (1 << (self::PQ_FILTER - 1281)) | (1 << (self::PQ_MAP - 1281)) | (1 << (self::PQ_NOMAP - 1281)) | (1 << (self::PQ_REPLICATE - 1281)) | (1 << (self::PQ_SKEW - 1281)) | (1 << (self::PRAGMA - 1281)) | (1 << (self::PREBUILT - 1281)) | (1 << (self::PRECEDES - 1281)) | (1 << (self::PRECEDING - 1281)) | (1 << (self::PRECISION - 1281)) | (1 << (self::PRECOMPUTE_SUBQUERY - 1281)) | (1 << (self::PREDICATE_REORDERS - 1281)) | (1 << (self::PRELOAD - 1281)) | (1 << (self::PREPARE - 1281)) | (1 << (self::PRESENTNNV - 1281)) | (1 << (self::PRESENT - 1281)) | (1 << (self::PRESENTV - 1281)) | (1 << (self::PRESERVE_OID - 1281)) | (1 << (self::PRESERVE - 1281)) | (1 << (self::PRETTY - 1281)) | (1 << (self::PREVIOUS - 1281)) | (1 << (self::PREV - 1281)) | (1 << (self::PRIMARY - 1281)) | (1 << (self::PRINTBLOBTOCLOB - 1281)) | (1 << (self::PRIORITY - 1281)) | (1 << (self::PRIVATE - 1281)) | (1 << (self::PRIVATE_SGA - 1281)) | (1 << (self::PRIVILEGED - 1281)) | (1 << (self::PRIVILEGE - 1281)) | (1 << (self::PRIVILEGES - 1281)) | (1 << (self::PROCEDURAL - 1281)) | (1 << (self::PROCEDURE - 1281)) | (1 << (self::PROCESS - 1281)) | (1 << (self::PROFILE - 1281)) | (1 << (self::PROGRAM - 1281)) | (1 << (self::PROJECT - 1281)) | (1 << (self::PROPAGATE - 1281)) | (1 << (self::PROTECTED - 1281)) | (1 << (self::PROTECTION - 1281)) | (1 << (self::PROXY - 1281)) | (1 << (self::PRUNING - 1281)) | (1 << (self::PULL_PRED - 1281)) | (1 << (self::PURGE - 1281)) | (1 << (self::PUSH_PRED - 1281)) | (1 << (self::PUSH_SUBQ - 1281)) | (1 << (self::PX_FAULT_TOLERANCE - 1281)) | (1 << (self::PX_GRANULE - 1281)) | (1 << (self::PX_JOIN_FILTER - 1281)) | (1 << (self::QB_NAME - 1281)) | (1 << (self::QUERY_BLOCK - 1281)) | (1 << (self::QUERY - 1281)) | (1 << (self::QUEUE_CURR - 1281)) | (1 << (self::QUEUE - 1281)) | (1 << (self::QUEUE_ROWP - 1281)) | (1 << (self::QUIESCE - 1281)) | (1 << (self::QUORUM - 1281)) | (1 << (self::QUOTA - 1281)) | (1 << (self::RAISE - 1281)) | (1 << (self::RANDOM_LOCAL - 1281)) | (1 << (self::RANDOM - 1281)) | (1 << (self::RANGE - 1281)))) !== 0) || (((($_la - 1345)) & ~0x3f) === 0 && ((1 << ($_la - 1345)) & ((1 << (self::RANKM - 1345)) | (1 << (self::RAPIDLY - 1345)) | (1 << (self::RAW - 1345)) | (1 << (self::RAWTOHEX - 1345)) | (1 << (self::RAWTONHEX - 1345)) | (1 << (self::RBA - 1345)) | (1 << (self::RBO_OUTLINE - 1345)) | (1 << (self::RDBA - 1345)) | (1 << (self::READ - 1345)) | (1 << (self::READS - 1345)) | (1 << (self::REALM - 1345)) | (1 << (self::REAL - 1345)) | (1 << (self::REBALANCE - 1345)) | (1 << (self::REBUILD - 1345)) | (1 << (self::RECORD - 1345)) | (1 << (self::RECORDS_PER_BLOCK - 1345)) | (1 << (self::RECOVERABLE - 1345)) | (1 << (self::RECOVER - 1345)) | (1 << (self::RECOVERY - 1345)) | (1 << (self::RECYCLEBIN - 1345)) | (1 << (self::RECYCLE - 1345)) | (1 << (self::REDACTION - 1345)) | (1 << (self::REDEFINE - 1345)) | (1 << (self::REDO - 1345)) | (1 << (self::REDUCED - 1345)) | (1 << (self::REDUNDANCY - 1345)) | (1 << (self::REF_CASCADE_CURSOR - 1345)) | (1 << (self::REFERENCED - 1345)) | (1 << (self::REFERENCE - 1345)) | (1 << (self::REFERENCES - 1345)) | (1 << (self::REFERENCING - 1345)) | (1 << (self::REF - 1345)) | (1 << (self::REFRESH - 1345)) | (1 << (self::REFTOHEX - 1345)) | (1 << (self::REGEXP_COUNT - 1345)) | (1 << (self::REGEXP_INSTR - 1345)) | (1 << (self::REGEXP_LIKE - 1345)) | (1 << (self::REGEXP_REPLACE - 1345)) | (1 << (self::REGEXP_SUBSTR - 1345)) | (1 << (self::REGISTER - 1345)) | (1 << (self::REGR_AVGX - 1345)) | (1 << (self::REGR_AVGY - 1345)) | (1 << (self::REGR_COUNT - 1345)) | (1 << (self::REGR_INTERCEPT - 1345)) | (1 << (self::REGR_R2 - 1345)) | (1 << (self::REGR_SLOPE - 1345)) | (1 << (self::REGR_SXX - 1345)) | (1 << (self::REGR_SXY - 1345)) | (1 << (self::REGR_SYY - 1345)) | (1 << (self::REGULAR - 1345)) | (1 << (self::REJECT - 1345)) | (1 << (self::REKEY - 1345)) | (1 << (self::RELATIONAL - 1345)) | (1 << (self::RELOCATE - 1345)) | (1 << (self::RELY - 1345)) | (1 << (self::REMAINDER - 1345)) | (1 << (self::REMOTE_MAPPED - 1345)) | (1 << (self::REMOVE - 1345)) | (1 << (self::RENAME - 1345)) | (1 << (self::REPAIR - 1345)) | (1 << (self::REPEAT - 1345)) | (1 << (self::REPLACE - 1345)) | (1 << (self::REPLICATION - 1345)))) !== 0) || (((($_la - 1409)) & ~0x3f) === 0 && ((1 << ($_la - 1409)) & ((1 << (self::REQUIRED - 1409)) | (1 << (self::RESETLOGS - 1409)) | (1 << (self::RESET - 1409)) | (1 << (self::RESIZE - 1409)) | (1 << (self::RESOLVE - 1409)) | (1 << (self::RESOLVER - 1409)) | (1 << (self::RESPECT - 1409)) | (1 << (self::RESTART - 1409)) | (1 << (self::RESTORE_AS_INTERVALS - 1409)) | (1 << (self::RESTORE - 1409)) | (1 << (self::RESTRICT_ALL_REF_CONS - 1409)) | (1 << (self::RESTRICTED - 1409)) | (1 << (self::RESTRICT_REFERENCES - 1409)) | (1 << (self::RESTRICT - 1409)) | (1 << (self::RESULT_CACHE - 1409)) | (1 << (self::RESULT - 1409)) | (1 << (self::RESUMABLE - 1409)) | (1 << (self::RESUME - 1409)) | (1 << (self::RETENTION - 1409)) | (1 << (self::RETRY_ON_ROW_CHANGE - 1409)) | (1 << (self::RETURNING - 1409)) | (1 << (self::RETURN - 1409)) | (1 << (self::REUSE - 1409)) | (1 << (self::REVERSE - 1409)) | (1 << (self::REWRITE_OR_ERROR - 1409)) | (1 << (self::REWRITE - 1409)) | (1 << (self::RIGHT - 1409)) | (1 << (self::ROLE - 1409)) | (1 << (self::ROLESET - 1409)) | (1 << (self::ROLES - 1409)) | (1 << (self::ROLLBACK - 1409)) | (1 << (self::ROLLING - 1409)) | (1 << (self::ROLLUP - 1409)) | (1 << (self::ROWDEPENDENCIES - 1409)) | (1 << (self::ROWID_MAPPING_TABLE - 1409)) | (1 << (self::ROWID - 1409)) | (1 << (self::ROWIDTOCHAR - 1409)) | (1 << (self::ROWIDTONCHAR - 1409)) | (1 << (self::ROW_LENGTH - 1409)) | (1 << (self::ROWNUM - 1409)) | (1 << (self::ROW - 1409)) | (1 << (self::ROWS - 1409)) | (1 << (self::RPAD - 1409)) | (1 << (self::RTRIM - 1409)) | (1 << (self::RULE - 1409)) | (1 << (self::RULES - 1409)) | (1 << (self::RUNNING - 1409)) | (1 << (self::SALT - 1409)) | (1 << (self::SAMPLE - 1409)) | (1 << (self::SAVE_AS_INTERVALS - 1409)) | (1 << (self::SAVEPOINT - 1409)) | (1 << (self::SAVE - 1409)) | (1 << (self::SB4 - 1409)) | (1 << (self::SCALE_ROWS - 1409)) | (1 << (self::SCALE - 1409)) | (1 << (self::SCAN_INSTANCES - 1409)) | (1 << (self::SCAN - 1409)) | (1 << (self::SCHEDULER - 1409)) | (1 << (self::SCHEMACHECK - 1409)) | (1 << (self::SCHEMA - 1409)) | (1 << (self::SCN_ASCENDING - 1409)) | (1 << (self::SCN - 1409)))) !== 0) || (((($_la - 1473)) & ~0x3f) === 0 && ((1 << ($_la - 1473)) & ((1 << (self::SCOPE - 1473)) | (1 << (self::SCRUB - 1473)) | (1 << (self::SD_ALL - 1473)) | (1 << (self::SD_INHIBIT - 1473)) | (1 << (self::SDO_GEOM_MBR - 1473)) | (1 << (self::SD_SHOW - 1473)) | (1 << (self::SEARCH - 1473)) | (1 << (self::SECOND - 1473)) | (1 << (self::SECRET - 1473)) | (1 << (self::SECUREFILE_DBA - 1473)) | (1 << (self::SECUREFILE - 1473)) | (1 << (self::SECURITY - 1473)) | (1 << (self::SEED - 1473)) | (1 << (self::SEG_BLOCK - 1473)) | (1 << (self::SEG_FILE - 1473)) | (1 << (self::SEGMENT - 1473)) | (1 << (self::SELECTIVITY - 1473)) | (1 << (self::SELF - 1473)) | (1 << (self::SEMIJOIN_DRIVER - 1473)) | (1 << (self::SEMIJOIN - 1473)) | (1 << (self::SEMI_TO_INNER - 1473)) | (1 << (self::SEQUENCED - 1473)) | (1 << (self::SEQUENCE - 1473)) | (1 << (self::SEQUENTIAL - 1473)) | (1 << (self::SERIALIZABLE - 1473)) | (1 << (self::SERIALLY_REUSABLE - 1473)) | (1 << (self::SERIAL - 1473)) | (1 << (self::SERVERERROR - 1473)) | (1 << (self::SERVICE_NAME_CONVERT - 1473)) | (1 << (self::SERVICES - 1473)) | (1 << (self::SESSION_CACHED_CURSORS - 1473)) | (1 << (self::SESSION - 1473)) | (1 << (self::SESSIONS_PER_USER - 1473)) | (1 << (self::SESSIONTIMEZONE - 1473)) | (1 << (self::SESSIONTZNAME - 1473)) | (1 << (self::SET - 1473)) | (1 << (self::SETS - 1473)) | (1 << (self::SETTINGS - 1473)) | (1 << (self::SET_TO_JOIN - 1473)) | (1 << (self::SEVERE - 1473)) | (1 << (self::SHARED_POOL - 1473)) | (1 << (self::SHARED - 1473)) | (1 << (self::SHARING - 1473)) | (1 << (self::SHELFLIFE - 1473)) | (1 << (self::SHOW - 1473)) | (1 << (self::SHRINK - 1473)) | (1 << (self::SHUTDOWN - 1473)) | (1 << (self::SIBLINGS - 1473)) | (1 << (self::SID - 1473)) | (1 << (self::SIGNAL_COMPONENT - 1473)) | (1 << (self::SIGNAL_FUNCTION - 1473)) | (1 << (self::SIGN - 1473)) | (1 << (self::SIGNTYPE - 1473)) | (1 << (self::SIMPLE_INTEGER - 1473)) | (1 << (self::SIMPLE - 1473)) | (1 << (self::SINGLE - 1473)) | (1 << (self::SINGLETASK - 1473)) | (1 << (self::SINH - 1473)) | (1 << (self::SIN - 1473)) | (1 << (self::SKIP_EXT_OPTIMIZER - 1473)))) !== 0) || (((($_la - 1537)) & ~0x3f) === 0 && ((1 << ($_la - 1537)) & ((1 << (self::SKIP_ - 1537)) | (1 << (self::SKIP_UNQ_UNUSABLE_IDX - 1537)) | (1 << (self::SKIP_UNUSABLE_INDEXES - 1537)) | (1 << (self::SMALLFILE - 1537)) | (1 << (self::SMALLINT - 1537)) | (1 << (self::SNAPSHOT - 1537)) | (1 << (self::SOME - 1537)) | (1 << (self::SORT - 1537)) | (1 << (self::SOUNDEX - 1537)) | (1 << (self::SOURCE_FILE_DIRECTORY - 1537)) | (1 << (self::SOURCE_FILE_NAME_CONVERT - 1537)) | (1 << (self::SOURCE - 1537)) | (1 << (self::SPACE_KEYWORD - 1537)) | (1 << (self::SPECIFICATION - 1537)) | (1 << (self::SPFILE - 1537)) | (1 << (self::SPLIT - 1537)) | (1 << (self::SPREADSHEET - 1537)) | (1 << (self::SQLDATA - 1537)) | (1 << (self::SQLERROR - 1537)) | (1 << (self::SQLLDR - 1537)) | (1 << (self::SQL - 1537)) | (1 << (self::SQL_TRACE - 1537)) | (1 << (self::SQL_TRANSLATION_PROFILE - 1537)) | (1 << (self::SQRT - 1537)) | (1 << (self::STALE - 1537)) | (1 << (self::STANDALONE - 1537)) | (1 << (self::STANDARD_HASH - 1537)) | (1 << (self::STANDBY_MAX_DATA_DELAY - 1537)) | (1 << (self::STANDBYS - 1537)) | (1 << (self::STANDBY - 1537)) | (1 << (self::STAR - 1537)) | (1 << (self::STAR_TRANSFORMATION - 1537)) | (1 << (self::STARTUP - 1537)) | (1 << (self::STATEMENT_ID - 1537)) | (1 << (self::STATEMENT_QUEUING - 1537)) | (1 << (self::STATEMENTS - 1537)) | (1 << (self::STATEMENT - 1537)) | (1 << (self::STATE - 1537)) | (1 << (self::STATIC - 1537)) | (1 << (self::STATISTICS - 1537)) | (1 << (self::STATS_BINOMIAL_TEST - 1537)) | (1 << (self::STATS_CROSSTAB - 1537)) | (1 << (self::STATS_F_TEST - 1537)) | (1 << (self::STATS_KS_TEST - 1537)) | (1 << (self::STATS_MODE - 1537)) | (1 << (self::STATS_MW_TEST - 1537)) | (1 << (self::STATS_ONE_WAY_ANOVA - 1537)) | (1 << (self::STATS_T_TEST_INDEP - 1537)) | (1 << (self::STATS_T_TEST_INDEPU - 1537)) | (1 << (self::STATS_T_TEST_ONE - 1537)) | (1 << (self::STATS_T_TEST_PAIRED - 1537)) | (1 << (self::STATS_WSR_TEST - 1537)) | (1 << (self::STDDEV_POP - 1537)) | (1 << (self::STDDEV_SAMP - 1537)) | (1 << (self::STOP - 1537)) | (1 << (self::STORAGE - 1537)) | (1 << (self::STORE - 1537)) | (1 << (self::STREAMS - 1537)) | (1 << (self::STREAM - 1537)) | (1 << (self::STRICT - 1537)) | (1 << (self::STRING - 1537)) | (1 << (self::STRIPE_COLUMNS - 1537)) | (1 << (self::STRIPE_WIDTH - 1537)))) !== 0) || (((($_la - 1601)) & ~0x3f) === 0 && ((1 << ($_la - 1601)) & ((1 << (self::STRIP - 1601)) | (1 << (self::STRUCTURE - 1601)) | (1 << (self::SUBMULTISET - 1601)) | (1 << (self::SUBPARTITION_REL - 1601)) | (1 << (self::SUBPARTITIONS - 1601)) | (1 << (self::SUBPARTITION - 1601)) | (1 << (self::SUBQUERIES - 1601)) | (1 << (self::SUBQUERY_PRUNING - 1601)) | (1 << (self::SUBSCRIBE - 1601)) | (1 << (self::SUBSET - 1601)) | (1 << (self::SUBSTITUTABLE - 1601)) | (1 << (self::SUBSTR2 - 1601)) | (1 << (self::SUBSTR4 - 1601)) | (1 << (self::SUBSTRB - 1601)) | (1 << (self::SUBSTRC - 1601)) | (1 << (self::SUBTYPE - 1601)) | (1 << (self::SUCCESSFUL - 1601)) | (1 << (self::SUCCESS - 1601)) | (1 << (self::SUMMARY - 1601)) | (1 << (self::SUPPLEMENTAL - 1601)) | (1 << (self::SUSPEND - 1601)) | (1 << (self::SWAP_JOIN_INPUTS - 1601)) | (1 << (self::SWITCHOVER - 1601)) | (1 << (self::SWITCH - 1601)) | (1 << (self::SYNCHRONOUS - 1601)) | (1 << (self::SYNC - 1601)) | (1 << (self::SYSASM - 1601)) | (1 << (self::SYS_AUDIT - 1601)) | (1 << (self::SYSAUX - 1601)) | (1 << (self::SYSBACKUP - 1601)) | (1 << (self::SYS_CHECKACL - 1601)) | (1 << (self::SYS_CHECK_PRIVILEGE - 1601)) | (1 << (self::SYS_CONNECT_BY_PATH - 1601)) | (1 << (self::SYS_CONTEXT - 1601)) | (1 << (self::SYSDATE - 1601)) | (1 << (self::SYSDBA - 1601)) | (1 << (self::SYS_DBURIGEN - 1601)) | (1 << (self::SYSDG - 1601)) | (1 << (self::SYS_DL_CURSOR - 1601)) | (1 << (self::SYS_DM_RXFORM_CHR - 1601)) | (1 << (self::SYS_DM_RXFORM_NUM - 1601)) | (1 << (self::SYS_DOM_COMPARE - 1601)) | (1 << (self::SYS_DST_PRIM2SEC - 1601)) | (1 << (self::SYS_DST_SEC2PRIM - 1601)) | (1 << (self::SYS_ET_BFILE_TO_RAW - 1601)) | (1 << (self::SYS_ET_BLOB_TO_IMAGE - 1601)) | (1 << (self::SYS_ET_IMAGE_TO_BLOB - 1601)) | (1 << (self::SYS_ET_RAW_TO_BFILE - 1601)) | (1 << (self::SYS_EXTPDTXT - 1601)) | (1 << (self::SYS_EXTRACT_UTC - 1601)) | (1 << (self::SYS_FBT_INSDEL - 1601)) | (1 << (self::SYS_FILTER_ACLS - 1601)) | (1 << (self::SYS_FNMATCHES - 1601)) | (1 << (self::SYS_FNREPLACE - 1601)) | (1 << (self::SYS_GET_ACLIDS - 1601)) | (1 << (self::SYS_GET_COL_ACLIDS - 1601)) | (1 << (self::SYS_GET_PRIVILEGES - 1601)) | (1 << (self::SYS_GETTOKENID - 1601)) | (1 << (self::SYS_GETXTIVAL - 1601)) | (1 << (self::SYS_GUID - 1601)) | (1 << (self::SYSGUID - 1601)) | (1 << (self::SYSKM - 1601)) | (1 << (self::SYS_MAKE_XMLNODEID - 1601)))) !== 0) || (((($_la - 1665)) & ~0x3f) === 0 && ((1 << ($_la - 1665)) & ((1 << (self::SYS_MAKEXML - 1665)) | (1 << (self::SYS_MKXMLATTR - 1665)) | (1 << (self::SYS_MKXTI - 1665)) | (1 << (self::SYSOBJ - 1665)) | (1 << (self::SYS_OP_ADT2BIN - 1665)) | (1 << (self::SYS_OP_ADTCONS - 1665)) | (1 << (self::SYS_OP_ALSCRVAL - 1665)) | (1 << (self::SYS_OP_ATG - 1665)) | (1 << (self::SYS_OP_BIN2ADT - 1665)) | (1 << (self::SYS_OP_BITVEC - 1665)) | (1 << (self::SYS_OP_BL2R - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_BLOOM_FILTER - 1665)) | (1 << (self::SYS_OP_C2C - 1665)) | (1 << (self::SYS_OP_CAST - 1665)) | (1 << (self::SYS_OP_CEG - 1665)) | (1 << (self::SYS_OP_CL2C - 1665)) | (1 << (self::SYS_OP_COMBINED_HASH - 1665)) | (1 << (self::SYS_OP_COMP - 1665)) | (1 << (self::SYS_OP_CONVERT - 1665)) | (1 << (self::SYS_OP_COUNTCHG - 1665)) | (1 << (self::SYS_OP_CSCONV - 1665)) | (1 << (self::SYS_OP_CSCONVTEST - 1665)) | (1 << (self::SYS_OP_CSR - 1665)) | (1 << (self::SYS_OP_CSX_PATCH - 1665)) | (1 << (self::SYS_OP_CYCLED_SEQ - 1665)) | (1 << (self::SYS_OP_DECOMP - 1665)) | (1 << (self::SYS_OP_DESCEND - 1665)) | (1 << (self::SYS_OP_DISTINCT - 1665)) | (1 << (self::SYS_OP_DRA - 1665)) | (1 << (self::SYS_OP_DUMP - 1665)) | (1 << (self::SYS_OP_DV_CHECK - 1665)) | (1 << (self::SYS_OP_ENFORCE_NOT_NULL - 1665)) | (1 << (self::SYSOPER - 1665)) | (1 << (self::SYS_OP_EXTRACT - 1665)) | (1 << (self::SYS_OP_GROUPING - 1665)) | (1 << (self::SYS_OP_GUID - 1665)) | (1 << (self::SYS_OP_HASH - 1665)) | (1 << (self::SYS_OP_IIX - 1665)) | (1 << (self::SYS_OP_ITR - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_CREATE - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER_LIST - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_SUCCEEDED - 1665)) | (1 << (self::SYS_OP_KEY_VECTOR_USE - 1665)) | (1 << (self::SYS_OP_LBID - 1665)) | (1 << (self::SYS_OP_LOBLOC2BLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2CLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2ID - 1665)) | (1 << (self::SYS_OP_LOBLOC2NCLOB - 1665)) | (1 << (self::SYS_OP_LOBLOC2TYP - 1665)) | (1 << (self::SYS_OP_LSVI - 1665)) | (1 << (self::SYS_OP_LVL - 1665)) | (1 << (self::SYS_OP_MAKEOID - 1665)) | (1 << (self::SYS_OP_MAP_NONNULL - 1665)) | (1 << (self::SYS_OP_MSR - 1665)) | (1 << (self::SYS_OP_NICOMBINE - 1665)) | (1 << (self::SYS_OP_NIEXTRACT - 1665)) | (1 << (self::SYS_OP_NII - 1665)) | (1 << (self::SYS_OP_NIX - 1665)) | (1 << (self::SYS_OP_NOEXPAND - 1665)) | (1 << (self::SYS_OP_NTCIMG - 1665)) | (1 << (self::SYS_OP_NUMTORAW - 1665)) | (1 << (self::SYS_OP_OIDVALUE - 1665)))) !== 0) || (((($_la - 1729)) & ~0x3f) === 0 && ((1 << ($_la - 1729)) & ((1 << (self::SYS_OP_OPNSIZE - 1729)) | (1 << (self::SYS_OP_PAR_1 - 1729)) | (1 << (self::SYS_OP_PARGID_1 - 1729)) | (1 << (self::SYS_OP_PARGID - 1729)) | (1 << (self::SYS_OP_PAR - 1729)) | (1 << (self::SYS_OP_PART_ID - 1729)) | (1 << (self::SYS_OP_PIVOT - 1729)) | (1 << (self::SYS_OP_R2O - 1729)) | (1 << (self::SYS_OP_RAWTONUM - 1729)) | (1 << (self::SYS_OP_RDTM - 1729)) | (1 << (self::SYS_OP_REF - 1729)) | (1 << (self::SYS_OP_RMTD - 1729)) | (1 << (self::SYS_OP_ROWIDTOOBJ - 1729)) | (1 << (self::SYS_OP_RPB - 1729)) | (1 << (self::SYS_OPTLOBPRBSC - 1729)) | (1 << (self::SYS_OP_TOSETID - 1729)) | (1 << (self::SYS_OP_TPR - 1729)) | (1 << (self::SYS_OP_TRTB - 1729)) | (1 << (self::SYS_OPTXICMP - 1729)) | (1 << (self::SYS_OPTXQCASTASNQ - 1729)) | (1 << (self::SYS_OP_UNDESCEND - 1729)) | (1 << (self::SYS_OP_VECAND - 1729)) | (1 << (self::SYS_OP_VECBIT - 1729)) | (1 << (self::SYS_OP_VECOR - 1729)) | (1 << (self::SYS_OP_VECXOR - 1729)) | (1 << (self::SYS_OP_VERSION - 1729)) | (1 << (self::SYS_OP_VREF - 1729)) | (1 << (self::SYS_OP_VVD - 1729)) | (1 << (self::SYS_OP_XMLCONS_FOR_CSX - 1729)) | (1 << (self::SYS_OP_XPTHATG - 1729)) | (1 << (self::SYS_OP_XPTHIDX - 1729)) | (1 << (self::SYS_OP_XPTHOP - 1729)) | (1 << (self::SYS_OP_XTXT2SQLT - 1729)) | (1 << (self::SYS_OP_ZONE_ID - 1729)) | (1 << (self::SYS_ORDERKEY_DEPTH - 1729)) | (1 << (self::SYS_ORDERKEY_MAXCHILD - 1729)) | (1 << (self::SYS_ORDERKEY_PARENT - 1729)) | (1 << (self::SYS_PARALLEL_TXN - 1729)) | (1 << (self::SYS_PATHID_IS_ATTR - 1729)) | (1 << (self::SYS_PATHID_IS_NMSPC - 1729)) | (1 << (self::SYS_PATHID_LASTNAME - 1729)) | (1 << (self::SYS_PATHID_LASTNMSPC - 1729)) | (1 << (self::SYS_PATH_REVERSE - 1729)) | (1 << (self::SYS_PXQEXTRACT - 1729)) | (1 << (self::SYS_RAW_TO_XSID - 1729)) | (1 << (self::SYS_RID_ORDER - 1729)) | (1 << (self::SYS_ROW_DELTA - 1729)) | (1 << (self::SYS_SC_2_XMLT - 1729)) | (1 << (self::SYS_SYNRCIREDO - 1729)) | (1 << (self::SYSTEM_DEFINED - 1729)) | (1 << (self::SYSTEM - 1729)) | (1 << (self::SYSTIMESTAMP - 1729)) | (1 << (self::SYS_TYPEID - 1729)) | (1 << (self::SYS_UMAKEXML - 1729)) | (1 << (self::SYS_XMLANALYZE - 1729)) | (1 << (self::SYS_XMLCONTAINS - 1729)) | (1 << (self::SYS_XMLCONV - 1729)) | (1 << (self::SYS_XMLEXNSURI - 1729)) | (1 << (self::SYS_XMLGEN - 1729)) | (1 << (self::SYS_XMLI_LOC_ISNODE - 1729)) | (1 << (self::SYS_XMLI_LOC_ISTEXT - 1729)) | (1 << (self::SYS_XMLINSTR - 1729)) | (1 << (self::SYS_XMLLOCATOR_GETSVAL - 1729)) | (1 << (self::SYS_XMLNODEID_GETCID - 1729)))) !== 0) || (((($_la - 1793)) & ~0x3f) === 0 && ((1 << ($_la - 1793)) & ((1 << (self::SYS_XMLNODEID_GETLOCATOR - 1793)) | (1 << (self::SYS_XMLNODEID_GETOKEY - 1793)) | (1 << (self::SYS_XMLNODEID_GETPATHID - 1793)) | (1 << (self::SYS_XMLNODEID_GETPTRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETRID - 1793)) | (1 << (self::SYS_XMLNODEID_GETSVAL - 1793)) | (1 << (self::SYS_XMLNODEID_GETTID - 1793)) | (1 << (self::SYS_XMLNODEID - 1793)) | (1 << (self::SYS_XMLT_2_SC - 1793)) | (1 << (self::SYS_XMLTRANSLATE - 1793)) | (1 << (self::SYS_XMLTYPE2SQL - 1793)) | (1 << (self::SYS_XQ_ASQLCNV - 1793)) | (1 << (self::SYS_XQ_ATOMCNVCHK - 1793)) | (1 << (self::SYS_XQBASEURI - 1793)) | (1 << (self::SYS_XQCASTABLEERRH - 1793)) | (1 << (self::SYS_XQCODEP2STR - 1793)) | (1 << (self::SYS_XQCODEPEQ - 1793)) | (1 << (self::SYS_XQCON2SEQ - 1793)) | (1 << (self::SYS_XQCONCAT - 1793)) | (1 << (self::SYS_XQDELETE - 1793)) | (1 << (self::SYS_XQDFLTCOLATION - 1793)) | (1 << (self::SYS_XQDOC - 1793)) | (1 << (self::SYS_XQDOCURI - 1793)) | (1 << (self::SYS_XQDURDIV - 1793)) | (1 << (self::SYS_XQED4URI - 1793)) | (1 << (self::SYS_XQENDSWITH - 1793)) | (1 << (self::SYS_XQERRH - 1793)) | (1 << (self::SYS_XQERR - 1793)) | (1 << (self::SYS_XQESHTMLURI - 1793)) | (1 << (self::SYS_XQEXLOBVAL - 1793)) | (1 << (self::SYS_XQEXSTWRP - 1793)) | (1 << (self::SYS_XQEXTRACT - 1793)) | (1 << (self::SYS_XQEXTRREF - 1793)) | (1 << (self::SYS_XQEXVAL - 1793)) | (1 << (self::SYS_XQFB2STR - 1793)) | (1 << (self::SYS_XQFNBOOL - 1793)) | (1 << (self::SYS_XQFNCMP - 1793)) | (1 << (self::SYS_XQFNDATIM - 1793)) | (1 << (self::SYS_XQFNLNAME - 1793)) | (1 << (self::SYS_XQFNNM - 1793)) | (1 << (self::SYS_XQFNNSURI - 1793)) | (1 << (self::SYS_XQFNPREDTRUTH - 1793)) | (1 << (self::SYS_XQFNQNM - 1793)) | (1 << (self::SYS_XQFNROOT - 1793)) | (1 << (self::SYS_XQFORMATNUM - 1793)) | (1 << (self::SYS_XQFTCONTAIN - 1793)) | (1 << (self::SYS_XQFUNCR - 1793)) | (1 << (self::SYS_XQGETCONTENT - 1793)) | (1 << (self::SYS_XQINDXOF - 1793)) | (1 << (self::SYS_XQINSERT - 1793)) | (1 << (self::SYS_XQINSPFX - 1793)) | (1 << (self::SYS_XQIRI2URI - 1793)) | (1 << (self::SYS_XQLANG - 1793)) | (1 << (self::SYS_XQLLNMFRMQNM - 1793)) | (1 << (self::SYS_XQMKNODEREF - 1793)) | (1 << (self::SYS_XQNILLED - 1793)) | (1 << (self::SYS_XQNODENAME - 1793)) | (1 << (self::SYS_XQNORMSPACE - 1793)) | (1 << (self::SYS_XQNORMUCODE - 1793)) | (1 << (self::SYS_XQ_NRNG - 1793)) | (1 << (self::SYS_XQNSP4PFX - 1793)) | (1 << (self::SYS_XQNSPFRMQNM - 1793)) | (1 << (self::SYS_XQPFXFRMQNM - 1793)) | (1 << (self::SYS_XQ_PKSQL2XML - 1793)))) !== 0) || (((($_la - 1857)) & ~0x3f) === 0 && ((1 << ($_la - 1857)) & ((1 << (self::SYS_XQPOLYABS - 1857)) | (1 << (self::SYS_XQPOLYADD - 1857)) | (1 << (self::SYS_XQPOLYCEL - 1857)) | (1 << (self::SYS_XQPOLYCSTBL - 1857)) | (1 << (self::SYS_XQPOLYCST - 1857)) | (1 << (self::SYS_XQPOLYDIV - 1857)) | (1 << (self::SYS_XQPOLYFLR - 1857)) | (1 << (self::SYS_XQPOLYMOD - 1857)) | (1 << (self::SYS_XQPOLYMUL - 1857)) | (1 << (self::SYS_XQPOLYRND - 1857)) | (1 << (self::SYS_XQPOLYSQRT - 1857)) | (1 << (self::SYS_XQPOLYSUB - 1857)) | (1 << (self::SYS_XQPOLYUMUS - 1857)) | (1 << (self::SYS_XQPOLYUPLS - 1857)) | (1 << (self::SYS_XQPOLYVEQ - 1857)) | (1 << (self::SYS_XQPOLYVGE - 1857)) | (1 << (self::SYS_XQPOLYVGT - 1857)) | (1 << (self::SYS_XQPOLYVLE - 1857)) | (1 << (self::SYS_XQPOLYVLT - 1857)) | (1 << (self::SYS_XQPOLYVNE - 1857)) | (1 << (self::SYS_XQREF2VAL - 1857)) | (1 << (self::SYS_XQRENAME - 1857)) | (1 << (self::SYS_XQREPLACE - 1857)) | (1 << (self::SYS_XQRESVURI - 1857)) | (1 << (self::SYS_XQRNDHALF2EVN - 1857)) | (1 << (self::SYS_XQRSLVQNM - 1857)) | (1 << (self::SYS_XQRYENVPGET - 1857)) | (1 << (self::SYS_XQRYVARGET - 1857)) | (1 << (self::SYS_XQRYWRP - 1857)) | (1 << (self::SYS_XQSEQ2CON4XC - 1857)) | (1 << (self::SYS_XQSEQ2CON - 1857)) | (1 << (self::SYS_XQSEQDEEPEQ - 1857)) | (1 << (self::SYS_XQSEQINSB - 1857)) | (1 << (self::SYS_XQSEQRM - 1857)) | (1 << (self::SYS_XQSEQRVS - 1857)) | (1 << (self::SYS_XQSEQSUB - 1857)) | (1 << (self::SYS_XQSEQTYPMATCH - 1857)) | (1 << (self::SYS_XQSTARTSWITH - 1857)) | (1 << (self::SYS_XQSTATBURI - 1857)) | (1 << (self::SYS_XQSTR2CODEP - 1857)) | (1 << (self::SYS_XQSTRJOIN - 1857)) | (1 << (self::SYS_XQSUBSTRAFT - 1857)) | (1 << (self::SYS_XQSUBSTRBEF - 1857)) | (1 << (self::SYS_XQTOKENIZE - 1857)) | (1 << (self::SYS_XQTREATAS - 1857)) | (1 << (self::SYS_XQ_UPKXML2SQL - 1857)) | (1 << (self::SYS_XQXFORM - 1857)) | (1 << (self::SYS_XSID_TO_RAW - 1857)) | (1 << (self::SYS_ZMAP_FILTER - 1857)) | (1 << (self::SYS_ZMAP_REFRESH - 1857)) | (1 << (self::TABLE_LOOKUP_BY_NL - 1857)) | (1 << (self::TABLESPACE_NO - 1857)) | (1 << (self::TABLESPACE - 1857)) | (1 << (self::TABLES - 1857)) | (1 << (self::TABLE_STATS - 1857)) | (1 << (self::TABLE - 1857)) | (1 << (self::TABNO - 1857)) | (1 << (self::TAG - 1857)) | (1 << (self::TANH - 1857)) | (1 << (self::TAN - 1857)) | (1 << (self::TBLORIDXPARTNUM - 1857)) | (1 << (self::TEMPFILE - 1857)) | (1 << (self::TEMPLATE - 1857)) | (1 << (self::TEMPORARY - 1857)))) !== 0) || (((($_la - 1921)) & ~0x3f) === 0 && ((1 << ($_la - 1921)) & ((1 << (self::TEMP_TABLE - 1921)) | (1 << (self::TEST - 1921)) | (1 << (self::TEXT - 1921)) | (1 << (self::THAN - 1921)) | (1 << (self::THEN - 1921)) | (1 << (self::THE - 1921)) | (1 << (self::THREAD - 1921)) | (1 << (self::THROUGH - 1921)) | (1 << (self::TIER - 1921)) | (1 << (self::TIES - 1921)) | (1 << (self::TIMEOUT - 1921)) | (1 << (self::TIMESTAMP_LTZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP - 1921)) | (1 << (self::TIMESTAMP_TZ_UNCONSTRAINED - 1921)) | (1 << (self::TIMESTAMP_UNCONSTRAINED - 1921)) | (1 << (self::TIMES - 1921)) | (1 << (self::TIME - 1921)) | (1 << (self::TIMEZONE_ABBR - 1921)) | (1 << (self::TIMEZONE_HOUR - 1921)) | (1 << (self::TIMEZONE_MINUTE - 1921)) | (1 << (self::TIMEZONE_OFFSET - 1921)) | (1 << (self::TIMEZONE_REGION - 1921)) | (1 << (self::TIME_ZONE - 1921)) | (1 << (self::TIV_GB - 1921)) | (1 << (self::TIV_SSF - 1921)) | (1 << (self::TO_ACLID - 1921)) | (1 << (self::TO_BINARY_DOUBLE - 1921)) | (1 << (self::TO_BINARY_FLOAT - 1921)) | (1 << (self::TO_BLOB - 1921)) | (1 << (self::TO_CLOB - 1921)) | (1 << (self::TO_DSINTERVAL - 1921)) | (1 << (self::TO_LOB - 1921)) | (1 << (self::TO_MULTI_BYTE - 1921)) | (1 << (self::TO_NCHAR - 1921)) | (1 << (self::TO_NCLOB - 1921)) | (1 << (self::TO_NUMBER - 1921)) | (1 << (self::TOPLEVEL - 1921)) | (1 << (self::TO_SINGLE_BYTE - 1921)) | (1 << (self::TO_TIMESTAMP - 1921)) | (1 << (self::TO_TIMESTAMP_TZ - 1921)) | (1 << (self::TO_TIME - 1921)) | (1 << (self::TO_TIME_TZ - 1921)) | (1 << (self::TO_YMINTERVAL - 1921)) | (1 << (self::TRACE - 1921)) | (1 << (self::TRACING - 1921)) | (1 << (self::TRACKING - 1921)) | (1 << (self::TRAILING - 1921)) | (1 << (self::TRANSACTION - 1921)) | (1 << (self::TRANSFORM_DISTINCT_AGG - 1921)) | (1 << (self::TRANSITIONAL - 1921)) | (1 << (self::TRANSITION - 1921)) | (1 << (self::TRANSLATE - 1921)) | (1 << (self::TRANSLATION - 1921)) | (1 << (self::TREAT - 1921)) | (1 << (self::TRIGGERS - 1921)) | (1 << (self::TRIGGER - 1921)) | (1 << (self::TRUE - 1921)) | (1 << (self::TRUNCATE - 1921)) | (1 << (self::TRUNC - 1921)) | (1 << (self::TRUSTED - 1921)) | (1 << (self::TRUST - 1921)) | (1 << (self::TUNING - 1921)))) !== 0) || (((($_la - 1985)) & ~0x3f) === 0 && ((1 << ($_la - 1985)) & ((1 << (self::TX - 1985)) | (1 << (self::TYPES - 1985)) | (1 << (self::TYPE - 1985)) | (1 << (self::TZ_OFFSET - 1985)) | (1 << (self::UB2 - 1985)) | (1 << (self::UBA - 1985)) | (1 << (self::UCS2 - 1985)) | (1 << (self::UID - 1985)) | (1 << (self::UNARCHIVED - 1985)) | (1 << (self::UNBOUNDED - 1985)) | (1 << (self::UNBOUND - 1985)) | (1 << (self::UNCONDITIONAL - 1985)) | (1 << (self::UNDER - 1985)) | (1 << (self::UNDO - 1985)) | (1 << (self::UNDROP - 1985)) | (1 << (self::UNIFORM - 1985)) | (1 << (self::UNISTR - 1985)) | (1 << (self::UNLIMITED - 1985)) | (1 << (self::UNLOAD - 1985)) | (1 << (self::UNLOCK - 1985)) | (1 << (self::UNMATCHED - 1985)) | (1 << (self::UNNEST_INNERJ_DISTINCT_VIEW - 1985)) | (1 << (self::UNNEST_NOSEMIJ_NODISTINCTVIEW - 1985)) | (1 << (self::UNNEST_SEMIJ_VIEW - 1985)) | (1 << (self::UNNEST - 1985)) | (1 << (self::UNPACKED - 1985)) | (1 << (self::UNPIVOT - 1985)) | (1 << (self::UNPLUG - 1985)) | (1 << (self::UNPROTECTED - 1985)) | (1 << (self::UNQUIESCE - 1985)) | (1 << (self::UNRECOVERABLE - 1985)) | (1 << (self::UNRESTRICTED - 1985)) | (1 << (self::UNSUBSCRIBE - 1985)) | (1 << (self::UNTIL - 1985)) | (1 << (self::UNUSABLE - 1985)) | (1 << (self::UNUSED - 1985)) | (1 << (self::UPDATABLE - 1985)) | (1 << (self::UPDATED - 1985)) | (1 << (self::UPDATEXML - 1985)) | (1 << (self::UPD_INDEXES - 1985)) | (1 << (self::UPD_JOININDEX - 1985)) | (1 << (self::UPGRADE - 1985)) | (1 << (self::UPPER - 1985)) | (1 << (self::UPSERT - 1985)) | (1 << (self::UROWID - 1985)) | (1 << (self::USABLE - 1985)) | (1 << (self::USAGE - 1985)) | (1 << (self::USE_ANTI - 1985)) | (1 << (self::USE_CONCAT - 1985)) | (1 << (self::USE_CUBE - 1985)) | (1 << (self::USE_HASH_AGGREGATION - 1985)) | (1 << (self::USE_HASH_GBY_FOR_PUSHDOWN - 1985)) | (1 << (self::USE_HASH - 1985)) | (1 << (self::USE_HIDDEN_PARTITIONS - 1985)) | (1 << (self::USE_INVISIBLE_INDEXES - 1985)) | (1 << (self::USE_MERGE_CARTESIAN - 1985)) | (1 << (self::USE_MERGE - 1985)) | (1 << (self::USE_NL - 1985)) | (1 << (self::USE_NL_WITH_INDEX - 1985)) | (1 << (self::USE_PRIVATE_OUTLINES - 1985)) | (1 << (self::USER_DATA - 1985)))) !== 0) || (((($_la - 2049)) & ~0x3f) === 0 && ((1 << ($_la - 2049)) & ((1 << (self::USER_DEFINED - 2049)) | (1 << (self::USERENV - 2049)) | (1 << (self::USERGROUP - 2049)) | (1 << (self::USER_RECYCLEBIN - 2049)) | (1 << (self::USERS - 2049)) | (1 << (self::USER_TABLESPACES - 2049)) | (1 << (self::USER - 2049)) | (1 << (self::USE_SEMI - 2049)) | (1 << (self::USE_STORED_OUTLINES - 2049)) | (1 << (self::USE_TTT_FOR_GSETS - 2049)) | (1 << (self::USE - 2049)) | (1 << (self::USE_VECTOR_AGGREGATION - 2049)) | (1 << (self::USE_WEAK_NAME_RESL - 2049)) | (1 << (self::USING_NO_EXPAND - 2049)) | (1 << (self::USING - 2049)) | (1 << (self::UTF16BE - 2049)) | (1 << (self::UTF16LE - 2049)) | (1 << (self::UTF32 - 2049)) | (1 << (self::UTF8 - 2049)) | (1 << (self::V1 - 2049)) | (1 << (self::V2 - 2049)) | (1 << (self::VALIDATE - 2049)) | (1 << (self::VALIDATION - 2049)) | (1 << (self::VALID_TIME_END - 2049)) | (1 << (self::VALUE - 2049)) | (1 << (self::VARCHAR2 - 2049)) | (1 << (self::VARCHAR - 2049)) | (1 << (self::VARIABLE - 2049)) | (1 << (self::VAR_POP - 2049)) | (1 << (self::VARRAYS - 2049)) | (1 << (self::VARRAY - 2049)) | (1 << (self::VAR_SAMP - 2049)) | (1 << (self::VARYING - 2049)) | (1 << (self::VECTOR_READ_TRACE - 2049)) | (1 << (self::VECTOR_READ - 2049)) | (1 << (self::VECTOR_TRANSFORM_DIMS - 2049)) | (1 << (self::VECTOR_TRANSFORM_FACT - 2049)) | (1 << (self::VECTOR_TRANSFORM - 2049)) | (1 << (self::VERIFIER - 2049)) | (1 << (self::VERIFY - 2049)) | (1 << (self::VERSIONING - 2049)) | (1 << (self::VERSIONS_ENDSCN - 2049)) | (1 << (self::VERSIONS_ENDTIME - 2049)) | (1 << (self::VERSIONS_OPERATION - 2049)) | (1 << (self::VERSIONS_STARTSCN - 2049)) | (1 << (self::VERSIONS_STARTTIME - 2049)) | (1 << (self::VERSIONS - 2049)) | (1 << (self::VERSIONS_XID - 2049)) | (1 << (self::VERSION - 2049)) | (1 << (self::VIOLATION - 2049)) | (1 << (self::VIRTUAL - 2049)) | (1 << (self::VISIBILITY - 2049)) | (1 << (self::VISIBLE - 2049)) | (1 << (self::VOLUME - 2049)) | (1 << (self::VSIZE - 2049)) | (1 << (self::WAIT - 2049)) | (1 << (self::WALLET - 2049)) | (1 << (self::WARNING - 2049)) | (1 << (self::WEEKS - 2049)) | (1 << (self::WEEK - 2049)) | (1 << (self::WELLFORMED - 2049)) | (1 << (self::WHENEVER - 2049)))) !== 0) || (((($_la - 2113)) & ~0x3f) === 0 && ((1 << ($_la - 2113)) & ((1 << (self::WHEN - 2113)) | (1 << (self::WHILE - 2113)) | (1 << (self::WHITESPACE - 2113)) | (1 << (self::WIDTH_BUCKET - 2113)) | (1 << (self::WITHIN - 2113)) | (1 << (self::WITHOUT - 2113)) | (1 << (self::WITH_PLSQL - 2113)) | (1 << (self::WORK - 2113)) | (1 << (self::WRAPPED - 2113)) | (1 << (self::WRAPPER - 2113)) | (1 << (self::WRITE - 2113)) | (1 << (self::XDB_FASTPATH_INSERT - 2113)) | (1 << (self::X_DYN_PRUNE - 2113)) | (1 << (self::XID - 2113)) | (1 << (self::XML2OBJECT - 2113)) | (1 << (self::XMLAGG - 2113)) | (1 << (self::XMLATTRIBUTES - 2113)) | (1 << (self::XMLCAST - 2113)) | (1 << (self::XMLCDATA - 2113)) | (1 << (self::XMLCOLATTVAL - 2113)) | (1 << (self::XMLCOMMENT - 2113)) | (1 << (self::XMLCONCAT - 2113)) | (1 << (self::XMLDIFF - 2113)) | (1 << (self::XML_DML_RWT_STMT - 2113)) | (1 << (self::XMLELEMENT - 2113)) | (1 << (self::XMLEXISTS2 - 2113)) | (1 << (self::XMLEXISTS - 2113)) | (1 << (self::XMLFOREST - 2113)) | (1 << (self::XMLINDEX_REWRITE_IN_SELECT - 2113)) | (1 << (self::XMLINDEX_REWRITE - 2113)) | (1 << (self::XMLINDEX_SEL_IDX_TBL - 2113)) | (1 << (self::XMLISNODE - 2113)) | (1 << (self::XMLISVALID - 2113)) | (1 << (self::XMLNAMESPACES - 2113)) | (1 << (self::XMLPARSE - 2113)) | (1 << (self::XMLPATCH - 2113)) | (1 << (self::XMLPI - 2113)) | (1 << (self::XMLQUERYVAL - 2113)) | (1 << (self::XMLQUERY - 2113)) | (1 << (self::XMLROOT - 2113)) | (1 << (self::XMLSCHEMA - 2113)) | (1 << (self::XMLSERIALIZE - 2113)) | (1 << (self::XMLTABLE - 2113)) | (1 << (self::XMLTRANSFORMBLOB - 2113)) | (1 << (self::XMLTRANSFORM - 2113)) | (1 << (self::XMLTYPE - 2113)) | (1 << (self::XML - 2113)) | (1 << (self::XPATHTABLE - 2113)) | (1 << (self::XS_SYS_CONTEXT - 2113)) | (1 << (self::XS - 2113)) | (1 << (self::YEARS - 2113)) | (1 << (self::YEAR - 2113)) | (1 << (self::YES - 2113)) | (1 << (self::YMINTERVAL_UNCONSTRAINED - 2113)) | (1 << (self::ZONEMAP - 2113)) | (1 << (self::ZONE - 2113)) | (1 << (self::PREDICTION - 2113)) | (1 << (self::PREDICTION_BOUNDS - 2113)) | (1 << (self::PREDICTION_COST - 2113)))) !== 0) || (((($_la - 2177)) & ~0x3f) === 0 && ((1 << ($_la - 2177)) & ((1 << (self::PREDICTION_DETAILS - 2177)) | (1 << (self::PREDICTION_PROBABILITY - 2177)) | (1 << (self::PREDICTION_SET - 2177)) | (1 << (self::CUME_DIST - 2177)) | (1 << (self::DENSE_RANK - 2177)) | (1 << (self::LISTAGG - 2177)) | (1 << (self::PERCENT_RANK - 2177)) | (1 << (self::PERCENTILE_CONT - 2177)) | (1 << (self::PERCENTILE_DISC - 2177)) | (1 << (self::RANK - 2177)) | (1 << (self::AVG - 2177)) | (1 << (self::CORR - 2177)) | (1 << (self::COVAR_ - 2177)) | (1 << (self::LAG - 2177)) | (1 << (self::LEAD - 2177)) | (1 << (self::MAX - 2177)) | (1 << (self::MEDIAN - 2177)) | (1 << (self::MIN - 2177)) | (1 << (self::NTILE - 2177)) | (1 << (self::NVL - 2177)) | (1 << (self::RATIO_TO_REPORT - 2177)) | (1 << (self::REGR_ - 2177)) | (1 << (self::ROUND - 2177)) | (1 << (self::ROW_NUMBER - 2177)) | (1 << (self::SUBSTR - 2177)) | (1 << (self::TO_CHAR - 2177)) | (1 << (self::TRIM - 2177)) | (1 << (self::SUM - 2177)) | (1 << (self::STDDEV - 2177)) | (1 << (self::VAR_ - 2177)) | (1 << (self::VARIANCE - 2177)) | (1 << (self::LEAST - 2177)) | (1 << (self::GREATEST - 2177)) | (1 << (self::TO_DATE - 2177)) | (1 << (self::NATIONAL_CHAR_STRING_LIT - 2177)) | (1 << (self::PERIOD - 2177)) | (1 << (self::CHAR_STRING - 2177)) | (1 << (self::DELIMITED_ID - 2177)) | (1 << (self::BINDVAR - 2177)) | (1 << (self::COLON - 2177)))) !== 0) || $_la === self::INTRODUCER || $_la === self::REGULAR_ID) {
                            $this->setState(11394);
                            $this->column_alias();
                        }
                        $this->setState(11401);
                        $this->errorHandler->sync($this);
                        $_la = $this->input->LA(1);
                    }
                    break;
            }
            $this->setState(11404);
            $this->match(self::RIGHT_PAREN);
            $this->setState(11406);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1578, $this->ctx)) {
                case 1:
                    $this->setState(11405);
                    $this->keep_clause();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function respect_or_ignore_nulls(): Context\Respect_or_ignore_nullsContext
    {
        $localContext = new Context\Respect_or_ignore_nullsContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1454, self::RULE_respect_or_ignore_nulls);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11408);

            $_la = $this->input->LA(1);

            if (!($_la === self::IGNORE || $_la === self::RESPECT)) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
            $this->setState(11409);
            $this->match(self::NULLS);
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function argument(): Context\ArgumentContext
    {
        $localContext = new Context\ArgumentContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1456, self::RULE_argument);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11415);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1579, $this->ctx)) {
                case 1:
                    $this->setState(11411);
                    $this->identifier();
                    $this->setState(11412);
                    $this->match(self::EQUALS_OP);
                    $this->setState(11413);
                    $this->match(self::GREATER_THAN_OP);
                    break;
            }
            $this->setState(11417);
            $this->expression();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function type_spec(): Context\Type_specContext
    {
        $localContext = new Context\Type_specContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1458, self::RULE_type_spec);

        try {
            $this->setState(11427);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1582, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11419);
                    $this->datatype();
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11421);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1580, $this->ctx)) {
                        case 1:
                            $this->setState(11420);
                            $this->match(self::REF);
                            break;
                    }
                    $this->setState(11423);
                    $this->type_name();
                    $this->setState(11425);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::PERCENT_ROWTYPE || $_la === self::PERCENT_TYPE) {
                        $this->setState(11424);

                        $_la = $this->input->LA(1);

                        if (!($_la === self::PERCENT_ROWTYPE || $_la === self::PERCENT_TYPE)) {
                            $this->errorHandler->recoverInline($this);
                        } else {
                            if ($this->input->LA(1) === Token::EOF) {
                                $this->matchedEOF = true;
                            }

                            $this->errorHandler->reportMatch($this);
                            $this->consume();
                        }
                    }
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function datatype(): Context\DatatypeContext
    {
        $localContext = new Context\DatatypeContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1460, self::RULE_datatype);

        try {
            $this->setState(11460);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::BFILE:
                case self::BINARY_DOUBLE:
                case self::BINARY_FLOAT:
                case self::BINARY_INTEGER:
                case self::BLOB:
                case self::BOOLEAN:
                case self::CHARACTER:
                case self::CHAR:
                case self::CLOB:
                case self::DATE:
                case self::DAY:
                case self::DEC:
                case self::DECIMAL:
                case self::DOUBLE:
                case self::DSINTERVAL_UNCONSTRAINED:
                case self::FLOAT:
                case self::HOUR:
                case self::INTEGER:
                case self::INT:
                case self::LONG:
                case self::MINUTE:
                case self::MLSLABEL:
                case self::MONTH:
                case self::NATURAL:
                case self::NATURALN:
                case self::NCHAR:
                case self::NCLOB:
                case self::NUMBER:
                case self::NUMERIC:
                case self::NVARCHAR2:
                case self::PLS_INTEGER:
                case self::POSITIVEN:
                case self::POSITIVE:
                case self::RAW:
                case self::REAL:
                case self::ROWID:
                case self::SECOND:
                case self::SIGNTYPE:
                case self::SIMPLE_INTEGER:
                case self::SMALLINT:
                case self::STRING:
                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                case self::TIMESTAMP:
                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                case self::TIMESTAMP_UNCONSTRAINED:
                case self::TIMEZONE_ABBR:
                case self::TIMEZONE_HOUR:
                case self::TIMEZONE_MINUTE:
                case self::TIMEZONE_REGION:
                case self::UROWID:
                case self::VARCHAR2:
                case self::VARCHAR:
                case self::YEAR:
                case self::YMINTERVAL_UNCONSTRAINED:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11429);
                    $this->native_datatype_element();
                    $this->setState(11431);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1583, $this->ctx)) {
                        case 1:
                            $this->setState(11430);
                            $this->precision_part();
                            break;
                    }
                    $this->setState(11442);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1585, $this->ctx)) {
                        case 1:
                            $this->setState(11433);
                            $this->match(self::WITH);
                            $this->setState(11435);
                            $this->errorHandler->sync($this);
                            $_la = $this->input->LA(1);

                            if ($_la === self::LOCAL) {
                                $this->setState(11434);
                                $this->match(self::LOCAL);
                            }
                            $this->setState(11437);
                            $this->match(self::TIME);
                            $this->setState(11438);
                            $this->match(self::ZONE);
                            break;

                        case 2:
                            $this->setState(11439);
                            $this->match(self::CHARACTER);
                            $this->setState(11440);
                            $this->match(self::SET);
                            $this->setState(11441);
                            $this->char_set_name();
                            break;
                    }
                    break;

                case self::INTERVAL:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11444);
                    $this->match(self::INTERVAL);
                    $this->setState(11445);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::DAY || $_la === self::YEAR)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11450);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::LEFT_PAREN) {
                        $this->setState(11446);
                        $this->match(self::LEFT_PAREN);
                        $this->setState(11447);
                        $this->expression();
                        $this->setState(11448);
                        $this->match(self::RIGHT_PAREN);
                    }
                    $this->setState(11452);
                    $this->match(self::TO);
                    $this->setState(11453);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::MONTH || $_la === self::SECOND)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11458);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1587, $this->ctx)) {
                        case 1:
                            $this->setState(11454);
                            $this->match(self::LEFT_PAREN);
                            $this->setState(11455);
                            $this->expression();
                            $this->setState(11456);
                            $this->match(self::RIGHT_PAREN);
                            break;
                    }
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function precision_part(): Context\Precision_partContext
    {
        $localContext = new Context\Precision_partContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1462, self::RULE_precision_part);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11462);
            $this->match(self::LEFT_PAREN);
            $this->setState(11465);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::UNSIGNED_INTEGER:
                case self::APPROXIMATE_NUM_LIT:
                    $this->setState(11463);
                    $this->numeric();
                    break;

                case self::ASTERISK:
                    $this->setState(11464);
                    $this->match(self::ASTERISK);
                    break;

                default:
                    throw new NoViableAltException($this);
            }
            $this->setState(11469);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::COMMA) {
                $this->setState(11467);
                $this->match(self::COMMA);
                $this->setState(11468);
                $this->numeric();
            }
            $this->setState(11472);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::BYTE || $_la === self::CHAR) {
                $this->setState(11471);

                $_la = $this->input->LA(1);

                if (!($_la === self::BYTE || $_la === self::CHAR)) {
                    $this->errorHandler->recoverInline($this);
                } else {
                    if ($this->input->LA(1) === Token::EOF) {
                        $this->matchedEOF = true;
                    }

                    $this->errorHandler->reportMatch($this);
                    $this->consume();
                }
            }
            $this->setState(11474);
            $this->match(self::RIGHT_PAREN);
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function native_datatype_element(): Context\Native_datatype_elementContext
    {
        $localContext = new Context\Native_datatype_elementContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1464, self::RULE_native_datatype_element);

        try {
            $this->setState(11536);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::BINARY_INTEGER:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11476);
                    $this->match(self::BINARY_INTEGER);
                    break;

                case self::PLS_INTEGER:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11477);
                    $this->match(self::PLS_INTEGER);
                    break;

                case self::NATURAL:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(11478);
                    $this->match(self::NATURAL);
                    break;

                case self::BINARY_FLOAT:
                    $this->enterOuterAlt($localContext, 4);
                    $this->setState(11479);
                    $this->match(self::BINARY_FLOAT);
                    break;

                case self::BINARY_DOUBLE:
                    $this->enterOuterAlt($localContext, 5);
                    $this->setState(11480);
                    $this->match(self::BINARY_DOUBLE);
                    break;

                case self::NATURALN:
                    $this->enterOuterAlt($localContext, 6);
                    $this->setState(11481);
                    $this->match(self::NATURALN);
                    break;

                case self::POSITIVE:
                    $this->enterOuterAlt($localContext, 7);
                    $this->setState(11482);
                    $this->match(self::POSITIVE);
                    break;

                case self::POSITIVEN:
                    $this->enterOuterAlt($localContext, 8);
                    $this->setState(11483);
                    $this->match(self::POSITIVEN);
                    break;

                case self::SIGNTYPE:
                    $this->enterOuterAlt($localContext, 9);
                    $this->setState(11484);
                    $this->match(self::SIGNTYPE);
                    break;

                case self::SIMPLE_INTEGER:
                    $this->enterOuterAlt($localContext, 10);
                    $this->setState(11485);
                    $this->match(self::SIMPLE_INTEGER);
                    break;

                case self::NVARCHAR2:
                    $this->enterOuterAlt($localContext, 11);
                    $this->setState(11486);
                    $this->match(self::NVARCHAR2);
                    break;

                case self::DEC:
                    $this->enterOuterAlt($localContext, 12);
                    $this->setState(11487);
                    $this->match(self::DEC);
                    break;

                case self::INTEGER:
                    $this->enterOuterAlt($localContext, 13);
                    $this->setState(11488);
                    $this->match(self::INTEGER);
                    break;

                case self::INT:
                    $this->enterOuterAlt($localContext, 14);
                    $this->setState(11489);
                    $this->match(self::INT);
                    break;

                case self::NUMERIC:
                    $this->enterOuterAlt($localContext, 15);
                    $this->setState(11490);
                    $this->match(self::NUMERIC);
                    break;

                case self::SMALLINT:
                    $this->enterOuterAlt($localContext, 16);
                    $this->setState(11491);
                    $this->match(self::SMALLINT);
                    break;

                case self::NUMBER:
                    $this->enterOuterAlt($localContext, 17);
                    $this->setState(11492);
                    $this->match(self::NUMBER);
                    break;

                case self::DECIMAL:
                    $this->enterOuterAlt($localContext, 18);
                    $this->setState(11493);
                    $this->match(self::DECIMAL);
                    break;

                case self::DOUBLE:
                    $this->enterOuterAlt($localContext, 19);
                    $this->setState(11494);
                    $this->match(self::DOUBLE);
                    $this->setState(11496);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::PRECISION) {
                        $this->setState(11495);
                        $this->match(self::PRECISION);
                    }
                    break;

                case self::FLOAT:
                    $this->enterOuterAlt($localContext, 20);
                    $this->setState(11498);
                    $this->match(self::FLOAT);
                    break;

                case self::REAL:
                    $this->enterOuterAlt($localContext, 21);
                    $this->setState(11499);
                    $this->match(self::REAL);
                    break;

                case self::NCHAR:
                    $this->enterOuterAlt($localContext, 22);
                    $this->setState(11500);
                    $this->match(self::NCHAR);
                    break;

                case self::LONG:
                    $this->enterOuterAlt($localContext, 23);
                    $this->setState(11501);
                    $this->match(self::LONG);
                    $this->setState(11503);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::RAW) {
                        $this->setState(11502);
                        $this->match(self::RAW);
                    }
                    break;

                case self::CHAR:
                    $this->enterOuterAlt($localContext, 24);
                    $this->setState(11505);
                    $this->match(self::CHAR);
                    break;

                case self::CHARACTER:
                    $this->enterOuterAlt($localContext, 25);
                    $this->setState(11506);
                    $this->match(self::CHARACTER);
                    break;

                case self::VARCHAR2:
                    $this->enterOuterAlt($localContext, 26);
                    $this->setState(11507);
                    $this->match(self::VARCHAR2);
                    break;

                case self::VARCHAR:
                    $this->enterOuterAlt($localContext, 27);
                    $this->setState(11508);
                    $this->match(self::VARCHAR);
                    break;

                case self::STRING:
                    $this->enterOuterAlt($localContext, 28);
                    $this->setState(11509);
                    $this->match(self::STRING);
                    break;

                case self::RAW:
                    $this->enterOuterAlt($localContext, 29);
                    $this->setState(11510);
                    $this->match(self::RAW);
                    break;

                case self::BOOLEAN:
                    $this->enterOuterAlt($localContext, 30);
                    $this->setState(11511);
                    $this->match(self::BOOLEAN);
                    break;

                case self::DATE:
                    $this->enterOuterAlt($localContext, 31);
                    $this->setState(11512);
                    $this->match(self::DATE);
                    break;

                case self::ROWID:
                    $this->enterOuterAlt($localContext, 32);
                    $this->setState(11513);
                    $this->match(self::ROWID);
                    break;

                case self::UROWID:
                    $this->enterOuterAlt($localContext, 33);
                    $this->setState(11514);
                    $this->match(self::UROWID);
                    break;

                case self::YEAR:
                    $this->enterOuterAlt($localContext, 34);
                    $this->setState(11515);
                    $this->match(self::YEAR);
                    break;

                case self::MONTH:
                    $this->enterOuterAlt($localContext, 35);
                    $this->setState(11516);
                    $this->match(self::MONTH);
                    break;

                case self::DAY:
                    $this->enterOuterAlt($localContext, 36);
                    $this->setState(11517);
                    $this->match(self::DAY);
                    break;

                case self::HOUR:
                    $this->enterOuterAlt($localContext, 37);
                    $this->setState(11518);
                    $this->match(self::HOUR);
                    break;

                case self::MINUTE:
                    $this->enterOuterAlt($localContext, 38);
                    $this->setState(11519);
                    $this->match(self::MINUTE);
                    break;

                case self::SECOND:
                    $this->enterOuterAlt($localContext, 39);
                    $this->setState(11520);
                    $this->match(self::SECOND);
                    break;

                case self::TIMEZONE_HOUR:
                    $this->enterOuterAlt($localContext, 40);
                    $this->setState(11521);
                    $this->match(self::TIMEZONE_HOUR);
                    break;

                case self::TIMEZONE_MINUTE:
                    $this->enterOuterAlt($localContext, 41);
                    $this->setState(11522);
                    $this->match(self::TIMEZONE_MINUTE);
                    break;

                case self::TIMEZONE_REGION:
                    $this->enterOuterAlt($localContext, 42);
                    $this->setState(11523);
                    $this->match(self::TIMEZONE_REGION);
                    break;

                case self::TIMEZONE_ABBR:
                    $this->enterOuterAlt($localContext, 43);
                    $this->setState(11524);
                    $this->match(self::TIMEZONE_ABBR);
                    break;

                case self::TIMESTAMP:
                    $this->enterOuterAlt($localContext, 44);
                    $this->setState(11525);
                    $this->match(self::TIMESTAMP);
                    break;

                case self::TIMESTAMP_UNCONSTRAINED:
                    $this->enterOuterAlt($localContext, 45);
                    $this->setState(11526);
                    $this->match(self::TIMESTAMP_UNCONSTRAINED);
                    break;

                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                    $this->enterOuterAlt($localContext, 46);
                    $this->setState(11527);
                    $this->match(self::TIMESTAMP_TZ_UNCONSTRAINED);
                    break;

                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                    $this->enterOuterAlt($localContext, 47);
                    $this->setState(11528);
                    $this->match(self::TIMESTAMP_LTZ_UNCONSTRAINED);
                    break;

                case self::YMINTERVAL_UNCONSTRAINED:
                    $this->enterOuterAlt($localContext, 48);
                    $this->setState(11529);
                    $this->match(self::YMINTERVAL_UNCONSTRAINED);
                    break;

                case self::DSINTERVAL_UNCONSTRAINED:
                    $this->enterOuterAlt($localContext, 49);
                    $this->setState(11530);
                    $this->match(self::DSINTERVAL_UNCONSTRAINED);
                    break;

                case self::BFILE:
                    $this->enterOuterAlt($localContext, 50);
                    $this->setState(11531);
                    $this->match(self::BFILE);
                    break;

                case self::BLOB:
                    $this->enterOuterAlt($localContext, 51);
                    $this->setState(11532);
                    $this->match(self::BLOB);
                    break;

                case self::CLOB:
                    $this->enterOuterAlt($localContext, 52);
                    $this->setState(11533);
                    $this->match(self::CLOB);
                    break;

                case self::NCLOB:
                    $this->enterOuterAlt($localContext, 53);
                    $this->setState(11534);
                    $this->match(self::NCLOB);
                    break;

                case self::MLSLABEL:
                    $this->enterOuterAlt($localContext, 54);
                    $this->setState(11535);
                    $this->match(self::MLSLABEL);
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function bind_variable(): Context\Bind_variableContext
    {
        $localContext = new Context\Bind_variableContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1466, self::RULE_bind_variable);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11541);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::BINDVAR:
                    $this->setState(11538);
                    $this->match(self::BINDVAR);
                    break;

                case self::COLON:
                    $this->setState(11539);
                    $this->match(self::COLON);
                    $this->setState(11540);
                    $this->match(self::UNSIGNED_INTEGER);
                    break;

                default:
                    throw new NoViableAltException($this);
            }
            $this->setState(11551);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1598, $this->ctx)) {
                case 1:
                    $this->setState(11544);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::INDICATOR) {
                        $this->setState(11543);
                        $this->match(self::INDICATOR);
                    }
                    $this->setState(11549);
                    $this->errorHandler->sync($this);

                    switch ($this->input->LA(1)) {
                        case self::BINDVAR:
                            $this->setState(11546);
                            $this->match(self::BINDVAR);
                            break;

                        case self::COLON:
                            $this->setState(11547);
                            $this->match(self::COLON);
                            $this->setState(11548);
                            $this->match(self::UNSIGNED_INTEGER);
                            break;

                        default:
                            throw new NoViableAltException($this);
                    }
                    break;
            }
            $this->setState(11557);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1599, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11553);
                    $this->match(self::PERIOD);
                    $this->setState(11554);
                    $this->general_element_part();
                }

                $this->setState(11559);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1599, $this->ctx);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function general_element(): Context\General_elementContext
    {
        $localContext = new Context\General_elementContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1468, self::RULE_general_element);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11560);
            $this->general_element_part();
            $this->setState(11565);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1600, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11561);
                    $this->match(self::PERIOD);
                    $this->setState(11562);
                    $this->general_element_part();
                }

                $this->setState(11567);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1600, $this->ctx);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function general_element_part(): Context\General_element_partContext
    {
        $localContext = new Context\General_element_partContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1470, self::RULE_general_element_part);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11570);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::INTRODUCER) {
                $this->setState(11568);
                $this->match(self::INTRODUCER);
                $this->setState(11569);
                $this->char_set_name();
            }
            $this->setState(11572);
            $this->id_expression();
            $this->setState(11577);
            $this->errorHandler->sync($this);

            $alt = $this->getInterpreter()->adaptivePredict($this->input, 1602, $this->ctx);

            while ($alt !== 2 && $alt !== ATN::INVALID_ALT_NUMBER) {
                if ($alt === 1) {
                    $this->setState(11573);
                    $this->match(self::PERIOD);
                    $this->setState(11574);
                    $this->id_expression();
                }

                $this->setState(11579);
                $this->errorHandler->sync($this);

                $alt = $this->getInterpreter()->adaptivePredict($this->input, 1602, $this->ctx);
            }
            $this->setState(11582);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1603, $this->ctx)) {
                case 1:
                    $this->setState(11580);
                    $this->match(self::AT_SIGN);
                    $this->setState(11581);
                    $this->link_name();
                    break;
            }
            $this->setState(11585);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1604, $this->ctx)) {
                case 1:
                    $this->setState(11584);
                    $this->function_argument();
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function table_element(): Context\Table_elementContext
    {
        $localContext = new Context\Table_elementContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1472, self::RULE_table_element);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(11589);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::INTRODUCER) {
                $this->setState(11587);
                $this->match(self::INTRODUCER);
                $this->setState(11588);
                $this->char_set_name();
            }
            $this->setState(11591);
            $this->id_expression();
            $this->setState(11596);
            $this->errorHandler->sync($this);

            $_la = $this->input->LA(1);
            while ($_la === self::PERIOD) {
                $this->setState(11592);
                $this->match(self::PERIOD);
                $this->setState(11593);
                $this->id_expression();
                $this->setState(11598);
                $this->errorHandler->sync($this);
                $_la = $this->input->LA(1);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function object_privilege(): Context\Object_privilegeContext
    {
        $localContext = new Context\Object_privilegeContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1474, self::RULE_object_privilege);

        try {
            $this->setState(11631);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::ALL:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11599);
                    $this->match(self::ALL);
                    $this->setState(11601);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1607, $this->ctx)) {
                        case 1:
                            $this->setState(11600);
                            $this->match(self::PRIVILEGES);
                            break;
                    }
                    break;

                case self::ALTER:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11603);
                    $this->match(self::ALTER);
                    break;

                case self::DEBUG:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(11604);
                    $this->match(self::DEBUG);
                    break;

                case self::DELETE:
                    $this->enterOuterAlt($localContext, 4);
                    $this->setState(11605);
                    $this->match(self::DELETE);
                    break;

                case self::EXECUTE:
                    $this->enterOuterAlt($localContext, 5);
                    $this->setState(11606);
                    $this->match(self::EXECUTE);
                    break;

                case self::FLASHBACK:
                    $this->enterOuterAlt($localContext, 6);
                    $this->setState(11607);
                    $this->match(self::FLASHBACK);
                    $this->setState(11608);
                    $this->match(self::ARCHIVE);
                    break;

                case self::INDEX:
                    $this->enterOuterAlt($localContext, 7);
                    $this->setState(11609);
                    $this->match(self::INDEX);
                    break;

                case self::INHERIT:
                    $this->enterOuterAlt($localContext, 8);
                    $this->setState(11610);
                    $this->match(self::INHERIT);
                    $this->setState(11611);
                    $this->match(self::PRIVILEGES);
                    break;

                case self::INSERT:
                    $this->enterOuterAlt($localContext, 9);
                    $this->setState(11612);
                    $this->match(self::INSERT);
                    break;

                case self::KEEP:
                    $this->enterOuterAlt($localContext, 10);
                    $this->setState(11613);
                    $this->match(self::KEEP);
                    $this->setState(11614);
                    $this->match(self::SEQUENCE);
                    break;

                case self::MERGE:
                    $this->enterOuterAlt($localContext, 11);
                    $this->setState(11615);
                    $this->match(self::MERGE);
                    $this->setState(11616);
                    $this->match(self::VIEW);
                    break;

                case self::ON:
                    $this->enterOuterAlt($localContext, 12);
                    $this->setState(11617);
                    $this->match(self::ON);
                    $this->setState(11618);
                    $this->match(self::COMMIT);
                    $this->setState(11619);
                    $this->match(self::REFRESH);
                    break;

                case self::QUERY:
                    $this->enterOuterAlt($localContext, 13);
                    $this->setState(11620);
                    $this->match(self::QUERY);
                    $this->setState(11621);
                    $this->match(self::REWRITE);
                    break;

                case self::READ:
                    $this->enterOuterAlt($localContext, 14);
                    $this->setState(11622);
                    $this->match(self::READ);
                    break;

                case self::REFERENCES:
                    $this->enterOuterAlt($localContext, 15);
                    $this->setState(11623);
                    $this->match(self::REFERENCES);
                    break;

                case self::SELECT:
                    $this->enterOuterAlt($localContext, 16);
                    $this->setState(11624);
                    $this->match(self::SELECT);
                    break;

                case self::TRANSLATE:
                    $this->enterOuterAlt($localContext, 17);
                    $this->setState(11625);
                    $this->match(self::TRANSLATE);
                    $this->setState(11626);
                    $this->match(self::SQL);
                    break;

                case self::UNDER:
                    $this->enterOuterAlt($localContext, 18);
                    $this->setState(11627);
                    $this->match(self::UNDER);
                    break;

                case self::UPDATE:
                    $this->enterOuterAlt($localContext, 19);
                    $this->setState(11628);
                    $this->match(self::UPDATE);
                    break;

                case self::USE:
                    $this->enterOuterAlt($localContext, 20);
                    $this->setState(11629);
                    $this->match(self::USE);
                    break;

                case self::WRITE:
                    $this->enterOuterAlt($localContext, 21);
                    $this->setState(11630);
                    $this->match(self::WRITE);
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function system_privilege(): Context\System_privilegeContext
    {
        $localContext = new Context\System_privilegeContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1476, self::RULE_system_privilege);

        try {
            $this->setState(11959);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1635, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11633);
                    $this->match(self::ALL);
                    $this->setState(11634);
                    $this->match(self::PRIVILEGES);
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11635);
                    $this->match(self::ADVISOR);
                    break;

                case 3:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(11636);
                    $this->match(self::ADMINISTER);
                    $this->setState(11638);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11637);
                        $this->match(self::ANY);
                    }
                    $this->setState(11640);
                    $this->match(self::SQL);
                    $this->setState(11641);
                    $this->match(self::TUNING);
                    $this->setState(11642);
                    $this->match(self::SET);
                    break;

                case 4:
                    $this->enterOuterAlt($localContext, 4);
                    $this->setState(11643);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11644);
                    $this->match(self::ANY);
                    $this->setState(11645);
                    $this->match(self::SQL);
                    $this->setState(11646);
                    $this->match(self::PROFILE);
                    break;

                case 5:
                    $this->enterOuterAlt($localContext, 5);
                    $this->setState(11647);
                    $this->match(self::ADMINISTER);
                    $this->setState(11648);
                    $this->match(self::SQL);
                    $this->setState(11649);
                    $this->match(self::MANAGEMENT);
                    $this->setState(11650);
                    $this->match(self::OBJECT);
                    break;

                case 6:
                    $this->enterOuterAlt($localContext, 6);
                    $this->setState(11651);
                    $this->match(self::CREATE);
                    $this->setState(11653);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11652);
                        $this->match(self::ANY);
                    }
                    $this->setState(11655);
                    $this->match(self::CLUSTER);
                    break;

                case 7:
                    $this->enterOuterAlt($localContext, 7);
                    $this->setState(11656);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11657);
                    $this->match(self::ANY);
                    $this->setState(11658);
                    $this->match(self::CLUSTER);
                    break;

                case 8:
                    $this->enterOuterAlt($localContext, 8);
                    $this->setState(11659);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11660);
                    $this->match(self::ANY);
                    $this->setState(11661);
                    $this->match(self::CONTEXT);
                    break;

                case 9:
                    $this->enterOuterAlt($localContext, 9);
                    $this->setState(11662);
                    $this->match(self::EXEMPT);
                    $this->setState(11663);
                    $this->match(self::REDACTION);
                    $this->setState(11664);
                    $this->match(self::POLICY);
                    break;

                case 10:
                    $this->enterOuterAlt($localContext, 10);
                    $this->setState(11665);
                    $this->match(self::ALTER);
                    $this->setState(11666);
                    $this->match(self::DATABASE);
                    break;

                case 11:
                    $this->enterOuterAlt($localContext, 11);
                    $this->setState(11667);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11669);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::PUBLIC) {
                        $this->setState(11668);
                        $this->match(self::PUBLIC);
                    }
                    $this->setState(11671);
                    $this->match(self::DATABASE);
                    $this->setState(11672);
                    $this->match(self::LINK);
                    break;

                case 12:
                    $this->enterOuterAlt($localContext, 12);
                    $this->setState(11673);
                    $this->match(self::DROP);
                    $this->setState(11674);
                    $this->match(self::PUBLIC);
                    $this->setState(11675);
                    $this->match(self::DATABASE);
                    $this->setState(11676);
                    $this->match(self::LINK);
                    break;

                case 13:
                    $this->enterOuterAlt($localContext, 13);
                    $this->setState(11677);
                    $this->match(self::DEBUG);
                    $this->setState(11678);
                    $this->match(self::CONNECT);
                    $this->setState(11679);
                    $this->match(self::SESSION);
                    break;

                case 14:
                    $this->enterOuterAlt($localContext, 14);
                    $this->setState(11680);
                    $this->match(self::DEBUG);
                    $this->setState(11681);
                    $this->match(self::ANY);
                    $this->setState(11682);
                    $this->match(self::PROCEDURE);
                    break;

                case 15:
                    $this->enterOuterAlt($localContext, 15);
                    $this->setState(11683);
                    $this->match(self::ANALYZE);
                    $this->setState(11684);
                    $this->match(self::ANY);
                    $this->setState(11685);
                    $this->match(self::DICTIONARY);
                    break;

                case 16:
                    $this->enterOuterAlt($localContext, 16);
                    $this->setState(11686);
                    $this->match(self::CREATE);
                    $this->setState(11688);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11687);
                        $this->match(self::ANY);
                    }
                    $this->setState(11690);
                    $this->match(self::DIMENSION);
                    break;

                case 17:
                    $this->enterOuterAlt($localContext, 17);
                    $this->setState(11691);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11692);
                    $this->match(self::ANY);
                    $this->setState(11693);
                    $this->match(self::DIMENSION);
                    break;

                case 18:
                    $this->enterOuterAlt($localContext, 18);
                    $this->setState(11694);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11695);
                    $this->match(self::ANY);
                    $this->setState(11696);
                    $this->match(self::DIRECTORY);
                    break;

                case 19:
                    $this->enterOuterAlt($localContext, 19);
                    $this->setState(11697);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11698);
                    $this->match(self::ANY);
                    $this->setState(11699);
                    $this->match(self::EDITION);
                    break;

                case 20:
                    $this->enterOuterAlt($localContext, 20);
                    $this->setState(11700);
                    $this->match(self::FLASHBACK);
                    $this->setState(11705);
                    $this->errorHandler->sync($this);

                    switch ($this->input->LA(1)) {
                        case self::ARCHIVE:
                            $this->setState(11701);
                            $this->match(self::ARCHIVE);
                            $this->setState(11702);
                            $this->match(self::ADMINISTER);
                            break;

                        case self::ANY:
                            $this->setState(11703);
                            $this->match(self::ANY);
                            $this->setState(11704);
                            $this->match(self::TABLE);
                            break;

                        default:
                            throw new NoViableAltException($this);
                    }
                    break;

                case 21:
                    $this->enterOuterAlt($localContext, 21);
                    $this->setState(11707);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11708);
                    $this->match(self::ANY);
                    $this->setState(11709);
                    $this->match(self::INDEX);
                    break;

                case 22:
                    $this->enterOuterAlt($localContext, 22);
                    $this->setState(11710);
                    $this->match(self::CREATE);
                    $this->setState(11712);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11711);
                        $this->match(self::ANY);
                    }
                    $this->setState(11714);
                    $this->match(self::INDEXTYPE);
                    break;

                case 23:
                    $this->enterOuterAlt($localContext, 23);
                    $this->setState(11715);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::EXECUTE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11716);
                    $this->match(self::ANY);
                    $this->setState(11717);
                    $this->match(self::INDEXTYPE);
                    break;

                case 24:
                    $this->enterOuterAlt($localContext, 24);
                    $this->setState(11718);
                    $this->match(self::CREATE);
                    $this->setState(11720);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY || $_la === self::EXTERNAL) {
                        $this->setState(11719);

                        $_la = $this->input->LA(1);

                        if (!($_la === self::ANY || $_la === self::EXTERNAL)) {
                            $this->errorHandler->recoverInline($this);
                        } else {
                            if ($this->input->LA(1) === Token::EOF) {
                                $this->matchedEOF = true;
                            }

                            $this->errorHandler->reportMatch($this);
                            $this->consume();
                        }
                    }
                    $this->setState(11722);
                    $this->match(self::JOB);
                    break;

                case 25:
                    $this->enterOuterAlt($localContext, 25);
                    $this->setState(11723);
                    $this->match(self::EXECUTE);
                    $this->setState(11724);
                    $this->match(self::ANY);
                    $this->setState(11725);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::CLASS || $_la === self::PROGRAM)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    break;

                case 26:
                    $this->enterOuterAlt($localContext, 26);
                    $this->setState(11726);
                    $this->match(self::MANAGE);
                    $this->setState(11727);
                    $this->match(self::SCHEDULER);
                    break;

                case 27:
                    $this->enterOuterAlt($localContext, 27);
                    $this->setState(11728);
                    $this->match(self::ADMINISTER);
                    $this->setState(11729);
                    $this->match(self::KEY);
                    $this->setState(11730);
                    $this->match(self::MANAGEMENT);
                    break;

                case 28:
                    $this->enterOuterAlt($localContext, 28);
                    $this->setState(11731);
                    $this->match(self::CREATE);
                    $this->setState(11733);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11732);
                        $this->match(self::ANY);
                    }
                    $this->setState(11735);
                    $this->match(self::LIBRARY);
                    break;

                case 29:
                    $this->enterOuterAlt($localContext, 29);
                    $this->setState(11736);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::EXECUTE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11737);
                    $this->match(self::ANY);
                    $this->setState(11738);
                    $this->match(self::LIBRARY);
                    break;

                case 30:
                    $this->enterOuterAlt($localContext, 30);
                    $this->setState(11739);
                    $this->match(self::LOGMINING);
                    break;

                case 31:
                    $this->enterOuterAlt($localContext, 31);
                    $this->setState(11740);
                    $this->match(self::CREATE);
                    $this->setState(11742);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11741);
                        $this->match(self::ANY);
                    }
                    $this->setState(11744);
                    $this->match(self::MATERIALIZED);
                    $this->setState(11745);
                    $this->match(self::VIEW);
                    break;

                case 32:
                    $this->enterOuterAlt($localContext, 32);
                    $this->setState(11746);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11747);
                    $this->match(self::ANY);
                    $this->setState(11748);
                    $this->match(self::MATERIALIZED);
                    $this->setState(11749);
                    $this->match(self::VIEW);
                    break;

                case 33:
                    $this->enterOuterAlt($localContext, 33);
                    $this->setState(11751);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::GLOBAL) {
                        $this->setState(11750);
                        $this->match(self::GLOBAL);
                    }
                    $this->setState(11753);
                    $this->match(self::QUERY);
                    $this->setState(11754);
                    $this->match(self::REWRITE);
                    break;

                case 34:
                    $this->enterOuterAlt($localContext, 34);
                    $this->setState(11755);
                    $this->match(self::ON);
                    $this->setState(11756);
                    $this->match(self::COMMIT);
                    $this->setState(11757);
                    $this->match(self::REFRESH);
                    break;

                case 35:
                    $this->enterOuterAlt($localContext, 35);
                    $this->setState(11758);
                    $this->match(self::CREATE);
                    $this->setState(11760);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11759);
                        $this->match(self::ANY);
                    }
                    $this->setState(11762);
                    $this->match(self::MINING);
                    $this->setState(11763);
                    $this->match(self::MODEL);
                    break;

                case 36:
                    $this->enterOuterAlt($localContext, 36);
                    $this->setState(11764);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::COMMENT || $_la === self::DROP || $_la === self::SELECT)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11765);
                    $this->match(self::ANY);
                    $this->setState(11766);
                    $this->match(self::MINING);
                    $this->setState(11767);
                    $this->match(self::MODEL);
                    break;

                case 37:
                    $this->enterOuterAlt($localContext, 37);
                    $this->setState(11768);
                    $this->match(self::CREATE);
                    $this->setState(11770);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11769);
                        $this->match(self::ANY);
                    }
                    $this->setState(11772);
                    $this->match(self::CUBE);
                    break;

                case 38:
                    $this->enterOuterAlt($localContext, 38);
                    $this->setState(11773);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::SELECT || $_la === self::UPDATE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11774);
                    $this->match(self::ANY);
                    $this->setState(11775);
                    $this->match(self::CUBE);
                    break;

                case 39:
                    $this->enterOuterAlt($localContext, 39);
                    $this->setState(11776);
                    $this->match(self::CREATE);
                    $this->setState(11778);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11777);
                        $this->match(self::ANY);
                    }
                    $this->setState(11780);
                    $this->match(self::MEASURE);
                    $this->setState(11781);
                    $this->match(self::FOLDER);
                    break;

                case 40:
                    $this->enterOuterAlt($localContext, 40);
                    $this->setState(11782);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::DELETE || $_la === self::DROP || $_la === self::INSERT)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11783);
                    $this->match(self::ANY);
                    $this->setState(11784);
                    $this->match(self::MEASURE);
                    $this->setState(11785);
                    $this->match(self::FOLDER);
                    break;

                case 41:
                    $this->enterOuterAlt($localContext, 41);
                    $this->setState(11786);
                    $this->match(self::CREATE);
                    $this->setState(11788);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11787);
                        $this->match(self::ANY);
                    }
                    $this->setState(11790);
                    $this->match(self::CUBE);
                    $this->setState(11791);
                    $this->match(self::DIMENSION);
                    break;

                case 42:
                    $this->enterOuterAlt($localContext, 42);
                    $this->setState(11792);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DELETE || $_la === self::DROP || $_la === self::INSERT || $_la === self::SELECT || $_la === self::UPDATE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11793);
                    $this->match(self::ANY);
                    $this->setState(11794);
                    $this->match(self::CUBE);
                    $this->setState(11795);
                    $this->match(self::DIMENSION);
                    break;

                case 43:
                    $this->enterOuterAlt($localContext, 43);
                    $this->setState(11796);
                    $this->match(self::CREATE);
                    $this->setState(11798);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11797);
                        $this->match(self::ANY);
                    }
                    $this->setState(11800);
                    $this->match(self::CUBE);
                    $this->setState(11801);
                    $this->match(self::BUILD);
                    $this->setState(11802);
                    $this->match(self::PROCESS);
                    break;

                case 44:
                    $this->enterOuterAlt($localContext, 44);
                    $this->setState(11803);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::DROP || $_la === self::UPDATE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11804);
                    $this->match(self::ANY);
                    $this->setState(11805);
                    $this->match(self::CUBE);
                    $this->setState(11806);
                    $this->match(self::BUILD);
                    $this->setState(11807);
                    $this->match(self::PROCESS);
                    break;

                case 45:
                    $this->enterOuterAlt($localContext, 45);
                    $this->setState(11808);
                    $this->match(self::CREATE);
                    $this->setState(11810);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11809);
                        $this->match(self::ANY);
                    }
                    $this->setState(11812);
                    $this->match(self::OPERATOR);
                    break;

                case 46:
                    $this->enterOuterAlt($localContext, 46);
                    $this->setState(11813);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::EXECUTE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11814);
                    $this->match(self::ANY);
                    $this->setState(11815);
                    $this->match(self::OPERATOR);
                    break;

                case 47:
                    $this->enterOuterAlt($localContext, 47);
                    $this->setState(11816);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11817);
                    $this->match(self::ANY);
                    $this->setState(11818);
                    $this->match(self::OUTLINE);
                    break;

                case 48:
                    $this->enterOuterAlt($localContext, 48);
                    $this->setState(11819);
                    $this->match(self::CREATE);
                    $this->setState(11820);
                    $this->match(self::PLUGGABLE);
                    $this->setState(11821);
                    $this->match(self::DATABASE);
                    break;

                case 49:
                    $this->enterOuterAlt($localContext, 49);
                    $this->setState(11822);
                    $this->match(self::SET);
                    $this->setState(11823);
                    $this->match(self::CONTAINER);
                    break;

                case 50:
                    $this->enterOuterAlt($localContext, 50);
                    $this->setState(11824);
                    $this->match(self::CREATE);
                    $this->setState(11826);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11825);
                        $this->match(self::ANY);
                    }
                    $this->setState(11828);
                    $this->match(self::PROCEDURE);
                    break;

                case 51:
                    $this->enterOuterAlt($localContext, 51);
                    $this->setState(11829);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::EXECUTE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11830);
                    $this->match(self::ANY);
                    $this->setState(11831);
                    $this->match(self::PROCEDURE);
                    break;

                case 52:
                    $this->enterOuterAlt($localContext, 52);
                    $this->setState(11832);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11833);
                    $this->match(self::PROFILE);
                    break;

                case 53:
                    $this->enterOuterAlt($localContext, 53);
                    $this->setState(11834);
                    $this->match(self::CREATE);
                    $this->setState(11835);
                    $this->match(self::ROLE);
                    break;

                case 54:
                    $this->enterOuterAlt($localContext, 54);
                    $this->setState(11836);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::GRANT)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11837);
                    $this->match(self::ANY);
                    $this->setState(11838);
                    $this->match(self::ROLE);
                    break;

                case 55:
                    $this->enterOuterAlt($localContext, 55);
                    $this->setState(11839);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11840);
                    $this->match(self::ROLLBACK);
                    $this->setState(11841);
                    $this->match(self::SEGMENT);
                    break;

                case 56:
                    $this->enterOuterAlt($localContext, 56);
                    $this->setState(11842);
                    $this->match(self::CREATE);
                    $this->setState(11844);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11843);
                        $this->match(self::ANY);
                    }
                    $this->setState(11846);
                    $this->match(self::SEQUENCE);
                    break;

                case 57:
                    $this->enterOuterAlt($localContext, 57);
                    $this->setState(11847);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::SELECT)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11848);
                    $this->match(self::ANY);
                    $this->setState(11849);
                    $this->match(self::SEQUENCE);
                    break;

                case 58:
                    $this->enterOuterAlt($localContext, 58);
                    $this->setState(11850);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::RESTRICTED)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11851);
                    $this->match(self::SESSION);
                    break;

                case 59:
                    $this->enterOuterAlt($localContext, 59);
                    $this->setState(11852);
                    $this->match(self::ALTER);
                    $this->setState(11853);
                    $this->match(self::RESOURCE);
                    $this->setState(11854);
                    $this->match(self::COST);
                    break;

                case 60:
                    $this->enterOuterAlt($localContext, 60);
                    $this->setState(11855);
                    $this->match(self::CREATE);
                    $this->setState(11857);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11856);
                        $this->match(self::ANY);
                    }
                    $this->setState(11859);
                    $this->match(self::SQL);
                    $this->setState(11860);
                    $this->match(self::TRANSLATION);
                    $this->setState(11861);
                    $this->match(self::PROFILE);
                    break;

                case 61:
                    $this->enterOuterAlt($localContext, 61);
                    $this->setState(11862);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::USE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11863);
                    $this->match(self::ANY);
                    $this->setState(11864);
                    $this->match(self::SQL);
                    $this->setState(11865);
                    $this->match(self::TRANSLATION);
                    $this->setState(11866);
                    $this->match(self::PROFILE);
                    break;

                case 62:
                    $this->enterOuterAlt($localContext, 62);
                    $this->setState(11867);
                    $this->match(self::TRANSLATE);
                    $this->setState(11868);
                    $this->match(self::ANY);
                    $this->setState(11869);
                    $this->match(self::SQL);
                    break;

                case 63:
                    $this->enterOuterAlt($localContext, 63);
                    $this->setState(11870);
                    $this->match(self::CREATE);
                    $this->setState(11872);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11871);
                        $this->match(self::ANY);
                    }
                    $this->setState(11874);
                    $this->match(self::SYNONYM);
                    break;

                case 64:
                    $this->enterOuterAlt($localContext, 64);
                    $this->setState(11875);
                    $this->match(self::DROP);
                    $this->setState(11876);
                    $this->match(self::ANY);
                    $this->setState(11877);
                    $this->match(self::SYNONYM);
                    break;

                case 65:
                    $this->enterOuterAlt($localContext, 65);
                    $this->setState(11878);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11879);
                    $this->match(self::PUBLIC);
                    $this->setState(11880);
                    $this->match(self::SYNONYM);
                    break;

                case 66:
                    $this->enterOuterAlt($localContext, 66);
                    $this->setState(11881);
                    $this->match(self::CREATE);
                    $this->setState(11883);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11882);
                        $this->match(self::ANY);
                    }
                    $this->setState(11885);
                    $this->match(self::TABLE);
                    break;

                case 67:
                    $this->enterOuterAlt($localContext, 67);
                    $this->setState(11886);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::BACKUP || $_la === self::COMMENT || $_la === self::DELETE || $_la === self::DROP || $_la === self::INSERT || $_la === self::LOCK || $_la === self::READ || $_la === self::SELECT || $_la === self::UPDATE)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11887);
                    $this->match(self::ANY);
                    $this->setState(11888);
                    $this->match(self::TABLE);
                    break;

                case 68:
                    $this->enterOuterAlt($localContext, 68);
                    $this->setState(11889);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::DROP || $_la === self::MANAGE || $_la === self::UNLIMITED)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11890);
                    $this->match(self::TABLESPACE);
                    break;

                case 69:
                    $this->enterOuterAlt($localContext, 69);
                    $this->setState(11891);
                    $this->match(self::CREATE);
                    $this->setState(11893);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11892);
                        $this->match(self::ANY);
                    }
                    $this->setState(11895);
                    $this->match(self::TRIGGER);
                    break;

                case 70:
                    $this->enterOuterAlt($localContext, 70);
                    $this->setState(11896);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11897);
                    $this->match(self::ANY);
                    $this->setState(11898);
                    $this->match(self::TRIGGER);
                    break;

                case 71:
                    $this->enterOuterAlt($localContext, 71);
                    $this->setState(11899);
                    $this->match(self::ADMINISTER);
                    $this->setState(11900);
                    $this->match(self::DATABASE);
                    $this->setState(11901);
                    $this->match(self::TRIGGER);
                    break;

                case 72:
                    $this->enterOuterAlt($localContext, 72);
                    $this->setState(11902);
                    $this->match(self::CREATE);
                    $this->setState(11904);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11903);
                        $this->match(self::ANY);
                    }
                    $this->setState(11906);
                    $this->match(self::TYPE);
                    break;

                case 73:
                    $this->enterOuterAlt($localContext, 73);
                    $this->setState(11907);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::DROP || $_la === self::EXECUTE || $_la === self::UNDER)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11908);
                    $this->match(self::ANY);
                    $this->setState(11909);
                    $this->match(self::TYPE);
                    break;

                case 74:
                    $this->enterOuterAlt($localContext, 74);
                    $this->setState(11910);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ALTER || $_la === self::CREATE || $_la === self::DROP)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11911);
                    $this->match(self::USER);
                    break;

                case 75:
                    $this->enterOuterAlt($localContext, 75);
                    $this->setState(11912);
                    $this->match(self::CREATE);
                    $this->setState(11914);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11913);
                        $this->match(self::ANY);
                    }
                    $this->setState(11916);
                    $this->match(self::VIEW);
                    break;

                case 76:
                    $this->enterOuterAlt($localContext, 76);
                    $this->setState(11917);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::DROP || $_la === self::MERGE || $_la === self::UNDER)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11918);
                    $this->match(self::ANY);
                    $this->setState(11919);
                    $this->match(self::VIEW);
                    break;

                case 77:
                    $this->enterOuterAlt($localContext, 77);
                    $this->setState(11920);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::ANALYZE || $_la === self::AUDIT)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11921);
                    $this->match(self::ANY);
                    break;

                case 78:
                    $this->enterOuterAlt($localContext, 78);
                    $this->setState(11922);
                    $this->match(self::BECOME);
                    $this->setState(11923);
                    $this->match(self::USER);
                    break;

                case 79:
                    $this->enterOuterAlt($localContext, 79);
                    $this->setState(11924);
                    $this->match(self::CHANGE);
                    $this->setState(11925);
                    $this->match(self::NOTIFICATION);
                    break;

                case 80:
                    $this->enterOuterAlt($localContext, 80);
                    $this->setState(11926);
                    $this->match(self::EXEMPT);
                    $this->setState(11927);
                    $this->match(self::ACCESS);
                    $this->setState(11928);
                    $this->match(self::POLICY);
                    break;

                case 81:
                    $this->enterOuterAlt($localContext, 81);
                    $this->setState(11929);
                    $this->match(self::FORCE);
                    $this->setState(11931);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::ANY) {
                        $this->setState(11930);
                        $this->match(self::ANY);
                    }
                    $this->setState(11933);
                    $this->match(self::TRANSACTION);
                    break;

                case 82:
                    $this->enterOuterAlt($localContext, 82);
                    $this->setState(11934);
                    $this->match(self::GRANT);
                    $this->setState(11935);
                    $this->match(self::ANY);
                    $this->setState(11937);
                    $this->errorHandler->sync($this);
                    $_la = $this->input->LA(1);

                    if ($_la === self::OBJECT) {
                        $this->setState(11936);
                        $this->match(self::OBJECT);
                    }
                    $this->setState(11939);
                    $this->match(self::PRIVILEGE);
                    break;

                case 83:
                    $this->enterOuterAlt($localContext, 83);
                    $this->setState(11940);
                    $this->match(self::INHERIT);
                    $this->setState(11941);
                    $this->match(self::ANY);
                    $this->setState(11942);
                    $this->match(self::PRIVILEGES);
                    break;

                case 84:
                    $this->enterOuterAlt($localContext, 84);
                    $this->setState(11943);
                    $this->match(self::KEEP);
                    $this->setState(11944);
                    $this->match(self::DATE);
                    $this->setState(11945);
                    $this->match(self::TIME);
                    break;

                case 85:
                    $this->enterOuterAlt($localContext, 85);
                    $this->setState(11946);
                    $this->match(self::KEEP);
                    $this->setState(11947);
                    $this->match(self::SYSGUID);
                    break;

                case 86:
                    $this->enterOuterAlt($localContext, 86);
                    $this->setState(11948);
                    $this->match(self::PURGE);
                    $this->setState(11949);
                    $this->match(self::DBA_RECYCLEBIN);
                    break;

                case 87:
                    $this->enterOuterAlt($localContext, 87);
                    $this->setState(11950);
                    $this->match(self::RESUMABLE);
                    break;

                case 88:
                    $this->enterOuterAlt($localContext, 88);
                    $this->setState(11951);
                    $this->match(self::SELECT);
                    $this->setState(11952);
                    $this->match(self::ANY);
                    $this->setState(11953);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::DICTIONARY || $_la === self::TRANSACTION)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    break;

                case 89:
                    $this->enterOuterAlt($localContext, 89);
                    $this->setState(11954);
                    $this->match(self::SYSBACKUP);
                    break;

                case 90:
                    $this->enterOuterAlt($localContext, 90);
                    $this->setState(11955);
                    $this->match(self::SYSDBA);
                    break;

                case 91:
                    $this->enterOuterAlt($localContext, 91);
                    $this->setState(11956);
                    $this->match(self::SYSDG);
                    break;

                case 92:
                    $this->enterOuterAlt($localContext, 92);
                    $this->setState(11957);
                    $this->match(self::SYSKM);
                    break;

                case 93:
                    $this->enterOuterAlt($localContext, 93);
                    $this->setState(11958);
                    $this->match(self::SYSOPER);
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function constant(): Context\ConstantContext
    {
        $localContext = new Context\ConstantContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1478, self::RULE_constant);

        try {
            $this->setState(12023);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1647, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(11961);
                    $this->match(self::TIMESTAMP);
                    $this->setState(11964);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1636, $this->ctx)) {
                        case 1:
                            $this->setState(11962);
                            $this->quoted_string();
                            break;

                        case 2:
                            $this->setState(11963);
                            $this->bind_variable();
                            break;
                    }
                    $this->setState(11970);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1637, $this->ctx)) {
                        case 1:
                            $this->setState(11966);
                            $this->match(self::AT);
                            $this->setState(11967);
                            $this->match(self::TIME);
                            $this->setState(11968);
                            $this->match(self::ZONE);
                            $this->setState(11969);
                            $this->quoted_string();
                            break;
                    }
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(11972);
                    $this->match(self::INTERVAL);
                    $this->setState(11976);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1638, $this->ctx)) {
                        case 1:
                            $this->setState(11973);
                            $this->quoted_string();
                            break;

                        case 2:
                            $this->setState(11974);
                            $this->bind_variable();
                            break;

                        case 3:
                            $this->setState(11975);
                            $this->general_element_part();
                            break;
                    }
                    $this->setState(11978);

                    $_la = $this->input->LA(1);

                    if (!($_la === self::DAY || $_la === self::HOUR || $_la === self::MINUTE || $_la === self::MONTH || $_la === self::SECOND || $_la === self::YEAR)) {
                        $this->errorHandler->recoverInline($this);
                    } else {
                        if ($this->input->LA(1) === Token::EOF) {
                            $this->matchedEOF = true;
                        }

                        $this->errorHandler->reportMatch($this);
                        $this->consume();
                    }
                    $this->setState(11992);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1642, $this->ctx)) {
                        case 1:
                            $this->setState(11979);
                            $this->match(self::LEFT_PAREN);
                            $this->setState(11982);
                            $this->errorHandler->sync($this);

                            switch ($this->input->LA(1)) {
                                case self::UNSIGNED_INTEGER:
                                    $this->setState(11980);
                                    $this->match(self::UNSIGNED_INTEGER);
                                    break;

                                case self::BINDVAR:
                                case self::COLON:
                                    $this->setState(11981);
                                    $this->bind_variable();
                                    break;

                                default:
                                    throw new NoViableAltException($this);
                            }
                            $this->setState(11989);
                            $this->errorHandler->sync($this);
                            $_la = $this->input->LA(1);

                            if ($_la === self::COMMA) {
                                $this->setState(11984);
                                $this->match(self::COMMA);
                                $this->setState(11987);
                                $this->errorHandler->sync($this);

                                switch ($this->input->LA(1)) {
                                    case self::UNSIGNED_INTEGER:
                                        $this->setState(11985);
                                        $this->match(self::UNSIGNED_INTEGER);
                                        break;

                                    case self::BINDVAR:
                                    case self::COLON:
                                        $this->setState(11986);
                                        $this->bind_variable();
                                        break;

                                    default:
                                        throw new NoViableAltException($this);
                                }
                            }
                            $this->setState(11991);
                            $this->match(self::RIGHT_PAREN);
                            break;
                    }
                    $this->setState(12009);
                    $this->errorHandler->sync($this);

                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1646, $this->ctx)) {
                        case 1:
                            $this->setState(11994);
                            $this->match(self::TO);
                            $this->setState(12007);
                            $this->errorHandler->sync($this);

                            switch ($this->input->LA(1)) {
                                case self::DAY:
                                    $this->setState(11995);
                                    $this->match(self::DAY);
                                    break;

                                case self::HOUR:
                                    $this->setState(11996);
                                    $this->match(self::HOUR);
                                    break;

                                case self::MINUTE:
                                    $this->setState(11997);
                                    $this->match(self::MINUTE);
                                    break;

                                case self::SECOND:
                                    $this->setState(11998);
                                    $this->match(self::SECOND);
                                    $this->setState(12005);
                                    $this->errorHandler->sync($this);

                                    switch ($this->getInterpreter()->adaptivePredict($this->input, 1644, $this->ctx)) {
                                        case 1:
                                            $this->setState(11999);
                                            $this->match(self::LEFT_PAREN);
                                            $this->setState(12002);
                                            $this->errorHandler->sync($this);

                                            switch ($this->input->LA(1)) {
                                                case self::UNSIGNED_INTEGER:
                                                    $this->setState(12000);
                                                    $this->match(self::UNSIGNED_INTEGER);
                                                    break;

                                                case self::BINDVAR:
                                                case self::COLON:
                                                    $this->setState(12001);
                                                    $this->bind_variable();
                                                    break;

                                                default:
                                                    throw new NoViableAltException($this);
                                            }
                                            $this->setState(12004);
                                            $this->match(self::RIGHT_PAREN);
                                            break;
                                    }
                                    break;

                                default:
                                    throw new NoViableAltException($this);
                            }
                            break;
                    }
                    break;

                case 3:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(12011);
                    $this->numeric();
                    break;

                case 4:
                    $this->enterOuterAlt($localContext, 4);
                    $this->setState(12012);
                    $this->match(self::DATE);
                    $this->setState(12013);
                    $this->quoted_string();
                    break;

                case 5:
                    $this->enterOuterAlt($localContext, 5);
                    $this->setState(12014);
                    $this->quoted_string();
                    break;

                case 6:
                    $this->enterOuterAlt($localContext, 6);
                    $this->setState(12015);
                    $this->match(self::NULL_);
                    break;

                case 7:
                    $this->enterOuterAlt($localContext, 7);
                    $this->setState(12016);
                    $this->match(self::TRUE);
                    break;

                case 8:
                    $this->enterOuterAlt($localContext, 8);
                    $this->setState(12017);
                    $this->match(self::FALSE);
                    break;

                case 9:
                    $this->enterOuterAlt($localContext, 9);
                    $this->setState(12018);
                    $this->match(self::DBTIMEZONE);
                    break;

                case 10:
                    $this->enterOuterAlt($localContext, 10);
                    $this->setState(12019);
                    $this->match(self::SESSIONTIMEZONE);
                    break;

                case 11:
                    $this->enterOuterAlt($localContext, 11);
                    $this->setState(12020);
                    $this->match(self::MINVALUE);
                    break;

                case 12:
                    $this->enterOuterAlt($localContext, 12);
                    $this->setState(12021);
                    $this->match(self::MAXVALUE);
                    break;

                case 13:
                    $this->enterOuterAlt($localContext, 13);
                    $this->setState(12022);
                    $this->match(self::DEFAULT);
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function numeric(): Context\NumericContext
    {
        $localContext = new Context\NumericContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1480, self::RULE_numeric);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12025);

            $_la = $this->input->LA(1);

            if (!($_la === self::UNSIGNED_INTEGER || $_la === self::APPROXIMATE_NUM_LIT)) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function numeric_negative(): Context\Numeric_negativeContext
    {
        $localContext = new Context\Numeric_negativeContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1482, self::RULE_numeric_negative);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12027);
            $this->match(self::MINUS_SIGN);
            $this->setState(12028);
            $this->numeric();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function quoted_string(): Context\Quoted_stringContext
    {
        $localContext = new Context\Quoted_stringContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1484, self::RULE_quoted_string);

        try {
            $this->setState(12033);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::ABORT:
                case self::ABS:
                case self::ACCESS:
                case self::ACCESSED:
                case self::ACCOUNT:
                case self::ACL:
                case self::ACOS:
                case self::ACTION:
                case self::ACTIONS:
                case self::ACTIVATE:
                case self::ACTIVE:
                case self::ACTIVE_COMPONENT:
                case self::ACTIVE_DATA:
                case self::ACTIVE_FUNCTION:
                case self::ACTIVE_TAG:
                case self::ACTIVITY:
                case self::ADAPTIVE_PLAN:
                case self::ADD:
                case self::ADD_COLUMN:
                case self::ADD_GROUP:
                case self::ADD_MONTHS:
                case self::ADJ_DATE:
                case self::ADMIN:
                case self::ADMINISTER:
                case self::ADMINISTRATOR:
                case self::ADVANCED:
                case self::ADVISE:
                case self::ADVISOR:
                case self::AFD_DISKSTRING:
                case self::AFTER:
                case self::AGENT:
                case self::AGGREGATE:
                case self::A_LETTER:
                case self::ALIAS:
                case self::ALLOCATE:
                case self::ALLOW:
                case self::ALL_ROWS:
                case self::ALWAYS:
                case self::ANALYZE:
                case self::ANCILLARY:
                case self::AND_EQUAL:
                case self::ANOMALY:
                case self::ANSI_REARCH:
                case self::ANTIJOIN:
                case self::ANYSCHEMA:
                case self::APPEND:
                case self::APPENDCHILDXML:
                case self::APPEND_VALUES:
                case self::APPLICATION:
                case self::APPLY:
                case self::APPROX_COUNT_DISTINCT:
                case self::ARCHIVAL:
                case self::ARCHIVE:
                case self::ARCHIVED:
                case self::ARCHIVELOG:
                case self::ARRAY:
                case self::ASCII:
                case self::ASCIISTR:
                case self::ASIN:
                case self::ASIS:
                case self::ASSEMBLY:
                case self::ASSIGN:
                case self::ASSOCIATE:
                case self::ASYNC:
                case self::ASYNCHRONOUS:
                case self::ATAN2:
                case self::ATAN:
                case self::AT:
                case self::ATTRIBUTE:
                case self::ATTRIBUTES:
                case self::AUTHENTICATED:
                case self::AUTHENTICATION:
                case self::AUTHID:
                case self::AUTHORIZATION:
                case self::AUTOALLOCATE:
                case self::AUTO:
                case self::AUTOEXTEND:
                case self::AUTO_LOGIN:
                case self::AUTOMATIC:
                case self::AUTONOMOUS_TRANSACTION:
                case self::AUTO_REOPTIMIZE:
                case self::AVAILABILITY:
                case self::AVRO:
                case self::BACKGROUND:
                case self::BACKUP:
                case self::BASIC:
                case self::BASICFILE:
                case self::BATCH:
                case self::BATCHSIZE:
                case self::BATCH_TABLE_ACCESS_BY_ROWID:
                case self::BECOME:
                case self::BEFORE:
                case self::BEGIN:
                case self::BEGINNING:
                case self::BEGIN_OUTLINE_DATA:
                case self::BEHALF:
                case self::BEQUEATH:
                case self::BFILE:
                case self::BFILENAME:
                case self::BIGFILE:
                case self::BINARY:
                case self::BINARY_DOUBLE:
                case self::BINARY_DOUBLE_INFINITY:
                case self::BINARY_DOUBLE_NAN:
                case self::BINARY_FLOAT:
                case self::BINARY_FLOAT_INFINITY:
                case self::BINARY_FLOAT_NAN:
                case self::BINARY_INTEGER:
                case self::BIND_AWARE:
                case self::BINDING:
                case self::BIN_TO_NUM:
                case self::BITAND:
                case self::BITMAP_AND:
                case self::BITMAP:
                case self::BITMAPS:
                case self::BITMAP_TREE:
                case self::BITS:
                case self::BLOB:
                case self::BLOCK:
                case self::BLOCK_RANGE:
                case self::BLOCKS:
                case self::BLOCKSIZE:
                case self::BODY:
                case self::BOOLEAN:
                case self::BOTH:
                case self::BOUND:
                case self::BRANCH:
                case self::BREADTH:
                case self::BROADCAST:
                case self::BSON:
                case self::BUFFER:
                case self::BUFFER_CACHE:
                case self::BUFFER_POOL:
                case self::BUILD:
                case self::BULK:
                case self::BYPASS_RECURSIVE_CHECK:
                case self::BYPASS_UJVC:
                case self::BYTE:
                case self::CACHE:
                case self::CACHE_CB:
                case self::CACHE_INSTANCES:
                case self::CACHE_TEMP_TABLE:
                case self::CACHING:
                case self::CALCULATED:
                case self::CALLBACK:
                case self::CALL:
                case self::CANCEL:
                case self::CAPACITY:
                case self::CARDINALITY:
                case self::CASCADE:
                case self::CASE:
                case self::CAST:
                case self::CATEGORY:
                case self::CDBDEFAULT:
                case self::CEIL:
                case self::CELL_FLASH_CACHE:
                case self::CERTIFICATE:
                case self::CFILE:
                case self::CHAINED:
                case self::CHANGE:
                case self::CHANGE_DUPKEY_ERROR_INDEX:
                case self::CHARACTER:
                case self::CHAR:
                case self::CHAR_CS:
                case self::CHARTOROWID:
                case self::CHECK_ACL_REWRITE:
                case self::CHECKPOINT:
                case self::CHILD:
                case self::CHOOSE:
                case self::CHR:
                case self::CHUNK:
                case self::CLASS:
                case self::CLASSIFIER:
                case self::CLEANUP:
                case self::CLEAR:
                case self::C_LETTER:
                case self::CLIENT:
                case self::CLOB:
                case self::CLONE:
                case self::CLOSE_CACHED_OPEN_CURSORS:
                case self::CLOSE:
                case self::CLUSTER_BY_ROWID:
                case self::CLUSTER:
                case self::CLUSTER_DETAILS:
                case self::CLUSTER_DISTANCE:
                case self::CLUSTER_ID:
                case self::CLUSTERING:
                case self::CLUSTERING_FACTOR:
                case self::CLUSTER_PROBABILITY:
                case self::CLUSTER_SET:
                case self::COALESCE:
                case self::COALESCE_SQ:
                case self::COARSE:
                case self::CO_AUTH_IND:
                case self::COLD:
                case self::COLLECT:
                case self::COLUMNAR:
                case self::COLUMN_AUTH_INDICATOR:
                case self::COLUMN:
                case self::COLUMNS:
                case self::COLUMN_STATS:
                case self::COLUMN_VALUE:
                case self::COMMENT:
                case self::COMMIT:
                case self::COMMITTED:
                case self::COMMON_DATA:
                case self::COMPACT:
                case self::COMPATIBILITY:
                case self::COMPILE:
                case self::COMPLETE:
                case self::COMPLIANCE:
                case self::COMPONENT:
                case self::COMPONENTS:
                case self::COMPOSE:
                case self::COMPOSITE:
                case self::COMPOSITE_LIMIT:
                case self::COMPOUND:
                case self::COMPUTE:
                case self::CONCAT:
                case self::CON_DBID_TO_ID:
                case self::CONDITIONAL:
                case self::CONDITION:
                case self::CONFIRM:
                case self::CONFORMING:
                case self::CON_GUID_TO_ID:
                case self::CON_ID:
                case self::CON_NAME_TO_ID:
                case self::CONNECT_BY_CB_WHR_ONLY:
                case self::CONNECT_BY_COMBINE_SW:
                case self::CONNECT_BY_COST_BASED:
                case self::CONNECT_BY_ELIM_DUPS:
                case self::CONNECT_BY_FILTERING:
                case self::CONNECT_BY_ISCYCLE:
                case self::CONNECT_BY_ISLEAF:
                case self::CONNECT_BY_ROOT:
                case self::CONNECT_TIME:
                case self::CONSIDER:
                case self::CONSISTENT:
                case self::CONSTANT:
                case self::CONST:
                case self::CONSTRAINT:
                case self::CONSTRAINTS:
                case self::CONSTRUCTOR:
                case self::CONTAINER:
                case self::CONTAINER_DATA:
                case self::CONTAINERS:
                case self::CONTENT:
                case self::CONTENTS:
                case self::CONTEXT:
                case self::CONTINUE:
                case self::CONTROLFILE:
                case self::CON_UID_TO_ID:
                case self::CONVERT:
                case self::COOKIE:
                case self::COPY:
                case self::CORR_K:
                case self::CORR_S:
                case self::CORRUPTION:
                case self::CORRUPT_XID_ALL:
                case self::CORRUPT_XID:
                case self::COS:
                case self::COSH:
                case self::COST:
                case self::COST_XML_QUERY_REWRITE:
                case self::COUNT:
                case self::COVAR_POP:
                case self::COVAR_SAMP:
                case self::CPU_COSTING:
                case self::CPU_PER_CALL:
                case self::CPU_PER_SESSION:
                case self::CRASH:
                case self::CREATE_FILE_DEST:
                case self::CREATE_STORED_OUTLINES:
                case self::CREATION:
                case self::CREDENTIAL:
                case self::CRITICAL:
                case self::CROSS:
                case self::CROSSEDITION:
                case self::CSCONVERT:
                case self::CUBE_AJ:
                case self::CUBE:
                case self::CUBE_GB:
                case self::CUBE_SJ:
                case self::CUME_DISTM:
                case self::CURRENT:
                case self::CURRENT_DATE:
                case self::CURRENT_SCHEMA:
                case self::CURRENT_TIME:
                case self::CURRENT_TIMESTAMP:
                case self::CURRENT_USER:
                case self::CURRENTV:
                case self::CURSOR:
                case self::CURSOR_SHARING_EXACT:
                case self::CURSOR_SPECIFIC_SEGMENT:
                case self::CUSTOMDATUM:
                case self::CV:
                case self::CYCLE:
                case self::DANGLING:
                case self::DATABASE:
                case self::DATA:
                case self::DATAFILE:
                case self::DATAFILES:
                case self::DATAMOVEMENT:
                case self::DATAOBJNO:
                case self::DATAOBJ_TO_MAT_PARTITION:
                case self::DATAOBJ_TO_PARTITION:
                case self::DATAPUMP:
                case self::DATA_SECURITY_REWRITE_LIMIT:
                case self::DATE_MODE:
                case self::DAY:
                case self::DAYS:
                case self::DBA:
                case self::DBA_RECYCLEBIN:
                case self::DBMS_STATS:
                case self::DB_ROLE_CHANGE:
                case self::DBTIMEZONE:
                case self::DB_UNIQUE_NAME:
                case self::DB_VERSION:
                case self::DDL:
                case self::DEALLOCATE:
                case self::DEBUG:
                case self::DEBUGGER:
                case self::DEC:
                case self::DECIMAL:
                case self::DECLARE:
                case self::DECOMPOSE:
                case self::DECORRELATE:
                case self::DECR:
                case self::DECREMENT:
                case self::DECRYPT:
                case self::DEDUPLICATE:
                case self::DEFAULTS:
                case self::DEFERRABLE:
                case self::DEFERRED:
                case self::DEFINED:
                case self::DEFINE:
                case self::DEFINER:
                case self::DEGREE:
                case self::DELAY:
                case self::DELEGATE:
                case self::DELETE_ALL:
                case self::DELETE:
                case self::DELETEXML:
                case self::DEMAND:
                case self::DENSE_RANKM:
                case self::DEPENDENT:
                case self::DEPTH:
                case self::DEQUEUE:
                case self::DEREF:
                case self::DEREF_NO_REWRITE:
                case self::DESTROY:
                case self::DETACHED:
                case self::DETERMINES:
                case self::DETERMINISTIC:
                case self::DICTIONARY:
                case self::DIMENSION:
                case self::DIMENSIONS:
                case self::DIRECT_LOAD:
                case self::DIRECTORY:
                case self::DIRECT_PATH:
                case self::DISABLE_ALL:
                case self::DISABLE:
                case self::DISABLE_PARALLEL_DML:
                case self::DISABLE_PRESET:
                case self::DISABLE_RPKE:
                case self::DISALLOW:
                case self::DISASSOCIATE:
                case self::DISCARD:
                case self::DISCONNECT:
                case self::DISK:
                case self::DISKGROUP:
                case self::DISKS:
                case self::DISMOUNT:
                case self::DISTINGUISHED:
                case self::DISTRIBUTED:
                case self::DISTRIBUTE:
                case self::DML:
                case self::DML_UPDATE:
                case self::DOCFIDELITY:
                case self::DOCUMENT:
                case self::DOMAIN_INDEX_FILTER:
                case self::DOMAIN_INDEX_NO_SORT:
                case self::DOMAIN_INDEX_SORT:
                case self::DOUBLE:
                case self::DOWNGRADE:
                case self::DRIVING_SITE:
                case self::DROP_COLUMN:
                case self::DROP_GROUP:
                case self::DSINTERVAL_UNCONSTRAINED:
                case self::DST_UPGRADE_INSERT_CONV:
                case self::DUMP:
                case self::DUPLICATE:
                case self::DV:
                case self::DYNAMIC:
                case self::DYNAMIC_SAMPLING:
                case self::DYNAMIC_SAMPLING_EST_CDN:
                case self::EACH:
                case self::EDITIONABLE:
                case self::EDITION:
                case self::EDITIONING:
                case self::EDITIONS:
                case self::ELEMENT:
                case self::ELIM_GROUPBY:
                case self::ELIMINATE_JOIN:
                case self::ELIMINATE_OBY:
                case self::ELIMINATE_OUTER_JOIN:
                case self::EM:
                case self::EMPTY_BLOB:
                case self::EMPTY_CLOB:
                case self::EMPTY:
                case self::ENABLE_ALL:
                case self::ENABLE:
                case self::ENABLE_PARALLEL_DML:
                case self::ENABLE_PRESET:
                case self::ENCODING:
                case self::ENCRYPT:
                case self::ENCRYPTION:
                case self::END_OUTLINE_DATA:
                case self::ENFORCED:
                case self::ENFORCE:
                case self::ENQUEUE:
                case self::ENTERPRISE:
                case self::ENTITYESCAPING:
                case self::ENTRY:
                case self::EQUIPART:
                case self::ERR:
                case self::ERROR_ARGUMENT:
                case self::ERROR:
                case self::ERROR_ON_OVERLAP_TIME:
                case self::ERRORS:
                case self::ESCAPE:
                case self::ESTIMATE:
                case self::EVAL:
                case self::EVALNAME:
                case self::EVALUATE:
                case self::EVALUATION:
                case self::EVENTS:
                case self::EVERY:
                case self::EXCEPT:
                case self::EXCEPTION:
                case self::EXCEPTION_INIT:
                case self::EXCEPTIONS:
                case self::EXCHANGE:
                case self::EXCLUDE:
                case self::EXCLUDING:
                case self::EXECUTE:
                case self::EXEMPT:
                case self::EXISTING:
                case self::EXISTS:
                case self::EXISTSNODE:
                case self::EXIT:
                case self::EXPAND_GSET_TO_UNION:
                case self::EXPAND_TABLE:
                case self::EXP:
                case self::EXPIRE:
                case self::EXPLAIN:
                case self::EXPLOSION:
                case self::EXPORT:
                case self::EXPR_CORR_CHECK:
                case self::EXPRESS:
                case self::EXTENDS:
                case self::EXTENT:
                case self::EXTENTS:
                case self::EXTERNAL:
                case self::EXTERNALLY:
                case self::EXTRACTCLOBXML:
                case self::EXTRACT:
                case self::EXTRACTVALUE:
                case self::EXTRA:
                case self::FACILITY:
                case self::FACT:
                case self::FACTOR:
                case self::FACTORIZE_JOIN:
                case self::FAILED:
                case self::FAILED_LOGIN_ATTEMPTS:
                case self::FAILGROUP:
                case self::FAILOVER:
                case self::FAILURE:
                case self::FALSE:
                case self::FAMILY:
                case self::FAR:
                case self::FAST:
                case self::FASTSTART:
                case self::FBTSCAN:
                case self::FEATURE_DETAILS:
                case self::FEATURE_ID:
                case self::FEATURE_SET:
                case self::FEATURE_VALUE:
                case self::FETCH:
                case self::FILE:
                case self::FILE_NAME_CONVERT:
                case self::FILESYSTEM_LIKE_LOGGING:
                case self::FILTER:
                case self::FINAL:
                case self::FINE:
                case self::FINISH:
                case self::FIRST:
                case self::FIRSTM:
                case self::FIRST_ROWS:
                case self::FIRST_VALUE:
                case self::FIXED_VIEW_DATA:
                case self::FLAGGER:
                case self::FLASHBACK:
                case self::FLASH_CACHE:
                case self::FLOAT:
                case self::FLOB:
                case self::FLOOR:
                case self::FLUSH:
                case self::FOLDER:
                case self::FOLLOWING:
                case self::FOLLOWS:
                case self::FORALL:
                case self::FORCE:
                case self::FORCE_XML_QUERY_REWRITE:
                case self::FOREIGN:
                case self::FOREVER:
                case self::FORMAT:
                case self::FORWARD:
                case self::FRAGMENT_NUMBER:
                case self::FREELIST:
                case self::FREELISTS:
                case self::FREEPOOLS:
                case self::FRESH:
                case self::FROM_TZ:
                case self::FULL:
                case self::FULL_OUTER_JOIN_TO_OUTER:
                case self::FUNCTION:
                case self::FUNCTIONS:
                case self::GATHER_OPTIMIZER_STATISTICS:
                case self::GATHER_PLAN_STATISTICS:
                case self::GBY_CONC_ROLLUP:
                case self::GBY_PUSHDOWN:
                case self::GENERATED:
                case self::GET:
                case self::GLOBAL:
                case self::GLOBALLY:
                case self::GLOBAL_NAME:
                case self::GLOBAL_TOPIC_ENABLED:
                case self::GROUP_BY:
                case self::GROUP_ID:
                case self::GROUPING:
                case self::GROUPING_ID:
                case self::GROUPS:
                case self::GUARANTEED:
                case self::GUARANTEE:
                case self::GUARD:
                case self::HASH_AJ:
                case self::HASH:
                case self::HASHKEYS:
                case self::HASH_SJ:
                case self::HEADER:
                case self::HEAP:
                case self::HELP:
                case self::HEXTORAW:
                case self::HEXTOREF:
                case self::HIDDEN_KEYWORD:
                case self::HIDE:
                case self::HIERARCHY:
                case self::HIGH:
                case self::HINTSET_BEGIN:
                case self::HINTSET_END:
                case self::HOT:
                case self::HOUR:
                case self::HWM_BROKERED:
                case self::HYBRID:
                case self::IDENTIFIER:
                case self::IDENTITY:
                case self::IDGENERATORS:
                case self::ID:
                case self::IDLE_TIME:
                case self::IF:
                case self::IGNORE:
                case self::IGNORE_OPTIM_EMBEDDED_HINTS:
                case self::IGNORE_ROW_ON_DUPKEY_INDEX:
                case self::IGNORE_WHERE_CLAUSE:
                case self::ILM:
                case self::IMMEDIATE:
                case self::IMPACT:
                case self::IMPORT:
                case self::INACTIVE:
                case self::INCLUDE:
                case self::INCLUDE_VERSION:
                case self::INCLUDING:
                case self::INCREMENTAL:
                case self::INCREMENT:
                case self::INCR:
                case self::INDENT:
                case self::INDEX_ASC:
                case self::INDEX_COMBINE:
                case self::INDEX_DESC:
                case self::INDEXED:
                case self::INDEXES:
                case self::INDEX_FFS:
                case self::INDEX_FILTER:
                case self::INDEXING:
                case self::INDEX_JOIN:
                case self::INDEX_ROWS:
                case self::INDEX_RRS:
                case self::INDEX_RS_ASC:
                case self::INDEX_RS_DESC:
                case self::INDEX_RS:
                case self::INDEX_SCAN:
                case self::INDEX_SKIP_SCAN:
                case self::INDEX_SS_ASC:
                case self::INDEX_SS_DESC:
                case self::INDEX_SS:
                case self::INDEX_STATS:
                case self::INDEXTYPE:
                case self::INDEXTYPES:
                case self::INDICATOR:
                case self::INDICES:
                case self::INFINITE:
                case self::INFORMATIONAL:
                case self::INHERIT:
                case self::INITCAP:
                case self::INITIAL:
                case self::INITIALIZED:
                case self::INITIALLY:
                case self::INITRANS:
                case self::INLINE:
                case self::INLINE_XMLTYPE_NT:
                case self::INMEMORY:
                case self::IN_MEMORY_METADATA:
                case self::INMEMORY_PRUNING:
                case self::INNER:
                case self::INOUT:
                case self::INPLACE:
                case self::INSERTCHILDXMLAFTER:
                case self::INSERTCHILDXMLBEFORE:
                case self::INSERTCHILDXML:
                case self::INSERTXMLAFTER:
                case self::INSERTXMLBEFORE:
                case self::INSTANCE:
                case self::INSTANCES:
                case self::INSTANTIABLE:
                case self::INSTANTLY:
                case self::INSTEAD:
                case self::INSTR2:
                case self::INSTR4:
                case self::INSTRB:
                case self::INSTRC:
                case self::INSTR:
                case self::INTEGER:
                case self::INTERLEAVED:
                case self::INTERMEDIATE:
                case self::INTERNAL_CONVERT:
                case self::INTERNAL_USE:
                case self::INTERPRETED:
                case self::INTERVAL:
                case self::INT:
                case self::INVALIDATE:
                case self::INVISIBLE:
                case self::IN_XQUERY:
                case self::ISOLATION:
                case self::ISOLATION_LEVEL:
                case self::ITERATE:
                case self::ITERATION_NUMBER:
                case self::JAVA:
                case self::JOB:
                case self::JOIN:
                case self::JSON_ARRAYAGG:
                case self::JSON_ARRAY:
                case self::JSON_EQUAL:
                case self::JSON_EXISTS2:
                case self::JSON_EXISTS:
                case self::JSONGET:
                case self::JSON:
                case self::JSON_OBJECTAGG:
                case self::JSON_OBJECT:
                case self::JSONPARSE:
                case self::JSON_QUERY:
                case self::JSON_SERIALIZE:
                case self::JSON_TABLE:
                case self::JSON_TEXTCONTAINS2:
                case self::JSON_TEXTCONTAINS:
                case self::JSON_VALUE:
                case self::KEEP_DUPLICATES:
                case self::KEEP:
                case self::KERBEROS:
                case self::KEY:
                case self::KEY_LENGTH:
                case self::KEYSIZE:
                case self::KEYS:
                case self::KEYSTORE:
                case self::KILL:
                case self::LABEL:
                case self::LANGUAGE:
                case self::LAST_DAY:
                case self::LAST:
                case self::LAST_VALUE:
                case self::LATERAL:
                case self::LAX:
                case self::LAYER:
                case self::LDAP_REGISTRATION_ENABLED:
                case self::LDAP_REGISTRATION:
                case self::LDAP_REG_SYNC_INTERVAL:
                case self::LEADING:
                case self::LEFT:
                case self::LENGTH2:
                case self::LENGTH4:
                case self::LENGTHB:
                case self::LENGTHC:
                case self::LENGTH:
                case self::LESS:
                case self::LEVEL:
                case self::LEVELS:
                case self::LIBRARY:
                case self::LIFECYCLE:
                case self::LIFE:
                case self::LIFETIME:
                case self::LIKE2:
                case self::LIKE4:
                case self::LIKEC:
                case self::LIKE_EXPAND:
                case self::LIMIT:
                case self::LINEAR:
                case self::LINK:
                case self::LIST:
                case self::LN:
                case self::LNNVL:
                case self::LOAD:
                case self::LOB:
                case self::LOBNVL:
                case self::LOBS:
                case self::LOCAL_INDEXES:
                case self::LOCAL:
                case self::LOCALTIME:
                case self::LOCALTIMESTAMP:
                case self::LOCATION:
                case self::LOCATOR:
                case self::LOCKED:
                case self::LOCKING:
                case self::LOGFILE:
                case self::LOGFILES:
                case self::LOGGING:
                case self::LOGICAL:
                case self::LOGICAL_READS_PER_CALL:
                case self::LOGICAL_READS_PER_SESSION:
                case self::LOG:
                case self::LOGMINING:
                case self::LOGOFF:
                case self::LOGON:
                case self::LOG_READ_ONLY_VIOLATIONS:
                case self::LONG:
                case self::LOOP:
                case self::LOWER:
                case self::LOW:
                case self::LPAD:
                case self::LTRIM:
                case self::MAIN:
                case self::MAKE_REF:
                case self::MANAGED:
                case self::MANAGE:
                case self::MANAGEMENT:
                case self::MANAGER:
                case self::MANUAL:
                case self::MAP:
                case self::MAPPING:
                case self::MASTER:
                case self::MATCHED:
                case self::MATCHES:
                case self::MATCH:
                case self::MATCH_NUMBER:
                case self::MATCH_RECOGNIZE:
                case self::MATERIALIZED:
                case self::MATERIALIZE:
                case self::MAXARCHLOGS:
                case self::MAXDATAFILES:
                case self::MAXEXTENTS:
                case self::MAXIMIZE:
                case self::MAXINSTANCES:
                case self::MAXLOGFILES:
                case self::MAXLOGHISTORY:
                case self::MAXLOGMEMBERS:
                case self::MAX_SHARED_TEMP_SIZE:
                case self::MAXSIZE:
                case self::MAXTRANS:
                case self::MAXVALUE:
                case self::MEASURE:
                case self::MEASURES:
                case self::MEDIUM:
                case self::MEMBER:
                case self::MEMCOMPRESS:
                case self::MEMORY:
                case self::MERGEACTIONS:
                case self::MERGE_AJ:
                case self::MERGE_CONST_ON:
                case self::MERGE:
                case self::MERGE_SJ:
                case self::METADATA:
                case self::METHOD:
                case self::MIGRATE:
                case self::MIGRATION:
                case self::MINEXTENTS:
                case self::MINIMIZE:
                case self::MINIMUM:
                case self::MINING:
                case self::MINUS_NULL:
                case self::MINUTE:
                case self::MINVALUE:
                case self::MIRRORCOLD:
                case self::MIRRORHOT:
                case self::MIRROR:
                case self::MLSLABEL:
                case self::MODEL_COMPILE_SUBQUERY:
                case self::MODEL_DONTVERIFY_UNIQUENESS:
                case self::MODEL_DYNAMIC_SUBQUERY:
                case self::MODEL_MIN_ANALYSIS:
                case self::MODEL:
                case self::MODEL_NB:
                case self::MODEL_NO_ANALYSIS:
                case self::MODEL_PBY:
                case self::MODEL_PUSH_REF:
                case self::MODEL_SV:
                case self::MODIFICATION:
                case self::MODIFY_COLUMN_TYPE:
                case self::MODIFY:
                case self::MOD:
                case self::MODULE:
                case self::MONITORING:
                case self::MONITOR:
                case self::MONTH:
                case self::MONTHS_BETWEEN:
                case self::MONTHS:
                case self::MOUNT:
                case self::MOUNTPATH:
                case self::MOVEMENT:
                case self::MOVE:
                case self::MULTIDIMENSIONAL:
                case self::MULTISET:
                case self::MV_MERGE:
                case self::NAMED:
                case self::NAME:
                case self::NAMESPACE:
                case self::NAN:
                case self::NANVL:
                case self::NATIONAL:
                case self::NATIVE_FULL_OUTER_JOIN:
                case self::NATIVE:
                case self::NATURAL:
                case self::NAV:
                case self::NCHAR_CS:
                case self::NCHAR:
                case self::NCHR:
                case self::NCLOB:
                case self::NEEDED:
                case self::NEG:
                case self::NESTED:
                case self::NESTED_TABLE_FAST_INSERT:
                case self::NESTED_TABLE_GET_REFS:
                case self::NESTED_TABLE_ID:
                case self::NESTED_TABLE_SET_REFS:
                case self::NESTED_TABLE_SET_SETID:
                case self::NETWORK:
                case self::NEVER:
                case self::NEW:
                case self::NEW_TIME:
                case self::NEXT_DAY:
                case self::NEXT:
                case self::NL_AJ:
                case self::NLJ_BATCHING:
                case self::NLJ_INDEX_FILTER:
                case self::NLJ_INDEX_SCAN:
                case self::NLJ_PREFETCH:
                case self::NLS_CALENDAR:
                case self::NLS_CHARACTERSET:
                case self::NLS_CHARSET_DECL_LEN:
                case self::NLS_CHARSET_ID:
                case self::NLS_CHARSET_NAME:
                case self::NLS_COMP:
                case self::NLS_CURRENCY:
                case self::NLS_DATE_FORMAT:
                case self::NLS_DATE_LANGUAGE:
                case self::NLS_INITCAP:
                case self::NLS_ISO_CURRENCY:
                case self::NL_SJ:
                case self::NLS_LANG:
                case self::NLS_LANGUAGE:
                case self::NLS_LENGTH_SEMANTICS:
                case self::NLS_LOWER:
                case self::NLS_NCHAR_CONV_EXCP:
                case self::NLS_NUMERIC_CHARACTERS:
                case self::NLS_SORT:
                case self::NLSSORT:
                case self::NLS_SPECIAL_CHARS:
                case self::NLS_TERRITORY:
                case self::NLS_UPPER:
                case self::NO_ACCESS:
                case self::NO_ADAPTIVE_PLAN:
                case self::NO_ANSI_REARCH:
                case self::NOAPPEND:
                case self::NOARCHIVELOG:
                case self::NOAUDIT:
                case self::NO_AUTO_REOPTIMIZE:
                case self::NO_BASETABLE_MULTIMV_REWRITE:
                case self::NO_BATCH_TABLE_ACCESS_BY_ROWID:
                case self::NO_BIND_AWARE:
                case self::NO_BUFFER:
                case self::NOCACHE:
                case self::NO_CARTESIAN:
                case self::NO_CHECK_ACL_REWRITE:
                case self::NO_CLUSTER_BY_ROWID:
                case self::NO_CLUSTERING:
                case self::NO_COALESCE_SQ:
                case self::NO_COMMON_DATA:
                case self::NO_CONNECT_BY_CB_WHR_ONLY:
                case self::NO_CONNECT_BY_COMBINE_SW:
                case self::NO_CONNECT_BY_COST_BASED:
                case self::NO_CONNECT_BY_ELIM_DUPS:
                case self::NO_CONNECT_BY_FILTERING:
                case self::NOCOPY:
                case self::NO_COST_XML_QUERY_REWRITE:
                case self::NO_CPU_COSTING:
                case self::NOCPU_COSTING:
                case self::NOCYCLE:
                case self::NO_DATA_SECURITY_REWRITE:
                case self::NO_DECORRELATE:
                case self::NODELAY:
                case self::NO_DOMAIN_INDEX_FILTER:
                case self::NO_DST_UPGRADE_INSERT_CONV:
                case self::NO_ELIM_GROUPBY:
                case self::NO_ELIMINATE_JOIN:
                case self::NO_ELIMINATE_OBY:
                case self::NO_ELIMINATE_OUTER_JOIN:
                case self::NOENTITYESCAPING:
                case self::NO_EXPAND_GSET_TO_UNION:
                case self::NO_EXPAND:
                case self::NO_EXPAND_TABLE:
                case self::NO_FACT:
                case self::NO_FACTORIZE_JOIN:
                case self::NO_FILTERING:
                case self::NOFORCE:
                case self::NO_FULL_OUTER_JOIN_TO_OUTER:
                case self::NO_GATHER_OPTIMIZER_STATISTICS:
                case self::NO_GBY_PUSHDOWN:
                case self::NOGUARANTEE:
                case self::NO_INDEX_FFS:
                case self::NO_INDEX:
                case self::NO_INDEX_SS:
                case self::NO_INMEMORY:
                case self::NO_INMEMORY_PRUNING:
                case self::NOKEEP:
                case self::NO_LOAD:
                case self::NOLOCAL:
                case self::NOLOGGING:
                case self::NOMAPPING:
                case self::NOMAXVALUE:
                case self::NO_MERGE:
                case self::NOMINIMIZE:
                case self::NOMINVALUE:
                case self::NO_MODEL_PUSH_REF:
                case self::NO_MONITORING:
                case self::NOMONITORING:
                case self::NO_MONITOR:
                case self::NO_MULTIMV_REWRITE:
                case self::NO_NATIVE_FULL_OUTER_JOIN:
                case self::NONBLOCKING:
                case self::NONEDITIONABLE:
                case self::NONE:
                case self::NO_NLJ_BATCHING:
                case self::NO_NLJ_PREFETCH:
                case self::NO:
                case self::NONSCHEMA:
                case self::NO_OBJECT_LINK:
                case self::NOORDER:
                case self::NO_ORDER_ROLLUPS:
                case self::NO_OUTER_JOIN_TO_ANTI:
                case self::NO_OUTER_JOIN_TO_INNER:
                case self::NOOVERRIDE:
                case self::NO_PARALLEL_INDEX:
                case self::NOPARALLEL_INDEX:
                case self::NO_PARALLEL:
                case self::NOPARALLEL:
                case self::NO_PARTIAL_COMMIT:
                case self::NO_PARTIAL_JOIN:
                case self::NO_PARTIAL_ROLLUP_PUSHDOWN:
                case self::NOPARTITION:
                case self::NO_PLACE_DISTINCT:
                case self::NO_PLACE_GROUP_BY:
                case self::NO_PQ_CONCURRENT_UNION:
                case self::NO_PQ_MAP:
                case self::NO_PQ_REPLICATE:
                case self::NO_PQ_SKEW:
                case self::NO_PRUNE_GSETS:
                case self::NO_PULL_PRED:
                case self::NO_PUSH_PRED:
                case self::NO_PUSH_SUBQ:
                case self::NO_PX_FAULT_TOLERANCE:
                case self::NO_PX_JOIN_FILTER:
                case self::NO_QKN_BUFF:
                case self::NO_QUERY_TRANSFORMATION:
                case self::NO_REF_CASCADE:
                case self::NORELOCATE:
                case self::NORELY:
                case self::NOREPAIR:
                case self::NOREPLAY:
                case self::NORESETLOGS:
                case self::NO_RESULT_CACHE:
                case self::NOREVERSE:
                case self::NO_REWRITE:
                case self::NOREWRITE:
                case self::NORMAL:
                case self::NO_ROOT_SW_FOR_LOCAL:
                case self::NOROWDEPENDENCIES:
                case self::NOSCHEMACHECK:
                case self::NOSEGMENT:
                case self::NO_SEMIJOIN:
                case self::NO_SEMI_TO_INNER:
                case self::NO_SET_TO_JOIN:
                case self::NOSORT:
                case self::NO_SQL_TRANSLATION:
                case self::NO_SQL_TUNE:
                case self::NO_STAR_TRANSFORMATION:
                case self::NO_STATEMENT_QUEUING:
                case self::NO_STATS_GSETS:
                case self::NOSTRICT:
                case self::NO_SUBQUERY_PRUNING:
                case self::NO_SUBSTRB_PAD:
                case self::NO_SWAP_JOIN_INPUTS:
                case self::NOSWITCH:
                case self::NO_TABLE_LOOKUP_BY_NL:
                case self::NO_TEMP_TABLE:
                case self::NOTHING:
                case self::NOTIFICATION:
                case self::NO_TRANSFORM_DISTINCT_AGG:
                case self::NO_UNNEST:
                case self::NO_USE_CUBE:
                case self::NO_USE_HASH_AGGREGATION:
                case self::NO_USE_HASH_GBY_FOR_PUSHDOWN:
                case self::NO_USE_HASH:
                case self::NO_USE_INVISIBLE_INDEXES:
                case self::NO_USE_MERGE:
                case self::NO_USE_NL:
                case self::NO_USE_VECTOR_AGGREGATION:
                case self::NOVALIDATE:
                case self::NO_VECTOR_TRANSFORM_DIMS:
                case self::NO_VECTOR_TRANSFORM_FACT:
                case self::NO_VECTOR_TRANSFORM:
                case self::NO_XDB_FASTPATH_INSERT:
                case self::NO_XML_DML_REWRITE:
                case self::NO_XMLINDEX_REWRITE_IN_SELECT:
                case self::NO_XMLINDEX_REWRITE:
                case self::NO_XML_QUERY_REWRITE:
                case self::NO_ZONEMAP:
                case self::NTH_VALUE:
                case self::NULLIF:
                case self::NULLS:
                case self::NUMBER:
                case self::NUMERIC:
                case self::NUM_INDEX_KEYS:
                case self::NUMTODSINTERVAL:
                case self::NUMTOYMINTERVAL:
                case self::NVARCHAR2:
                case self::NVL2:
                case self::OBJECT2XML:
                case self::OBJECT:
                case self::OBJ_ID:
                case self::OBJNO:
                case self::OBJNO_REUSE:
                case self::OCCURENCES:
                case self::OFFLINE:
                case self::OFF:
                case self::OFFSET:
                case self::OIDINDEX:
                case self::OID:
                case self::OLAP:
                case self::OLD:
                case self::OLD_PUSH_PRED:
                case self::OLS:
                case self::OLTP:
                case self::OMIT:
                case self::ONE:
                case self::ONLINE:
                case self::ONLY:
                case self::OPAQUE:
                case self::OPAQUE_TRANSFORM:
                case self::OPAQUE_XCANONICAL:
                case self::OPCODE:
                case self::OPEN:
                case self::OPERATIONS:
                case self::OPERATOR:
                case self::OPT_ESTIMATE:
                case self::OPTIMAL:
                case self::OPTIMIZE:
                case self::OPTIMIZER_FEATURES_ENABLE:
                case self::OPTIMIZER_GOAL:
                case self::OPT_PARAM:
                case self::ORA_BRANCH:
                case self::ORA_CHECK_ACL:
                case self::ORA_CHECK_PRIVILEGE:
                case self::ORA_CLUSTERING:
                case self::ORADATA:
                case self::ORADEBUG:
                case self::ORA_DST_AFFECTED:
                case self::ORA_DST_CONVERT:
                case self::ORA_DST_ERROR:
                case self::ORA_GET_ACLIDS:
                case self::ORA_GET_PRIVILEGES:
                case self::ORA_HASH:
                case self::ORA_INVOKING_USERID:
                case self::ORA_INVOKING_USER:
                case self::ORA_INVOKING_XS_USER_GUID:
                case self::ORA_INVOKING_XS_USER:
                case self::ORA_RAWCOMPARE:
                case self::ORA_RAWCONCAT:
                case self::ORA_ROWSCN:
                case self::ORA_ROWSCN_RAW:
                case self::ORA_ROWVERSION:
                case self::ORA_TABVERSION:
                case self::ORA_WRITE_TIME:
                case self::ORDERED:
                case self::ORDERED_PREDICATES:
                case self::ORDINALITY:
                case self::OR_EXPAND:
                case self::ORGANIZATION:
                case self::OR_PREDICATES:
                case self::OSERROR:
                case self::OTHER:
                case self::OUTER_JOIN_TO_ANTI:
                case self::OUTER_JOIN_TO_INNER:
                case self::OUTER:
                case self::OUTLINE_LEAF:
                case self::OUTLINE:
                case self::OUT_OF_LINE:
                case self::OUT:
                case self::OVERFLOW_NOMOVE:
                case self::OVERFLOW:
                case self::OVERLAPS:
                case self::OVER:
                case self::OVERRIDING:
                case self::OWNER:
                case self::OWNERSHIP:
                case self::OWN:
                case self::PACKAGE:
                case self::PACKAGES:
                case self::PARALLEL_ENABLE:
                case self::PARALLEL_INDEX:
                case self::PARALLEL:
                case self::PARAMETERS:
                case self::PARAM:
                case self::PARENT:
                case self::PARITY:
                case self::PARTIAL_JOIN:
                case self::PARTIALLY:
                case self::PARTIAL:
                case self::PARTIAL_ROLLUP_PUSHDOWN:
                case self::PARTITION_HASH:
                case self::PARTITION_LIST:
                case self::PARTITION:
                case self::PARTITION_RANGE:
                case self::PARTITIONS:
                case self::PARTNUMINST:
                case self::PASSING:
                case self::PASSWORD_GRACE_TIME:
                case self::PASSWORD_LIFE_TIME:
                case self::PASSWORD_LOCK_TIME:
                case self::PASSWORD:
                case self::PASSWORD_REUSE_MAX:
                case self::PASSWORD_REUSE_TIME:
                case self::PASSWORD_VERIFY_FUNCTION:
                case self::PAST:
                case self::PATCH:
                case self::PATH:
                case self::PATH_PREFIX:
                case self::PATHS:
                case self::PATTERN:
                case self::PBL_HS_BEGIN:
                case self::PBL_HS_END:
                case self::PCTINCREASE:
                case self::PCTTHRESHOLD:
                case self::PCTUSED:
                case self::PCTVERSION:
                case self::PENDING:
                case self::PERCENT_KEYWORD:
                case self::PERCENT_RANKM:
                case self::PERFORMANCE:
                case self::PERIOD_KEYWORD:
                case self::PERMANENT:
                case self::PERMISSION:
                case self::PERMUTE:
                case self::PER:
                case self::PFILE:
                case self::PHYSICAL:
                case self::PIKEY:
                case self::PIPELINED:
                case self::PIV_GB:
                case self::PIVOT:
                case self::PIV_SSF:
                case self::PLACE_DISTINCT:
                case self::PLACE_GROUP_BY:
                case self::PLAN:
                case self::PLSCOPE_SETTINGS:
                case self::PLS_INTEGER:
                case self::PLSQL_CCFLAGS:
                case self::PLSQL_CODE_TYPE:
                case self::PLSQL_DEBUG:
                case self::PLSQL_OPTIMIZE_LEVEL:
                case self::PLSQL_WARNINGS:
                case self::PLUGGABLE:
                case self::POINT:
                case self::POLICY:
                case self::POOL_16K:
                case self::POOL_2K:
                case self::POOL_32K:
                case self::POOL_4K:
                case self::POOL_8K:
                case self::POSITIVEN:
                case self::POSITIVE:
                case self::POST_TRANSACTION:
                case self::POWERMULTISET_BY_CARDINALITY:
                case self::POWERMULTISET:
                case self::POWER:
                case self::PQ_CONCURRENT_UNION:
                case self::PQ_DISTRIBUTE:
                case self::PQ_DISTRIBUTE_WINDOW:
                case self::PQ_FILTER:
                case self::PQ_MAP:
                case self::PQ_NOMAP:
                case self::PQ_REPLICATE:
                case self::PQ_SKEW:
                case self::PRAGMA:
                case self::PREBUILT:
                case self::PRECEDES:
                case self::PRECEDING:
                case self::PRECISION:
                case self::PRECOMPUTE_SUBQUERY:
                case self::PREDICATE_REORDERS:
                case self::PRELOAD:
                case self::PREPARE:
                case self::PRESENTNNV:
                case self::PRESENT:
                case self::PRESENTV:
                case self::PRESERVE_OID:
                case self::PRESERVE:
                case self::PRETTY:
                case self::PREVIOUS:
                case self::PREV:
                case self::PRIMARY:
                case self::PRINTBLOBTOCLOB:
                case self::PRIORITY:
                case self::PRIVATE:
                case self::PRIVATE_SGA:
                case self::PRIVILEGED:
                case self::PRIVILEGE:
                case self::PRIVILEGES:
                case self::PROCEDURAL:
                case self::PROCEDURE:
                case self::PROCESS:
                case self::PROFILE:
                case self::PROGRAM:
                case self::PROJECT:
                case self::PROPAGATE:
                case self::PROTECTED:
                case self::PROTECTION:
                case self::PROXY:
                case self::PRUNING:
                case self::PULL_PRED:
                case self::PURGE:
                case self::PUSH_PRED:
                case self::PUSH_SUBQ:
                case self::PX_FAULT_TOLERANCE:
                case self::PX_GRANULE:
                case self::PX_JOIN_FILTER:
                case self::QB_NAME:
                case self::QUERY_BLOCK:
                case self::QUERY:
                case self::QUEUE_CURR:
                case self::QUEUE:
                case self::QUEUE_ROWP:
                case self::QUIESCE:
                case self::QUORUM:
                case self::QUOTA:
                case self::RAISE:
                case self::RANDOM_LOCAL:
                case self::RANDOM:
                case self::RANGE:
                case self::RANKM:
                case self::RAPIDLY:
                case self::RAW:
                case self::RAWTOHEX:
                case self::RAWTONHEX:
                case self::RBA:
                case self::RBO_OUTLINE:
                case self::RDBA:
                case self::READ:
                case self::READS:
                case self::REALM:
                case self::REAL:
                case self::REBALANCE:
                case self::REBUILD:
                case self::RECORD:
                case self::RECORDS_PER_BLOCK:
                case self::RECOVERABLE:
                case self::RECOVER:
                case self::RECOVERY:
                case self::RECYCLEBIN:
                case self::RECYCLE:
                case self::REDACTION:
                case self::REDEFINE:
                case self::REDO:
                case self::REDUCED:
                case self::REDUNDANCY:
                case self::REF_CASCADE_CURSOR:
                case self::REFERENCED:
                case self::REFERENCE:
                case self::REFERENCES:
                case self::REFERENCING:
                case self::REF:
                case self::REFRESH:
                case self::REFTOHEX:
                case self::REGEXP_COUNT:
                case self::REGEXP_INSTR:
                case self::REGEXP_LIKE:
                case self::REGEXP_REPLACE:
                case self::REGEXP_SUBSTR:
                case self::REGISTER:
                case self::REGR_AVGX:
                case self::REGR_AVGY:
                case self::REGR_COUNT:
                case self::REGR_INTERCEPT:
                case self::REGR_R2:
                case self::REGR_SLOPE:
                case self::REGR_SXX:
                case self::REGR_SXY:
                case self::REGR_SYY:
                case self::REGULAR:
                case self::REJECT:
                case self::REKEY:
                case self::RELATIONAL:
                case self::RELOCATE:
                case self::RELY:
                case self::REMAINDER:
                case self::REMOTE_MAPPED:
                case self::REMOVE:
                case self::RENAME:
                case self::REPAIR:
                case self::REPEAT:
                case self::REPLACE:
                case self::REPLICATION:
                case self::REQUIRED:
                case self::RESETLOGS:
                case self::RESET:
                case self::RESIZE:
                case self::RESOLVE:
                case self::RESOLVER:
                case self::RESPECT:
                case self::RESTART:
                case self::RESTORE_AS_INTERVALS:
                case self::RESTORE:
                case self::RESTRICT_ALL_REF_CONS:
                case self::RESTRICTED:
                case self::RESTRICT_REFERENCES:
                case self::RESTRICT:
                case self::RESULT_CACHE:
                case self::RESULT:
                case self::RESUMABLE:
                case self::RESUME:
                case self::RETENTION:
                case self::RETRY_ON_ROW_CHANGE:
                case self::RETURNING:
                case self::RETURN:
                case self::REUSE:
                case self::REVERSE:
                case self::REWRITE_OR_ERROR:
                case self::REWRITE:
                case self::RIGHT:
                case self::ROLE:
                case self::ROLESET:
                case self::ROLES:
                case self::ROLLBACK:
                case self::ROLLING:
                case self::ROLLUP:
                case self::ROWDEPENDENCIES:
                case self::ROWID_MAPPING_TABLE:
                case self::ROWID:
                case self::ROWIDTOCHAR:
                case self::ROWIDTONCHAR:
                case self::ROW_LENGTH:
                case self::ROWNUM:
                case self::ROW:
                case self::ROWS:
                case self::RPAD:
                case self::RTRIM:
                case self::RULE:
                case self::RULES:
                case self::RUNNING:
                case self::SALT:
                case self::SAMPLE:
                case self::SAVE_AS_INTERVALS:
                case self::SAVEPOINT:
                case self::SAVE:
                case self::SB4:
                case self::SCALE_ROWS:
                case self::SCALE:
                case self::SCAN_INSTANCES:
                case self::SCAN:
                case self::SCHEDULER:
                case self::SCHEMACHECK:
                case self::SCHEMA:
                case self::SCN_ASCENDING:
                case self::SCN:
                case self::SCOPE:
                case self::SCRUB:
                case self::SD_ALL:
                case self::SD_INHIBIT:
                case self::SDO_GEOM_MBR:
                case self::SD_SHOW:
                case self::SEARCH:
                case self::SECOND:
                case self::SECRET:
                case self::SECUREFILE_DBA:
                case self::SECUREFILE:
                case self::SECURITY:
                case self::SEED:
                case self::SEG_BLOCK:
                case self::SEG_FILE:
                case self::SEGMENT:
                case self::SELECTIVITY:
                case self::SELF:
                case self::SEMIJOIN_DRIVER:
                case self::SEMIJOIN:
                case self::SEMI_TO_INNER:
                case self::SEQUENCED:
                case self::SEQUENCE:
                case self::SEQUENTIAL:
                case self::SERIALIZABLE:
                case self::SERIALLY_REUSABLE:
                case self::SERIAL:
                case self::SERVERERROR:
                case self::SERVICE_NAME_CONVERT:
                case self::SERVICES:
                case self::SESSION_CACHED_CURSORS:
                case self::SESSION:
                case self::SESSIONS_PER_USER:
                case self::SESSIONTIMEZONE:
                case self::SESSIONTZNAME:
                case self::SET:
                case self::SETS:
                case self::SETTINGS:
                case self::SET_TO_JOIN:
                case self::SEVERE:
                case self::SHARED_POOL:
                case self::SHARED:
                case self::SHARING:
                case self::SHELFLIFE:
                case self::SHOW:
                case self::SHRINK:
                case self::SHUTDOWN:
                case self::SIBLINGS:
                case self::SID:
                case self::SIGNAL_COMPONENT:
                case self::SIGNAL_FUNCTION:
                case self::SIGN:
                case self::SIGNTYPE:
                case self::SIMPLE_INTEGER:
                case self::SIMPLE:
                case self::SINGLE:
                case self::SINGLETASK:
                case self::SINH:
                case self::SIN:
                case self::SKIP_EXT_OPTIMIZER:
                case self::SKIP_:
                case self::SKIP_UNQ_UNUSABLE_IDX:
                case self::SKIP_UNUSABLE_INDEXES:
                case self::SMALLFILE:
                case self::SMALLINT:
                case self::SNAPSHOT:
                case self::SOME:
                case self::SORT:
                case self::SOUNDEX:
                case self::SOURCE_FILE_DIRECTORY:
                case self::SOURCE_FILE_NAME_CONVERT:
                case self::SOURCE:
                case self::SPACE_KEYWORD:
                case self::SPECIFICATION:
                case self::SPFILE:
                case self::SPLIT:
                case self::SPREADSHEET:
                case self::SQLDATA:
                case self::SQLERROR:
                case self::SQLLDR:
                case self::SQL:
                case self::SQL_TRACE:
                case self::SQL_TRANSLATION_PROFILE:
                case self::SQRT:
                case self::STALE:
                case self::STANDALONE:
                case self::STANDARD_HASH:
                case self::STANDBY_MAX_DATA_DELAY:
                case self::STANDBYS:
                case self::STANDBY:
                case self::STAR:
                case self::STAR_TRANSFORMATION:
                case self::STARTUP:
                case self::STATEMENT_ID:
                case self::STATEMENT_QUEUING:
                case self::STATEMENTS:
                case self::STATEMENT:
                case self::STATE:
                case self::STATIC:
                case self::STATISTICS:
                case self::STATS_BINOMIAL_TEST:
                case self::STATS_CROSSTAB:
                case self::STATS_F_TEST:
                case self::STATS_KS_TEST:
                case self::STATS_MODE:
                case self::STATS_MW_TEST:
                case self::STATS_ONE_WAY_ANOVA:
                case self::STATS_T_TEST_INDEP:
                case self::STATS_T_TEST_INDEPU:
                case self::STATS_T_TEST_ONE:
                case self::STATS_T_TEST_PAIRED:
                case self::STATS_WSR_TEST:
                case self::STDDEV_POP:
                case self::STDDEV_SAMP:
                case self::STOP:
                case self::STORAGE:
                case self::STORE:
                case self::STREAMS:
                case self::STREAM:
                case self::STRICT:
                case self::STRING:
                case self::STRIPE_COLUMNS:
                case self::STRIPE_WIDTH:
                case self::STRIP:
                case self::STRUCTURE:
                case self::SUBMULTISET:
                case self::SUBPARTITION_REL:
                case self::SUBPARTITIONS:
                case self::SUBPARTITION:
                case self::SUBQUERIES:
                case self::SUBQUERY_PRUNING:
                case self::SUBSCRIBE:
                case self::SUBSET:
                case self::SUBSTITUTABLE:
                case self::SUBSTR2:
                case self::SUBSTR4:
                case self::SUBSTRB:
                case self::SUBSTRC:
                case self::SUBTYPE:
                case self::SUCCESSFUL:
                case self::SUCCESS:
                case self::SUMMARY:
                case self::SUPPLEMENTAL:
                case self::SUSPEND:
                case self::SWAP_JOIN_INPUTS:
                case self::SWITCHOVER:
                case self::SWITCH:
                case self::SYNCHRONOUS:
                case self::SYNC:
                case self::SYSASM:
                case self::SYS_AUDIT:
                case self::SYSAUX:
                case self::SYSBACKUP:
                case self::SYS_CHECKACL:
                case self::SYS_CHECK_PRIVILEGE:
                case self::SYS_CONNECT_BY_PATH:
                case self::SYS_CONTEXT:
                case self::SYSDATE:
                case self::SYSDBA:
                case self::SYS_DBURIGEN:
                case self::SYSDG:
                case self::SYS_DL_CURSOR:
                case self::SYS_DM_RXFORM_CHR:
                case self::SYS_DM_RXFORM_NUM:
                case self::SYS_DOM_COMPARE:
                case self::SYS_DST_PRIM2SEC:
                case self::SYS_DST_SEC2PRIM:
                case self::SYS_ET_BFILE_TO_RAW:
                case self::SYS_ET_BLOB_TO_IMAGE:
                case self::SYS_ET_IMAGE_TO_BLOB:
                case self::SYS_ET_RAW_TO_BFILE:
                case self::SYS_EXTPDTXT:
                case self::SYS_EXTRACT_UTC:
                case self::SYS_FBT_INSDEL:
                case self::SYS_FILTER_ACLS:
                case self::SYS_FNMATCHES:
                case self::SYS_FNREPLACE:
                case self::SYS_GET_ACLIDS:
                case self::SYS_GET_COL_ACLIDS:
                case self::SYS_GET_PRIVILEGES:
                case self::SYS_GETTOKENID:
                case self::SYS_GETXTIVAL:
                case self::SYS_GUID:
                case self::SYSGUID:
                case self::SYSKM:
                case self::SYS_MAKE_XMLNODEID:
                case self::SYS_MAKEXML:
                case self::SYS_MKXMLATTR:
                case self::SYS_MKXTI:
                case self::SYSOBJ:
                case self::SYS_OP_ADT2BIN:
                case self::SYS_OP_ADTCONS:
                case self::SYS_OP_ALSCRVAL:
                case self::SYS_OP_ATG:
                case self::SYS_OP_BIN2ADT:
                case self::SYS_OP_BITVEC:
                case self::SYS_OP_BL2R:
                case self::SYS_OP_BLOOM_FILTER_LIST:
                case self::SYS_OP_BLOOM_FILTER:
                case self::SYS_OP_C2C:
                case self::SYS_OP_CAST:
                case self::SYS_OP_CEG:
                case self::SYS_OP_CL2C:
                case self::SYS_OP_COMBINED_HASH:
                case self::SYS_OP_COMP:
                case self::SYS_OP_CONVERT:
                case self::SYS_OP_COUNTCHG:
                case self::SYS_OP_CSCONV:
                case self::SYS_OP_CSCONVTEST:
                case self::SYS_OP_CSR:
                case self::SYS_OP_CSX_PATCH:
                case self::SYS_OP_CYCLED_SEQ:
                case self::SYS_OP_DECOMP:
                case self::SYS_OP_DESCEND:
                case self::SYS_OP_DISTINCT:
                case self::SYS_OP_DRA:
                case self::SYS_OP_DUMP:
                case self::SYS_OP_DV_CHECK:
                case self::SYS_OP_ENFORCE_NOT_NULL:
                case self::SYSOPER:
                case self::SYS_OP_EXTRACT:
                case self::SYS_OP_GROUPING:
                case self::SYS_OP_GUID:
                case self::SYS_OP_HASH:
                case self::SYS_OP_IIX:
                case self::SYS_OP_ITR:
                case self::SYS_OP_KEY_VECTOR_CREATE:
                case self::SYS_OP_KEY_VECTOR_FILTER_LIST:
                case self::SYS_OP_KEY_VECTOR_FILTER:
                case self::SYS_OP_KEY_VECTOR_SUCCEEDED:
                case self::SYS_OP_KEY_VECTOR_USE:
                case self::SYS_OP_LBID:
                case self::SYS_OP_LOBLOC2BLOB:
                case self::SYS_OP_LOBLOC2CLOB:
                case self::SYS_OP_LOBLOC2ID:
                case self::SYS_OP_LOBLOC2NCLOB:
                case self::SYS_OP_LOBLOC2TYP:
                case self::SYS_OP_LSVI:
                case self::SYS_OP_LVL:
                case self::SYS_OP_MAKEOID:
                case self::SYS_OP_MAP_NONNULL:
                case self::SYS_OP_MSR:
                case self::SYS_OP_NICOMBINE:
                case self::SYS_OP_NIEXTRACT:
                case self::SYS_OP_NII:
                case self::SYS_OP_NIX:
                case self::SYS_OP_NOEXPAND:
                case self::SYS_OP_NTCIMG:
                case self::SYS_OP_NUMTORAW:
                case self::SYS_OP_OIDVALUE:
                case self::SYS_OP_OPNSIZE:
                case self::SYS_OP_PAR_1:
                case self::SYS_OP_PARGID_1:
                case self::SYS_OP_PARGID:
                case self::SYS_OP_PAR:
                case self::SYS_OP_PART_ID:
                case self::SYS_OP_PIVOT:
                case self::SYS_OP_R2O:
                case self::SYS_OP_RAWTONUM:
                case self::SYS_OP_RDTM:
                case self::SYS_OP_REF:
                case self::SYS_OP_RMTD:
                case self::SYS_OP_ROWIDTOOBJ:
                case self::SYS_OP_RPB:
                case self::SYS_OPTLOBPRBSC:
                case self::SYS_OP_TOSETID:
                case self::SYS_OP_TPR:
                case self::SYS_OP_TRTB:
                case self::SYS_OPTXICMP:
                case self::SYS_OPTXQCASTASNQ:
                case self::SYS_OP_UNDESCEND:
                case self::SYS_OP_VECAND:
                case self::SYS_OP_VECBIT:
                case self::SYS_OP_VECOR:
                case self::SYS_OP_VECXOR:
                case self::SYS_OP_VERSION:
                case self::SYS_OP_VREF:
                case self::SYS_OP_VVD:
                case self::SYS_OP_XMLCONS_FOR_CSX:
                case self::SYS_OP_XPTHATG:
                case self::SYS_OP_XPTHIDX:
                case self::SYS_OP_XPTHOP:
                case self::SYS_OP_XTXT2SQLT:
                case self::SYS_OP_ZONE_ID:
                case self::SYS_ORDERKEY_DEPTH:
                case self::SYS_ORDERKEY_MAXCHILD:
                case self::SYS_ORDERKEY_PARENT:
                case self::SYS_PARALLEL_TXN:
                case self::SYS_PATHID_IS_ATTR:
                case self::SYS_PATHID_IS_NMSPC:
                case self::SYS_PATHID_LASTNAME:
                case self::SYS_PATHID_LASTNMSPC:
                case self::SYS_PATH_REVERSE:
                case self::SYS_PXQEXTRACT:
                case self::SYS_RAW_TO_XSID:
                case self::SYS_RID_ORDER:
                case self::SYS_ROW_DELTA:
                case self::SYS_SC_2_XMLT:
                case self::SYS_SYNRCIREDO:
                case self::SYSTEM_DEFINED:
                case self::SYSTEM:
                case self::SYSTIMESTAMP:
                case self::SYS_TYPEID:
                case self::SYS_UMAKEXML:
                case self::SYS_XMLANALYZE:
                case self::SYS_XMLCONTAINS:
                case self::SYS_XMLCONV:
                case self::SYS_XMLEXNSURI:
                case self::SYS_XMLGEN:
                case self::SYS_XMLI_LOC_ISNODE:
                case self::SYS_XMLI_LOC_ISTEXT:
                case self::SYS_XMLINSTR:
                case self::SYS_XMLLOCATOR_GETSVAL:
                case self::SYS_XMLNODEID_GETCID:
                case self::SYS_XMLNODEID_GETLOCATOR:
                case self::SYS_XMLNODEID_GETOKEY:
                case self::SYS_XMLNODEID_GETPATHID:
                case self::SYS_XMLNODEID_GETPTRID:
                case self::SYS_XMLNODEID_GETRID:
                case self::SYS_XMLNODEID_GETSVAL:
                case self::SYS_XMLNODEID_GETTID:
                case self::SYS_XMLNODEID:
                case self::SYS_XMLT_2_SC:
                case self::SYS_XMLTRANSLATE:
                case self::SYS_XMLTYPE2SQL:
                case self::SYS_XQ_ASQLCNV:
                case self::SYS_XQ_ATOMCNVCHK:
                case self::SYS_XQBASEURI:
                case self::SYS_XQCASTABLEERRH:
                case self::SYS_XQCODEP2STR:
                case self::SYS_XQCODEPEQ:
                case self::SYS_XQCON2SEQ:
                case self::SYS_XQCONCAT:
                case self::SYS_XQDELETE:
                case self::SYS_XQDFLTCOLATION:
                case self::SYS_XQDOC:
                case self::SYS_XQDOCURI:
                case self::SYS_XQDURDIV:
                case self::SYS_XQED4URI:
                case self::SYS_XQENDSWITH:
                case self::SYS_XQERRH:
                case self::SYS_XQERR:
                case self::SYS_XQESHTMLURI:
                case self::SYS_XQEXLOBVAL:
                case self::SYS_XQEXSTWRP:
                case self::SYS_XQEXTRACT:
                case self::SYS_XQEXTRREF:
                case self::SYS_XQEXVAL:
                case self::SYS_XQFB2STR:
                case self::SYS_XQFNBOOL:
                case self::SYS_XQFNCMP:
                case self::SYS_XQFNDATIM:
                case self::SYS_XQFNLNAME:
                case self::SYS_XQFNNM:
                case self::SYS_XQFNNSURI:
                case self::SYS_XQFNPREDTRUTH:
                case self::SYS_XQFNQNM:
                case self::SYS_XQFNROOT:
                case self::SYS_XQFORMATNUM:
                case self::SYS_XQFTCONTAIN:
                case self::SYS_XQFUNCR:
                case self::SYS_XQGETCONTENT:
                case self::SYS_XQINDXOF:
                case self::SYS_XQINSERT:
                case self::SYS_XQINSPFX:
                case self::SYS_XQIRI2URI:
                case self::SYS_XQLANG:
                case self::SYS_XQLLNMFRMQNM:
                case self::SYS_XQMKNODEREF:
                case self::SYS_XQNILLED:
                case self::SYS_XQNODENAME:
                case self::SYS_XQNORMSPACE:
                case self::SYS_XQNORMUCODE:
                case self::SYS_XQ_NRNG:
                case self::SYS_XQNSP4PFX:
                case self::SYS_XQNSPFRMQNM:
                case self::SYS_XQPFXFRMQNM:
                case self::SYS_XQ_PKSQL2XML:
                case self::SYS_XQPOLYABS:
                case self::SYS_XQPOLYADD:
                case self::SYS_XQPOLYCEL:
                case self::SYS_XQPOLYCSTBL:
                case self::SYS_XQPOLYCST:
                case self::SYS_XQPOLYDIV:
                case self::SYS_XQPOLYFLR:
                case self::SYS_XQPOLYMOD:
                case self::SYS_XQPOLYMUL:
                case self::SYS_XQPOLYRND:
                case self::SYS_XQPOLYSQRT:
                case self::SYS_XQPOLYSUB:
                case self::SYS_XQPOLYUMUS:
                case self::SYS_XQPOLYUPLS:
                case self::SYS_XQPOLYVEQ:
                case self::SYS_XQPOLYVGE:
                case self::SYS_XQPOLYVGT:
                case self::SYS_XQPOLYVLE:
                case self::SYS_XQPOLYVLT:
                case self::SYS_XQPOLYVNE:
                case self::SYS_XQREF2VAL:
                case self::SYS_XQRENAME:
                case self::SYS_XQREPLACE:
                case self::SYS_XQRESVURI:
                case self::SYS_XQRNDHALF2EVN:
                case self::SYS_XQRSLVQNM:
                case self::SYS_XQRYENVPGET:
                case self::SYS_XQRYVARGET:
                case self::SYS_XQRYWRP:
                case self::SYS_XQSEQ2CON4XC:
                case self::SYS_XQSEQ2CON:
                case self::SYS_XQSEQDEEPEQ:
                case self::SYS_XQSEQINSB:
                case self::SYS_XQSEQRM:
                case self::SYS_XQSEQRVS:
                case self::SYS_XQSEQSUB:
                case self::SYS_XQSEQTYPMATCH:
                case self::SYS_XQSTARTSWITH:
                case self::SYS_XQSTATBURI:
                case self::SYS_XQSTR2CODEP:
                case self::SYS_XQSTRJOIN:
                case self::SYS_XQSUBSTRAFT:
                case self::SYS_XQSUBSTRBEF:
                case self::SYS_XQTOKENIZE:
                case self::SYS_XQTREATAS:
                case self::SYS_XQ_UPKXML2SQL:
                case self::SYS_XQXFORM:
                case self::SYS_XSID_TO_RAW:
                case self::SYS_ZMAP_FILTER:
                case self::SYS_ZMAP_REFRESH:
                case self::TABLE_LOOKUP_BY_NL:
                case self::TABLESPACE_NO:
                case self::TABLESPACE:
                case self::TABLES:
                case self::TABLE_STATS:
                case self::TABLE:
                case self::TABNO:
                case self::TAG:
                case self::TANH:
                case self::TAN:
                case self::TBLORIDXPARTNUM:
                case self::TEMPFILE:
                case self::TEMPLATE:
                case self::TEMPORARY:
                case self::TEMP_TABLE:
                case self::TEST:
                case self::TEXT:
                case self::THAN:
                case self::THEN:
                case self::THE:
                case self::THREAD:
                case self::THROUGH:
                case self::TIER:
                case self::TIES:
                case self::TIMEOUT:
                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                case self::TIMESTAMP:
                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                case self::TIMESTAMP_UNCONSTRAINED:
                case self::TIMES:
                case self::TIME:
                case self::TIMEZONE_ABBR:
                case self::TIMEZONE_HOUR:
                case self::TIMEZONE_MINUTE:
                case self::TIMEZONE_OFFSET:
                case self::TIMEZONE_REGION:
                case self::TIME_ZONE:
                case self::TIV_GB:
                case self::TIV_SSF:
                case self::TO_ACLID:
                case self::TO_BINARY_DOUBLE:
                case self::TO_BINARY_FLOAT:
                case self::TO_BLOB:
                case self::TO_CLOB:
                case self::TO_DSINTERVAL:
                case self::TO_LOB:
                case self::TO_MULTI_BYTE:
                case self::TO_NCHAR:
                case self::TO_NCLOB:
                case self::TO_NUMBER:
                case self::TOPLEVEL:
                case self::TO_SINGLE_BYTE:
                case self::TO_TIMESTAMP:
                case self::TO_TIMESTAMP_TZ:
                case self::TO_TIME:
                case self::TO_TIME_TZ:
                case self::TO_YMINTERVAL:
                case self::TRACE:
                case self::TRACING:
                case self::TRACKING:
                case self::TRAILING:
                case self::TRANSACTION:
                case self::TRANSFORM_DISTINCT_AGG:
                case self::TRANSITIONAL:
                case self::TRANSITION:
                case self::TRANSLATE:
                case self::TRANSLATION:
                case self::TREAT:
                case self::TRIGGERS:
                case self::TRIGGER:
                case self::TRUE:
                case self::TRUNCATE:
                case self::TRUNC:
                case self::TRUSTED:
                case self::TRUST:
                case self::TUNING:
                case self::TX:
                case self::TYPES:
                case self::TYPE:
                case self::TZ_OFFSET:
                case self::UB2:
                case self::UBA:
                case self::UCS2:
                case self::UID:
                case self::UNARCHIVED:
                case self::UNBOUNDED:
                case self::UNBOUND:
                case self::UNCONDITIONAL:
                case self::UNDER:
                case self::UNDO:
                case self::UNDROP:
                case self::UNIFORM:
                case self::UNISTR:
                case self::UNLIMITED:
                case self::UNLOAD:
                case self::UNLOCK:
                case self::UNMATCHED:
                case self::UNNEST_INNERJ_DISTINCT_VIEW:
                case self::UNNEST_NOSEMIJ_NODISTINCTVIEW:
                case self::UNNEST_SEMIJ_VIEW:
                case self::UNNEST:
                case self::UNPACKED:
                case self::UNPIVOT:
                case self::UNPLUG:
                case self::UNPROTECTED:
                case self::UNQUIESCE:
                case self::UNRECOVERABLE:
                case self::UNRESTRICTED:
                case self::UNSUBSCRIBE:
                case self::UNTIL:
                case self::UNUSABLE:
                case self::UNUSED:
                case self::UPDATABLE:
                case self::UPDATED:
                case self::UPDATEXML:
                case self::UPD_INDEXES:
                case self::UPD_JOININDEX:
                case self::UPGRADE:
                case self::UPPER:
                case self::UPSERT:
                case self::UROWID:
                case self::USABLE:
                case self::USAGE:
                case self::USE_ANTI:
                case self::USE_CONCAT:
                case self::USE_CUBE:
                case self::USE_HASH_AGGREGATION:
                case self::USE_HASH_GBY_FOR_PUSHDOWN:
                case self::USE_HASH:
                case self::USE_HIDDEN_PARTITIONS:
                case self::USE_INVISIBLE_INDEXES:
                case self::USE_MERGE_CARTESIAN:
                case self::USE_MERGE:
                case self::USE_NL:
                case self::USE_NL_WITH_INDEX:
                case self::USE_PRIVATE_OUTLINES:
                case self::USER_DATA:
                case self::USER_DEFINED:
                case self::USERENV:
                case self::USERGROUP:
                case self::USER_RECYCLEBIN:
                case self::USERS:
                case self::USER_TABLESPACES:
                case self::USER:
                case self::USE_SEMI:
                case self::USE_STORED_OUTLINES:
                case self::USE_TTT_FOR_GSETS:
                case self::USE:
                case self::USE_VECTOR_AGGREGATION:
                case self::USE_WEAK_NAME_RESL:
                case self::USING_NO_EXPAND:
                case self::USING:
                case self::UTF16BE:
                case self::UTF16LE:
                case self::UTF32:
                case self::UTF8:
                case self::V1:
                case self::V2:
                case self::VALIDATE:
                case self::VALIDATION:
                case self::VALID_TIME_END:
                case self::VALUE:
                case self::VARCHAR2:
                case self::VARCHAR:
                case self::VARIABLE:
                case self::VAR_POP:
                case self::VARRAYS:
                case self::VARRAY:
                case self::VAR_SAMP:
                case self::VARYING:
                case self::VECTOR_READ_TRACE:
                case self::VECTOR_READ:
                case self::VECTOR_TRANSFORM_DIMS:
                case self::VECTOR_TRANSFORM_FACT:
                case self::VECTOR_TRANSFORM:
                case self::VERIFIER:
                case self::VERIFY:
                case self::VERSIONING:
                case self::VERSIONS_ENDSCN:
                case self::VERSIONS_ENDTIME:
                case self::VERSIONS_OPERATION:
                case self::VERSIONS_STARTSCN:
                case self::VERSIONS_STARTTIME:
                case self::VERSIONS:
                case self::VERSIONS_XID:
                case self::VERSION:
                case self::VIOLATION:
                case self::VIRTUAL:
                case self::VISIBILITY:
                case self::VISIBLE:
                case self::VOLUME:
                case self::VSIZE:
                case self::WAIT:
                case self::WALLET:
                case self::WARNING:
                case self::WEEKS:
                case self::WEEK:
                case self::WELLFORMED:
                case self::WHENEVER:
                case self::WHEN:
                case self::WHILE:
                case self::WHITESPACE:
                case self::WIDTH_BUCKET:
                case self::WITHIN:
                case self::WITHOUT:
                case self::WITH_PLSQL:
                case self::WORK:
                case self::WRAPPED:
                case self::WRAPPER:
                case self::WRITE:
                case self::XDB_FASTPATH_INSERT:
                case self::X_DYN_PRUNE:
                case self::XID:
                case self::XML2OBJECT:
                case self::XMLAGG:
                case self::XMLATTRIBUTES:
                case self::XMLCAST:
                case self::XMLCDATA:
                case self::XMLCOLATTVAL:
                case self::XMLCOMMENT:
                case self::XMLCONCAT:
                case self::XMLDIFF:
                case self::XML_DML_RWT_STMT:
                case self::XMLELEMENT:
                case self::XMLEXISTS2:
                case self::XMLEXISTS:
                case self::XMLFOREST:
                case self::XMLINDEX_REWRITE_IN_SELECT:
                case self::XMLINDEX_REWRITE:
                case self::XMLINDEX_SEL_IDX_TBL:
                case self::XMLISNODE:
                case self::XMLISVALID:
                case self::XMLNAMESPACES:
                case self::XMLPARSE:
                case self::XMLPATCH:
                case self::XMLPI:
                case self::XMLQUERYVAL:
                case self::XMLQUERY:
                case self::XMLROOT:
                case self::XMLSCHEMA:
                case self::XMLSERIALIZE:
                case self::XMLTABLE:
                case self::XMLTRANSFORMBLOB:
                case self::XMLTRANSFORM:
                case self::XMLTYPE:
                case self::XML:
                case self::XPATHTABLE:
                case self::XS_SYS_CONTEXT:
                case self::XS:
                case self::YEARS:
                case self::YEAR:
                case self::YES:
                case self::YMINTERVAL_UNCONSTRAINED:
                case self::ZONEMAP:
                case self::ZONE:
                case self::PREDICTION:
                case self::PREDICTION_BOUNDS:
                case self::PREDICTION_COST:
                case self::PREDICTION_DETAILS:
                case self::PREDICTION_PROBABILITY:
                case self::PREDICTION_SET:
                case self::CUME_DIST:
                case self::DENSE_RANK:
                case self::LISTAGG:
                case self::PERCENT_RANK:
                case self::PERCENTILE_CONT:
                case self::PERCENTILE_DISC:
                case self::RANK:
                case self::AVG:
                case self::CORR:
                case self::COVAR_:
                case self::LAG:
                case self::LEAD:
                case self::MAX:
                case self::MEDIAN:
                case self::MIN:
                case self::NTILE:
                case self::NVL:
                case self::RATIO_TO_REPORT:
                case self::REGR_:
                case self::ROUND:
                case self::ROW_NUMBER:
                case self::SUBSTR:
                case self::TO_CHAR:
                case self::TRIM:
                case self::SUM:
                case self::STDDEV:
                case self::VAR_:
                case self::VARIANCE:
                case self::LEAST:
                case self::GREATEST:
                case self::TO_DATE:
                case self::PERIOD:
                case self::DELIMITED_ID:
                case self::BINDVAR:
                case self::COLON:
                case self::INTRODUCER:
                case self::REGULAR_ID:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(12030);
                    $this->variable_name();
                    break;

                case self::CHAR_STRING:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(12031);
                    $this->match(self::CHAR_STRING);
                    break;

                case self::NATIONAL_CHAR_STRING_LIT:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(12032);
                    $this->match(self::NATIONAL_CHAR_STRING_LIT);
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function identifier(): Context\IdentifierContext
    {
        $localContext = new Context\IdentifierContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1486, self::RULE_identifier);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12037);
            $this->errorHandler->sync($this);
            $_la = $this->input->LA(1);

            if ($_la === self::INTRODUCER) {
                $this->setState(12035);
                $this->match(self::INTRODUCER);
                $this->setState(12036);
                $this->char_set_name();
            }
            $this->setState(12039);
            $this->id_expression();
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function id_expression(): Context\Id_expressionContext
    {
        $localContext = new Context\Id_expressionContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1488, self::RULE_id_expression);

        try {
            $this->setState(12043);
            $this->errorHandler->sync($this);

            switch ($this->input->LA(1)) {
                case self::ABORT:
                case self::ABS:
                case self::ACCESS:
                case self::ACCESSED:
                case self::ACCOUNT:
                case self::ACL:
                case self::ACOS:
                case self::ACTION:
                case self::ACTIONS:
                case self::ACTIVATE:
                case self::ACTIVE:
                case self::ACTIVE_COMPONENT:
                case self::ACTIVE_DATA:
                case self::ACTIVE_FUNCTION:
                case self::ACTIVE_TAG:
                case self::ACTIVITY:
                case self::ADAPTIVE_PLAN:
                case self::ADD:
                case self::ADD_COLUMN:
                case self::ADD_GROUP:
                case self::ADD_MONTHS:
                case self::ADJ_DATE:
                case self::ADMIN:
                case self::ADMINISTER:
                case self::ADMINISTRATOR:
                case self::ADVANCED:
                case self::ADVISE:
                case self::ADVISOR:
                case self::AFD_DISKSTRING:
                case self::AFTER:
                case self::AGENT:
                case self::AGGREGATE:
                case self::A_LETTER:
                case self::ALIAS:
                case self::ALLOCATE:
                case self::ALLOW:
                case self::ALL_ROWS:
                case self::ALWAYS:
                case self::ANALYZE:
                case self::ANCILLARY:
                case self::AND_EQUAL:
                case self::ANOMALY:
                case self::ANSI_REARCH:
                case self::ANTIJOIN:
                case self::ANYSCHEMA:
                case self::APPEND:
                case self::APPENDCHILDXML:
                case self::APPEND_VALUES:
                case self::APPLICATION:
                case self::APPLY:
                case self::APPROX_COUNT_DISTINCT:
                case self::ARCHIVAL:
                case self::ARCHIVE:
                case self::ARCHIVED:
                case self::ARCHIVELOG:
                case self::ARRAY:
                case self::ASCII:
                case self::ASCIISTR:
                case self::ASIN:
                case self::ASIS:
                case self::ASSEMBLY:
                case self::ASSIGN:
                case self::ASSOCIATE:
                case self::ASYNC:
                case self::ASYNCHRONOUS:
                case self::ATAN2:
                case self::ATAN:
                case self::AT:
                case self::ATTRIBUTE:
                case self::ATTRIBUTES:
                case self::AUTHENTICATED:
                case self::AUTHENTICATION:
                case self::AUTHID:
                case self::AUTHORIZATION:
                case self::AUTOALLOCATE:
                case self::AUTO:
                case self::AUTOEXTEND:
                case self::AUTO_LOGIN:
                case self::AUTOMATIC:
                case self::AUTONOMOUS_TRANSACTION:
                case self::AUTO_REOPTIMIZE:
                case self::AVAILABILITY:
                case self::AVRO:
                case self::BACKGROUND:
                case self::BACKUP:
                case self::BASIC:
                case self::BASICFILE:
                case self::BATCH:
                case self::BATCHSIZE:
                case self::BATCH_TABLE_ACCESS_BY_ROWID:
                case self::BECOME:
                case self::BEFORE:
                case self::BEGIN:
                case self::BEGINNING:
                case self::BEGIN_OUTLINE_DATA:
                case self::BEHALF:
                case self::BEQUEATH:
                case self::BFILE:
                case self::BFILENAME:
                case self::BIGFILE:
                case self::BINARY:
                case self::BINARY_DOUBLE:
                case self::BINARY_DOUBLE_INFINITY:
                case self::BINARY_DOUBLE_NAN:
                case self::BINARY_FLOAT:
                case self::BINARY_FLOAT_INFINITY:
                case self::BINARY_FLOAT_NAN:
                case self::BINARY_INTEGER:
                case self::BIND_AWARE:
                case self::BINDING:
                case self::BIN_TO_NUM:
                case self::BITAND:
                case self::BITMAP_AND:
                case self::BITMAP:
                case self::BITMAPS:
                case self::BITMAP_TREE:
                case self::BITS:
                case self::BLOB:
                case self::BLOCK:
                case self::BLOCK_RANGE:
                case self::BLOCKS:
                case self::BLOCKSIZE:
                case self::BODY:
                case self::BOOLEAN:
                case self::BOTH:
                case self::BOUND:
                case self::BRANCH:
                case self::BREADTH:
                case self::BROADCAST:
                case self::BSON:
                case self::BUFFER:
                case self::BUFFER_CACHE:
                case self::BUFFER_POOL:
                case self::BUILD:
                case self::BULK:
                case self::BYPASS_RECURSIVE_CHECK:
                case self::BYPASS_UJVC:
                case self::BYTE:
                case self::CACHE:
                case self::CACHE_CB:
                case self::CACHE_INSTANCES:
                case self::CACHE_TEMP_TABLE:
                case self::CACHING:
                case self::CALCULATED:
                case self::CALLBACK:
                case self::CALL:
                case self::CANCEL:
                case self::CAPACITY:
                case self::CARDINALITY:
                case self::CASCADE:
                case self::CASE:
                case self::CAST:
                case self::CATEGORY:
                case self::CDBDEFAULT:
                case self::CEIL:
                case self::CELL_FLASH_CACHE:
                case self::CERTIFICATE:
                case self::CFILE:
                case self::CHAINED:
                case self::CHANGE:
                case self::CHANGE_DUPKEY_ERROR_INDEX:
                case self::CHARACTER:
                case self::CHAR:
                case self::CHAR_CS:
                case self::CHARTOROWID:
                case self::CHECK_ACL_REWRITE:
                case self::CHECKPOINT:
                case self::CHILD:
                case self::CHOOSE:
                case self::CHR:
                case self::CHUNK:
                case self::CLASS:
                case self::CLASSIFIER:
                case self::CLEANUP:
                case self::CLEAR:
                case self::C_LETTER:
                case self::CLIENT:
                case self::CLOB:
                case self::CLONE:
                case self::CLOSE_CACHED_OPEN_CURSORS:
                case self::CLOSE:
                case self::CLUSTER_BY_ROWID:
                case self::CLUSTER:
                case self::CLUSTER_DETAILS:
                case self::CLUSTER_DISTANCE:
                case self::CLUSTER_ID:
                case self::CLUSTERING:
                case self::CLUSTERING_FACTOR:
                case self::CLUSTER_PROBABILITY:
                case self::CLUSTER_SET:
                case self::COALESCE:
                case self::COALESCE_SQ:
                case self::COARSE:
                case self::CO_AUTH_IND:
                case self::COLD:
                case self::COLLECT:
                case self::COLUMNAR:
                case self::COLUMN_AUTH_INDICATOR:
                case self::COLUMN:
                case self::COLUMNS:
                case self::COLUMN_STATS:
                case self::COLUMN_VALUE:
                case self::COMMENT:
                case self::COMMIT:
                case self::COMMITTED:
                case self::COMMON_DATA:
                case self::COMPACT:
                case self::COMPATIBILITY:
                case self::COMPILE:
                case self::COMPLETE:
                case self::COMPLIANCE:
                case self::COMPONENT:
                case self::COMPONENTS:
                case self::COMPOSE:
                case self::COMPOSITE:
                case self::COMPOSITE_LIMIT:
                case self::COMPOUND:
                case self::COMPUTE:
                case self::CONCAT:
                case self::CON_DBID_TO_ID:
                case self::CONDITIONAL:
                case self::CONDITION:
                case self::CONFIRM:
                case self::CONFORMING:
                case self::CON_GUID_TO_ID:
                case self::CON_ID:
                case self::CON_NAME_TO_ID:
                case self::CONNECT_BY_CB_WHR_ONLY:
                case self::CONNECT_BY_COMBINE_SW:
                case self::CONNECT_BY_COST_BASED:
                case self::CONNECT_BY_ELIM_DUPS:
                case self::CONNECT_BY_FILTERING:
                case self::CONNECT_BY_ISCYCLE:
                case self::CONNECT_BY_ISLEAF:
                case self::CONNECT_BY_ROOT:
                case self::CONNECT_TIME:
                case self::CONSIDER:
                case self::CONSISTENT:
                case self::CONSTANT:
                case self::CONST:
                case self::CONSTRAINT:
                case self::CONSTRAINTS:
                case self::CONSTRUCTOR:
                case self::CONTAINER:
                case self::CONTAINER_DATA:
                case self::CONTAINERS:
                case self::CONTENT:
                case self::CONTENTS:
                case self::CONTEXT:
                case self::CONTINUE:
                case self::CONTROLFILE:
                case self::CON_UID_TO_ID:
                case self::CONVERT:
                case self::COOKIE:
                case self::COPY:
                case self::CORR_K:
                case self::CORR_S:
                case self::CORRUPTION:
                case self::CORRUPT_XID_ALL:
                case self::CORRUPT_XID:
                case self::COS:
                case self::COSH:
                case self::COST:
                case self::COST_XML_QUERY_REWRITE:
                case self::COUNT:
                case self::COVAR_POP:
                case self::COVAR_SAMP:
                case self::CPU_COSTING:
                case self::CPU_PER_CALL:
                case self::CPU_PER_SESSION:
                case self::CRASH:
                case self::CREATE_FILE_DEST:
                case self::CREATE_STORED_OUTLINES:
                case self::CREATION:
                case self::CREDENTIAL:
                case self::CRITICAL:
                case self::CROSS:
                case self::CROSSEDITION:
                case self::CSCONVERT:
                case self::CUBE_AJ:
                case self::CUBE:
                case self::CUBE_GB:
                case self::CUBE_SJ:
                case self::CUME_DISTM:
                case self::CURRENT:
                case self::CURRENT_DATE:
                case self::CURRENT_SCHEMA:
                case self::CURRENT_TIME:
                case self::CURRENT_TIMESTAMP:
                case self::CURRENT_USER:
                case self::CURRENTV:
                case self::CURSOR:
                case self::CURSOR_SHARING_EXACT:
                case self::CURSOR_SPECIFIC_SEGMENT:
                case self::CUSTOMDATUM:
                case self::CV:
                case self::CYCLE:
                case self::DANGLING:
                case self::DATABASE:
                case self::DATA:
                case self::DATAFILE:
                case self::DATAFILES:
                case self::DATAMOVEMENT:
                case self::DATAOBJNO:
                case self::DATAOBJ_TO_MAT_PARTITION:
                case self::DATAOBJ_TO_PARTITION:
                case self::DATAPUMP:
                case self::DATA_SECURITY_REWRITE_LIMIT:
                case self::DATE_MODE:
                case self::DAY:
                case self::DAYS:
                case self::DBA:
                case self::DBA_RECYCLEBIN:
                case self::DBMS_STATS:
                case self::DB_ROLE_CHANGE:
                case self::DBTIMEZONE:
                case self::DB_UNIQUE_NAME:
                case self::DB_VERSION:
                case self::DDL:
                case self::DEALLOCATE:
                case self::DEBUG:
                case self::DEBUGGER:
                case self::DEC:
                case self::DECIMAL:
                case self::DECLARE:
                case self::DECOMPOSE:
                case self::DECORRELATE:
                case self::DECR:
                case self::DECREMENT:
                case self::DECRYPT:
                case self::DEDUPLICATE:
                case self::DEFAULTS:
                case self::DEFERRABLE:
                case self::DEFERRED:
                case self::DEFINED:
                case self::DEFINE:
                case self::DEFINER:
                case self::DEGREE:
                case self::DELAY:
                case self::DELEGATE:
                case self::DELETE_ALL:
                case self::DELETE:
                case self::DELETEXML:
                case self::DEMAND:
                case self::DENSE_RANKM:
                case self::DEPENDENT:
                case self::DEPTH:
                case self::DEQUEUE:
                case self::DEREF:
                case self::DEREF_NO_REWRITE:
                case self::DESTROY:
                case self::DETACHED:
                case self::DETERMINES:
                case self::DETERMINISTIC:
                case self::DICTIONARY:
                case self::DIMENSION:
                case self::DIMENSIONS:
                case self::DIRECT_LOAD:
                case self::DIRECTORY:
                case self::DIRECT_PATH:
                case self::DISABLE_ALL:
                case self::DISABLE:
                case self::DISABLE_PARALLEL_DML:
                case self::DISABLE_PRESET:
                case self::DISABLE_RPKE:
                case self::DISALLOW:
                case self::DISASSOCIATE:
                case self::DISCARD:
                case self::DISCONNECT:
                case self::DISK:
                case self::DISKGROUP:
                case self::DISKS:
                case self::DISMOUNT:
                case self::DISTINGUISHED:
                case self::DISTRIBUTED:
                case self::DISTRIBUTE:
                case self::DML:
                case self::DML_UPDATE:
                case self::DOCFIDELITY:
                case self::DOCUMENT:
                case self::DOMAIN_INDEX_FILTER:
                case self::DOMAIN_INDEX_NO_SORT:
                case self::DOMAIN_INDEX_SORT:
                case self::DOUBLE:
                case self::DOWNGRADE:
                case self::DRIVING_SITE:
                case self::DROP_COLUMN:
                case self::DROP_GROUP:
                case self::DSINTERVAL_UNCONSTRAINED:
                case self::DST_UPGRADE_INSERT_CONV:
                case self::DUMP:
                case self::DUPLICATE:
                case self::DV:
                case self::DYNAMIC:
                case self::DYNAMIC_SAMPLING:
                case self::DYNAMIC_SAMPLING_EST_CDN:
                case self::EACH:
                case self::EDITIONABLE:
                case self::EDITION:
                case self::EDITIONING:
                case self::EDITIONS:
                case self::ELEMENT:
                case self::ELIM_GROUPBY:
                case self::ELIMINATE_JOIN:
                case self::ELIMINATE_OBY:
                case self::ELIMINATE_OUTER_JOIN:
                case self::EM:
                case self::EMPTY_BLOB:
                case self::EMPTY_CLOB:
                case self::EMPTY:
                case self::ENABLE_ALL:
                case self::ENABLE:
                case self::ENABLE_PARALLEL_DML:
                case self::ENABLE_PRESET:
                case self::ENCODING:
                case self::ENCRYPT:
                case self::ENCRYPTION:
                case self::END_OUTLINE_DATA:
                case self::ENFORCED:
                case self::ENFORCE:
                case self::ENQUEUE:
                case self::ENTERPRISE:
                case self::ENTITYESCAPING:
                case self::ENTRY:
                case self::EQUIPART:
                case self::ERR:
                case self::ERROR_ARGUMENT:
                case self::ERROR:
                case self::ERROR_ON_OVERLAP_TIME:
                case self::ERRORS:
                case self::ESCAPE:
                case self::ESTIMATE:
                case self::EVAL:
                case self::EVALNAME:
                case self::EVALUATE:
                case self::EVALUATION:
                case self::EVENTS:
                case self::EVERY:
                case self::EXCEPT:
                case self::EXCEPTION:
                case self::EXCEPTION_INIT:
                case self::EXCEPTIONS:
                case self::EXCHANGE:
                case self::EXCLUDE:
                case self::EXCLUDING:
                case self::EXECUTE:
                case self::EXEMPT:
                case self::EXISTING:
                case self::EXISTS:
                case self::EXISTSNODE:
                case self::EXIT:
                case self::EXPAND_GSET_TO_UNION:
                case self::EXPAND_TABLE:
                case self::EXP:
                case self::EXPIRE:
                case self::EXPLAIN:
                case self::EXPLOSION:
                case self::EXPORT:
                case self::EXPR_CORR_CHECK:
                case self::EXPRESS:
                case self::EXTENDS:
                case self::EXTENT:
                case self::EXTENTS:
                case self::EXTERNAL:
                case self::EXTERNALLY:
                case self::EXTRACTCLOBXML:
                case self::EXTRACT:
                case self::EXTRACTVALUE:
                case self::EXTRA:
                case self::FACILITY:
                case self::FACT:
                case self::FACTOR:
                case self::FACTORIZE_JOIN:
                case self::FAILED:
                case self::FAILED_LOGIN_ATTEMPTS:
                case self::FAILGROUP:
                case self::FAILOVER:
                case self::FAILURE:
                case self::FALSE:
                case self::FAMILY:
                case self::FAR:
                case self::FAST:
                case self::FASTSTART:
                case self::FBTSCAN:
                case self::FEATURE_DETAILS:
                case self::FEATURE_ID:
                case self::FEATURE_SET:
                case self::FEATURE_VALUE:
                case self::FETCH:
                case self::FILE:
                case self::FILE_NAME_CONVERT:
                case self::FILESYSTEM_LIKE_LOGGING:
                case self::FILTER:
                case self::FINAL:
                case self::FINE:
                case self::FINISH:
                case self::FIRST:
                case self::FIRSTM:
                case self::FIRST_ROWS:
                case self::FIRST_VALUE:
                case self::FIXED_VIEW_DATA:
                case self::FLAGGER:
                case self::FLASHBACK:
                case self::FLASH_CACHE:
                case self::FLOAT:
                case self::FLOB:
                case self::FLOOR:
                case self::FLUSH:
                case self::FOLDER:
                case self::FOLLOWING:
                case self::FOLLOWS:
                case self::FORALL:
                case self::FORCE:
                case self::FORCE_XML_QUERY_REWRITE:
                case self::FOREIGN:
                case self::FOREVER:
                case self::FORMAT:
                case self::FORWARD:
                case self::FRAGMENT_NUMBER:
                case self::FREELIST:
                case self::FREELISTS:
                case self::FREEPOOLS:
                case self::FRESH:
                case self::FROM_TZ:
                case self::FULL:
                case self::FULL_OUTER_JOIN_TO_OUTER:
                case self::FUNCTION:
                case self::FUNCTIONS:
                case self::GATHER_OPTIMIZER_STATISTICS:
                case self::GATHER_PLAN_STATISTICS:
                case self::GBY_CONC_ROLLUP:
                case self::GBY_PUSHDOWN:
                case self::GENERATED:
                case self::GET:
                case self::GLOBAL:
                case self::GLOBALLY:
                case self::GLOBAL_NAME:
                case self::GLOBAL_TOPIC_ENABLED:
                case self::GROUP_BY:
                case self::GROUP_ID:
                case self::GROUPING:
                case self::GROUPING_ID:
                case self::GROUPS:
                case self::GUARANTEED:
                case self::GUARANTEE:
                case self::GUARD:
                case self::HASH_AJ:
                case self::HASH:
                case self::HASHKEYS:
                case self::HASH_SJ:
                case self::HEADER:
                case self::HEAP:
                case self::HELP:
                case self::HEXTORAW:
                case self::HEXTOREF:
                case self::HIDDEN_KEYWORD:
                case self::HIDE:
                case self::HIERARCHY:
                case self::HIGH:
                case self::HINTSET_BEGIN:
                case self::HINTSET_END:
                case self::HOT:
                case self::HOUR:
                case self::HWM_BROKERED:
                case self::HYBRID:
                case self::IDENTIFIER:
                case self::IDENTITY:
                case self::IDGENERATORS:
                case self::ID:
                case self::IDLE_TIME:
                case self::IF:
                case self::IGNORE:
                case self::IGNORE_OPTIM_EMBEDDED_HINTS:
                case self::IGNORE_ROW_ON_DUPKEY_INDEX:
                case self::IGNORE_WHERE_CLAUSE:
                case self::ILM:
                case self::IMMEDIATE:
                case self::IMPACT:
                case self::IMPORT:
                case self::INACTIVE:
                case self::INCLUDE:
                case self::INCLUDE_VERSION:
                case self::INCLUDING:
                case self::INCREMENTAL:
                case self::INCREMENT:
                case self::INCR:
                case self::INDENT:
                case self::INDEX_ASC:
                case self::INDEX_COMBINE:
                case self::INDEX_DESC:
                case self::INDEXED:
                case self::INDEXES:
                case self::INDEX_FFS:
                case self::INDEX_FILTER:
                case self::INDEXING:
                case self::INDEX_JOIN:
                case self::INDEX_ROWS:
                case self::INDEX_RRS:
                case self::INDEX_RS_ASC:
                case self::INDEX_RS_DESC:
                case self::INDEX_RS:
                case self::INDEX_SCAN:
                case self::INDEX_SKIP_SCAN:
                case self::INDEX_SS_ASC:
                case self::INDEX_SS_DESC:
                case self::INDEX_SS:
                case self::INDEX_STATS:
                case self::INDEXTYPE:
                case self::INDEXTYPES:
                case self::INDICATOR:
                case self::INDICES:
                case self::INFINITE:
                case self::INFORMATIONAL:
                case self::INHERIT:
                case self::INITCAP:
                case self::INITIAL:
                case self::INITIALIZED:
                case self::INITIALLY:
                case self::INITRANS:
                case self::INLINE:
                case self::INLINE_XMLTYPE_NT:
                case self::INMEMORY:
                case self::IN_MEMORY_METADATA:
                case self::INMEMORY_PRUNING:
                case self::INNER:
                case self::INOUT:
                case self::INPLACE:
                case self::INSERTCHILDXMLAFTER:
                case self::INSERTCHILDXMLBEFORE:
                case self::INSERTCHILDXML:
                case self::INSERTXMLAFTER:
                case self::INSERTXMLBEFORE:
                case self::INSTANCE:
                case self::INSTANCES:
                case self::INSTANTIABLE:
                case self::INSTANTLY:
                case self::INSTEAD:
                case self::INSTR2:
                case self::INSTR4:
                case self::INSTRB:
                case self::INSTRC:
                case self::INSTR:
                case self::INTEGER:
                case self::INTERLEAVED:
                case self::INTERMEDIATE:
                case self::INTERNAL_CONVERT:
                case self::INTERNAL_USE:
                case self::INTERPRETED:
                case self::INTERVAL:
                case self::INT:
                case self::INVALIDATE:
                case self::INVISIBLE:
                case self::IN_XQUERY:
                case self::ISOLATION:
                case self::ISOLATION_LEVEL:
                case self::ITERATE:
                case self::ITERATION_NUMBER:
                case self::JAVA:
                case self::JOB:
                case self::JOIN:
                case self::JSON_ARRAYAGG:
                case self::JSON_ARRAY:
                case self::JSON_EQUAL:
                case self::JSON_EXISTS2:
                case self::JSON_EXISTS:
                case self::JSONGET:
                case self::JSON:
                case self::JSON_OBJECTAGG:
                case self::JSON_OBJECT:
                case self::JSONPARSE:
                case self::JSON_QUERY:
                case self::JSON_SERIALIZE:
                case self::JSON_TABLE:
                case self::JSON_TEXTCONTAINS2:
                case self::JSON_TEXTCONTAINS:
                case self::JSON_VALUE:
                case self::KEEP_DUPLICATES:
                case self::KEEP:
                case self::KERBEROS:
                case self::KEY:
                case self::KEY_LENGTH:
                case self::KEYSIZE:
                case self::KEYS:
                case self::KEYSTORE:
                case self::KILL:
                case self::LABEL:
                case self::LANGUAGE:
                case self::LAST_DAY:
                case self::LAST:
                case self::LAST_VALUE:
                case self::LATERAL:
                case self::LAX:
                case self::LAYER:
                case self::LDAP_REGISTRATION_ENABLED:
                case self::LDAP_REGISTRATION:
                case self::LDAP_REG_SYNC_INTERVAL:
                case self::LEADING:
                case self::LEFT:
                case self::LENGTH2:
                case self::LENGTH4:
                case self::LENGTHB:
                case self::LENGTHC:
                case self::LENGTH:
                case self::LESS:
                case self::LEVEL:
                case self::LEVELS:
                case self::LIBRARY:
                case self::LIFECYCLE:
                case self::LIFE:
                case self::LIFETIME:
                case self::LIKE2:
                case self::LIKE4:
                case self::LIKEC:
                case self::LIKE_EXPAND:
                case self::LIMIT:
                case self::LINEAR:
                case self::LINK:
                case self::LIST:
                case self::LN:
                case self::LNNVL:
                case self::LOAD:
                case self::LOB:
                case self::LOBNVL:
                case self::LOBS:
                case self::LOCAL_INDEXES:
                case self::LOCAL:
                case self::LOCALTIME:
                case self::LOCALTIMESTAMP:
                case self::LOCATION:
                case self::LOCATOR:
                case self::LOCKED:
                case self::LOCKING:
                case self::LOGFILE:
                case self::LOGFILES:
                case self::LOGGING:
                case self::LOGICAL:
                case self::LOGICAL_READS_PER_CALL:
                case self::LOGICAL_READS_PER_SESSION:
                case self::LOG:
                case self::LOGMINING:
                case self::LOGOFF:
                case self::LOGON:
                case self::LOG_READ_ONLY_VIOLATIONS:
                case self::LONG:
                case self::LOOP:
                case self::LOWER:
                case self::LOW:
                case self::LPAD:
                case self::LTRIM:
                case self::MAIN:
                case self::MAKE_REF:
                case self::MANAGED:
                case self::MANAGE:
                case self::MANAGEMENT:
                case self::MANAGER:
                case self::MANUAL:
                case self::MAP:
                case self::MAPPING:
                case self::MASTER:
                case self::MATCHED:
                case self::MATCHES:
                case self::MATCH:
                case self::MATCH_NUMBER:
                case self::MATCH_RECOGNIZE:
                case self::MATERIALIZED:
                case self::MATERIALIZE:
                case self::MAXARCHLOGS:
                case self::MAXDATAFILES:
                case self::MAXEXTENTS:
                case self::MAXIMIZE:
                case self::MAXINSTANCES:
                case self::MAXLOGFILES:
                case self::MAXLOGHISTORY:
                case self::MAXLOGMEMBERS:
                case self::MAX_SHARED_TEMP_SIZE:
                case self::MAXSIZE:
                case self::MAXTRANS:
                case self::MAXVALUE:
                case self::MEASURE:
                case self::MEASURES:
                case self::MEDIUM:
                case self::MEMBER:
                case self::MEMCOMPRESS:
                case self::MEMORY:
                case self::MERGEACTIONS:
                case self::MERGE_AJ:
                case self::MERGE_CONST_ON:
                case self::MERGE:
                case self::MERGE_SJ:
                case self::METADATA:
                case self::METHOD:
                case self::MIGRATE:
                case self::MIGRATION:
                case self::MINEXTENTS:
                case self::MINIMIZE:
                case self::MINIMUM:
                case self::MINING:
                case self::MINUS_NULL:
                case self::MINUTE:
                case self::MINVALUE:
                case self::MIRRORCOLD:
                case self::MIRRORHOT:
                case self::MIRROR:
                case self::MLSLABEL:
                case self::MODEL_COMPILE_SUBQUERY:
                case self::MODEL_DONTVERIFY_UNIQUENESS:
                case self::MODEL_DYNAMIC_SUBQUERY:
                case self::MODEL_MIN_ANALYSIS:
                case self::MODEL:
                case self::MODEL_NB:
                case self::MODEL_NO_ANALYSIS:
                case self::MODEL_PBY:
                case self::MODEL_PUSH_REF:
                case self::MODEL_SV:
                case self::MODIFICATION:
                case self::MODIFY_COLUMN_TYPE:
                case self::MODIFY:
                case self::MOD:
                case self::MODULE:
                case self::MONITORING:
                case self::MONITOR:
                case self::MONTH:
                case self::MONTHS_BETWEEN:
                case self::MONTHS:
                case self::MOUNT:
                case self::MOUNTPATH:
                case self::MOVEMENT:
                case self::MOVE:
                case self::MULTIDIMENSIONAL:
                case self::MULTISET:
                case self::MV_MERGE:
                case self::NAMED:
                case self::NAME:
                case self::NAMESPACE:
                case self::NAN:
                case self::NANVL:
                case self::NATIONAL:
                case self::NATIVE_FULL_OUTER_JOIN:
                case self::NATIVE:
                case self::NATURAL:
                case self::NAV:
                case self::NCHAR_CS:
                case self::NCHAR:
                case self::NCHR:
                case self::NCLOB:
                case self::NEEDED:
                case self::NEG:
                case self::NESTED:
                case self::NESTED_TABLE_FAST_INSERT:
                case self::NESTED_TABLE_GET_REFS:
                case self::NESTED_TABLE_ID:
                case self::NESTED_TABLE_SET_REFS:
                case self::NESTED_TABLE_SET_SETID:
                case self::NETWORK:
                case self::NEVER:
                case self::NEW:
                case self::NEW_TIME:
                case self::NEXT_DAY:
                case self::NEXT:
                case self::NL_AJ:
                case self::NLJ_BATCHING:
                case self::NLJ_INDEX_FILTER:
                case self::NLJ_INDEX_SCAN:
                case self::NLJ_PREFETCH:
                case self::NLS_CALENDAR:
                case self::NLS_CHARACTERSET:
                case self::NLS_CHARSET_DECL_LEN:
                case self::NLS_CHARSET_ID:
                case self::NLS_CHARSET_NAME:
                case self::NLS_COMP:
                case self::NLS_CURRENCY:
                case self::NLS_DATE_FORMAT:
                case self::NLS_DATE_LANGUAGE:
                case self::NLS_INITCAP:
                case self::NLS_ISO_CURRENCY:
                case self::NL_SJ:
                case self::NLS_LANG:
                case self::NLS_LANGUAGE:
                case self::NLS_LENGTH_SEMANTICS:
                case self::NLS_LOWER:
                case self::NLS_NCHAR_CONV_EXCP:
                case self::NLS_NUMERIC_CHARACTERS:
                case self::NLS_SORT:
                case self::NLSSORT:
                case self::NLS_SPECIAL_CHARS:
                case self::NLS_TERRITORY:
                case self::NLS_UPPER:
                case self::NO_ACCESS:
                case self::NO_ADAPTIVE_PLAN:
                case self::NO_ANSI_REARCH:
                case self::NOAPPEND:
                case self::NOARCHIVELOG:
                case self::NOAUDIT:
                case self::NO_AUTO_REOPTIMIZE:
                case self::NO_BASETABLE_MULTIMV_REWRITE:
                case self::NO_BATCH_TABLE_ACCESS_BY_ROWID:
                case self::NO_BIND_AWARE:
                case self::NO_BUFFER:
                case self::NOCACHE:
                case self::NO_CARTESIAN:
                case self::NO_CHECK_ACL_REWRITE:
                case self::NO_CLUSTER_BY_ROWID:
                case self::NO_CLUSTERING:
                case self::NO_COALESCE_SQ:
                case self::NO_COMMON_DATA:
                case self::NO_CONNECT_BY_CB_WHR_ONLY:
                case self::NO_CONNECT_BY_COMBINE_SW:
                case self::NO_CONNECT_BY_COST_BASED:
                case self::NO_CONNECT_BY_ELIM_DUPS:
                case self::NO_CONNECT_BY_FILTERING:
                case self::NOCOPY:
                case self::NO_COST_XML_QUERY_REWRITE:
                case self::NO_CPU_COSTING:
                case self::NOCPU_COSTING:
                case self::NOCYCLE:
                case self::NO_DATA_SECURITY_REWRITE:
                case self::NO_DECORRELATE:
                case self::NODELAY:
                case self::NO_DOMAIN_INDEX_FILTER:
                case self::NO_DST_UPGRADE_INSERT_CONV:
                case self::NO_ELIM_GROUPBY:
                case self::NO_ELIMINATE_JOIN:
                case self::NO_ELIMINATE_OBY:
                case self::NO_ELIMINATE_OUTER_JOIN:
                case self::NOENTITYESCAPING:
                case self::NO_EXPAND_GSET_TO_UNION:
                case self::NO_EXPAND:
                case self::NO_EXPAND_TABLE:
                case self::NO_FACT:
                case self::NO_FACTORIZE_JOIN:
                case self::NO_FILTERING:
                case self::NOFORCE:
                case self::NO_FULL_OUTER_JOIN_TO_OUTER:
                case self::NO_GATHER_OPTIMIZER_STATISTICS:
                case self::NO_GBY_PUSHDOWN:
                case self::NOGUARANTEE:
                case self::NO_INDEX_FFS:
                case self::NO_INDEX:
                case self::NO_INDEX_SS:
                case self::NO_INMEMORY:
                case self::NO_INMEMORY_PRUNING:
                case self::NOKEEP:
                case self::NO_LOAD:
                case self::NOLOCAL:
                case self::NOLOGGING:
                case self::NOMAPPING:
                case self::NOMAXVALUE:
                case self::NO_MERGE:
                case self::NOMINIMIZE:
                case self::NOMINVALUE:
                case self::NO_MODEL_PUSH_REF:
                case self::NO_MONITORING:
                case self::NOMONITORING:
                case self::NO_MONITOR:
                case self::NO_MULTIMV_REWRITE:
                case self::NO_NATIVE_FULL_OUTER_JOIN:
                case self::NONBLOCKING:
                case self::NONEDITIONABLE:
                case self::NONE:
                case self::NO_NLJ_BATCHING:
                case self::NO_NLJ_PREFETCH:
                case self::NO:
                case self::NONSCHEMA:
                case self::NO_OBJECT_LINK:
                case self::NOORDER:
                case self::NO_ORDER_ROLLUPS:
                case self::NO_OUTER_JOIN_TO_ANTI:
                case self::NO_OUTER_JOIN_TO_INNER:
                case self::NOOVERRIDE:
                case self::NO_PARALLEL_INDEX:
                case self::NOPARALLEL_INDEX:
                case self::NO_PARALLEL:
                case self::NOPARALLEL:
                case self::NO_PARTIAL_COMMIT:
                case self::NO_PARTIAL_JOIN:
                case self::NO_PARTIAL_ROLLUP_PUSHDOWN:
                case self::NOPARTITION:
                case self::NO_PLACE_DISTINCT:
                case self::NO_PLACE_GROUP_BY:
                case self::NO_PQ_CONCURRENT_UNION:
                case self::NO_PQ_MAP:
                case self::NO_PQ_REPLICATE:
                case self::NO_PQ_SKEW:
                case self::NO_PRUNE_GSETS:
                case self::NO_PULL_PRED:
                case self::NO_PUSH_PRED:
                case self::NO_PUSH_SUBQ:
                case self::NO_PX_FAULT_TOLERANCE:
                case self::NO_PX_JOIN_FILTER:
                case self::NO_QKN_BUFF:
                case self::NO_QUERY_TRANSFORMATION:
                case self::NO_REF_CASCADE:
                case self::NORELOCATE:
                case self::NORELY:
                case self::NOREPAIR:
                case self::NOREPLAY:
                case self::NORESETLOGS:
                case self::NO_RESULT_CACHE:
                case self::NOREVERSE:
                case self::NO_REWRITE:
                case self::NOREWRITE:
                case self::NORMAL:
                case self::NO_ROOT_SW_FOR_LOCAL:
                case self::NOROWDEPENDENCIES:
                case self::NOSCHEMACHECK:
                case self::NOSEGMENT:
                case self::NO_SEMIJOIN:
                case self::NO_SEMI_TO_INNER:
                case self::NO_SET_TO_JOIN:
                case self::NOSORT:
                case self::NO_SQL_TRANSLATION:
                case self::NO_SQL_TUNE:
                case self::NO_STAR_TRANSFORMATION:
                case self::NO_STATEMENT_QUEUING:
                case self::NO_STATS_GSETS:
                case self::NOSTRICT:
                case self::NO_SUBQUERY_PRUNING:
                case self::NO_SUBSTRB_PAD:
                case self::NO_SWAP_JOIN_INPUTS:
                case self::NOSWITCH:
                case self::NO_TABLE_LOOKUP_BY_NL:
                case self::NO_TEMP_TABLE:
                case self::NOTHING:
                case self::NOTIFICATION:
                case self::NO_TRANSFORM_DISTINCT_AGG:
                case self::NO_UNNEST:
                case self::NO_USE_CUBE:
                case self::NO_USE_HASH_AGGREGATION:
                case self::NO_USE_HASH_GBY_FOR_PUSHDOWN:
                case self::NO_USE_HASH:
                case self::NO_USE_INVISIBLE_INDEXES:
                case self::NO_USE_MERGE:
                case self::NO_USE_NL:
                case self::NO_USE_VECTOR_AGGREGATION:
                case self::NOVALIDATE:
                case self::NO_VECTOR_TRANSFORM_DIMS:
                case self::NO_VECTOR_TRANSFORM_FACT:
                case self::NO_VECTOR_TRANSFORM:
                case self::NO_XDB_FASTPATH_INSERT:
                case self::NO_XML_DML_REWRITE:
                case self::NO_XMLINDEX_REWRITE_IN_SELECT:
                case self::NO_XMLINDEX_REWRITE:
                case self::NO_XML_QUERY_REWRITE:
                case self::NO_ZONEMAP:
                case self::NTH_VALUE:
                case self::NULLIF:
                case self::NULLS:
                case self::NUMBER:
                case self::NUMERIC:
                case self::NUM_INDEX_KEYS:
                case self::NUMTODSINTERVAL:
                case self::NUMTOYMINTERVAL:
                case self::NVARCHAR2:
                case self::NVL2:
                case self::OBJECT2XML:
                case self::OBJECT:
                case self::OBJ_ID:
                case self::OBJNO:
                case self::OBJNO_REUSE:
                case self::OCCURENCES:
                case self::OFFLINE:
                case self::OFF:
                case self::OFFSET:
                case self::OIDINDEX:
                case self::OID:
                case self::OLAP:
                case self::OLD:
                case self::OLD_PUSH_PRED:
                case self::OLS:
                case self::OLTP:
                case self::OMIT:
                case self::ONE:
                case self::ONLINE:
                case self::ONLY:
                case self::OPAQUE:
                case self::OPAQUE_TRANSFORM:
                case self::OPAQUE_XCANONICAL:
                case self::OPCODE:
                case self::OPEN:
                case self::OPERATIONS:
                case self::OPERATOR:
                case self::OPT_ESTIMATE:
                case self::OPTIMAL:
                case self::OPTIMIZE:
                case self::OPTIMIZER_FEATURES_ENABLE:
                case self::OPTIMIZER_GOAL:
                case self::OPT_PARAM:
                case self::ORA_BRANCH:
                case self::ORA_CHECK_ACL:
                case self::ORA_CHECK_PRIVILEGE:
                case self::ORA_CLUSTERING:
                case self::ORADATA:
                case self::ORADEBUG:
                case self::ORA_DST_AFFECTED:
                case self::ORA_DST_CONVERT:
                case self::ORA_DST_ERROR:
                case self::ORA_GET_ACLIDS:
                case self::ORA_GET_PRIVILEGES:
                case self::ORA_HASH:
                case self::ORA_INVOKING_USERID:
                case self::ORA_INVOKING_USER:
                case self::ORA_INVOKING_XS_USER_GUID:
                case self::ORA_INVOKING_XS_USER:
                case self::ORA_RAWCOMPARE:
                case self::ORA_RAWCONCAT:
                case self::ORA_ROWSCN:
                case self::ORA_ROWSCN_RAW:
                case self::ORA_ROWVERSION:
                case self::ORA_TABVERSION:
                case self::ORA_WRITE_TIME:
                case self::ORDERED:
                case self::ORDERED_PREDICATES:
                case self::ORDINALITY:
                case self::OR_EXPAND:
                case self::ORGANIZATION:
                case self::OR_PREDICATES:
                case self::OSERROR:
                case self::OTHER:
                case self::OUTER_JOIN_TO_ANTI:
                case self::OUTER_JOIN_TO_INNER:
                case self::OUTER:
                case self::OUTLINE_LEAF:
                case self::OUTLINE:
                case self::OUT_OF_LINE:
                case self::OUT:
                case self::OVERFLOW_NOMOVE:
                case self::OVERFLOW:
                case self::OVERLAPS:
                case self::OVER:
                case self::OVERRIDING:
                case self::OWNER:
                case self::OWNERSHIP:
                case self::OWN:
                case self::PACKAGE:
                case self::PACKAGES:
                case self::PARALLEL_ENABLE:
                case self::PARALLEL_INDEX:
                case self::PARALLEL:
                case self::PARAMETERS:
                case self::PARAM:
                case self::PARENT:
                case self::PARITY:
                case self::PARTIAL_JOIN:
                case self::PARTIALLY:
                case self::PARTIAL:
                case self::PARTIAL_ROLLUP_PUSHDOWN:
                case self::PARTITION_HASH:
                case self::PARTITION_LIST:
                case self::PARTITION:
                case self::PARTITION_RANGE:
                case self::PARTITIONS:
                case self::PARTNUMINST:
                case self::PASSING:
                case self::PASSWORD_GRACE_TIME:
                case self::PASSWORD_LIFE_TIME:
                case self::PASSWORD_LOCK_TIME:
                case self::PASSWORD:
                case self::PASSWORD_REUSE_MAX:
                case self::PASSWORD_REUSE_TIME:
                case self::PASSWORD_VERIFY_FUNCTION:
                case self::PAST:
                case self::PATCH:
                case self::PATH:
                case self::PATH_PREFIX:
                case self::PATHS:
                case self::PATTERN:
                case self::PBL_HS_BEGIN:
                case self::PBL_HS_END:
                case self::PCTINCREASE:
                case self::PCTTHRESHOLD:
                case self::PCTUSED:
                case self::PCTVERSION:
                case self::PENDING:
                case self::PERCENT_KEYWORD:
                case self::PERCENT_RANKM:
                case self::PERFORMANCE:
                case self::PERIOD_KEYWORD:
                case self::PERMANENT:
                case self::PERMISSION:
                case self::PERMUTE:
                case self::PER:
                case self::PFILE:
                case self::PHYSICAL:
                case self::PIKEY:
                case self::PIPELINED:
                case self::PIV_GB:
                case self::PIVOT:
                case self::PIV_SSF:
                case self::PLACE_DISTINCT:
                case self::PLACE_GROUP_BY:
                case self::PLAN:
                case self::PLSCOPE_SETTINGS:
                case self::PLS_INTEGER:
                case self::PLSQL_CCFLAGS:
                case self::PLSQL_CODE_TYPE:
                case self::PLSQL_DEBUG:
                case self::PLSQL_OPTIMIZE_LEVEL:
                case self::PLSQL_WARNINGS:
                case self::PLUGGABLE:
                case self::POINT:
                case self::POLICY:
                case self::POOL_16K:
                case self::POOL_2K:
                case self::POOL_32K:
                case self::POOL_4K:
                case self::POOL_8K:
                case self::POSITIVEN:
                case self::POSITIVE:
                case self::POST_TRANSACTION:
                case self::POWERMULTISET_BY_CARDINALITY:
                case self::POWERMULTISET:
                case self::POWER:
                case self::PQ_CONCURRENT_UNION:
                case self::PQ_DISTRIBUTE:
                case self::PQ_DISTRIBUTE_WINDOW:
                case self::PQ_FILTER:
                case self::PQ_MAP:
                case self::PQ_NOMAP:
                case self::PQ_REPLICATE:
                case self::PQ_SKEW:
                case self::PRAGMA:
                case self::PREBUILT:
                case self::PRECEDES:
                case self::PRECEDING:
                case self::PRECISION:
                case self::PRECOMPUTE_SUBQUERY:
                case self::PREDICATE_REORDERS:
                case self::PRELOAD:
                case self::PREPARE:
                case self::PRESENTNNV:
                case self::PRESENT:
                case self::PRESENTV:
                case self::PRESERVE_OID:
                case self::PRESERVE:
                case self::PRETTY:
                case self::PREVIOUS:
                case self::PREV:
                case self::PRIMARY:
                case self::PRINTBLOBTOCLOB:
                case self::PRIORITY:
                case self::PRIVATE:
                case self::PRIVATE_SGA:
                case self::PRIVILEGED:
                case self::PRIVILEGE:
                case self::PRIVILEGES:
                case self::PROCEDURAL:
                case self::PROCEDURE:
                case self::PROCESS:
                case self::PROFILE:
                case self::PROGRAM:
                case self::PROJECT:
                case self::PROPAGATE:
                case self::PROTECTED:
                case self::PROTECTION:
                case self::PROXY:
                case self::PRUNING:
                case self::PULL_PRED:
                case self::PURGE:
                case self::PUSH_PRED:
                case self::PUSH_SUBQ:
                case self::PX_FAULT_TOLERANCE:
                case self::PX_GRANULE:
                case self::PX_JOIN_FILTER:
                case self::QB_NAME:
                case self::QUERY_BLOCK:
                case self::QUERY:
                case self::QUEUE_CURR:
                case self::QUEUE:
                case self::QUEUE_ROWP:
                case self::QUIESCE:
                case self::QUORUM:
                case self::QUOTA:
                case self::RAISE:
                case self::RANDOM_LOCAL:
                case self::RANDOM:
                case self::RANGE:
                case self::RANKM:
                case self::RAPIDLY:
                case self::RAW:
                case self::RAWTOHEX:
                case self::RAWTONHEX:
                case self::RBA:
                case self::RBO_OUTLINE:
                case self::RDBA:
                case self::READ:
                case self::READS:
                case self::REALM:
                case self::REAL:
                case self::REBALANCE:
                case self::REBUILD:
                case self::RECORD:
                case self::RECORDS_PER_BLOCK:
                case self::RECOVERABLE:
                case self::RECOVER:
                case self::RECOVERY:
                case self::RECYCLEBIN:
                case self::RECYCLE:
                case self::REDACTION:
                case self::REDEFINE:
                case self::REDO:
                case self::REDUCED:
                case self::REDUNDANCY:
                case self::REF_CASCADE_CURSOR:
                case self::REFERENCED:
                case self::REFERENCE:
                case self::REFERENCES:
                case self::REFERENCING:
                case self::REF:
                case self::REFRESH:
                case self::REFTOHEX:
                case self::REGEXP_COUNT:
                case self::REGEXP_INSTR:
                case self::REGEXP_LIKE:
                case self::REGEXP_REPLACE:
                case self::REGEXP_SUBSTR:
                case self::REGISTER:
                case self::REGR_AVGX:
                case self::REGR_AVGY:
                case self::REGR_COUNT:
                case self::REGR_INTERCEPT:
                case self::REGR_R2:
                case self::REGR_SLOPE:
                case self::REGR_SXX:
                case self::REGR_SXY:
                case self::REGR_SYY:
                case self::REGULAR:
                case self::REJECT:
                case self::REKEY:
                case self::RELATIONAL:
                case self::RELOCATE:
                case self::RELY:
                case self::REMAINDER:
                case self::REMOTE_MAPPED:
                case self::REMOVE:
                case self::RENAME:
                case self::REPAIR:
                case self::REPEAT:
                case self::REPLACE:
                case self::REPLICATION:
                case self::REQUIRED:
                case self::RESETLOGS:
                case self::RESET:
                case self::RESIZE:
                case self::RESOLVE:
                case self::RESOLVER:
                case self::RESPECT:
                case self::RESTART:
                case self::RESTORE_AS_INTERVALS:
                case self::RESTORE:
                case self::RESTRICT_ALL_REF_CONS:
                case self::RESTRICTED:
                case self::RESTRICT_REFERENCES:
                case self::RESTRICT:
                case self::RESULT_CACHE:
                case self::RESULT:
                case self::RESUMABLE:
                case self::RESUME:
                case self::RETENTION:
                case self::RETRY_ON_ROW_CHANGE:
                case self::RETURNING:
                case self::RETURN:
                case self::REUSE:
                case self::REVERSE:
                case self::REWRITE_OR_ERROR:
                case self::REWRITE:
                case self::RIGHT:
                case self::ROLE:
                case self::ROLESET:
                case self::ROLES:
                case self::ROLLBACK:
                case self::ROLLING:
                case self::ROLLUP:
                case self::ROWDEPENDENCIES:
                case self::ROWID_MAPPING_TABLE:
                case self::ROWID:
                case self::ROWIDTOCHAR:
                case self::ROWIDTONCHAR:
                case self::ROW_LENGTH:
                case self::ROWNUM:
                case self::ROW:
                case self::ROWS:
                case self::RPAD:
                case self::RTRIM:
                case self::RULE:
                case self::RULES:
                case self::RUNNING:
                case self::SALT:
                case self::SAMPLE:
                case self::SAVE_AS_INTERVALS:
                case self::SAVEPOINT:
                case self::SAVE:
                case self::SB4:
                case self::SCALE_ROWS:
                case self::SCALE:
                case self::SCAN_INSTANCES:
                case self::SCAN:
                case self::SCHEDULER:
                case self::SCHEMACHECK:
                case self::SCHEMA:
                case self::SCN_ASCENDING:
                case self::SCN:
                case self::SCOPE:
                case self::SCRUB:
                case self::SD_ALL:
                case self::SD_INHIBIT:
                case self::SDO_GEOM_MBR:
                case self::SD_SHOW:
                case self::SEARCH:
                case self::SECOND:
                case self::SECRET:
                case self::SECUREFILE_DBA:
                case self::SECUREFILE:
                case self::SECURITY:
                case self::SEED:
                case self::SEG_BLOCK:
                case self::SEG_FILE:
                case self::SEGMENT:
                case self::SELECTIVITY:
                case self::SELF:
                case self::SEMIJOIN_DRIVER:
                case self::SEMIJOIN:
                case self::SEMI_TO_INNER:
                case self::SEQUENCED:
                case self::SEQUENCE:
                case self::SEQUENTIAL:
                case self::SERIALIZABLE:
                case self::SERIALLY_REUSABLE:
                case self::SERIAL:
                case self::SERVERERROR:
                case self::SERVICE_NAME_CONVERT:
                case self::SERVICES:
                case self::SESSION_CACHED_CURSORS:
                case self::SESSION:
                case self::SESSIONS_PER_USER:
                case self::SESSIONTIMEZONE:
                case self::SESSIONTZNAME:
                case self::SET:
                case self::SETS:
                case self::SETTINGS:
                case self::SET_TO_JOIN:
                case self::SEVERE:
                case self::SHARED_POOL:
                case self::SHARED:
                case self::SHARING:
                case self::SHELFLIFE:
                case self::SHOW:
                case self::SHRINK:
                case self::SHUTDOWN:
                case self::SIBLINGS:
                case self::SID:
                case self::SIGNAL_COMPONENT:
                case self::SIGNAL_FUNCTION:
                case self::SIGN:
                case self::SIGNTYPE:
                case self::SIMPLE_INTEGER:
                case self::SIMPLE:
                case self::SINGLE:
                case self::SINGLETASK:
                case self::SINH:
                case self::SIN:
                case self::SKIP_EXT_OPTIMIZER:
                case self::SKIP_:
                case self::SKIP_UNQ_UNUSABLE_IDX:
                case self::SKIP_UNUSABLE_INDEXES:
                case self::SMALLFILE:
                case self::SMALLINT:
                case self::SNAPSHOT:
                case self::SOME:
                case self::SORT:
                case self::SOUNDEX:
                case self::SOURCE_FILE_DIRECTORY:
                case self::SOURCE_FILE_NAME_CONVERT:
                case self::SOURCE:
                case self::SPACE_KEYWORD:
                case self::SPECIFICATION:
                case self::SPFILE:
                case self::SPLIT:
                case self::SPREADSHEET:
                case self::SQLDATA:
                case self::SQLERROR:
                case self::SQLLDR:
                case self::SQL:
                case self::SQL_TRACE:
                case self::SQL_TRANSLATION_PROFILE:
                case self::SQRT:
                case self::STALE:
                case self::STANDALONE:
                case self::STANDARD_HASH:
                case self::STANDBY_MAX_DATA_DELAY:
                case self::STANDBYS:
                case self::STANDBY:
                case self::STAR:
                case self::STAR_TRANSFORMATION:
                case self::STARTUP:
                case self::STATEMENT_ID:
                case self::STATEMENT_QUEUING:
                case self::STATEMENTS:
                case self::STATEMENT:
                case self::STATE:
                case self::STATIC:
                case self::STATISTICS:
                case self::STATS_BINOMIAL_TEST:
                case self::STATS_CROSSTAB:
                case self::STATS_F_TEST:
                case self::STATS_KS_TEST:
                case self::STATS_MODE:
                case self::STATS_MW_TEST:
                case self::STATS_ONE_WAY_ANOVA:
                case self::STATS_T_TEST_INDEP:
                case self::STATS_T_TEST_INDEPU:
                case self::STATS_T_TEST_ONE:
                case self::STATS_T_TEST_PAIRED:
                case self::STATS_WSR_TEST:
                case self::STDDEV_POP:
                case self::STDDEV_SAMP:
                case self::STOP:
                case self::STORAGE:
                case self::STORE:
                case self::STREAMS:
                case self::STREAM:
                case self::STRICT:
                case self::STRING:
                case self::STRIPE_COLUMNS:
                case self::STRIPE_WIDTH:
                case self::STRIP:
                case self::STRUCTURE:
                case self::SUBMULTISET:
                case self::SUBPARTITION_REL:
                case self::SUBPARTITIONS:
                case self::SUBPARTITION:
                case self::SUBQUERIES:
                case self::SUBQUERY_PRUNING:
                case self::SUBSCRIBE:
                case self::SUBSET:
                case self::SUBSTITUTABLE:
                case self::SUBSTR2:
                case self::SUBSTR4:
                case self::SUBSTRB:
                case self::SUBSTRC:
                case self::SUBTYPE:
                case self::SUCCESSFUL:
                case self::SUCCESS:
                case self::SUMMARY:
                case self::SUPPLEMENTAL:
                case self::SUSPEND:
                case self::SWAP_JOIN_INPUTS:
                case self::SWITCHOVER:
                case self::SWITCH:
                case self::SYNCHRONOUS:
                case self::SYNC:
                case self::SYSASM:
                case self::SYS_AUDIT:
                case self::SYSAUX:
                case self::SYSBACKUP:
                case self::SYS_CHECKACL:
                case self::SYS_CHECK_PRIVILEGE:
                case self::SYS_CONNECT_BY_PATH:
                case self::SYS_CONTEXT:
                case self::SYSDATE:
                case self::SYSDBA:
                case self::SYS_DBURIGEN:
                case self::SYSDG:
                case self::SYS_DL_CURSOR:
                case self::SYS_DM_RXFORM_CHR:
                case self::SYS_DM_RXFORM_NUM:
                case self::SYS_DOM_COMPARE:
                case self::SYS_DST_PRIM2SEC:
                case self::SYS_DST_SEC2PRIM:
                case self::SYS_ET_BFILE_TO_RAW:
                case self::SYS_ET_BLOB_TO_IMAGE:
                case self::SYS_ET_IMAGE_TO_BLOB:
                case self::SYS_ET_RAW_TO_BFILE:
                case self::SYS_EXTPDTXT:
                case self::SYS_EXTRACT_UTC:
                case self::SYS_FBT_INSDEL:
                case self::SYS_FILTER_ACLS:
                case self::SYS_FNMATCHES:
                case self::SYS_FNREPLACE:
                case self::SYS_GET_ACLIDS:
                case self::SYS_GET_COL_ACLIDS:
                case self::SYS_GET_PRIVILEGES:
                case self::SYS_GETTOKENID:
                case self::SYS_GETXTIVAL:
                case self::SYS_GUID:
                case self::SYSGUID:
                case self::SYSKM:
                case self::SYS_MAKE_XMLNODEID:
                case self::SYS_MAKEXML:
                case self::SYS_MKXMLATTR:
                case self::SYS_MKXTI:
                case self::SYSOBJ:
                case self::SYS_OP_ADT2BIN:
                case self::SYS_OP_ADTCONS:
                case self::SYS_OP_ALSCRVAL:
                case self::SYS_OP_ATG:
                case self::SYS_OP_BIN2ADT:
                case self::SYS_OP_BITVEC:
                case self::SYS_OP_BL2R:
                case self::SYS_OP_BLOOM_FILTER_LIST:
                case self::SYS_OP_BLOOM_FILTER:
                case self::SYS_OP_C2C:
                case self::SYS_OP_CAST:
                case self::SYS_OP_CEG:
                case self::SYS_OP_CL2C:
                case self::SYS_OP_COMBINED_HASH:
                case self::SYS_OP_COMP:
                case self::SYS_OP_CONVERT:
                case self::SYS_OP_COUNTCHG:
                case self::SYS_OP_CSCONV:
                case self::SYS_OP_CSCONVTEST:
                case self::SYS_OP_CSR:
                case self::SYS_OP_CSX_PATCH:
                case self::SYS_OP_CYCLED_SEQ:
                case self::SYS_OP_DECOMP:
                case self::SYS_OP_DESCEND:
                case self::SYS_OP_DISTINCT:
                case self::SYS_OP_DRA:
                case self::SYS_OP_DUMP:
                case self::SYS_OP_DV_CHECK:
                case self::SYS_OP_ENFORCE_NOT_NULL:
                case self::SYSOPER:
                case self::SYS_OP_EXTRACT:
                case self::SYS_OP_GROUPING:
                case self::SYS_OP_GUID:
                case self::SYS_OP_HASH:
                case self::SYS_OP_IIX:
                case self::SYS_OP_ITR:
                case self::SYS_OP_KEY_VECTOR_CREATE:
                case self::SYS_OP_KEY_VECTOR_FILTER_LIST:
                case self::SYS_OP_KEY_VECTOR_FILTER:
                case self::SYS_OP_KEY_VECTOR_SUCCEEDED:
                case self::SYS_OP_KEY_VECTOR_USE:
                case self::SYS_OP_LBID:
                case self::SYS_OP_LOBLOC2BLOB:
                case self::SYS_OP_LOBLOC2CLOB:
                case self::SYS_OP_LOBLOC2ID:
                case self::SYS_OP_LOBLOC2NCLOB:
                case self::SYS_OP_LOBLOC2TYP:
                case self::SYS_OP_LSVI:
                case self::SYS_OP_LVL:
                case self::SYS_OP_MAKEOID:
                case self::SYS_OP_MAP_NONNULL:
                case self::SYS_OP_MSR:
                case self::SYS_OP_NICOMBINE:
                case self::SYS_OP_NIEXTRACT:
                case self::SYS_OP_NII:
                case self::SYS_OP_NIX:
                case self::SYS_OP_NOEXPAND:
                case self::SYS_OP_NTCIMG:
                case self::SYS_OP_NUMTORAW:
                case self::SYS_OP_OIDVALUE:
                case self::SYS_OP_OPNSIZE:
                case self::SYS_OP_PAR_1:
                case self::SYS_OP_PARGID_1:
                case self::SYS_OP_PARGID:
                case self::SYS_OP_PAR:
                case self::SYS_OP_PART_ID:
                case self::SYS_OP_PIVOT:
                case self::SYS_OP_R2O:
                case self::SYS_OP_RAWTONUM:
                case self::SYS_OP_RDTM:
                case self::SYS_OP_REF:
                case self::SYS_OP_RMTD:
                case self::SYS_OP_ROWIDTOOBJ:
                case self::SYS_OP_RPB:
                case self::SYS_OPTLOBPRBSC:
                case self::SYS_OP_TOSETID:
                case self::SYS_OP_TPR:
                case self::SYS_OP_TRTB:
                case self::SYS_OPTXICMP:
                case self::SYS_OPTXQCASTASNQ:
                case self::SYS_OP_UNDESCEND:
                case self::SYS_OP_VECAND:
                case self::SYS_OP_VECBIT:
                case self::SYS_OP_VECOR:
                case self::SYS_OP_VECXOR:
                case self::SYS_OP_VERSION:
                case self::SYS_OP_VREF:
                case self::SYS_OP_VVD:
                case self::SYS_OP_XMLCONS_FOR_CSX:
                case self::SYS_OP_XPTHATG:
                case self::SYS_OP_XPTHIDX:
                case self::SYS_OP_XPTHOP:
                case self::SYS_OP_XTXT2SQLT:
                case self::SYS_OP_ZONE_ID:
                case self::SYS_ORDERKEY_DEPTH:
                case self::SYS_ORDERKEY_MAXCHILD:
                case self::SYS_ORDERKEY_PARENT:
                case self::SYS_PARALLEL_TXN:
                case self::SYS_PATHID_IS_ATTR:
                case self::SYS_PATHID_IS_NMSPC:
                case self::SYS_PATHID_LASTNAME:
                case self::SYS_PATHID_LASTNMSPC:
                case self::SYS_PATH_REVERSE:
                case self::SYS_PXQEXTRACT:
                case self::SYS_RAW_TO_XSID:
                case self::SYS_RID_ORDER:
                case self::SYS_ROW_DELTA:
                case self::SYS_SC_2_XMLT:
                case self::SYS_SYNRCIREDO:
                case self::SYSTEM_DEFINED:
                case self::SYSTEM:
                case self::SYSTIMESTAMP:
                case self::SYS_TYPEID:
                case self::SYS_UMAKEXML:
                case self::SYS_XMLANALYZE:
                case self::SYS_XMLCONTAINS:
                case self::SYS_XMLCONV:
                case self::SYS_XMLEXNSURI:
                case self::SYS_XMLGEN:
                case self::SYS_XMLI_LOC_ISNODE:
                case self::SYS_XMLI_LOC_ISTEXT:
                case self::SYS_XMLINSTR:
                case self::SYS_XMLLOCATOR_GETSVAL:
                case self::SYS_XMLNODEID_GETCID:
                case self::SYS_XMLNODEID_GETLOCATOR:
                case self::SYS_XMLNODEID_GETOKEY:
                case self::SYS_XMLNODEID_GETPATHID:
                case self::SYS_XMLNODEID_GETPTRID:
                case self::SYS_XMLNODEID_GETRID:
                case self::SYS_XMLNODEID_GETSVAL:
                case self::SYS_XMLNODEID_GETTID:
                case self::SYS_XMLNODEID:
                case self::SYS_XMLT_2_SC:
                case self::SYS_XMLTRANSLATE:
                case self::SYS_XMLTYPE2SQL:
                case self::SYS_XQ_ASQLCNV:
                case self::SYS_XQ_ATOMCNVCHK:
                case self::SYS_XQBASEURI:
                case self::SYS_XQCASTABLEERRH:
                case self::SYS_XQCODEP2STR:
                case self::SYS_XQCODEPEQ:
                case self::SYS_XQCON2SEQ:
                case self::SYS_XQCONCAT:
                case self::SYS_XQDELETE:
                case self::SYS_XQDFLTCOLATION:
                case self::SYS_XQDOC:
                case self::SYS_XQDOCURI:
                case self::SYS_XQDURDIV:
                case self::SYS_XQED4URI:
                case self::SYS_XQENDSWITH:
                case self::SYS_XQERRH:
                case self::SYS_XQERR:
                case self::SYS_XQESHTMLURI:
                case self::SYS_XQEXLOBVAL:
                case self::SYS_XQEXSTWRP:
                case self::SYS_XQEXTRACT:
                case self::SYS_XQEXTRREF:
                case self::SYS_XQEXVAL:
                case self::SYS_XQFB2STR:
                case self::SYS_XQFNBOOL:
                case self::SYS_XQFNCMP:
                case self::SYS_XQFNDATIM:
                case self::SYS_XQFNLNAME:
                case self::SYS_XQFNNM:
                case self::SYS_XQFNNSURI:
                case self::SYS_XQFNPREDTRUTH:
                case self::SYS_XQFNQNM:
                case self::SYS_XQFNROOT:
                case self::SYS_XQFORMATNUM:
                case self::SYS_XQFTCONTAIN:
                case self::SYS_XQFUNCR:
                case self::SYS_XQGETCONTENT:
                case self::SYS_XQINDXOF:
                case self::SYS_XQINSERT:
                case self::SYS_XQINSPFX:
                case self::SYS_XQIRI2URI:
                case self::SYS_XQLANG:
                case self::SYS_XQLLNMFRMQNM:
                case self::SYS_XQMKNODEREF:
                case self::SYS_XQNILLED:
                case self::SYS_XQNODENAME:
                case self::SYS_XQNORMSPACE:
                case self::SYS_XQNORMUCODE:
                case self::SYS_XQ_NRNG:
                case self::SYS_XQNSP4PFX:
                case self::SYS_XQNSPFRMQNM:
                case self::SYS_XQPFXFRMQNM:
                case self::SYS_XQ_PKSQL2XML:
                case self::SYS_XQPOLYABS:
                case self::SYS_XQPOLYADD:
                case self::SYS_XQPOLYCEL:
                case self::SYS_XQPOLYCSTBL:
                case self::SYS_XQPOLYCST:
                case self::SYS_XQPOLYDIV:
                case self::SYS_XQPOLYFLR:
                case self::SYS_XQPOLYMOD:
                case self::SYS_XQPOLYMUL:
                case self::SYS_XQPOLYRND:
                case self::SYS_XQPOLYSQRT:
                case self::SYS_XQPOLYSUB:
                case self::SYS_XQPOLYUMUS:
                case self::SYS_XQPOLYUPLS:
                case self::SYS_XQPOLYVEQ:
                case self::SYS_XQPOLYVGE:
                case self::SYS_XQPOLYVGT:
                case self::SYS_XQPOLYVLE:
                case self::SYS_XQPOLYVLT:
                case self::SYS_XQPOLYVNE:
                case self::SYS_XQREF2VAL:
                case self::SYS_XQRENAME:
                case self::SYS_XQREPLACE:
                case self::SYS_XQRESVURI:
                case self::SYS_XQRNDHALF2EVN:
                case self::SYS_XQRSLVQNM:
                case self::SYS_XQRYENVPGET:
                case self::SYS_XQRYVARGET:
                case self::SYS_XQRYWRP:
                case self::SYS_XQSEQ2CON4XC:
                case self::SYS_XQSEQ2CON:
                case self::SYS_XQSEQDEEPEQ:
                case self::SYS_XQSEQINSB:
                case self::SYS_XQSEQRM:
                case self::SYS_XQSEQRVS:
                case self::SYS_XQSEQSUB:
                case self::SYS_XQSEQTYPMATCH:
                case self::SYS_XQSTARTSWITH:
                case self::SYS_XQSTATBURI:
                case self::SYS_XQSTR2CODEP:
                case self::SYS_XQSTRJOIN:
                case self::SYS_XQSUBSTRAFT:
                case self::SYS_XQSUBSTRBEF:
                case self::SYS_XQTOKENIZE:
                case self::SYS_XQTREATAS:
                case self::SYS_XQ_UPKXML2SQL:
                case self::SYS_XQXFORM:
                case self::SYS_XSID_TO_RAW:
                case self::SYS_ZMAP_FILTER:
                case self::SYS_ZMAP_REFRESH:
                case self::TABLE_LOOKUP_BY_NL:
                case self::TABLESPACE_NO:
                case self::TABLESPACE:
                case self::TABLES:
                case self::TABLE_STATS:
                case self::TABLE:
                case self::TABNO:
                case self::TAG:
                case self::TANH:
                case self::TAN:
                case self::TBLORIDXPARTNUM:
                case self::TEMPFILE:
                case self::TEMPLATE:
                case self::TEMPORARY:
                case self::TEMP_TABLE:
                case self::TEST:
                case self::TEXT:
                case self::THAN:
                case self::THEN:
                case self::THE:
                case self::THREAD:
                case self::THROUGH:
                case self::TIER:
                case self::TIES:
                case self::TIMEOUT:
                case self::TIMESTAMP_LTZ_UNCONSTRAINED:
                case self::TIMESTAMP:
                case self::TIMESTAMP_TZ_UNCONSTRAINED:
                case self::TIMESTAMP_UNCONSTRAINED:
                case self::TIMES:
                case self::TIME:
                case self::TIMEZONE_ABBR:
                case self::TIMEZONE_HOUR:
                case self::TIMEZONE_MINUTE:
                case self::TIMEZONE_OFFSET:
                case self::TIMEZONE_REGION:
                case self::TIME_ZONE:
                case self::TIV_GB:
                case self::TIV_SSF:
                case self::TO_ACLID:
                case self::TO_BINARY_DOUBLE:
                case self::TO_BINARY_FLOAT:
                case self::TO_BLOB:
                case self::TO_CLOB:
                case self::TO_DSINTERVAL:
                case self::TO_LOB:
                case self::TO_MULTI_BYTE:
                case self::TO_NCHAR:
                case self::TO_NCLOB:
                case self::TO_NUMBER:
                case self::TOPLEVEL:
                case self::TO_SINGLE_BYTE:
                case self::TO_TIMESTAMP:
                case self::TO_TIMESTAMP_TZ:
                case self::TO_TIME:
                case self::TO_TIME_TZ:
                case self::TO_YMINTERVAL:
                case self::TRACE:
                case self::TRACING:
                case self::TRACKING:
                case self::TRAILING:
                case self::TRANSACTION:
                case self::TRANSFORM_DISTINCT_AGG:
                case self::TRANSITIONAL:
                case self::TRANSITION:
                case self::TRANSLATE:
                case self::TRANSLATION:
                case self::TREAT:
                case self::TRIGGERS:
                case self::TRIGGER:
                case self::TRUE:
                case self::TRUNCATE:
                case self::TRUNC:
                case self::TRUSTED:
                case self::TRUST:
                case self::TUNING:
                case self::TX:
                case self::TYPES:
                case self::TYPE:
                case self::TZ_OFFSET:
                case self::UB2:
                case self::UBA:
                case self::UCS2:
                case self::UID:
                case self::UNARCHIVED:
                case self::UNBOUNDED:
                case self::UNBOUND:
                case self::UNCONDITIONAL:
                case self::UNDER:
                case self::UNDO:
                case self::UNDROP:
                case self::UNIFORM:
                case self::UNISTR:
                case self::UNLIMITED:
                case self::UNLOAD:
                case self::UNLOCK:
                case self::UNMATCHED:
                case self::UNNEST_INNERJ_DISTINCT_VIEW:
                case self::UNNEST_NOSEMIJ_NODISTINCTVIEW:
                case self::UNNEST_SEMIJ_VIEW:
                case self::UNNEST:
                case self::UNPACKED:
                case self::UNPIVOT:
                case self::UNPLUG:
                case self::UNPROTECTED:
                case self::UNQUIESCE:
                case self::UNRECOVERABLE:
                case self::UNRESTRICTED:
                case self::UNSUBSCRIBE:
                case self::UNTIL:
                case self::UNUSABLE:
                case self::UNUSED:
                case self::UPDATABLE:
                case self::UPDATED:
                case self::UPDATEXML:
                case self::UPD_INDEXES:
                case self::UPD_JOININDEX:
                case self::UPGRADE:
                case self::UPPER:
                case self::UPSERT:
                case self::UROWID:
                case self::USABLE:
                case self::USAGE:
                case self::USE_ANTI:
                case self::USE_CONCAT:
                case self::USE_CUBE:
                case self::USE_HASH_AGGREGATION:
                case self::USE_HASH_GBY_FOR_PUSHDOWN:
                case self::USE_HASH:
                case self::USE_HIDDEN_PARTITIONS:
                case self::USE_INVISIBLE_INDEXES:
                case self::USE_MERGE_CARTESIAN:
                case self::USE_MERGE:
                case self::USE_NL:
                case self::USE_NL_WITH_INDEX:
                case self::USE_PRIVATE_OUTLINES:
                case self::USER_DATA:
                case self::USER_DEFINED:
                case self::USERENV:
                case self::USERGROUP:
                case self::USER_RECYCLEBIN:
                case self::USERS:
                case self::USER_TABLESPACES:
                case self::USER:
                case self::USE_SEMI:
                case self::USE_STORED_OUTLINES:
                case self::USE_TTT_FOR_GSETS:
                case self::USE:
                case self::USE_VECTOR_AGGREGATION:
                case self::USE_WEAK_NAME_RESL:
                case self::USING_NO_EXPAND:
                case self::USING:
                case self::UTF16BE:
                case self::UTF16LE:
                case self::UTF32:
                case self::UTF8:
                case self::V1:
                case self::V2:
                case self::VALIDATE:
                case self::VALIDATION:
                case self::VALID_TIME_END:
                case self::VALUE:
                case self::VARCHAR2:
                case self::VARCHAR:
                case self::VARIABLE:
                case self::VAR_POP:
                case self::VARRAYS:
                case self::VARRAY:
                case self::VAR_SAMP:
                case self::VARYING:
                case self::VECTOR_READ_TRACE:
                case self::VECTOR_READ:
                case self::VECTOR_TRANSFORM_DIMS:
                case self::VECTOR_TRANSFORM_FACT:
                case self::VECTOR_TRANSFORM:
                case self::VERIFIER:
                case self::VERIFY:
                case self::VERSIONING:
                case self::VERSIONS_ENDSCN:
                case self::VERSIONS_ENDTIME:
                case self::VERSIONS_OPERATION:
                case self::VERSIONS_STARTSCN:
                case self::VERSIONS_STARTTIME:
                case self::VERSIONS:
                case self::VERSIONS_XID:
                case self::VERSION:
                case self::VIOLATION:
                case self::VIRTUAL:
                case self::VISIBILITY:
                case self::VISIBLE:
                case self::VOLUME:
                case self::VSIZE:
                case self::WAIT:
                case self::WALLET:
                case self::WARNING:
                case self::WEEKS:
                case self::WEEK:
                case self::WELLFORMED:
                case self::WHENEVER:
                case self::WHEN:
                case self::WHILE:
                case self::WHITESPACE:
                case self::WIDTH_BUCKET:
                case self::WITHIN:
                case self::WITHOUT:
                case self::WITH_PLSQL:
                case self::WORK:
                case self::WRAPPED:
                case self::WRAPPER:
                case self::WRITE:
                case self::XDB_FASTPATH_INSERT:
                case self::X_DYN_PRUNE:
                case self::XID:
                case self::XML2OBJECT:
                case self::XMLAGG:
                case self::XMLATTRIBUTES:
                case self::XMLCAST:
                case self::XMLCDATA:
                case self::XMLCOLATTVAL:
                case self::XMLCOMMENT:
                case self::XMLCONCAT:
                case self::XMLDIFF:
                case self::XML_DML_RWT_STMT:
                case self::XMLELEMENT:
                case self::XMLEXISTS2:
                case self::XMLEXISTS:
                case self::XMLFOREST:
                case self::XMLINDEX_REWRITE_IN_SELECT:
                case self::XMLINDEX_REWRITE:
                case self::XMLINDEX_SEL_IDX_TBL:
                case self::XMLISNODE:
                case self::XMLISVALID:
                case self::XMLNAMESPACES:
                case self::XMLPARSE:
                case self::XMLPATCH:
                case self::XMLPI:
                case self::XMLQUERYVAL:
                case self::XMLQUERY:
                case self::XMLROOT:
                case self::XMLSCHEMA:
                case self::XMLSERIALIZE:
                case self::XMLTABLE:
                case self::XMLTRANSFORMBLOB:
                case self::XMLTRANSFORM:
                case self::XMLTYPE:
                case self::XML:
                case self::XPATHTABLE:
                case self::XS_SYS_CONTEXT:
                case self::XS:
                case self::YEARS:
                case self::YEAR:
                case self::YES:
                case self::YMINTERVAL_UNCONSTRAINED:
                case self::ZONEMAP:
                case self::ZONE:
                case self::PREDICTION:
                case self::PREDICTION_BOUNDS:
                case self::PREDICTION_COST:
                case self::PREDICTION_DETAILS:
                case self::PREDICTION_PROBABILITY:
                case self::PREDICTION_SET:
                case self::CUME_DIST:
                case self::DENSE_RANK:
                case self::LISTAGG:
                case self::PERCENT_RANK:
                case self::PERCENTILE_CONT:
                case self::PERCENTILE_DISC:
                case self::RANK:
                case self::AVG:
                case self::CORR:
                case self::COVAR_:
                case self::LAG:
                case self::LEAD:
                case self::MAX:
                case self::MEDIAN:
                case self::MIN:
                case self::NTILE:
                case self::NVL:
                case self::RATIO_TO_REPORT:
                case self::REGR_:
                case self::ROUND:
                case self::ROW_NUMBER:
                case self::SUBSTR:
                case self::TO_CHAR:
                case self::TRIM:
                case self::SUM:
                case self::STDDEV:
                case self::VAR_:
                case self::VARIANCE:
                case self::LEAST:
                case self::GREATEST:
                case self::TO_DATE:
                case self::PERIOD:
                case self::REGULAR_ID:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(12041);
                    $this->regular_id();
                    break;

                case self::DELIMITED_ID:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(12042);
                    $this->match(self::DELIMITED_ID);
                    break;

                default:
                    throw new NoViableAltException($this);
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function outer_join_sign(): Context\Outer_join_signContext
    {
        $localContext = new Context\Outer_join_signContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1490, self::RULE_outer_join_sign);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12045);
            $this->match(self::LEFT_PAREN);
            $this->setState(12046);
            $this->match(self::PLUS_SIGN);
            $this->setState(12047);
            $this->match(self::RIGHT_PAREN);
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function regular_id(): Context\Regular_idContext
    {
        $localContext = new Context\Regular_idContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1492, self::RULE_regular_id);

        try {
            $this->setState(12124);
            $this->errorHandler->sync($this);

            switch ($this->getInterpreter()->adaptivePredict($this->input, 1651, $this->ctx)) {
                case 1:
                    $this->enterOuterAlt($localContext, 1);
                    $this->setState(12049);
                    $this->non_reserved_keywords_pre12c();
                    break;

                case 2:
                    $this->enterOuterAlt($localContext, 2);
                    $this->setState(12050);
                    $this->non_reserved_keywords_in_12c();
                    break;

                case 3:
                    $this->enterOuterAlt($localContext, 3);
                    $this->setState(12051);
                    $this->match(self::REGULAR_ID);
                    break;

                case 4:
                    $this->enterOuterAlt($localContext, 4);
                    $this->setState(12052);
                    $this->match(self::A_LETTER);
                    break;

                case 5:
                    $this->enterOuterAlt($localContext, 5);
                    $this->setState(12053);
                    $this->match(self::AGENT);
                    break;

                case 6:
                    $this->enterOuterAlt($localContext, 6);
                    $this->setState(12054);
                    $this->match(self::AGGREGATE);
                    break;

                case 7:
                    $this->enterOuterAlt($localContext, 7);
                    $this->setState(12055);
                    $this->match(self::ANALYZE);
                    break;

                case 8:
                    $this->enterOuterAlt($localContext, 8);
                    $this->setState(12056);
                    $this->match(self::AUTONOMOUS_TRANSACTION);
                    break;

                case 9:
                    $this->enterOuterAlt($localContext, 9);
                    $this->setState(12057);
                    $this->match(self::BATCH);
                    break;

                case 10:
                    $this->enterOuterAlt($localContext, 10);
                    $this->setState(12058);
                    $this->match(self::BINARY_INTEGER);
                    break;

                case 11:
                    $this->enterOuterAlt($localContext, 11);
                    $this->setState(12059);
                    $this->match(self::BOOLEAN);
                    break;

                case 12:
                    $this->enterOuterAlt($localContext, 12);
                    $this->setState(12060);
                    $this->match(self::C_LETTER);
                    break;

                case 13:
                    $this->enterOuterAlt($localContext, 13);
                    $this->setState(12061);
                    $this->match(self::CHAR);
                    break;

                case 14:
                    $this->enterOuterAlt($localContext, 14);
                    $this->setState(12062);
                    $this->match(self::CLUSTER);
                    break;

                case 15:
                    $this->enterOuterAlt($localContext, 15);
                    $this->setState(12063);
                    $this->match(self::CONSTRUCTOR);
                    break;

                case 16:
                    $this->enterOuterAlt($localContext, 16);
                    $this->setState(12064);
                    $this->match(self::CUSTOMDATUM);
                    break;

                case 17:
                    $this->enterOuterAlt($localContext, 17);
                    $this->setState(12065);
                    $this->match(self::DECIMAL);
                    break;

                case 18:
                    $this->enterOuterAlt($localContext, 18);
                    $this->setState(12066);
                    $this->match(self::DELETE);
                    break;

                case 19:
                    $this->enterOuterAlt($localContext, 19);
                    $this->setState(12067);
                    $this->match(self::DETERMINISTIC);
                    break;

                case 20:
                    $this->enterOuterAlt($localContext, 20);
                    $this->setState(12068);
                    $this->match(self::DSINTERVAL_UNCONSTRAINED);
                    break;

                case 21:
                    $this->enterOuterAlt($localContext, 21);
                    $this->setState(12069);
                    $this->match(self::ERR);
                    break;

                case 22:
                    $this->enterOuterAlt($localContext, 22);
                    $this->setState(12070);
                    $this->match(self::EXCEPTION);
                    break;

                case 23:
                    $this->enterOuterAlt($localContext, 23);
                    $this->setState(12071);
                    $this->match(self::EXCEPTION_INIT);
                    break;

                case 24:
                    $this->enterOuterAlt($localContext, 24);
                    $this->setState(12072);
                    $this->match(self::EXCEPTIONS);
                    break;

                case 25:
                    $this->enterOuterAlt($localContext, 25);
                    $this->setState(12073);
                    $this->match(self::EXISTS);
                    break;

                case 26:
                    $this->enterOuterAlt($localContext, 26);
                    $this->setState(12074);
                    $this->match(self::EXIT);
                    break;

                case 27:
                    $this->enterOuterAlt($localContext, 27);
                    $this->setState(12075);
                    $this->match(self::FLOAT);
                    break;

                case 28:
                    $this->enterOuterAlt($localContext, 28);
                    $this->setState(12076);
                    $this->match(self::FORALL);
                    break;

                case 29:
                    $this->enterOuterAlt($localContext, 29);
                    $this->setState(12077);
                    $this->match(self::INDICES);
                    break;

                case 30:
                    $this->enterOuterAlt($localContext, 30);
                    $this->setState(12078);
                    $this->match(self::INOUT);
                    break;

                case 31:
                    $this->enterOuterAlt($localContext, 31);
                    $this->setState(12079);
                    $this->match(self::INTEGER);
                    break;

                case 32:
                    $this->enterOuterAlt($localContext, 32);
                    $this->setState(12080);
                    $this->match(self::LANGUAGE);
                    break;

                case 33:
                    $this->enterOuterAlt($localContext, 33);
                    $this->setState(12081);
                    $this->match(self::LONG);
                    break;

                case 34:
                    $this->enterOuterAlt($localContext, 34);
                    $this->setState(12082);
                    $this->match(self::LOOP);
                    break;

                case 35:
                    $this->enterOuterAlt($localContext, 35);
                    $this->setState(12083);
                    $this->match(self::NUMBER);
                    break;

                case 36:
                    $this->enterOuterAlt($localContext, 36);
                    $this->setState(12084);
                    $this->match(self::ORADATA);
                    break;

                case 37:
                    $this->enterOuterAlt($localContext, 37);
                    $this->setState(12085);
                    $this->match(self::OSERROR);
                    break;

                case 38:
                    $this->enterOuterAlt($localContext, 38);
                    $this->setState(12086);
                    $this->match(self::OUT);
                    break;

                case 39:
                    $this->enterOuterAlt($localContext, 39);
                    $this->setState(12087);
                    $this->match(self::OVERRIDING);
                    break;

                case 40:
                    $this->enterOuterAlt($localContext, 40);
                    $this->setState(12088);
                    $this->match(self::PARALLEL_ENABLE);
                    break;

                case 41:
                    $this->enterOuterAlt($localContext, 41);
                    $this->setState(12089);
                    $this->match(self::PIPELINED);
                    break;

                case 42:
                    $this->enterOuterAlt($localContext, 42);
                    $this->setState(12090);
                    $this->match(self::PLS_INTEGER);
                    break;

                case 43:
                    $this->enterOuterAlt($localContext, 43);
                    $this->setState(12091);
                    $this->match(self::POSITIVE);
                    break;

                case 44:
                    $this->enterOuterAlt($localContext, 44);
                    $this->setState(12092);
                    $this->match(self::POSITIVEN);
                    break;

                case 45:
                    $this->enterOuterAlt($localContext, 45);
                    $this->setState(12093);
                    $this->match(self::PRAGMA);
                    break;

                case 46:
                    $this->enterOuterAlt($localContext, 46);
                    $this->setState(12094);
                    $this->match(self::RAISE);
                    break;

                case 47:
                    $this->enterOuterAlt($localContext, 47);
                    $this->setState(12095);
                    $this->match(self::RAW);
                    break;

                case 48:
                    $this->enterOuterAlt($localContext, 48);
                    $this->setState(12096);
                    $this->match(self::RECORD);
                    break;

                case 49:
                    $this->enterOuterAlt($localContext, 49);
                    $this->setState(12097);
                    $this->match(self::REF);
                    break;

                case 50:
                    $this->enterOuterAlt($localContext, 50);
                    $this->setState(12098);
                    $this->match(self::RENAME);
                    break;

                case 51:
                    $this->enterOuterAlt($localContext, 51);
                    $this->setState(12099);
                    $this->match(self::RESTRICT_REFERENCES);
                    break;

                case 52:
                    $this->enterOuterAlt($localContext, 52);
                    $this->setState(12100);
                    $this->match(self::RESULT);
                    break;

                case 53:
                    $this->enterOuterAlt($localContext, 53);
                    $this->setState(12101);
                    $this->match(self::SELF);
                    break;

                case 54:
                    $this->enterOuterAlt($localContext, 54);
                    $this->setState(12102);
                    $this->match(self::SERIALLY_REUSABLE);
                    break;

                case 55:
                    $this->enterOuterAlt($localContext, 55);
                    $this->setState(12103);
                    $this->match(self::SET);
                    break;

                case 56:
                    $this->enterOuterAlt($localContext, 56);
                    $this->setState(12104);
                    $this->match(self::SIGNTYPE);
                    break;

                case 57:
                    $this->enterOuterAlt($localContext, 57);
                    $this->setState(12105);
                    $this->match(self::SIMPLE_INTEGER);
                    break;

                case 58:
                    $this->enterOuterAlt($localContext, 58);
                    $this->setState(12106);
                    $this->match(self::SMALLINT);
                    break;

                case 59:
                    $this->enterOuterAlt($localContext, 59);
                    $this->setState(12107);
                    $this->match(self::SQLDATA);
                    break;

                case 60:
                    $this->enterOuterAlt($localContext, 60);
                    $this->setState(12108);
                    $this->match(self::SQLERROR);
                    break;

                case 61:
                    $this->enterOuterAlt($localContext, 61);
                    $this->setState(12109);
                    $this->match(self::SUBTYPE);
                    break;

                case 62:
                    $this->enterOuterAlt($localContext, 62);
                    $this->setState(12110);
                    $this->match(self::TIMESTAMP_LTZ_UNCONSTRAINED);
                    break;

                case 63:
                    $this->enterOuterAlt($localContext, 63);
                    $this->setState(12111);
                    $this->match(self::TIMESTAMP_TZ_UNCONSTRAINED);
                    break;

                case 64:
                    $this->enterOuterAlt($localContext, 64);
                    $this->setState(12112);
                    $this->match(self::TIMESTAMP_UNCONSTRAINED);
                    break;

                case 65:
                    $this->enterOuterAlt($localContext, 65);
                    $this->setState(12113);
                    $this->match(self::TRIGGER);
                    break;

                case 66:
                    $this->enterOuterAlt($localContext, 66);
                    $this->setState(12114);
                    $this->match(self::VARCHAR);
                    break;

                case 67:
                    $this->enterOuterAlt($localContext, 67);
                    $this->setState(12115);
                    $this->match(self::VARCHAR2);
                    break;

                case 68:
                    $this->enterOuterAlt($localContext, 68);
                    $this->setState(12116);
                    $this->match(self::VARIABLE);
                    break;

                case 69:
                    $this->enterOuterAlt($localContext, 69);
                    $this->setState(12117);
                    $this->match(self::WARNING);
                    break;

                case 70:
                    $this->enterOuterAlt($localContext, 70);
                    $this->setState(12118);
                    $this->match(self::WHILE);
                    break;

                case 71:
                    $this->enterOuterAlt($localContext, 71);
                    $this->setState(12119);
                    $this->match(self::XMLAGG);
                    break;

                case 72:
                    $this->enterOuterAlt($localContext, 72);
                    $this->setState(12120);
                    $this->match(self::YMINTERVAL_UNCONSTRAINED);
                    break;

                case 73:
                    $this->enterOuterAlt($localContext, 73);
                    $this->setState(12121);
                    $this->match(self::REGR_);
                    break;

                case 74:
                    $this->enterOuterAlt($localContext, 74);
                    $this->setState(12122);
                    $this->match(self::VAR_);
                    break;

                case 75:
                    $this->enterOuterAlt($localContext, 75);
                    $this->setState(12123);
                    $this->match(self::COVAR_);
                    break;
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function non_reserved_keywords_in_12c(): Context\Non_reserved_keywords_in_12cContext
    {
        $localContext = new Context\Non_reserved_keywords_in_12cContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1494, self::RULE_non_reserved_keywords_in_12c);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12126);

            $_la = $this->input->LA(1);

            if (!(((($_la) & ~0x3f) === 0 && ((1 << $_la) & ((1 << self::ACL) | (1 << self::ACTION) | (1 << self::ACTIONS) | (1 << self::ACTIVE) | (1 << self::ACTIVE_DATA) | (1 << self::ACTIVITY) | (1 << self::ADAPTIVE_PLAN) | (1 << self::ADVANCED) | (1 << self::AFD_DISKSTRING) | (1 << self::ANOMALY) | (1 << self::ANSI_REARCH) | (1 << self::APPLICATION) | (1 << self::APPROX_COUNT_DISTINCT) | (1 << self::ARCHIVAL) | (1 << self::ARCHIVED))) !== 0) || (((($_la - 66)) & ~0x3f) === 0 && ((1 << ($_la - 66)) & ((1 << (self::ASIS - 66)) | (1 << (self::ASSIGN - 66)) | (1 << (self::AUTO_LOGIN - 66)) | (1 << (self::AUTO_REOPTIMIZE - 66)) | (1 << (self::AVRO - 66)) | (1 << (self::BACKGROUND - 66)) | (1 << (self::BATCHSIZE - 66)) | (1 << (self::BATCH_TABLE_ACCESS_BY_ROWID - 66)) | (1 << (self::BEGINNING - 66)) | (1 << (self::BEQUEATH - 66)) | (1 << (self::BITMAP_AND - 66)))) !== 0) || (((($_la - 140)) & ~0x3f) === 0 && ((1 << ($_la - 140)) & ((1 << (self::BSON - 140)) | (1 << (self::CACHING - 140)) | (1 << (self::CALCULATED - 140)) | (1 << (self::CALLBACK - 140)) | (1 << (self::CAPACITY - 140)) | (1 << (self::CDBDEFAULT - 140)) | (1 << (self::CLASSIFIER - 140)) | (1 << (self::CLEANUP - 140)) | (1 << (self::CLIENT - 140)) | (1 << (self::CLUSTER_DETAILS - 140)) | (1 << (self::CLUSTER_DISTANCE - 140)) | (1 << (self::CLUSTERING - 140)))) !== 0) || (((($_la - 220)) & ~0x3f) === 0 && ((1 << ($_la - 220)) & ((1 << (self::COMMON_DATA - 220)) | (1 << (self::COMPONENT - 220)) | (1 << (self::COMPONENTS - 220)) | (1 << (self::CON_DBID_TO_ID - 220)) | (1 << (self::CONDITIONAL - 220)) | (1 << (self::CONDITION - 220)) | (1 << (self::CON_GUID_TO_ID - 220)) | (1 << (self::CON_ID - 220)) | (1 << (self::CON_NAME_TO_ID - 220)) | (1 << (self::CONTAINER_DATA - 220)) | (1 << (self::CONTAINERS - 220)) | (1 << (self::CON_UID_TO_ID - 220)) | (1 << (self::COOKIE - 220)) | (1 << (self::COPY - 220)))) !== 0) || (((($_la - 289)) & ~0x3f) === 0 && ((1 << ($_la - 289)) & ((1 << (self::CREATE_FILE_DEST - 289)) | (1 << (self::CREDENTIAL - 289)) | (1 << (self::CRITICAL - 289)) | (1 << (self::CUBE_AJ - 289)) | (1 << (self::CUBE_SJ - 289)) | (1 << (self::DATAMOVEMENT - 289)) | (1 << (self::DATAOBJ_TO_MAT_PARTITION - 289)) | (1 << (self::DATAPUMP - 289)) | (1 << (self::DATA_SECURITY_REWRITE_LIMIT - 289)) | (1 << (self::DAYS - 289)) | (1 << (self::DB_UNIQUE_NAME - 289)) | (1 << (self::DECORRELATE - 289)))) !== 0) || (((($_la - 356)) & ~0x3f) === 0 && ((1 << ($_la - 356)) & ((1 << (self::DEFINE - 356)) | (1 << (self::DELEGATE - 356)) | (1 << (self::DELETE_ALL - 356)) | (1 << (self::DESTROY - 356)) | (1 << (self::DIMENSIONS - 356)) | (1 << (self::DISABLE_ALL - 356)) | (1 << (self::DISABLE_PARALLEL_DML - 356)) | (1 << (self::DISCARD - 356)) | (1 << (self::DISTRIBUTE - 356)) | (1 << (self::DUPLICATE - 356)) | (1 << (self::DV - 356)))) !== 0) || (((($_la - 423)) & ~0x3f) === 0 && ((1 << ($_la - 423)) & ((1 << (self::EDITIONABLE - 423)) | (1 << (self::ELIM_GROUPBY - 423)) | (1 << (self::EM - 423)) | (1 << (self::ENABLE_ALL - 423)) | (1 << (self::ENABLE_PARALLEL_DML - 423)) | (1 << (self::EQUIPART - 423)) | (1 << (self::EVAL - 423)) | (1 << (self::EVALUATE - 423)) | (1 << (self::EXISTING - 423)))) !== 0) || (((($_la - 489)) & ~0x3f) === 0 && ((1 << ($_la - 489)) & ((1 << (self::EXPRESS - 489)) | (1 << (self::EXTRACTCLOBXML - 489)) | (1 << (self::FACTOR - 489)) | (1 << (self::FAILOVER - 489)) | (1 << (self::FAILURE - 489)) | (1 << (self::FAMILY - 489)) | (1 << (self::FAR - 489)) | (1 << (self::FASTSTART - 489)) | (1 << (self::FEATURE_DETAILS - 489)) | (1 << (self::FETCH - 489)) | (1 << (self::FILE_NAME_CONVERT - 489)) | (1 << (self::FIXED_VIEW_DATA - 489)) | (1 << (self::FORMAT - 489)))) !== 0) || (((($_la - 560)) & ~0x3f) === 0 && ((1 << ($_la - 560)) & ((1 << (self::GATHER_OPTIMIZER_STATISTICS - 560)) | (1 << (self::GET - 560)) | (1 << (self::ILM - 560)) | (1 << (self::INACTIVE - 560)))) !== 0) || (((($_la - 632)) & ~0x3f) === 0 && ((1 << ($_la - 632)) & ((1 << (self::INDEXING - 632)) | (1 << (self::INHERIT - 632)) | (1 << (self::INMEMORY - 632)) | (1 << (self::INMEMORY_PRUNING - 632)) | (1 << (self::INPLACE - 632)) | (1 << (self::INTERLEAVED - 632)))) !== 0) || (((($_la - 703)) & ~0x3f) === 0 && ((1 << ($_la - 703)) & ((1 << (self::JSON_ARRAYAGG - 703)) | (1 << (self::JSON_ARRAY - 703)) | (1 << (self::JSON_EQUAL - 703)) | (1 << (self::JSON_EXISTS2 - 703)) | (1 << (self::JSON_EXISTS - 703)) | (1 << (self::JSONGET - 703)) | (1 << (self::JSON - 703)) | (1 << (self::JSON_OBJECTAGG - 703)) | (1 << (self::JSON_OBJECT - 703)) | (1 << (self::JSONPARSE - 703)) | (1 << (self::JSON_QUERY - 703)) | (1 << (self::JSON_SERIALIZE - 703)) | (1 << (self::JSON_TABLE - 703)) | (1 << (self::JSON_TEXTCONTAINS2 - 703)) | (1 << (self::JSON_TEXTCONTAINS - 703)) | (1 << (self::JSON_VALUE - 703)) | (1 << (self::KEYSTORE - 703)) | (1 << (self::LABEL - 703)) | (1 << (self::LAX - 703)) | (1 << (self::LIFECYCLE - 703)) | (1 << (self::LINEAR - 703)))) !== 0) || (((($_la - 775)) & ~0x3f) === 0 && ((1 << ($_la - 775)) & ((1 << (self::LOCKING - 775)) | (1 << (self::LOGMINING - 775)) | (1 << (self::MAP - 775)) | (1 << (self::MATCHES - 775)) | (1 << (self::MATCH - 775)) | (1 << (self::MATCH_NUMBER - 775)) | (1 << (self::MATCH_RECOGNIZE - 775)) | (1 << (self::MAX_SHARED_TEMP_SIZE - 775)) | (1 << (self::MEMCOMPRESS - 775)) | (1 << (self::METADATA - 775)))) !== 0) || (((($_la - 855)) & ~0x3f) === 0 && ((1 << ($_la - 855)) & ((1 << (self::MODEL_NB - 855)) | (1 << (self::MODEL_SV - 855)) | (1 << (self::MODIFICATION - 855)) | (1 << (self::MODULE - 855)) | (1 << (self::MONTHS - 855)) | (1 << (self::MULTIDIMENSIONAL - 855)) | (1 << (self::NEG - 855)))) !== 0) || (((($_la - 936)) & ~0x3f) === 0 && ((1 << ($_la - 936)) & ((1 << (self::NO_ADAPTIVE_PLAN - 936)) | (1 << (self::NO_ANSI_REARCH - 936)) | (1 << (self::NO_AUTO_REOPTIMIZE - 936)) | (1 << (self::NO_BATCH_TABLE_ACCESS_BY_ROWID - 936)) | (1 << (self::NO_CLUSTERING - 936)) | (1 << (self::NO_COMMON_DATA - 936)) | (1 << (self::NOCOPY - 936)) | (1 << (self::NO_DATA_SECURITY_REWRITE - 936)) | (1 << (self::NO_DECORRELATE - 936)) | (1 << (self::NO_ELIM_GROUPBY - 936)) | (1 << (self::NO_GATHER_OPTIMIZER_STATISTICS - 936)) | (1 << (self::NO_INMEMORY - 936)) | (1 << (self::NO_INMEMORY_PRUNING - 936)) | (1 << (self::NOKEEP - 936)))) !== 0) || (((($_la - 1006)) & ~0x3f) === 0 && ((1 << ($_la - 1006)) & ((1 << (self::NONEDITIONABLE - 1006)) | (1 << (self::NO_OBJECT_LINK - 1006)) | (1 << (self::NO_PARTIAL_JOIN - 1006)) | (1 << (self::NO_PARTIAL_ROLLUP_PUSHDOWN - 1006)) | (1 << (self::NOPARTITION - 1006)) | (1 << (self::NO_PQ_CONCURRENT_UNION - 1006)) | (1 << (self::NO_PQ_REPLICATE - 1006)) | (1 << (self::NO_PQ_SKEW - 1006)) | (1 << (self::NO_PX_FAULT_TOLERANCE - 1006)) | (1 << (self::NORELOCATE - 1006)) | (1 << (self::NOREPLAY - 1006)) | (1 << (self::NO_ROOT_SW_FOR_LOCAL - 1006)) | (1 << (self::NO_SQL_TRANSLATION - 1006)))) !== 0) || (((($_la - 1076)) & ~0x3f) === 0 && ((1 << ($_la - 1076)) & ((1 << (self::NO_USE_CUBE - 1076)) | (1 << (self::NO_USE_VECTOR_AGGREGATION - 1076)) | (1 << (self::NO_VECTOR_TRANSFORM_DIMS - 1076)) | (1 << (self::NO_VECTOR_TRANSFORM_FACT - 1076)) | (1 << (self::NO_VECTOR_TRANSFORM - 1076)) | (1 << (self::NO_ZONEMAP - 1076)) | (1 << (self::OBJ_ID - 1076)) | (1 << (self::OFFSET - 1076)) | (1 << (self::OLS - 1076)) | (1 << (self::OMIT - 1076)) | (1 << (self::ONE - 1076)))) !== 0) || (((($_la - 1144)) & ~0x3f) === 0 && ((1 << ($_la - 1144)) & ((1 << (self::ORA_CHECK_ACL - 1144)) | (1 << (self::ORA_CHECK_PRIVILEGE - 1144)) | (1 << (self::ORA_CLUSTERING - 1144)) | (1 << (self::ORA_INVOKING_USERID - 1144)) | (1 << (self::ORA_INVOKING_USER - 1144)) | (1 << (self::ORA_INVOKING_XS_USER_GUID - 1144)) | (1 << (self::ORA_INVOKING_XS_USER - 1144)) | (1 << (self::ORA_RAWCOMPARE - 1144)) | (1 << (self::ORA_RAWCONCAT - 1144)) | (1 << (self::ORA_WRITE_TIME - 1144)) | (1 << (self::PARTIAL_JOIN - 1144)) | (1 << (self::PARTIAL - 1144)) | (1 << (self::PARTIAL_ROLLUP_PUSHDOWN - 1144)))) !== 0) || (((($_la - 1219)) & ~0x3f) === 0 && ((1 << ($_la - 1219)) & ((1 << (self::PAST - 1219)) | (1 << (self::PATCH - 1219)) | (1 << (self::PATH_PREFIX - 1219)) | (1 << (self::PATTERN - 1219)) | (1 << (self::PERIOD_KEYWORD - 1219)) | (1 << (self::PERMUTE - 1219)) | (1 << (self::PER - 1219)) | (1 << (self::PLUGGABLE - 1219)) | (1 << (self::POOL_16K - 1219)) | (1 << (self::POOL_2K - 1219)) | (1 << (self::POOL_32K - 1219)) | (1 << (self::POOL_4K - 1219)) | (1 << (self::POOL_8K - 1219)) | (1 << (self::PQ_CONCURRENT_UNION - 1219)) | (1 << (self::PQ_DISTRIBUTE_WINDOW - 1219)) | (1 << (self::PQ_FILTER - 1219)))) !== 0) || (((($_la - 1285)) & ~0x3f) === 0 && ((1 << ($_la - 1285)) & ((1 << (self::PQ_REPLICATE - 1285)) | (1 << (self::PQ_SKEW - 1285)) | (1 << (self::PRELOAD - 1285)) | (1 << (self::PRETTY - 1285)) | (1 << (self::PREV - 1285)) | (1 << (self::PRINTBLOBTOCLOB - 1285)) | (1 << (self::PRIORITY - 1285)) | (1 << (self::PRIVILEGED - 1285)) | (1 << (self::PROXY - 1285)) | (1 << (self::PRUNING - 1285)) | (1 << (self::PX_FAULT_TOLERANCE - 1285)))) !== 0) || (((($_la - 1355)) & ~0x3f) === 0 && ((1 << ($_la - 1355)) & ((1 << (self::REALM - 1355)) | (1 << (self::REDEFINE - 1355)) | (1 << (self::RELOCATE - 1355)) | (1 << (self::RESTART - 1355)))) !== 0) || (((($_la - 1439)) & ~0x3f) === 0 && ((1 << ($_la - 1439)) & ((1 << (self::ROLESET - 1439)) | (1 << (self::ROWID_MAPPING_TABLE - 1439)) | (1 << (self::RUNNING - 1439)) | (1 << (self::SAVE - 1439)) | (1 << (self::SCRUB - 1439)) | (1 << (self::SDO_GEOM_MBR - 1439)) | (1 << (self::SECRET - 1439)) | (1 << (self::SERIAL - 1439)))) !== 0) || (((($_la - 1503)) & ~0x3f) === 0 && ((1 << ($_la - 1503)) & ((1 << (self::SERVICE_NAME_CONVERT - 1503)) | (1 << (self::SERVICES - 1503)) | (1 << (self::SHARING - 1503)) | (1 << (self::SHELFLIFE - 1503)) | (1 << (self::SOURCE_FILE_DIRECTORY - 1503)) | (1 << (self::SOURCE_FILE_NAME_CONVERT - 1503)) | (1 << (self::SQL_TRANSLATION_PROFILE - 1503)) | (1 << (self::STANDARD_HASH - 1503)) | (1 << (self::STANDBYS - 1503)))) !== 0) || (((($_la - 1574)) & ~0x3f) === 0 && ((1 << ($_la - 1574)) & ((1 << (self::STATEMENT - 1574)) | (1 << (self::STATE - 1574)) | (1 << (self::STREAM - 1574)) | (1 << (self::SUBSCRIBE - 1574)) | (1 << (self::SUBSET - 1574)) | (1 << (self::SUCCESS - 1574)) | (1 << (self::SYSBACKUP - 1574)) | (1 << (self::SYS_CHECK_PRIVILEGE - 1574)))) !== 0) || (((($_la - 1639)) & ~0x3f) === 0 && ((1 << ($_la - 1639)) & ((1 << (self::SYSDG - 1639)) | (1 << (self::SYS_GET_COL_ACLIDS - 1639)) | (1 << (self::SYSGUID - 1639)) | (1 << (self::SYSKM - 1639)) | (1 << (self::SYS_MKXTI - 1639)) | (1 << (self::SYSOBJ - 1639)) | (1 << (self::SYS_OP_CYCLED_SEQ - 1639)) | (1 << (self::SYS_OP_HASH - 1639)))) !== 0) || (((($_la - 1705)) & ~0x3f) === 0 && ((1 << ($_la - 1705)) & ((1 << (self::SYS_OP_KEY_VECTOR_CREATE - 1705)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER_LIST - 1705)) | (1 << (self::SYS_OP_KEY_VECTOR_FILTER - 1705)) | (1 << (self::SYS_OP_KEY_VECTOR_SUCCEEDED - 1705)) | (1 << (self::SYS_OP_KEY_VECTOR_USE - 1705)) | (1 << (self::SYS_OP_PART_ID - 1705)) | (1 << (self::SYS_OP_ZONE_ID - 1705)))) !== 0) || $_la === self::SYS_RAW_TO_XSID || (((($_la - 1904)) & ~0x3f) === 0 && ((1 << ($_la - 1904)) & ((1 << (self::SYS_XSID_TO_RAW - 1904)) | (1 << (self::SYS_ZMAP_FILTER - 1904)) | (1 << (self::SYS_ZMAP_REFRESH - 1904)) | (1 << (self::TAG - 1904)) | (1 << (self::TEXT - 1904)) | (1 << (self::TIER - 1904)) | (1 << (self::TIES - 1904)) | (1 << (self::TO_ACLID - 1904)))) !== 0) || (((($_la - 1975)) & ~0x3f) === 0 && ((1 << ($_la - 1975)) & ((1 << (self::TRANSLATION - 1975)) | (1 << (self::TRUST - 1975)) | (1 << (self::UCS2 - 1975)) | (1 << (self::UNCONDITIONAL - 1975)) | (1 << (self::UNMATCHED - 1975)) | (1 << (self::UNPLUG - 1975)) | (1 << (self::UNSUBSCRIBE - 1975)) | (1 << (self::USABLE - 1975)) | (1 << (self::USE_CUBE - 1975)))) !== 0) || (((($_la - 2041)) & ~0x3f) === 0 && ((1 << ($_la - 2041)) & ((1 << (self::USE_HIDDEN_PARTITIONS - 2041)) | (1 << (self::USER_DATA - 2041)) | (1 << (self::USER_TABLESPACES - 2041)) | (1 << (self::USE_VECTOR_AGGREGATION - 2041)) | (1 << (self::USING_NO_EXPAND - 2041)) | (1 << (self::UTF16BE - 2041)) | (1 << (self::UTF16LE - 2041)) | (1 << (self::UTF32 - 2041)) | (1 << (self::UTF8 - 2041)) | (1 << (self::V1 - 2041)) | (1 << (self::V2 - 2041)) | (1 << (self::VALID_TIME_END - 2041)) | (1 << (self::VECTOR_TRANSFORM_DIMS - 2041)) | (1 << (self::VECTOR_TRANSFORM_FACT - 2041)) | (1 << (self::VECTOR_TRANSFORM - 2041)) | (1 << (self::VERIFIER - 2041)) | (1 << (self::VIOLATION - 2041)) | (1 << (self::VISIBILITY - 2041)))) !== 0) || (((($_la - 2109)) & ~0x3f) === 0 && ((1 << ($_la - 2109)) & ((1 << (self::WEEKS - 2109)) | (1 << (self::WEEK - 2109)) | (1 << (self::WITH_PLSQL - 2109)) | (1 << (self::WRAPPER - 2109)) | (1 << (self::XS - 2109)) | (1 << (self::YEARS - 2109)) | (1 << (self::ZONEMAP - 2109)))) !== 0) || $_la === self::PERIOD)) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function non_reserved_keywords_pre12c(): Context\Non_reserved_keywords_pre12cContext
    {
        $localContext = new Context\Non_reserved_keywords_pre12cContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1496, self::RULE_non_reserved_keywords_pre12c);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12128);

            $_la = $this->input->LA(1);

            if (!(((($_la) & ~0x3f) === 0 && ((1 << $_la) & ((1 << self::ABORT) | (1 << self::ABS) | (1 << self::ACCESS) | (1 << self::ACCESSED) | (1 << self::ACCOUNT) | (1 << self::ACOS) | (1 << self::ACTIVATE) | (1 << self::ACTIVE_COMPONENT) | (1 << self::ACTIVE_FUNCTION) | (1 << self::ACTIVE_TAG) | (1 << self::ADD) | (1 << self::ADD_COLUMN) | (1 << self::ADD_GROUP) | (1 << self::ADD_MONTHS) | (1 << self::ADJ_DATE) | (1 << self::ADMIN) | (1 << self::ADMINISTER) | (1 << self::ADMINISTRATOR) | (1 << self::ADVISE) | (1 << self::ADVISOR) | (1 << self::AFTER) | (1 << self::ALIAS) | (1 << self::ALLOCATE) | (1 << self::ALLOW) | (1 << self::ALL_ROWS) | (1 << self::ALWAYS) | (1 << self::ANALYZE) | (1 << self::ANCILLARY) | (1 << self::AND_EQUAL) | (1 << self::ANTIJOIN) | (1 << self::ANYSCHEMA) | (1 << self::APPEND) | (1 << self::APPENDCHILDXML) | (1 << self::APPEND_VALUES) | (1 << self::APPLY) | (1 << self::ARCHIVE) | (1 << self::ARCHIVELOG) | (1 << self::ARRAY) | (1 << self::ASCII))) !== 0) || (((($_la - 64)) & ~0x3f) === 0 && ((1 << ($_la - 64)) & ((1 << (self::ASCIISTR - 64)) | (1 << (self::ASIN - 64)) | (1 << (self::ASSEMBLY - 64)) | (1 << (self::ASSOCIATE - 64)) | (1 << (self::ASYNC - 64)) | (1 << (self::ASYNCHRONOUS - 64)) | (1 << (self::ATAN2 - 64)) | (1 << (self::ATAN - 64)) | (1 << (self::AT - 64)) | (1 << (self::ATTRIBUTE - 64)) | (1 << (self::ATTRIBUTES - 64)) | (1 << (self::AUTHENTICATED - 64)) | (1 << (self::AUTHENTICATION - 64)) | (1 << (self::AUTHID - 64)) | (1 << (self::AUTHORIZATION - 64)) | (1 << (self::AUTOALLOCATE - 64)) | (1 << (self::AUTO - 64)) | (1 << (self::AUTOEXTEND - 64)) | (1 << (self::AUTOMATIC - 64)) | (1 << (self::AVAILABILITY - 64)) | (1 << (self::BACKUP - 64)) | (1 << (self::BASIC - 64)) | (1 << (self::BASICFILE - 64)) | (1 << (self::BATCH - 64)) | (1 << (self::BECOME - 64)) | (1 << (self::BEFORE - 64)) | (1 << (self::BEGIN - 64)) | (1 << (self::BEGIN_OUTLINE_DATA - 64)) | (1 << (self::BEHALF - 64)) | (1 << (self::BFILE - 64)) | (1 << (self::BFILENAME - 64)) | (1 << (self::BIGFILE - 64)) | (1 << (self::BINARY - 64)) | (1 << (self::BINARY_DOUBLE - 64)) | (1 << (self::BINARY_DOUBLE_INFINITY - 64)) | (1 << (self::BINARY_DOUBLE_NAN - 64)) | (1 << (self::BINARY_FLOAT - 64)) | (1 << (self::BINARY_FLOAT_INFINITY - 64)) | (1 << (self::BINARY_FLOAT_NAN - 64)) | (1 << (self::BIND_AWARE - 64)) | (1 << (self::BINDING - 64)) | (1 << (self::BIN_TO_NUM - 64)) | (1 << (self::BITAND - 64)) | (1 << (self::BITMAP - 64)) | (1 << (self::BITMAPS - 64)) | (1 << (self::BITMAP_TREE - 64)) | (1 << (self::BITS - 64)))) !== 0) || (((($_la - 128)) & ~0x3f) === 0 && ((1 << ($_la - 128)) & ((1 << (self::BLOB - 128)) | (1 << (self::BLOCK - 128)) | (1 << (self::BLOCK_RANGE - 128)) | (1 << (self::BLOCKS - 128)) | (1 << (self::BLOCKSIZE - 128)) | (1 << (self::BODY - 128)) | (1 << (self::BOTH - 128)) | (1 << (self::BOUND - 128)) | (1 << (self::BRANCH - 128)) | (1 << (self::BREADTH - 128)) | (1 << (self::BROADCAST - 128)) | (1 << (self::BUFFER - 128)) | (1 << (self::BUFFER_CACHE - 128)) | (1 << (self::BUFFER_POOL - 128)) | (1 << (self::BUILD - 128)) | (1 << (self::BULK - 128)) | (1 << (self::BYPASS_RECURSIVE_CHECK - 128)) | (1 << (self::BYPASS_UJVC - 128)) | (1 << (self::BYTE - 128)) | (1 << (self::CACHE - 128)) | (1 << (self::CACHE_CB - 128)) | (1 << (self::CACHE_INSTANCES - 128)) | (1 << (self::CACHE_TEMP_TABLE - 128)) | (1 << (self::CALL - 128)) | (1 << (self::CANCEL - 128)) | (1 << (self::CARDINALITY - 128)) | (1 << (self::CASCADE - 128)) | (1 << (self::CASE - 128)) | (1 << (self::CAST - 128)) | (1 << (self::CATEGORY - 128)) | (1 << (self::CEIL - 128)) | (1 << (self::CELL_FLASH_CACHE - 128)) | (1 << (self::CERTIFICATE - 128)) | (1 << (self::CFILE - 128)) | (1 << (self::CHAINED - 128)) | (1 << (self::CHANGE - 128)) | (1 << (self::CHANGE_DUPKEY_ERROR_INDEX - 128)) | (1 << (self::CHARACTER - 128)) | (1 << (self::CHAR_CS - 128)) | (1 << (self::CHARTOROWID - 128)) | (1 << (self::CHECK_ACL_REWRITE - 128)) | (1 << (self::CHECKPOINT - 128)) | (1 << (self::CHILD - 128)) | (1 << (self::CHOOSE - 128)) | (1 << (self::CHR - 128)) | (1 << (self::CHUNK - 128)) | (1 << (self::CLASS - 128)) | (1 << (self::CLEAR - 128)))) !== 0) || (((($_la - 192)) & ~0x3f) === 0 && ((1 << ($_la - 192)) & ((1 << (self::CLOB - 192)) | (1 << (self::CLONE - 192)) | (1 << (self::CLOSE_CACHED_OPEN_CURSORS - 192)) | (1 << (self::CLOSE - 192)) | (1 << (self::CLUSTER_BY_ROWID - 192)) | (1 << (self::CLUSTER_ID - 192)) | (1 << (self::CLUSTERING_FACTOR - 192)) | (1 << (self::CLUSTER_PROBABILITY - 192)) | (1 << (self::CLUSTER_SET - 192)) | (1 << (self::COALESCE - 192)) | (1 << (self::COALESCE_SQ - 192)) | (1 << (self::COARSE - 192)) | (1 << (self::CO_AUTH_IND - 192)) | (1 << (self::COLD - 192)) | (1 << (self::COLLECT - 192)) | (1 << (self::COLUMNAR - 192)) | (1 << (self::COLUMN_AUTH_INDICATOR - 192)) | (1 << (self::COLUMN - 192)) | (1 << (self::COLUMNS - 192)) | (1 << (self::COLUMN_STATS - 192)) | (1 << (self::COLUMN_VALUE - 192)) | (1 << (self::COMMENT - 192)) | (1 << (self::COMMIT - 192)) | (1 << (self::COMMITTED - 192)) | (1 << (self::COMPACT - 192)) | (1 << (self::COMPATIBILITY - 192)) | (1 << (self::COMPILE - 192)) | (1 << (self::COMPLETE - 192)) | (1 << (self::COMPLIANCE - 192)) | (1 << (self::COMPOSE - 192)) | (1 << (self::COMPOSITE - 192)) | (1 << (self::COMPOSITE_LIMIT - 192)) | (1 << (self::COMPOUND - 192)) | (1 << (self::COMPUTE - 192)) | (1 << (self::CONCAT - 192)) | (1 << (self::CONFIRM - 192)) | (1 << (self::CONFORMING - 192)) | (1 << (self::CONNECT_BY_CB_WHR_ONLY - 192)) | (1 << (self::CONNECT_BY_COMBINE_SW - 192)) | (1 << (self::CONNECT_BY_COST_BASED - 192)) | (1 << (self::CONNECT_BY_ELIM_DUPS - 192)) | (1 << (self::CONNECT_BY_FILTERING - 192)) | (1 << (self::CONNECT_BY_ISCYCLE - 192)) | (1 << (self::CONNECT_BY_ISLEAF - 192)) | (1 << (self::CONNECT_BY_ROOT - 192)) | (1 << (self::CONNECT_TIME - 192)) | (1 << (self::CONSIDER - 192)) | (1 << (self::CONSISTENT - 192)) | (1 << (self::CONSTANT - 192)))) !== 0) || (((($_la - 256)) & ~0x3f) === 0 && ((1 << ($_la - 256)) & ((1 << (self::CONST - 256)) | (1 << (self::CONSTRAINT - 256)) | (1 << (self::CONSTRAINTS - 256)) | (1 << (self::CONTAINER - 256)) | (1 << (self::CONTENT - 256)) | (1 << (self::CONTENTS - 256)) | (1 << (self::CONTEXT - 256)) | (1 << (self::CONTINUE - 256)) | (1 << (self::CONTROLFILE - 256)) | (1 << (self::CONVERT - 256)) | (1 << (self::CORR_K - 256)) | (1 << (self::CORR_S - 256)) | (1 << (self::CORRUPTION - 256)) | (1 << (self::CORRUPT_XID_ALL - 256)) | (1 << (self::CORRUPT_XID - 256)) | (1 << (self::COS - 256)) | (1 << (self::COSH - 256)) | (1 << (self::COST - 256)) | (1 << (self::COST_XML_QUERY_REWRITE - 256)) | (1 << (self::COUNT - 256)) | (1 << (self::COVAR_POP - 256)) | (1 << (self::COVAR_SAMP - 256)) | (1 << (self::CPU_COSTING - 256)) | (1 << (self::CPU_PER_CALL - 256)) | (1 << (self::CPU_PER_SESSION - 256)) | (1 << (self::CRASH - 256)) | (1 << (self::CREATE_STORED_OUTLINES - 256)) | (1 << (self::CREATION - 256)) | (1 << (self::CROSS - 256)) | (1 << (self::CROSSEDITION - 256)) | (1 << (self::CSCONVERT - 256)) | (1 << (self::CUBE - 256)) | (1 << (self::CUBE_GB - 256)) | (1 << (self::CUME_DISTM - 256)) | (1 << (self::CURRENT - 256)) | (1 << (self::CURRENT_DATE - 256)) | (1 << (self::CURRENT_SCHEMA - 256)) | (1 << (self::CURRENT_TIME - 256)) | (1 << (self::CURRENT_TIMESTAMP - 256)) | (1 << (self::CURRENT_USER - 256)) | (1 << (self::CURRENTV - 256)) | (1 << (self::CURSOR - 256)) | (1 << (self::CURSOR_SHARING_EXACT - 256)) | (1 << (self::CURSOR_SPECIFIC_SEGMENT - 256)) | (1 << (self::CV - 256)) | (1 << (self::CYCLE - 256)) | (1 << (self::DANGLING - 256)) | (1 << (self::DATABASE - 256)) | (1 << (self::DATA - 256)) | (1 << (self::DATAFILE - 256)) | (1 << (self::DATAFILES - 256)))) !== 0) || (((($_la - 322)) & ~0x3f) === 0 && ((1 << ($_la - 322)) & ((1 << (self::DATAOBJNO - 322)) | (1 << (self::DATAOBJ_TO_PARTITION - 322)) | (1 << (self::DATE_MODE - 322)) | (1 << (self::DAY - 322)) | (1 << (self::DBA - 322)) | (1 << (self::DBA_RECYCLEBIN - 322)) | (1 << (self::DBMS_STATS - 322)) | (1 << (self::DB_ROLE_CHANGE - 322)) | (1 << (self::DBTIMEZONE - 322)) | (1 << (self::DB_VERSION - 322)) | (1 << (self::DDL - 322)) | (1 << (self::DEALLOCATE - 322)) | (1 << (self::DEBUG - 322)) | (1 << (self::DEBUGGER - 322)) | (1 << (self::DEC - 322)) | (1 << (self::DECLARE - 322)) | (1 << (self::DECOMPOSE - 322)) | (1 << (self::DECR - 322)) | (1 << (self::DECREMENT - 322)) | (1 << (self::DECRYPT - 322)) | (1 << (self::DEDUPLICATE - 322)) | (1 << (self::DEFAULTS - 322)) | (1 << (self::DEFERRABLE - 322)) | (1 << (self::DEFERRED - 322)) | (1 << (self::DEFINED - 322)) | (1 << (self::DEFINER - 322)) | (1 << (self::DEGREE - 322)) | (1 << (self::DELAY - 322)) | (1 << (self::DELETEXML - 322)) | (1 << (self::DEMAND - 322)) | (1 << (self::DENSE_RANKM - 322)) | (1 << (self::DEPENDENT - 322)) | (1 << (self::DEPTH - 322)) | (1 << (self::DEQUEUE - 322)) | (1 << (self::DEREF - 322)) | (1 << (self::DEREF_NO_REWRITE - 322)) | (1 << (self::DETACHED - 322)) | (1 << (self::DETERMINES - 322)) | (1 << (self::DICTIONARY - 322)) | (1 << (self::DIMENSION - 322)) | (1 << (self::DIRECT_LOAD - 322)) | (1 << (self::DIRECTORY - 322)) | (1 << (self::DIRECT_PATH - 322)) | (1 << (self::DISABLE - 322)) | (1 << (self::DISABLE_PRESET - 322)))) !== 0) || (((($_la - 386)) & ~0x3f) === 0 && ((1 << ($_la - 386)) & ((1 << (self::DISABLE_RPKE - 386)) | (1 << (self::DISALLOW - 386)) | (1 << (self::DISASSOCIATE - 386)) | (1 << (self::DISCONNECT - 386)) | (1 << (self::DISK - 386)) | (1 << (self::DISKGROUP - 386)) | (1 << (self::DISKS - 386)) | (1 << (self::DISMOUNT - 386)) | (1 << (self::DISTINGUISHED - 386)) | (1 << (self::DISTRIBUTED - 386)) | (1 << (self::DML - 386)) | (1 << (self::DML_UPDATE - 386)) | (1 << (self::DOCFIDELITY - 386)) | (1 << (self::DOCUMENT - 386)) | (1 << (self::DOMAIN_INDEX_FILTER - 386)) | (1 << (self::DOMAIN_INDEX_NO_SORT - 386)) | (1 << (self::DOMAIN_INDEX_SORT - 386)) | (1 << (self::DOUBLE - 386)) | (1 << (self::DOWNGRADE - 386)) | (1 << (self::DRIVING_SITE - 386)) | (1 << (self::DROP_COLUMN - 386)) | (1 << (self::DROP_GROUP - 386)) | (1 << (self::DST_UPGRADE_INSERT_CONV - 386)) | (1 << (self::DUMP - 386)) | (1 << (self::DYNAMIC - 386)) | (1 << (self::DYNAMIC_SAMPLING - 386)) | (1 << (self::DYNAMIC_SAMPLING_EST_CDN - 386)) | (1 << (self::EACH - 386)) | (1 << (self::EDITION - 386)) | (1 << (self::EDITIONING - 386)) | (1 << (self::EDITIONS - 386)) | (1 << (self::ELEMENT - 386)) | (1 << (self::ELIMINATE_JOIN - 386)) | (1 << (self::ELIMINATE_OBY - 386)) | (1 << (self::ELIMINATE_OUTER_JOIN - 386)) | (1 << (self::EMPTY_BLOB - 386)) | (1 << (self::EMPTY_CLOB - 386)) | (1 << (self::EMPTY - 386)) | (1 << (self::ENABLE - 386)) | (1 << (self::ENABLE_PRESET - 386)) | (1 << (self::ENCODING - 386)) | (1 << (self::ENCRYPT - 386)) | (1 << (self::ENCRYPTION - 386)) | (1 << (self::END_OUTLINE_DATA - 386)) | (1 << (self::ENFORCED - 386)) | (1 << (self::ENFORCE - 386)) | (1 << (self::ENQUEUE - 386)))) !== 0) || (((($_la - 450)) & ~0x3f) === 0 && ((1 << ($_la - 450)) & ((1 << (self::ENTERPRISE - 450)) | (1 << (self::ENTITYESCAPING - 450)) | (1 << (self::ENTRY - 450)) | (1 << (self::ERROR_ARGUMENT - 450)) | (1 << (self::ERROR - 450)) | (1 << (self::ERROR_ON_OVERLAP_TIME - 450)) | (1 << (self::ERRORS - 450)) | (1 << (self::ESCAPE - 450)) | (1 << (self::ESTIMATE - 450)) | (1 << (self::EVALNAME - 450)) | (1 << (self::EVALUATION - 450)) | (1 << (self::EVENTS - 450)) | (1 << (self::EVERY - 450)) | (1 << (self::EXCEPT - 450)) | (1 << (self::EXCEPTIONS - 450)) | (1 << (self::EXCHANGE - 450)) | (1 << (self::EXCLUDE - 450)) | (1 << (self::EXCLUDING - 450)) | (1 << (self::EXECUTE - 450)) | (1 << (self::EXEMPT - 450)) | (1 << (self::EXISTSNODE - 450)) | (1 << (self::EXPAND_GSET_TO_UNION - 450)) | (1 << (self::EXPAND_TABLE - 450)) | (1 << (self::EXP - 450)) | (1 << (self::EXPIRE - 450)) | (1 << (self::EXPLAIN - 450)) | (1 << (self::EXPLOSION - 450)) | (1 << (self::EXPORT - 450)) | (1 << (self::EXPR_CORR_CHECK - 450)) | (1 << (self::EXTENDS - 450)) | (1 << (self::EXTENT - 450)) | (1 << (self::EXTENTS - 450)) | (1 << (self::EXTERNAL - 450)) | (1 << (self::EXTERNALLY - 450)) | (1 << (self::EXTRACT - 450)) | (1 << (self::EXTRACTVALUE - 450)) | (1 << (self::EXTRA - 450)) | (1 << (self::FACILITY - 450)) | (1 << (self::FACT - 450)) | (1 << (self::FACTORIZE_JOIN - 450)) | (1 << (self::FAILED - 450)) | (1 << (self::FAILED_LOGIN_ATTEMPTS - 450)) | (1 << (self::FAILGROUP - 450)) | (1 << (self::FALSE - 450)) | (1 << (self::FAST - 450)) | (1 << (self::FBTSCAN - 450)))) !== 0) || (((($_la - 515)) & ~0x3f) === 0 && ((1 << ($_la - 515)) & ((1 << (self::FEATURE_ID - 515)) | (1 << (self::FEATURE_SET - 515)) | (1 << (self::FEATURE_VALUE - 515)) | (1 << (self::FILE - 515)) | (1 << (self::FILESYSTEM_LIKE_LOGGING - 515)) | (1 << (self::FILTER - 515)) | (1 << (self::FINAL - 515)) | (1 << (self::FINE - 515)) | (1 << (self::FINISH - 515)) | (1 << (self::FIRST - 515)) | (1 << (self::FIRSTM - 515)) | (1 << (self::FIRST_ROWS - 515)) | (1 << (self::FIRST_VALUE - 515)) | (1 << (self::FLAGGER - 515)) | (1 << (self::FLASHBACK - 515)) | (1 << (self::FLASH_CACHE - 515)) | (1 << (self::FLOB - 515)) | (1 << (self::FLOOR - 515)) | (1 << (self::FLUSH - 515)) | (1 << (self::FOLDER - 515)) | (1 << (self::FOLLOWING - 515)) | (1 << (self::FOLLOWS - 515)) | (1 << (self::FORCE - 515)) | (1 << (self::FORCE_XML_QUERY_REWRITE - 515)) | (1 << (self::FOREIGN - 515)) | (1 << (self::FOREVER - 515)) | (1 << (self::FORWARD - 515)) | (1 << (self::FRAGMENT_NUMBER - 515)) | (1 << (self::FREELIST - 515)) | (1 << (self::FREELISTS - 515)) | (1 << (self::FREEPOOLS - 515)) | (1 << (self::FRESH - 515)) | (1 << (self::FROM_TZ - 515)) | (1 << (self::FULL - 515)) | (1 << (self::FULL_OUTER_JOIN_TO_OUTER - 515)) | (1 << (self::FUNCTION - 515)) | (1 << (self::FUNCTIONS - 515)) | (1 << (self::GATHER_PLAN_STATISTICS - 515)) | (1 << (self::GBY_CONC_ROLLUP - 515)) | (1 << (self::GBY_PUSHDOWN - 515)) | (1 << (self::GENERATED - 515)) | (1 << (self::GLOBAL - 515)) | (1 << (self::GLOBALLY - 515)) | (1 << (self::GLOBAL_NAME - 515)) | (1 << (self::GLOBAL_TOPIC_ENABLED - 515)) | (1 << (self::GROUP_BY - 515)) | (1 << (self::GROUP_ID - 515)) | (1 << (self::GROUPING - 515)) | (1 << (self::GROUPING_ID - 515)) | (1 << (self::GROUPS - 515)) | (1 << (self::GUARANTEED - 515)))) !== 0) || (((($_la - 579)) & ~0x3f) === 0 && ((1 << ($_la - 579)) & ((1 << (self::GUARANTEE - 579)) | (1 << (self::GUARD - 579)) | (1 << (self::HASH_AJ - 579)) | (1 << (self::HASH - 579)) | (1 << (self::HASHKEYS - 579)) | (1 << (self::HASH_SJ - 579)) | (1 << (self::HEADER - 579)) | (1 << (self::HEAP - 579)) | (1 << (self::HELP - 579)) | (1 << (self::HEXTORAW - 579)) | (1 << (self::HEXTOREF - 579)) | (1 << (self::HIDDEN_KEYWORD - 579)) | (1 << (self::HIDE - 579)) | (1 << (self::HIERARCHY - 579)) | (1 << (self::HIGH - 579)) | (1 << (self::HINTSET_BEGIN - 579)) | (1 << (self::HINTSET_END - 579)) | (1 << (self::HOT - 579)) | (1 << (self::HOUR - 579)) | (1 << (self::HWM_BROKERED - 579)) | (1 << (self::HYBRID - 579)) | (1 << (self::IDENTIFIER - 579)) | (1 << (self::IDENTITY - 579)) | (1 << (self::IDGENERATORS - 579)) | (1 << (self::ID - 579)) | (1 << (self::IDLE_TIME - 579)) | (1 << (self::IF - 579)) | (1 << (self::IGNORE - 579)) | (1 << (self::IGNORE_OPTIM_EMBEDDED_HINTS - 579)) | (1 << (self::IGNORE_ROW_ON_DUPKEY_INDEX - 579)) | (1 << (self::IGNORE_WHERE_CLAUSE - 579)) | (1 << (self::IMMEDIATE - 579)) | (1 << (self::IMPACT - 579)) | (1 << (self::IMPORT - 579)) | (1 << (self::INCLUDE - 579)) | (1 << (self::INCLUDE_VERSION - 579)) | (1 << (self::INCLUDING - 579)) | (1 << (self::INCREMENTAL - 579)) | (1 << (self::INCREMENT - 579)) | (1 << (self::INCR - 579)) | (1 << (self::INDENT - 579)) | (1 << (self::INDEX_ASC - 579)) | (1 << (self::INDEX_COMBINE - 579)) | (1 << (self::INDEX_DESC - 579)) | (1 << (self::INDEXED - 579)) | (1 << (self::INDEXES - 579)) | (1 << (self::INDEX_FFS - 579)) | (1 << (self::INDEX_FILTER - 579)) | (1 << (self::INDEX_JOIN - 579)) | (1 << (self::INDEX_ROWS - 579)) | (1 << (self::INDEX_RRS - 579)) | (1 << (self::INDEX_RS_ASC - 579)) | (1 << (self::INDEX_RS_DESC - 579)) | (1 << (self::INDEX_RS - 579)) | (1 << (self::INDEX_SCAN - 579)) | (1 << (self::INDEX_SKIP_SCAN - 579)) | (1 << (self::INDEX_SS_ASC - 579)) | (1 << (self::INDEX_SS_DESC - 579)))) !== 0) || (((($_la - 643)) & ~0x3f) === 0 && ((1 << ($_la - 643)) & ((1 << (self::INDEX_SS - 643)) | (1 << (self::INDEX_STATS - 643)) | (1 << (self::INDEXTYPE - 643)) | (1 << (self::INDEXTYPES - 643)) | (1 << (self::INDICATOR - 643)) | (1 << (self::INFINITE - 643)) | (1 << (self::INFORMATIONAL - 643)) | (1 << (self::INITCAP - 643)) | (1 << (self::INITIAL - 643)) | (1 << (self::INITIALIZED - 643)) | (1 << (self::INITIALLY - 643)) | (1 << (self::INITRANS - 643)) | (1 << (self::INLINE - 643)) | (1 << (self::INLINE_XMLTYPE_NT - 643)) | (1 << (self::IN_MEMORY_METADATA - 643)) | (1 << (self::INNER - 643)) | (1 << (self::INSERTCHILDXMLAFTER - 643)) | (1 << (self::INSERTCHILDXMLBEFORE - 643)) | (1 << (self::INSERTCHILDXML - 643)) | (1 << (self::INSERTXMLAFTER - 643)) | (1 << (self::INSERTXMLBEFORE - 643)) | (1 << (self::INSTANCE - 643)) | (1 << (self::INSTANCES - 643)) | (1 << (self::INSTANTIABLE - 643)) | (1 << (self::INSTANTLY - 643)) | (1 << (self::INSTEAD - 643)) | (1 << (self::INSTR2 - 643)) | (1 << (self::INSTR4 - 643)) | (1 << (self::INSTRB - 643)) | (1 << (self::INSTRC - 643)) | (1 << (self::INSTR - 643)) | (1 << (self::INTERMEDIATE - 643)) | (1 << (self::INTERNAL_CONVERT - 643)) | (1 << (self::INTERNAL_USE - 643)) | (1 << (self::INTERPRETED - 643)) | (1 << (self::INTERVAL - 643)) | (1 << (self::INT - 643)) | (1 << (self::INVALIDATE - 643)) | (1 << (self::INVISIBLE - 643)) | (1 << (self::IN_XQUERY - 643)) | (1 << (self::ISOLATION - 643)) | (1 << (self::ISOLATION_LEVEL - 643)) | (1 << (self::ITERATE - 643)) | (1 << (self::ITERATION_NUMBER - 643)) | (1 << (self::JAVA - 643)) | (1 << (self::JOB - 643)) | (1 << (self::JOIN - 643)))) !== 0) || (((($_la - 719)) & ~0x3f) === 0 && ((1 << ($_la - 719)) & ((1 << (self::KEEP_DUPLICATES - 719)) | (1 << (self::KEEP - 719)) | (1 << (self::KERBEROS - 719)) | (1 << (self::KEY - 719)) | (1 << (self::KEY_LENGTH - 719)) | (1 << (self::KEYSIZE - 719)) | (1 << (self::KEYS - 719)) | (1 << (self::KILL - 719)) | (1 << (self::LAST_DAY - 719)) | (1 << (self::LAST - 719)) | (1 << (self::LAST_VALUE - 719)) | (1 << (self::LATERAL - 719)) | (1 << (self::LAYER - 719)) | (1 << (self::LDAP_REGISTRATION_ENABLED - 719)) | (1 << (self::LDAP_REGISTRATION - 719)) | (1 << (self::LDAP_REG_SYNC_INTERVAL - 719)) | (1 << (self::LEADING - 719)) | (1 << (self::LEFT - 719)) | (1 << (self::LENGTH2 - 719)) | (1 << (self::LENGTH4 - 719)) | (1 << (self::LENGTHB - 719)) | (1 << (self::LENGTHC - 719)) | (1 << (self::LENGTH - 719)) | (1 << (self::LESS - 719)) | (1 << (self::LEVEL - 719)) | (1 << (self::LEVELS - 719)) | (1 << (self::LIBRARY - 719)) | (1 << (self::LIFE - 719)) | (1 << (self::LIFETIME - 719)) | (1 << (self::LIKE2 - 719)) | (1 << (self::LIKE4 - 719)) | (1 << (self::LIKEC - 719)) | (1 << (self::LIKE_EXPAND - 719)) | (1 << (self::LIMIT - 719)) | (1 << (self::LINK - 719)) | (1 << (self::LIST - 719)) | (1 << (self::LN - 719)) | (1 << (self::LNNVL - 719)) | (1 << (self::LOAD - 719)) | (1 << (self::LOB - 719)) | (1 << (self::LOBNVL - 719)) | (1 << (self::LOBS - 719)) | (1 << (self::LOCAL_INDEXES - 719)) | (1 << (self::LOCAL - 719)) | (1 << (self::LOCALTIME - 719)) | (1 << (self::LOCALTIMESTAMP - 719)) | (1 << (self::LOCATION - 719)) | (1 << (self::LOCATOR - 719)) | (1 << (self::LOCKED - 719)) | (1 << (self::LOGFILE - 719)) | (1 << (self::LOGFILES - 719)) | (1 << (self::LOGGING - 719)) | (1 << (self::LOGICAL - 719)) | (1 << (self::LOGICAL_READS_PER_CALL - 719)) | (1 << (self::LOGICAL_READS_PER_SESSION - 719)))) !== 0) || (((($_la - 783)) & ~0x3f) === 0 && ((1 << ($_la - 783)) & ((1 << (self::LOG - 783)) | (1 << (self::LOGOFF - 783)) | (1 << (self::LOGON - 783)) | (1 << (self::LOG_READ_ONLY_VIOLATIONS - 783)) | (1 << (self::LOWER - 783)) | (1 << (self::LOW - 783)) | (1 << (self::LPAD - 783)) | (1 << (self::LTRIM - 783)) | (1 << (self::MAIN - 783)) | (1 << (self::MAKE_REF - 783)) | (1 << (self::MANAGED - 783)) | (1 << (self::MANAGE - 783)) | (1 << (self::MANAGEMENT - 783)) | (1 << (self::MANAGER - 783)) | (1 << (self::MANUAL - 783)) | (1 << (self::MAPPING - 783)) | (1 << (self::MASTER - 783)) | (1 << (self::MATCHED - 783)) | (1 << (self::MATERIALIZED - 783)) | (1 << (self::MATERIALIZE - 783)) | (1 << (self::MAXARCHLOGS - 783)) | (1 << (self::MAXDATAFILES - 783)) | (1 << (self::MAXEXTENTS - 783)) | (1 << (self::MAXIMIZE - 783)) | (1 << (self::MAXINSTANCES - 783)) | (1 << (self::MAXLOGFILES - 783)) | (1 << (self::MAXLOGHISTORY - 783)) | (1 << (self::MAXLOGMEMBERS - 783)) | (1 << (self::MAXSIZE - 783)) | (1 << (self::MAXTRANS - 783)) | (1 << (self::MAXVALUE - 783)) | (1 << (self::MEASURE - 783)) | (1 << (self::MEASURES - 783)) | (1 << (self::MEDIUM - 783)) | (1 << (self::MEMBER - 783)) | (1 << (self::MEMORY - 783)) | (1 << (self::MERGEACTIONS - 783)) | (1 << (self::MERGE_AJ - 783)) | (1 << (self::MERGE_CONST_ON - 783)) | (1 << (self::MERGE - 783)) | (1 << (self::MERGE_SJ - 783)) | (1 << (self::METHOD - 783)) | (1 << (self::MIGRATE - 783)) | (1 << (self::MIGRATION - 783)) | (1 << (self::MINEXTENTS - 783)) | (1 << (self::MINIMIZE - 783)) | (1 << (self::MINIMUM - 783)) | (1 << (self::MINING - 783)) | (1 << (self::MINUS_NULL - 783)) | (1 << (self::MINUTE - 783)) | (1 << (self::MINVALUE - 783)) | (1 << (self::MIRRORCOLD - 783)))) !== 0) || (((($_la - 847)) & ~0x3f) === 0 && ((1 << ($_la - 847)) & ((1 << (self::MIRRORHOT - 847)) | (1 << (self::MIRROR - 847)) | (1 << (self::MLSLABEL - 847)) | (1 << (self::MODEL_COMPILE_SUBQUERY - 847)) | (1 << (self::MODEL_DONTVERIFY_UNIQUENESS - 847)) | (1 << (self::MODEL_DYNAMIC_SUBQUERY - 847)) | (1 << (self::MODEL_MIN_ANALYSIS - 847)) | (1 << (self::MODEL - 847)) | (1 << (self::MODEL_NO_ANALYSIS - 847)) | (1 << (self::MODEL_PBY - 847)) | (1 << (self::MODEL_PUSH_REF - 847)) | (1 << (self::MODIFY_COLUMN_TYPE - 847)) | (1 << (self::MODIFY - 847)) | (1 << (self::MOD - 847)) | (1 << (self::MONITORING - 847)) | (1 << (self::MONITOR - 847)) | (1 << (self::MONTH - 847)) | (1 << (self::MONTHS_BETWEEN - 847)) | (1 << (self::MOUNT - 847)) | (1 << (self::MOUNTPATH - 847)) | (1 << (self::MOVEMENT - 847)) | (1 << (self::MOVE - 847)) | (1 << (self::MULTISET - 847)) | (1 << (self::MV_MERGE - 847)) | (1 << (self::NAMED - 847)) | (1 << (self::NAME - 847)) | (1 << (self::NAMESPACE - 847)) | (1 << (self::NAN - 847)) | (1 << (self::NANVL - 847)) | (1 << (self::NATIONAL - 847)) | (1 << (self::NATIVE_FULL_OUTER_JOIN - 847)) | (1 << (self::NATIVE - 847)) | (1 << (self::NATURAL - 847)) | (1 << (self::NAV - 847)) | (1 << (self::NCHAR_CS - 847)) | (1 << (self::NCHAR - 847)) | (1 << (self::NCHR - 847)) | (1 << (self::NCLOB - 847)) | (1 << (self::NEEDED - 847)) | (1 << (self::NESTED - 847)) | (1 << (self::NESTED_TABLE_FAST_INSERT - 847)) | (1 << (self::NESTED_TABLE_GET_REFS - 847)) | (1 << (self::NESTED_TABLE_ID - 847)) | (1 << (self::NESTED_TABLE_SET_REFS - 847)) | (1 << (self::NESTED_TABLE_SET_SETID - 847)) | (1 << (self::NETWORK - 847)) | (1 << (self::NEVER - 847)) | (1 << (self::NEW - 847)) | (1 << (self::NEW_TIME - 847)) | (1 << (self::NEXT_DAY - 847)) | (1 << (self::NEXT - 847)) | (1 << (self::NL_AJ - 847)) | (1 << (self::NLJ_BATCHING - 847)) | (1 << (self::NLJ_INDEX_FILTER - 847)) | (1 << (self::NLJ_INDEX_SCAN - 847)))) !== 0) || (((($_la - 911)) & ~0x3f) === 0 && ((1 << ($_la - 911)) & ((1 << (self::NLJ_PREFETCH - 911)) | (1 << (self::NLS_CALENDAR - 911)) | (1 << (self::NLS_CHARACTERSET - 911)) | (1 << (self::NLS_CHARSET_DECL_LEN - 911)) | (1 << (self::NLS_CHARSET_ID - 911)) | (1 << (self::NLS_CHARSET_NAME - 911)) | (1 << (self::NLS_COMP - 911)) | (1 << (self::NLS_CURRENCY - 911)) | (1 << (self::NLS_DATE_FORMAT - 911)) | (1 << (self::NLS_DATE_LANGUAGE - 911)) | (1 << (self::NLS_INITCAP - 911)) | (1 << (self::NLS_ISO_CURRENCY - 911)) | (1 << (self::NL_SJ - 911)) | (1 << (self::NLS_LANG - 911)) | (1 << (self::NLS_LANGUAGE - 911)) | (1 << (self::NLS_LENGTH_SEMANTICS - 911)) | (1 << (self::NLS_LOWER - 911)) | (1 << (self::NLS_NCHAR_CONV_EXCP - 911)) | (1 << (self::NLS_NUMERIC_CHARACTERS - 911)) | (1 << (self::NLS_SORT - 911)) | (1 << (self::NLSSORT - 911)) | (1 << (self::NLS_SPECIAL_CHARS - 911)) | (1 << (self::NLS_TERRITORY - 911)) | (1 << (self::NLS_UPPER - 911)) | (1 << (self::NO_ACCESS - 911)) | (1 << (self::NOAPPEND - 911)) | (1 << (self::NOARCHIVELOG - 911)) | (1 << (self::NOAUDIT - 911)) | (1 << (self::NO_BASETABLE_MULTIMV_REWRITE - 911)) | (1 << (self::NO_BIND_AWARE - 911)) | (1 << (self::NO_BUFFER - 911)) | (1 << (self::NOCACHE - 911)) | (1 << (self::NO_CARTESIAN - 911)) | (1 << (self::NO_CHECK_ACL_REWRITE - 911)) | (1 << (self::NO_CLUSTER_BY_ROWID - 911)) | (1 << (self::NO_COALESCE_SQ - 911)) | (1 << (self::NO_CONNECT_BY_CB_WHR_ONLY - 911)) | (1 << (self::NO_CONNECT_BY_COMBINE_SW - 911)) | (1 << (self::NO_CONNECT_BY_COST_BASED - 911)) | (1 << (self::NO_CONNECT_BY_ELIM_DUPS - 911)) | (1 << (self::NO_CONNECT_BY_FILTERING - 911)) | (1 << (self::NO_COST_XML_QUERY_REWRITE - 911)) | (1 << (self::NO_CPU_COSTING - 911)) | (1 << (self::NOCPU_COSTING - 911)) | (1 << (self::NOCYCLE - 911)) | (1 << (self::NODELAY - 911)) | (1 << (self::NO_DOMAIN_INDEX_FILTER - 911)) | (1 << (self::NO_DST_UPGRADE_INSERT_CONV - 911)) | (1 << (self::NO_ELIMINATE_JOIN - 911)) | (1 << (self::NO_ELIMINATE_OBY - 911)) | (1 << (self::NO_ELIMINATE_OUTER_JOIN - 911)) | (1 << (self::NOENTITYESCAPING - 911)) | (1 << (self::NO_EXPAND_GSET_TO_UNION - 911)))) !== 0) || (((($_la - 975)) & ~0x3f) === 0 && ((1 << ($_la - 975)) & ((1 << (self::NO_EXPAND - 975)) | (1 << (self::NO_EXPAND_TABLE - 975)) | (1 << (self::NO_FACT - 975)) | (1 << (self::NO_FACTORIZE_JOIN - 975)) | (1 << (self::NO_FILTERING - 975)) | (1 << (self::NOFORCE - 975)) | (1 << (self::NO_FULL_OUTER_JOIN_TO_OUTER - 975)) | (1 << (self::NO_GBY_PUSHDOWN - 975)) | (1 << (self::NOGUARANTEE - 975)) | (1 << (self::NO_INDEX_FFS - 975)) | (1 << (self::NO_INDEX - 975)) | (1 << (self::NO_INDEX_SS - 975)) | (1 << (self::NO_LOAD - 975)) | (1 << (self::NOLOCAL - 975)) | (1 << (self::NOLOGGING - 975)) | (1 << (self::NOMAPPING - 975)) | (1 << (self::NOMAXVALUE - 975)) | (1 << (self::NO_MERGE - 975)) | (1 << (self::NOMINIMIZE - 975)) | (1 << (self::NOMINVALUE - 975)) | (1 << (self::NO_MODEL_PUSH_REF - 975)) | (1 << (self::NO_MONITORING - 975)) | (1 << (self::NOMONITORING - 975)) | (1 << (self::NO_MONITOR - 975)) | (1 << (self::NO_MULTIMV_REWRITE - 975)) | (1 << (self::NO_NATIVE_FULL_OUTER_JOIN - 975)) | (1 << (self::NONBLOCKING - 975)) | (1 << (self::NONE - 975)) | (1 << (self::NO_NLJ_BATCHING - 975)) | (1 << (self::NO_NLJ_PREFETCH - 975)) | (1 << (self::NO - 975)) | (1 << (self::NONSCHEMA - 975)) | (1 << (self::NOORDER - 975)) | (1 << (self::NO_ORDER_ROLLUPS - 975)) | (1 << (self::NO_OUTER_JOIN_TO_ANTI - 975)) | (1 << (self::NO_OUTER_JOIN_TO_INNER - 975)) | (1 << (self::NOOVERRIDE - 975)) | (1 << (self::NO_PARALLEL_INDEX - 975)) | (1 << (self::NOPARALLEL_INDEX - 975)) | (1 << (self::NO_PARALLEL - 975)) | (1 << (self::NOPARALLEL - 975)) | (1 << (self::NO_PARTIAL_COMMIT - 975)) | (1 << (self::NO_PLACE_DISTINCT - 975)) | (1 << (self::NO_PLACE_GROUP_BY - 975)) | (1 << (self::NO_PQ_MAP - 975)) | (1 << (self::NO_PRUNE_GSETS - 975)) | (1 << (self::NO_PULL_PRED - 975)) | (1 << (self::NO_PUSH_PRED - 975)) | (1 << (self::NO_PUSH_SUBQ - 975)) | (1 << (self::NO_PX_JOIN_FILTER - 975)) | (1 << (self::NO_QKN_BUFF - 975)))) !== 0) || (((($_la - 1039)) & ~0x3f) === 0 && ((1 << ($_la - 1039)) & ((1 << (self::NO_QUERY_TRANSFORMATION - 1039)) | (1 << (self::NO_REF_CASCADE - 1039)) | (1 << (self::NORELY - 1039)) | (1 << (self::NOREPAIR - 1039)) | (1 << (self::NORESETLOGS - 1039)) | (1 << (self::NO_RESULT_CACHE - 1039)) | (1 << (self::NOREVERSE - 1039)) | (1 << (self::NO_REWRITE - 1039)) | (1 << (self::NOREWRITE - 1039)) | (1 << (self::NORMAL - 1039)) | (1 << (self::NOROWDEPENDENCIES - 1039)) | (1 << (self::NOSCHEMACHECK - 1039)) | (1 << (self::NOSEGMENT - 1039)) | (1 << (self::NO_SEMIJOIN - 1039)) | (1 << (self::NO_SEMI_TO_INNER - 1039)) | (1 << (self::NO_SET_TO_JOIN - 1039)) | (1 << (self::NOSORT - 1039)) | (1 << (self::NO_SQL_TUNE - 1039)) | (1 << (self::NO_STAR_TRANSFORMATION - 1039)) | (1 << (self::NO_STATEMENT_QUEUING - 1039)) | (1 << (self::NO_STATS_GSETS - 1039)) | (1 << (self::NOSTRICT - 1039)) | (1 << (self::NO_SUBQUERY_PRUNING - 1039)) | (1 << (self::NO_SUBSTRB_PAD - 1039)) | (1 << (self::NO_SWAP_JOIN_INPUTS - 1039)) | (1 << (self::NOSWITCH - 1039)) | (1 << (self::NO_TABLE_LOOKUP_BY_NL - 1039)) | (1 << (self::NO_TEMP_TABLE - 1039)) | (1 << (self::NOTHING - 1039)) | (1 << (self::NOTIFICATION - 1039)) | (1 << (self::NO_TRANSFORM_DISTINCT_AGG - 1039)) | (1 << (self::NO_UNNEST - 1039)) | (1 << (self::NO_USE_HASH_AGGREGATION - 1039)) | (1 << (self::NO_USE_HASH_GBY_FOR_PUSHDOWN - 1039)) | (1 << (self::NO_USE_HASH - 1039)) | (1 << (self::NO_USE_INVISIBLE_INDEXES - 1039)) | (1 << (self::NO_USE_MERGE - 1039)) | (1 << (self::NO_USE_NL - 1039)) | (1 << (self::NOVALIDATE - 1039)) | (1 << (self::NO_XDB_FASTPATH_INSERT - 1039)) | (1 << (self::NO_XML_DML_REWRITE - 1039)) | (1 << (self::NO_XMLINDEX_REWRITE_IN_SELECT - 1039)) | (1 << (self::NO_XMLINDEX_REWRITE - 1039)) | (1 << (self::NO_XML_QUERY_REWRITE - 1039)) | (1 << (self::NTH_VALUE - 1039)) | (1 << (self::NULLIF - 1039)) | (1 << (self::NULLS - 1039)) | (1 << (self::NUMERIC - 1039)) | (1 << (self::NUM_INDEX_KEYS - 1039)) | (1 << (self::NUMTODSINTERVAL - 1039)))) !== 0) || (((($_la - 1103)) & ~0x3f) === 0 && ((1 << ($_la - 1103)) & ((1 << (self::NUMTOYMINTERVAL - 1103)) | (1 << (self::NVARCHAR2 - 1103)) | (1 << (self::NVL2 - 1103)) | (1 << (self::OBJECT2XML - 1103)) | (1 << (self::OBJECT - 1103)) | (1 << (self::OBJNO - 1103)) | (1 << (self::OBJNO_REUSE - 1103)) | (1 << (self::OCCURENCES - 1103)) | (1 << (self::OFFLINE - 1103)) | (1 << (self::OFF - 1103)) | (1 << (self::OIDINDEX - 1103)) | (1 << (self::OID - 1103)) | (1 << (self::OLAP - 1103)) | (1 << (self::OLD - 1103)) | (1 << (self::OLD_PUSH_PRED - 1103)) | (1 << (self::OLTP - 1103)) | (1 << (self::ONLINE - 1103)) | (1 << (self::ONLY - 1103)) | (1 << (self::OPAQUE - 1103)) | (1 << (self::OPAQUE_TRANSFORM - 1103)) | (1 << (self::OPAQUE_XCANONICAL - 1103)) | (1 << (self::OPCODE - 1103)) | (1 << (self::OPEN - 1103)) | (1 << (self::OPERATIONS - 1103)) | (1 << (self::OPERATOR - 1103)) | (1 << (self::OPT_ESTIMATE - 1103)) | (1 << (self::OPTIMAL - 1103)) | (1 << (self::OPTIMIZE - 1103)) | (1 << (self::OPTIMIZER_FEATURES_ENABLE - 1103)) | (1 << (self::OPTIMIZER_GOAL - 1103)) | (1 << (self::OPT_PARAM - 1103)) | (1 << (self::ORA_BRANCH - 1103)) | (1 << (self::ORADEBUG - 1103)) | (1 << (self::ORA_DST_AFFECTED - 1103)) | (1 << (self::ORA_DST_CONVERT - 1103)) | (1 << (self::ORA_DST_ERROR - 1103)) | (1 << (self::ORA_GET_ACLIDS - 1103)) | (1 << (self::ORA_GET_PRIVILEGES - 1103)) | (1 << (self::ORA_HASH - 1103)) | (1 << (self::ORA_ROWSCN - 1103)) | (1 << (self::ORA_ROWSCN_RAW - 1103)) | (1 << (self::ORA_ROWVERSION - 1103)) | (1 << (self::ORA_TABVERSION - 1103)) | (1 << (self::ORDERED - 1103)))) !== 0) || (((($_la - 1167)) & ~0x3f) === 0 && ((1 << ($_la - 1167)) & ((1 << (self::ORDERED_PREDICATES - 1167)) | (1 << (self::ORDINALITY - 1167)) | (1 << (self::OR_EXPAND - 1167)) | (1 << (self::ORGANIZATION - 1167)) | (1 << (self::OR_PREDICATES - 1167)) | (1 << (self::OTHER - 1167)) | (1 << (self::OUTER_JOIN_TO_ANTI - 1167)) | (1 << (self::OUTER_JOIN_TO_INNER - 1167)) | (1 << (self::OUTER - 1167)) | (1 << (self::OUTLINE_LEAF - 1167)) | (1 << (self::OUTLINE - 1167)) | (1 << (self::OUT_OF_LINE - 1167)) | (1 << (self::OVERFLOW_NOMOVE - 1167)) | (1 << (self::OVERFLOW - 1167)) | (1 << (self::OVERLAPS - 1167)) | (1 << (self::OVER - 1167)) | (1 << (self::OWNER - 1167)) | (1 << (self::OWNERSHIP - 1167)) | (1 << (self::OWN - 1167)) | (1 << (self::PACKAGE - 1167)) | (1 << (self::PACKAGES - 1167)) | (1 << (self::PARALLEL_INDEX - 1167)) | (1 << (self::PARALLEL - 1167)) | (1 << (self::PARAMETERS - 1167)) | (1 << (self::PARAM - 1167)) | (1 << (self::PARENT - 1167)) | (1 << (self::PARITY - 1167)) | (1 << (self::PARTIALLY - 1167)) | (1 << (self::PARTITION_HASH - 1167)) | (1 << (self::PARTITION_LIST - 1167)) | (1 << (self::PARTITION - 1167)) | (1 << (self::PARTITION_RANGE - 1167)) | (1 << (self::PARTITIONS - 1167)) | (1 << (self::PARTNUMINST - 1167)) | (1 << (self::PASSING - 1167)) | (1 << (self::PASSWORD_GRACE_TIME - 1167)) | (1 << (self::PASSWORD_LIFE_TIME - 1167)) | (1 << (self::PASSWORD_LOCK_TIME - 1167)) | (1 << (self::PASSWORD - 1167)) | (1 << (self::PASSWORD_REUSE_MAX - 1167)) | (1 << (self::PASSWORD_REUSE_TIME - 1167)) | (1 << (self::PASSWORD_VERIFY_FUNCTION - 1167)) | (1 << (self::PATH - 1167)) | (1 << (self::PATHS - 1167)) | (1 << (self::PBL_HS_BEGIN - 1167)) | (1 << (self::PBL_HS_END - 1167)) | (1 << (self::PCTINCREASE - 1167)) | (1 << (self::PCTTHRESHOLD - 1167)) | (1 << (self::PCTUSED - 1167)))) !== 0) || (((($_la - 1231)) & ~0x3f) === 0 && ((1 << ($_la - 1231)) & ((1 << (self::PCTVERSION - 1231)) | (1 << (self::PENDING - 1231)) | (1 << (self::PERCENT_KEYWORD - 1231)) | (1 << (self::PERCENT_RANKM - 1231)) | (1 << (self::PERFORMANCE - 1231)) | (1 << (self::PERMANENT - 1231)) | (1 << (self::PERMISSION - 1231)) | (1 << (self::PFILE - 1231)) | (1 << (self::PHYSICAL - 1231)) | (1 << (self::PIKEY - 1231)) | (1 << (self::PIV_GB - 1231)) | (1 << (self::PIVOT - 1231)) | (1 << (self::PIV_SSF - 1231)) | (1 << (self::PLACE_DISTINCT - 1231)) | (1 << (self::PLACE_GROUP_BY - 1231)) | (1 << (self::PLAN - 1231)) | (1 << (self::PLSCOPE_SETTINGS - 1231)) | (1 << (self::PLSQL_CCFLAGS - 1231)) | (1 << (self::PLSQL_CODE_TYPE - 1231)) | (1 << (self::PLSQL_DEBUG - 1231)) | (1 << (self::PLSQL_OPTIMIZE_LEVEL - 1231)) | (1 << (self::PLSQL_WARNINGS - 1231)) | (1 << (self::POINT - 1231)) | (1 << (self::POLICY - 1231)) | (1 << (self::POST_TRANSACTION - 1231)) | (1 << (self::POWERMULTISET_BY_CARDINALITY - 1231)) | (1 << (self::POWERMULTISET - 1231)) | (1 << (self::POWER - 1231)) | (1 << (self::PQ_DISTRIBUTE - 1231)) | (1 << (self::PQ_MAP - 1231)) | (1 << (self::PQ_NOMAP - 1231)) | (1 << (self::PREBUILT - 1231)) | (1 << (self::PRECEDES - 1231)) | (1 << (self::PRECEDING - 1231)) | (1 << (self::PRECISION - 1231)) | (1 << (self::PRECOMPUTE_SUBQUERY - 1231)) | (1 << (self::PREDICATE_REORDERS - 1231)))) !== 0) || (((($_la - 1295)) & ~0x3f) === 0 && ((1 << ($_la - 1295)) & ((1 << (self::PREPARE - 1295)) | (1 << (self::PRESENTNNV - 1295)) | (1 << (self::PRESENT - 1295)) | (1 << (self::PRESENTV - 1295)) | (1 << (self::PRESERVE_OID - 1295)) | (1 << (self::PRESERVE - 1295)) | (1 << (self::PREVIOUS - 1295)) | (1 << (self::PRIMARY - 1295)) | (1 << (self::PRIVATE - 1295)) | (1 << (self::PRIVATE_SGA - 1295)) | (1 << (self::PRIVILEGE - 1295)) | (1 << (self::PRIVILEGES - 1295)) | (1 << (self::PROCEDURAL - 1295)) | (1 << (self::PROCEDURE - 1295)) | (1 << (self::PROCESS - 1295)) | (1 << (self::PROFILE - 1295)) | (1 << (self::PROGRAM - 1295)) | (1 << (self::PROJECT - 1295)) | (1 << (self::PROPAGATE - 1295)) | (1 << (self::PROTECTED - 1295)) | (1 << (self::PROTECTION - 1295)) | (1 << (self::PULL_PRED - 1295)) | (1 << (self::PURGE - 1295)) | (1 << (self::PUSH_PRED - 1295)) | (1 << (self::PUSH_SUBQ - 1295)) | (1 << (self::PX_GRANULE - 1295)) | (1 << (self::PX_JOIN_FILTER - 1295)) | (1 << (self::QB_NAME - 1295)) | (1 << (self::QUERY_BLOCK - 1295)) | (1 << (self::QUERY - 1295)) | (1 << (self::QUEUE_CURR - 1295)) | (1 << (self::QUEUE - 1295)) | (1 << (self::QUEUE_ROWP - 1295)) | (1 << (self::QUIESCE - 1295)) | (1 << (self::QUORUM - 1295)) | (1 << (self::QUOTA - 1295)) | (1 << (self::RANDOM_LOCAL - 1295)) | (1 << (self::RANDOM - 1295)) | (1 << (self::RANGE - 1295)) | (1 << (self::RANKM - 1295)) | (1 << (self::RAPIDLY - 1295)) | (1 << (self::RAWTOHEX - 1295)) | (1 << (self::RAWTONHEX - 1295)) | (1 << (self::RBA - 1295)) | (1 << (self::RBO_OUTLINE - 1295)) | (1 << (self::RDBA - 1295)) | (1 << (self::READ - 1295)) | (1 << (self::READS - 1295)) | (1 << (self::REAL - 1295)) | (1 << (self::REBALANCE - 1295)) | (1 << (self::REBUILD - 1295)))) !== 0) || (((($_la - 1360)) & ~0x3f) === 0 && ((1 << ($_la - 1360)) & ((1 << (self::RECORDS_PER_BLOCK - 1360)) | (1 << (self::RECOVERABLE - 1360)) | (1 << (self::RECOVER - 1360)) | (1 << (self::RECOVERY - 1360)) | (1 << (self::RECYCLEBIN - 1360)) | (1 << (self::RECYCLE - 1360)) | (1 << (self::REDACTION - 1360)) | (1 << (self::REDO - 1360)) | (1 << (self::REDUCED - 1360)) | (1 << (self::REDUNDANCY - 1360)) | (1 << (self::REF_CASCADE_CURSOR - 1360)) | (1 << (self::REFERENCED - 1360)) | (1 << (self::REFERENCE - 1360)) | (1 << (self::REFERENCES - 1360)) | (1 << (self::REFERENCING - 1360)) | (1 << (self::REF - 1360)) | (1 << (self::REFRESH - 1360)) | (1 << (self::REFTOHEX - 1360)) | (1 << (self::REGEXP_COUNT - 1360)) | (1 << (self::REGEXP_INSTR - 1360)) | (1 << (self::REGEXP_LIKE - 1360)) | (1 << (self::REGEXP_REPLACE - 1360)) | (1 << (self::REGEXP_SUBSTR - 1360)) | (1 << (self::REGISTER - 1360)) | (1 << (self::REGR_AVGX - 1360)) | (1 << (self::REGR_AVGY - 1360)) | (1 << (self::REGR_COUNT - 1360)) | (1 << (self::REGR_INTERCEPT - 1360)) | (1 << (self::REGR_R2 - 1360)) | (1 << (self::REGR_SLOPE - 1360)) | (1 << (self::REGR_SXX - 1360)) | (1 << (self::REGR_SXY - 1360)) | (1 << (self::REGR_SYY - 1360)) | (1 << (self::REGULAR - 1360)) | (1 << (self::REJECT - 1360)) | (1 << (self::REKEY - 1360)) | (1 << (self::RELATIONAL - 1360)) | (1 << (self::RELY - 1360)) | (1 << (self::REMAINDER - 1360)) | (1 << (self::REMOTE_MAPPED - 1360)) | (1 << (self::REMOVE - 1360)) | (1 << (self::REPAIR - 1360)) | (1 << (self::REPEAT - 1360)) | (1 << (self::REPLACE - 1360)) | (1 << (self::REPLICATION - 1360)) | (1 << (self::REQUIRED - 1360)) | (1 << (self::RESETLOGS - 1360)) | (1 << (self::RESET - 1360)) | (1 << (self::RESIZE - 1360)) | (1 << (self::RESOLVE - 1360)) | (1 << (self::RESOLVER - 1360)) | (1 << (self::RESPECT - 1360)) | (1 << (self::RESTORE_AS_INTERVALS - 1360)) | (1 << (self::RESTORE - 1360)) | (1 << (self::RESTRICT_ALL_REF_CONS - 1360)) | (1 << (self::RESTRICTED - 1360)) | (1 << (self::RESTRICT - 1360)))) !== 0) || (((($_la - 1424)) & ~0x3f) === 0 && ((1 << ($_la - 1424)) & ((1 << (self::RESULT_CACHE - 1424)) | (1 << (self::RESUMABLE - 1424)) | (1 << (self::RESUME - 1424)) | (1 << (self::RETENTION - 1424)) | (1 << (self::RETRY_ON_ROW_CHANGE - 1424)) | (1 << (self::RETURNING - 1424)) | (1 << (self::RETURN - 1424)) | (1 << (self::REUSE - 1424)) | (1 << (self::REVERSE - 1424)) | (1 << (self::REWRITE_OR_ERROR - 1424)) | (1 << (self::REWRITE - 1424)) | (1 << (self::RIGHT - 1424)) | (1 << (self::ROLE - 1424)) | (1 << (self::ROLES - 1424)) | (1 << (self::ROLLBACK - 1424)) | (1 << (self::ROLLING - 1424)) | (1 << (self::ROLLUP - 1424)) | (1 << (self::ROWDEPENDENCIES - 1424)) | (1 << (self::ROWID - 1424)) | (1 << (self::ROWIDTOCHAR - 1424)) | (1 << (self::ROWIDTONCHAR - 1424)) | (1 << (self::ROW_LENGTH - 1424)) | (1 << (self::ROWNUM - 1424)) | (1 << (self::ROW - 1424)) | (1 << (self::ROWS - 1424)) | (1 << (self::RPAD - 1424)) | (1 << (self::RTRIM - 1424)) | (1 << (self::RULE - 1424)) | (1 << (self::RULES - 1424)) | (1 << (self::SALT - 1424)) | (1 << (self::SAMPLE - 1424)) | (1 << (self::SAVE_AS_INTERVALS - 1424)) | (1 << (self::SAVEPOINT - 1424)) | (1 << (self::SB4 - 1424)) | (1 << (self::SCALE_ROWS - 1424)) | (1 << (self::SCALE - 1424)) | (1 << (self::SCAN_INSTANCES - 1424)) | (1 << (self::SCAN - 1424)) | (1 << (self::SCHEDULER - 1424)) | (1 << (self::SCHEMACHECK - 1424)) | (1 << (self::SCHEMA - 1424)) | (1 << (self::SCN_ASCENDING - 1424)) | (1 << (self::SCN - 1424)) | (1 << (self::SCOPE - 1424)) | (1 << (self::SD_ALL - 1424)) | (1 << (self::SD_INHIBIT - 1424)) | (1 << (self::SD_SHOW - 1424)) | (1 << (self::SEARCH - 1424)) | (1 << (self::SECOND - 1424)) | (1 << (self::SECUREFILE_DBA - 1424)) | (1 << (self::SECUREFILE - 1424)) | (1 << (self::SECURITY - 1424)) | (1 << (self::SEED - 1424)) | (1 << (self::SEG_BLOCK - 1424)) | (1 << (self::SEG_FILE - 1424)))) !== 0) || (((($_la - 1488)) & ~0x3f) === 0 && ((1 << ($_la - 1488)) & ((1 << (self::SEGMENT - 1488)) | (1 << (self::SELECTIVITY - 1488)) | (1 << (self::SEMIJOIN_DRIVER - 1488)) | (1 << (self::SEMIJOIN - 1488)) | (1 << (self::SEMI_TO_INNER - 1488)) | (1 << (self::SEQUENCED - 1488)) | (1 << (self::SEQUENCE - 1488)) | (1 << (self::SEQUENTIAL - 1488)) | (1 << (self::SERIALIZABLE - 1488)) | (1 << (self::SERVERERROR - 1488)) | (1 << (self::SESSION_CACHED_CURSORS - 1488)) | (1 << (self::SESSION - 1488)) | (1 << (self::SESSIONS_PER_USER - 1488)) | (1 << (self::SESSIONTIMEZONE - 1488)) | (1 << (self::SESSIONTZNAME - 1488)) | (1 << (self::SETS - 1488)) | (1 << (self::SETTINGS - 1488)) | (1 << (self::SET_TO_JOIN - 1488)) | (1 << (self::SEVERE - 1488)) | (1 << (self::SHARED_POOL - 1488)) | (1 << (self::SHARED - 1488)) | (1 << (self::SHOW - 1488)) | (1 << (self::SHRINK - 1488)) | (1 << (self::SHUTDOWN - 1488)) | (1 << (self::SIBLINGS - 1488)) | (1 << (self::SID - 1488)) | (1 << (self::SIGNAL_COMPONENT - 1488)) | (1 << (self::SIGNAL_FUNCTION - 1488)) | (1 << (self::SIGN - 1488)) | (1 << (self::SIMPLE - 1488)) | (1 << (self::SINGLE - 1488)) | (1 << (self::SINGLETASK - 1488)) | (1 << (self::SINH - 1488)) | (1 << (self::SIN - 1488)) | (1 << (self::SKIP_EXT_OPTIMIZER - 1488)) | (1 << (self::SKIP_ - 1488)) | (1 << (self::SKIP_UNQ_UNUSABLE_IDX - 1488)) | (1 << (self::SKIP_UNUSABLE_INDEXES - 1488)) | (1 << (self::SMALLFILE - 1488)) | (1 << (self::SNAPSHOT - 1488)) | (1 << (self::SOME - 1488)) | (1 << (self::SORT - 1488)) | (1 << (self::SOUNDEX - 1488)) | (1 << (self::SOURCE - 1488)) | (1 << (self::SPACE_KEYWORD - 1488)) | (1 << (self::SPECIFICATION - 1488)) | (1 << (self::SPFILE - 1488)))) !== 0) || (((($_la - 1552)) & ~0x3f) === 0 && ((1 << ($_la - 1552)) & ((1 << (self::SPLIT - 1552)) | (1 << (self::SPREADSHEET - 1552)) | (1 << (self::SQLLDR - 1552)) | (1 << (self::SQL - 1552)) | (1 << (self::SQL_TRACE - 1552)) | (1 << (self::SQRT - 1552)) | (1 << (self::STALE - 1552)) | (1 << (self::STANDALONE - 1552)) | (1 << (self::STANDBY_MAX_DATA_DELAY - 1552)) | (1 << (self::STANDBY - 1552)) | (1 << (self::STAR - 1552)) | (1 << (self::STAR_TRANSFORMATION - 1552)) | (1 << (self::STARTUP - 1552)) | (1 << (self::STATEMENT_ID - 1552)) | (1 << (self::STATEMENT_QUEUING - 1552)) | (1 << (self::STATEMENTS - 1552)) | (1 << (self::STATIC - 1552)) | (1 << (self::STATISTICS - 1552)) | (1 << (self::STATS_BINOMIAL_TEST - 1552)) | (1 << (self::STATS_CROSSTAB - 1552)) | (1 << (self::STATS_F_TEST - 1552)) | (1 << (self::STATS_KS_TEST - 1552)) | (1 << (self::STATS_MODE - 1552)) | (1 << (self::STATS_MW_TEST - 1552)) | (1 << (self::STATS_ONE_WAY_ANOVA - 1552)) | (1 << (self::STATS_T_TEST_INDEP - 1552)) | (1 << (self::STATS_T_TEST_INDEPU - 1552)) | (1 << (self::STATS_T_TEST_ONE - 1552)) | (1 << (self::STATS_T_TEST_PAIRED - 1552)) | (1 << (self::STATS_WSR_TEST - 1552)) | (1 << (self::STDDEV_POP - 1552)) | (1 << (self::STDDEV_SAMP - 1552)) | (1 << (self::STOP - 1552)) | (1 << (self::STORAGE - 1552)) | (1 << (self::STORE - 1552)) | (1 << (self::STREAMS - 1552)) | (1 << (self::STRICT - 1552)) | (1 << (self::STRING - 1552)) | (1 << (self::STRIPE_COLUMNS - 1552)) | (1 << (self::STRIPE_WIDTH - 1552)) | (1 << (self::STRIP - 1552)) | (1 << (self::STRUCTURE - 1552)) | (1 << (self::SUBMULTISET - 1552)) | (1 << (self::SUBPARTITION_REL - 1552)) | (1 << (self::SUBPARTITIONS - 1552)) | (1 << (self::SUBPARTITION - 1552)) | (1 << (self::SUBQUERIES - 1552)) | (1 << (self::SUBQUERY_PRUNING - 1552)) | (1 << (self::SUBSTITUTABLE - 1552)) | (1 << (self::SUBSTR2 - 1552)) | (1 << (self::SUBSTR4 - 1552)) | (1 << (self::SUBSTRB - 1552)) | (1 << (self::SUBSTRC - 1552)))) !== 0) || (((($_la - 1617)) & ~0x3f) === 0 && ((1 << ($_la - 1617)) & ((1 << (self::SUCCESSFUL - 1617)) | (1 << (self::SUMMARY - 1617)) | (1 << (self::SUPPLEMENTAL - 1617)) | (1 << (self::SUSPEND - 1617)) | (1 << (self::SWAP_JOIN_INPUTS - 1617)) | (1 << (self::SWITCHOVER - 1617)) | (1 << (self::SWITCH - 1617)) | (1 << (self::SYNCHRONOUS - 1617)) | (1 << (self::SYNC - 1617)) | (1 << (self::SYSASM - 1617)) | (1 << (self::SYS_AUDIT - 1617)) | (1 << (self::SYSAUX - 1617)) | (1 << (self::SYS_CHECKACL - 1617)) | (1 << (self::SYS_CONNECT_BY_PATH - 1617)) | (1 << (self::SYS_CONTEXT - 1617)) | (1 << (self::SYSDATE - 1617)) | (1 << (self::SYSDBA - 1617)) | (1 << (self::SYS_DBURIGEN - 1617)) | (1 << (self::SYS_DL_CURSOR - 1617)) | (1 << (self::SYS_DM_RXFORM_CHR - 1617)) | (1 << (self::SYS_DM_RXFORM_NUM - 1617)) | (1 << (self::SYS_DOM_COMPARE - 1617)) | (1 << (self::SYS_DST_PRIM2SEC - 1617)) | (1 << (self::SYS_DST_SEC2PRIM - 1617)) | (1 << (self::SYS_ET_BFILE_TO_RAW - 1617)) | (1 << (self::SYS_ET_BLOB_TO_IMAGE - 1617)) | (1 << (self::SYS_ET_IMAGE_TO_BLOB - 1617)) | (1 << (self::SYS_ET_RAW_TO_BFILE - 1617)) | (1 << (self::SYS_EXTPDTXT - 1617)) | (1 << (self::SYS_EXTRACT_UTC - 1617)) | (1 << (self::SYS_FBT_INSDEL - 1617)) | (1 << (self::SYS_FILTER_ACLS - 1617)) | (1 << (self::SYS_FNMATCHES - 1617)) | (1 << (self::SYS_FNREPLACE - 1617)) | (1 << (self::SYS_GET_ACLIDS - 1617)) | (1 << (self::SYS_GET_PRIVILEGES - 1617)) | (1 << (self::SYS_GETTOKENID - 1617)) | (1 << (self::SYS_GETXTIVAL - 1617)) | (1 << (self::SYS_GUID - 1617)) | (1 << (self::SYS_MAKE_XMLNODEID - 1617)) | (1 << (self::SYS_MAKEXML - 1617)) | (1 << (self::SYS_MKXMLATTR - 1617)) | (1 << (self::SYS_OP_ADT2BIN - 1617)) | (1 << (self::SYS_OP_ADTCONS - 1617)) | (1 << (self::SYS_OP_ALSCRVAL - 1617)) | (1 << (self::SYS_OP_ATG - 1617)) | (1 << (self::SYS_OP_BIN2ADT - 1617)) | (1 << (self::SYS_OP_BITVEC - 1617)) | (1 << (self::SYS_OP_BL2R - 1617)) | (1 << (self::SYS_OP_BLOOM_FILTER_LIST - 1617)) | (1 << (self::SYS_OP_BLOOM_FILTER - 1617)) | (1 << (self::SYS_OP_C2C - 1617)) | (1 << (self::SYS_OP_CAST - 1617)) | (1 << (self::SYS_OP_CEG - 1617)))) !== 0) || (((($_la - 1681)) & ~0x3f) === 0 && ((1 << ($_la - 1681)) & ((1 << (self::SYS_OP_CL2C - 1681)) | (1 << (self::SYS_OP_COMBINED_HASH - 1681)) | (1 << (self::SYS_OP_COMP - 1681)) | (1 << (self::SYS_OP_CONVERT - 1681)) | (1 << (self::SYS_OP_COUNTCHG - 1681)) | (1 << (self::SYS_OP_CSCONV - 1681)) | (1 << (self::SYS_OP_CSCONVTEST - 1681)) | (1 << (self::SYS_OP_CSR - 1681)) | (1 << (self::SYS_OP_CSX_PATCH - 1681)) | (1 << (self::SYS_OP_DECOMP - 1681)) | (1 << (self::SYS_OP_DESCEND - 1681)) | (1 << (self::SYS_OP_DISTINCT - 1681)) | (1 << (self::SYS_OP_DRA - 1681)) | (1 << (self::SYS_OP_DUMP - 1681)) | (1 << (self::SYS_OP_DV_CHECK - 1681)) | (1 << (self::SYS_OP_ENFORCE_NOT_NULL - 1681)) | (1 << (self::SYSOPER - 1681)) | (1 << (self::SYS_OP_EXTRACT - 1681)) | (1 << (self::SYS_OP_GROUPING - 1681)) | (1 << (self::SYS_OP_GUID - 1681)) | (1 << (self::SYS_OP_IIX - 1681)) | (1 << (self::SYS_OP_ITR - 1681)) | (1 << (self::SYS_OP_LBID - 1681)) | (1 << (self::SYS_OP_LOBLOC2BLOB - 1681)) | (1 << (self::SYS_OP_LOBLOC2CLOB - 1681)) | (1 << (self::SYS_OP_LOBLOC2ID - 1681)) | (1 << (self::SYS_OP_LOBLOC2NCLOB - 1681)) | (1 << (self::SYS_OP_LOBLOC2TYP - 1681)) | (1 << (self::SYS_OP_LSVI - 1681)) | (1 << (self::SYS_OP_LVL - 1681)) | (1 << (self::SYS_OP_MAKEOID - 1681)) | (1 << (self::SYS_OP_MAP_NONNULL - 1681)) | (1 << (self::SYS_OP_MSR - 1681)) | (1 << (self::SYS_OP_NICOMBINE - 1681)) | (1 << (self::SYS_OP_NIEXTRACT - 1681)) | (1 << (self::SYS_OP_NII - 1681)) | (1 << (self::SYS_OP_NIX - 1681)) | (1 << (self::SYS_OP_NOEXPAND - 1681)) | (1 << (self::SYS_OP_NTCIMG - 1681)) | (1 << (self::SYS_OP_NUMTORAW - 1681)) | (1 << (self::SYS_OP_OIDVALUE - 1681)) | (1 << (self::SYS_OP_OPNSIZE - 1681)) | (1 << (self::SYS_OP_PAR_1 - 1681)) | (1 << (self::SYS_OP_PARGID_1 - 1681)) | (1 << (self::SYS_OP_PARGID - 1681)) | (1 << (self::SYS_OP_PAR - 1681)) | (1 << (self::SYS_OP_PIVOT - 1681)) | (1 << (self::SYS_OP_R2O - 1681)) | (1 << (self::SYS_OP_RAWTONUM - 1681)) | (1 << (self::SYS_OP_RDTM - 1681)) | (1 << (self::SYS_OP_REF - 1681)) | (1 << (self::SYS_OP_RMTD - 1681)) | (1 << (self::SYS_OP_ROWIDTOOBJ - 1681)) | (1 << (self::SYS_OP_RPB - 1681)) | (1 << (self::SYS_OPTLOBPRBSC - 1681)) | (1 << (self::SYS_OP_TOSETID - 1681)))) !== 0) || (((($_la - 1745)) & ~0x3f) === 0 && ((1 << ($_la - 1745)) & ((1 << (self::SYS_OP_TPR - 1745)) | (1 << (self::SYS_OP_TRTB - 1745)) | (1 << (self::SYS_OPTXICMP - 1745)) | (1 << (self::SYS_OPTXQCASTASNQ - 1745)) | (1 << (self::SYS_OP_UNDESCEND - 1745)) | (1 << (self::SYS_OP_VECAND - 1745)) | (1 << (self::SYS_OP_VECBIT - 1745)) | (1 << (self::SYS_OP_VECOR - 1745)) | (1 << (self::SYS_OP_VECXOR - 1745)) | (1 << (self::SYS_OP_VERSION - 1745)) | (1 << (self::SYS_OP_VREF - 1745)) | (1 << (self::SYS_OP_VVD - 1745)) | (1 << (self::SYS_OP_XMLCONS_FOR_CSX - 1745)) | (1 << (self::SYS_OP_XPTHATG - 1745)) | (1 << (self::SYS_OP_XPTHIDX - 1745)) | (1 << (self::SYS_OP_XPTHOP - 1745)) | (1 << (self::SYS_OP_XTXT2SQLT - 1745)) | (1 << (self::SYS_ORDERKEY_DEPTH - 1745)) | (1 << (self::SYS_ORDERKEY_MAXCHILD - 1745)) | (1 << (self::SYS_ORDERKEY_PARENT - 1745)) | (1 << (self::SYS_PARALLEL_TXN - 1745)) | (1 << (self::SYS_PATHID_IS_ATTR - 1745)) | (1 << (self::SYS_PATHID_IS_NMSPC - 1745)) | (1 << (self::SYS_PATHID_LASTNAME - 1745)) | (1 << (self::SYS_PATHID_LASTNMSPC - 1745)) | (1 << (self::SYS_PATH_REVERSE - 1745)) | (1 << (self::SYS_PXQEXTRACT - 1745)) | (1 << (self::SYS_RID_ORDER - 1745)) | (1 << (self::SYS_ROW_DELTA - 1745)) | (1 << (self::SYS_SC_2_XMLT - 1745)) | (1 << (self::SYS_SYNRCIREDO - 1745)) | (1 << (self::SYSTEM_DEFINED - 1745)) | (1 << (self::SYSTEM - 1745)) | (1 << (self::SYSTIMESTAMP - 1745)) | (1 << (self::SYS_TYPEID - 1745)) | (1 << (self::SYS_UMAKEXML - 1745)) | (1 << (self::SYS_XMLANALYZE - 1745)) | (1 << (self::SYS_XMLCONTAINS - 1745)) | (1 << (self::SYS_XMLCONV - 1745)) | (1 << (self::SYS_XMLEXNSURI - 1745)) | (1 << (self::SYS_XMLGEN - 1745)) | (1 << (self::SYS_XMLI_LOC_ISNODE - 1745)) | (1 << (self::SYS_XMLI_LOC_ISTEXT - 1745)) | (1 << (self::SYS_XMLINSTR - 1745)) | (1 << (self::SYS_XMLLOCATOR_GETSVAL - 1745)) | (1 << (self::SYS_XMLNODEID_GETCID - 1745)) | (1 << (self::SYS_XMLNODEID_GETLOCATOR - 1745)) | (1 << (self::SYS_XMLNODEID_GETOKEY - 1745)) | (1 << (self::SYS_XMLNODEID_GETPATHID - 1745)) | (1 << (self::SYS_XMLNODEID_GETPTRID - 1745)) | (1 << (self::SYS_XMLNODEID_GETRID - 1745)) | (1 << (self::SYS_XMLNODEID_GETSVAL - 1745)) | (1 << (self::SYS_XMLNODEID_GETTID - 1745)) | (1 << (self::SYS_XMLNODEID - 1745)) | (1 << (self::SYS_XMLT_2_SC - 1745)) | (1 << (self::SYS_XMLTRANSLATE - 1745)) | (1 << (self::SYS_XMLTYPE2SQL - 1745)) | (1 << (self::SYS_XQ_ASQLCNV - 1745)) | (1 << (self::SYS_XQ_ATOMCNVCHK - 1745)) | (1 << (self::SYS_XQBASEURI - 1745)) | (1 << (self::SYS_XQCASTABLEERRH - 1745)) | (1 << (self::SYS_XQCODEP2STR - 1745)))) !== 0) || (((($_la - 1809)) & ~0x3f) === 0 && ((1 << ($_la - 1809)) & ((1 << (self::SYS_XQCODEPEQ - 1809)) | (1 << (self::SYS_XQCON2SEQ - 1809)) | (1 << (self::SYS_XQCONCAT - 1809)) | (1 << (self::SYS_XQDELETE - 1809)) | (1 << (self::SYS_XQDFLTCOLATION - 1809)) | (1 << (self::SYS_XQDOC - 1809)) | (1 << (self::SYS_XQDOCURI - 1809)) | (1 << (self::SYS_XQDURDIV - 1809)) | (1 << (self::SYS_XQED4URI - 1809)) | (1 << (self::SYS_XQENDSWITH - 1809)) | (1 << (self::SYS_XQERRH - 1809)) | (1 << (self::SYS_XQERR - 1809)) | (1 << (self::SYS_XQESHTMLURI - 1809)) | (1 << (self::SYS_XQEXLOBVAL - 1809)) | (1 << (self::SYS_XQEXSTWRP - 1809)) | (1 << (self::SYS_XQEXTRACT - 1809)) | (1 << (self::SYS_XQEXTRREF - 1809)) | (1 << (self::SYS_XQEXVAL - 1809)) | (1 << (self::SYS_XQFB2STR - 1809)) | (1 << (self::SYS_XQFNBOOL - 1809)) | (1 << (self::SYS_XQFNCMP - 1809)) | (1 << (self::SYS_XQFNDATIM - 1809)) | (1 << (self::SYS_XQFNLNAME - 1809)) | (1 << (self::SYS_XQFNNM - 1809)) | (1 << (self::SYS_XQFNNSURI - 1809)) | (1 << (self::SYS_XQFNPREDTRUTH - 1809)) | (1 << (self::SYS_XQFNQNM - 1809)) | (1 << (self::SYS_XQFNROOT - 1809)) | (1 << (self::SYS_XQFORMATNUM - 1809)) | (1 << (self::SYS_XQFTCONTAIN - 1809)) | (1 << (self::SYS_XQFUNCR - 1809)) | (1 << (self::SYS_XQGETCONTENT - 1809)) | (1 << (self::SYS_XQINDXOF - 1809)) | (1 << (self::SYS_XQINSERT - 1809)) | (1 << (self::SYS_XQINSPFX - 1809)) | (1 << (self::SYS_XQIRI2URI - 1809)) | (1 << (self::SYS_XQLANG - 1809)) | (1 << (self::SYS_XQLLNMFRMQNM - 1809)) | (1 << (self::SYS_XQMKNODEREF - 1809)) | (1 << (self::SYS_XQNILLED - 1809)) | (1 << (self::SYS_XQNODENAME - 1809)) | (1 << (self::SYS_XQNORMSPACE - 1809)) | (1 << (self::SYS_XQNORMUCODE - 1809)) | (1 << (self::SYS_XQ_NRNG - 1809)) | (1 << (self::SYS_XQNSP4PFX - 1809)) | (1 << (self::SYS_XQNSPFRMQNM - 1809)) | (1 << (self::SYS_XQPFXFRMQNM - 1809)) | (1 << (self::SYS_XQ_PKSQL2XML - 1809)) | (1 << (self::SYS_XQPOLYABS - 1809)) | (1 << (self::SYS_XQPOLYADD - 1809)) | (1 << (self::SYS_XQPOLYCEL - 1809)) | (1 << (self::SYS_XQPOLYCSTBL - 1809)) | (1 << (self::SYS_XQPOLYCST - 1809)) | (1 << (self::SYS_XQPOLYDIV - 1809)) | (1 << (self::SYS_XQPOLYFLR - 1809)) | (1 << (self::SYS_XQPOLYMOD - 1809)) | (1 << (self::SYS_XQPOLYMUL - 1809)) | (1 << (self::SYS_XQPOLYRND - 1809)) | (1 << (self::SYS_XQPOLYSQRT - 1809)) | (1 << (self::SYS_XQPOLYSUB - 1809)) | (1 << (self::SYS_XQPOLYUMUS - 1809)) | (1 << (self::SYS_XQPOLYUPLS - 1809)) | (1 << (self::SYS_XQPOLYVEQ - 1809)) | (1 << (self::SYS_XQPOLYVGE - 1809)))) !== 0) || (((($_la - 1873)) & ~0x3f) === 0 && ((1 << ($_la - 1873)) & ((1 << (self::SYS_XQPOLYVGT - 1873)) | (1 << (self::SYS_XQPOLYVLE - 1873)) | (1 << (self::SYS_XQPOLYVLT - 1873)) | (1 << (self::SYS_XQPOLYVNE - 1873)) | (1 << (self::SYS_XQREF2VAL - 1873)) | (1 << (self::SYS_XQRENAME - 1873)) | (1 << (self::SYS_XQREPLACE - 1873)) | (1 << (self::SYS_XQRESVURI - 1873)) | (1 << (self::SYS_XQRNDHALF2EVN - 1873)) | (1 << (self::SYS_XQRSLVQNM - 1873)) | (1 << (self::SYS_XQRYENVPGET - 1873)) | (1 << (self::SYS_XQRYVARGET - 1873)) | (1 << (self::SYS_XQRYWRP - 1873)) | (1 << (self::SYS_XQSEQ2CON4XC - 1873)) | (1 << (self::SYS_XQSEQ2CON - 1873)) | (1 << (self::SYS_XQSEQDEEPEQ - 1873)) | (1 << (self::SYS_XQSEQINSB - 1873)) | (1 << (self::SYS_XQSEQRM - 1873)) | (1 << (self::SYS_XQSEQRVS - 1873)) | (1 << (self::SYS_XQSEQSUB - 1873)) | (1 << (self::SYS_XQSEQTYPMATCH - 1873)) | (1 << (self::SYS_XQSTARTSWITH - 1873)) | (1 << (self::SYS_XQSTATBURI - 1873)) | (1 << (self::SYS_XQSTR2CODEP - 1873)) | (1 << (self::SYS_XQSTRJOIN - 1873)) | (1 << (self::SYS_XQSUBSTRAFT - 1873)) | (1 << (self::SYS_XQSUBSTRBEF - 1873)) | (1 << (self::SYS_XQTOKENIZE - 1873)) | (1 << (self::SYS_XQTREATAS - 1873)) | (1 << (self::SYS_XQ_UPKXML2SQL - 1873)) | (1 << (self::SYS_XQXFORM - 1873)) | (1 << (self::TABLE_LOOKUP_BY_NL - 1873)) | (1 << (self::TABLESPACE_NO - 1873)) | (1 << (self::TABLESPACE - 1873)) | (1 << (self::TABLES - 1873)) | (1 << (self::TABLE_STATS - 1873)) | (1 << (self::TABLE - 1873)) | (1 << (self::TABNO - 1873)) | (1 << (self::TANH - 1873)) | (1 << (self::TAN - 1873)) | (1 << (self::TBLORIDXPARTNUM - 1873)) | (1 << (self::TEMPFILE - 1873)) | (1 << (self::TEMPLATE - 1873)) | (1 << (self::TEMPORARY - 1873)) | (1 << (self::TEMP_TABLE - 1873)) | (1 << (self::TEST - 1873)) | (1 << (self::THAN - 1873)) | (1 << (self::THEN - 1873)) | (1 << (self::THE - 1873)) | (1 << (self::THREAD - 1873)) | (1 << (self::THROUGH - 1873)) | (1 << (self::TIMEOUT - 1873)) | (1 << (self::TIMESTAMP - 1873)) | (1 << (self::TIMES - 1873)))) !== 0) || (((($_la - 1937)) & ~0x3f) === 0 && ((1 << ($_la - 1937)) & ((1 << (self::TIME - 1937)) | (1 << (self::TIMEZONE_ABBR - 1937)) | (1 << (self::TIMEZONE_HOUR - 1937)) | (1 << (self::TIMEZONE_MINUTE - 1937)) | (1 << (self::TIMEZONE_OFFSET - 1937)) | (1 << (self::TIMEZONE_REGION - 1937)) | (1 << (self::TIME_ZONE - 1937)) | (1 << (self::TIV_GB - 1937)) | (1 << (self::TIV_SSF - 1937)) | (1 << (self::TO_BINARY_DOUBLE - 1937)) | (1 << (self::TO_BINARY_FLOAT - 1937)) | (1 << (self::TO_BLOB - 1937)) | (1 << (self::TO_CLOB - 1937)) | (1 << (self::TO_DSINTERVAL - 1937)) | (1 << (self::TO_LOB - 1937)) | (1 << (self::TO_MULTI_BYTE - 1937)) | (1 << (self::TO_NCHAR - 1937)) | (1 << (self::TO_NCLOB - 1937)) | (1 << (self::TO_NUMBER - 1937)) | (1 << (self::TOPLEVEL - 1937)) | (1 << (self::TO_SINGLE_BYTE - 1937)) | (1 << (self::TO_TIMESTAMP - 1937)) | (1 << (self::TO_TIMESTAMP_TZ - 1937)) | (1 << (self::TO_TIME - 1937)) | (1 << (self::TO_TIME_TZ - 1937)) | (1 << (self::TO_YMINTERVAL - 1937)) | (1 << (self::TRACE - 1937)) | (1 << (self::TRACING - 1937)) | (1 << (self::TRACKING - 1937)) | (1 << (self::TRAILING - 1937)) | (1 << (self::TRANSACTION - 1937)) | (1 << (self::TRANSFORM_DISTINCT_AGG - 1937)) | (1 << (self::TRANSITIONAL - 1937)) | (1 << (self::TRANSITION - 1937)) | (1 << (self::TRANSLATE - 1937)) | (1 << (self::TREAT - 1937)) | (1 << (self::TRIGGERS - 1937)) | (1 << (self::TRUE - 1937)) | (1 << (self::TRUNCATE - 1937)) | (1 << (self::TRUNC - 1937)) | (1 << (self::TRUSTED - 1937)) | (1 << (self::TUNING - 1937)) | (1 << (self::TX - 1937)) | (1 << (self::TYPES - 1937)) | (1 << (self::TYPE - 1937)) | (1 << (self::TZ_OFFSET - 1937)) | (1 << (self::UB2 - 1937)) | (1 << (self::UBA - 1937)) | (1 << (self::UID - 1937)) | (1 << (self::UNARCHIVED - 1937)) | (1 << (self::UNBOUNDED - 1937)) | (1 << (self::UNBOUND - 1937)) | (1 << (self::UNDER - 1937)) | (1 << (self::UNDO - 1937)) | (1 << (self::UNDROP - 1937)) | (1 << (self::UNIFORM - 1937)))) !== 0) || (((($_la - 2003)) & ~0x3f) === 0 && ((1 << ($_la - 2003)) & ((1 << (self::UNISTR - 2003)) | (1 << (self::UNLIMITED - 2003)) | (1 << (self::UNLOAD - 2003)) | (1 << (self::UNLOCK - 2003)) | (1 << (self::UNNEST_INNERJ_DISTINCT_VIEW - 2003)) | (1 << (self::UNNEST_NOSEMIJ_NODISTINCTVIEW - 2003)) | (1 << (self::UNNEST_SEMIJ_VIEW - 2003)) | (1 << (self::UNNEST - 2003)) | (1 << (self::UNPACKED - 2003)) | (1 << (self::UNPIVOT - 2003)) | (1 << (self::UNPROTECTED - 2003)) | (1 << (self::UNQUIESCE - 2003)) | (1 << (self::UNRECOVERABLE - 2003)) | (1 << (self::UNRESTRICTED - 2003)) | (1 << (self::UNTIL - 2003)) | (1 << (self::UNUSABLE - 2003)) | (1 << (self::UNUSED - 2003)) | (1 << (self::UPDATABLE - 2003)) | (1 << (self::UPDATED - 2003)) | (1 << (self::UPDATEXML - 2003)) | (1 << (self::UPD_INDEXES - 2003)) | (1 << (self::UPD_JOININDEX - 2003)) | (1 << (self::UPGRADE - 2003)) | (1 << (self::UPPER - 2003)) | (1 << (self::UPSERT - 2003)) | (1 << (self::UROWID - 2003)) | (1 << (self::USAGE - 2003)) | (1 << (self::USE_ANTI - 2003)) | (1 << (self::USE_CONCAT - 2003)) | (1 << (self::USE_HASH_AGGREGATION - 2003)) | (1 << (self::USE_HASH_GBY_FOR_PUSHDOWN - 2003)) | (1 << (self::USE_HASH - 2003)) | (1 << (self::USE_INVISIBLE_INDEXES - 2003)) | (1 << (self::USE_MERGE_CARTESIAN - 2003)) | (1 << (self::USE_MERGE - 2003)) | (1 << (self::USE_NL - 2003)) | (1 << (self::USE_NL_WITH_INDEX - 2003)) | (1 << (self::USE_PRIVATE_OUTLINES - 2003)) | (1 << (self::USER_DEFINED - 2003)) | (1 << (self::USERENV - 2003)) | (1 << (self::USERGROUP - 2003)) | (1 << (self::USER_RECYCLEBIN - 2003)) | (1 << (self::USERS - 2003)) | (1 << (self::USER - 2003)) | (1 << (self::USE_SEMI - 2003)) | (1 << (self::USE_STORED_OUTLINES - 2003)) | (1 << (self::USE_TTT_FOR_GSETS - 2003)) | (1 << (self::USE - 2003)) | (1 << (self::USE_WEAK_NAME_RESL - 2003)) | (1 << (self::USING - 2003)))) !== 0) || (((($_la - 2070)) & ~0x3f) === 0 && ((1 << ($_la - 2070)) & ((1 << (self::VALIDATE - 2070)) | (1 << (self::VALIDATION - 2070)) | (1 << (self::VALUE - 2070)) | (1 << (self::VAR_POP - 2070)) | (1 << (self::VARRAYS - 2070)) | (1 << (self::VARRAY - 2070)) | (1 << (self::VAR_SAMP - 2070)) | (1 << (self::VARYING - 2070)) | (1 << (self::VECTOR_READ_TRACE - 2070)) | (1 << (self::VECTOR_READ - 2070)) | (1 << (self::VERIFY - 2070)) | (1 << (self::VERSIONING - 2070)) | (1 << (self::VERSIONS_ENDSCN - 2070)) | (1 << (self::VERSIONS_ENDTIME - 2070)) | (1 << (self::VERSIONS_OPERATION - 2070)) | (1 << (self::VERSIONS_STARTSCN - 2070)) | (1 << (self::VERSIONS_STARTTIME - 2070)) | (1 << (self::VERSIONS - 2070)) | (1 << (self::VERSIONS_XID - 2070)) | (1 << (self::VERSION - 2070)) | (1 << (self::VIRTUAL - 2070)) | (1 << (self::VISIBLE - 2070)) | (1 << (self::VOLUME - 2070)) | (1 << (self::VSIZE - 2070)) | (1 << (self::WAIT - 2070)) | (1 << (self::WALLET - 2070)) | (1 << (self::WELLFORMED - 2070)) | (1 << (self::WHENEVER - 2070)) | (1 << (self::WHEN - 2070)) | (1 << (self::WHITESPACE - 2070)) | (1 << (self::WIDTH_BUCKET - 2070)) | (1 << (self::WITHIN - 2070)) | (1 << (self::WITHOUT - 2070)) | (1 << (self::WORK - 2070)) | (1 << (self::WRAPPED - 2070)) | (1 << (self::WRITE - 2070)) | (1 << (self::XDB_FASTPATH_INSERT - 2070)) | (1 << (self::X_DYN_PRUNE - 2070)) | (1 << (self::XID - 2070)) | (1 << (self::XML2OBJECT - 2070)) | (1 << (self::XMLATTRIBUTES - 2070)) | (1 << (self::XMLCAST - 2070)))) !== 0) || (((($_la - 2134)) & ~0x3f) === 0 && ((1 << ($_la - 2134)) & ((1 << (self::XMLCDATA - 2134)) | (1 << (self::XMLCOLATTVAL - 2134)) | (1 << (self::XMLCOMMENT - 2134)) | (1 << (self::XMLCONCAT - 2134)) | (1 << (self::XMLDIFF - 2134)) | (1 << (self::XML_DML_RWT_STMT - 2134)) | (1 << (self::XMLELEMENT - 2134)) | (1 << (self::XMLEXISTS2 - 2134)) | (1 << (self::XMLEXISTS - 2134)) | (1 << (self::XMLFOREST - 2134)) | (1 << (self::XMLINDEX_REWRITE_IN_SELECT - 2134)) | (1 << (self::XMLINDEX_REWRITE - 2134)) | (1 << (self::XMLINDEX_SEL_IDX_TBL - 2134)) | (1 << (self::XMLISNODE - 2134)) | (1 << (self::XMLISVALID - 2134)) | (1 << (self::XMLNAMESPACES - 2134)) | (1 << (self::XMLPARSE - 2134)) | (1 << (self::XMLPATCH - 2134)) | (1 << (self::XMLPI - 2134)) | (1 << (self::XMLQUERYVAL - 2134)) | (1 << (self::XMLQUERY - 2134)) | (1 << (self::XMLROOT - 2134)) | (1 << (self::XMLSCHEMA - 2134)) | (1 << (self::XMLSERIALIZE - 2134)) | (1 << (self::XMLTABLE - 2134)) | (1 << (self::XMLTRANSFORMBLOB - 2134)) | (1 << (self::XMLTRANSFORM - 2134)) | (1 << (self::XMLTYPE - 2134)) | (1 << (self::XML - 2134)) | (1 << (self::XPATHTABLE - 2134)) | (1 << (self::XS_SYS_CONTEXT - 2134)) | (1 << (self::YEAR - 2134)) | (1 << (self::YES - 2134)) | (1 << (self::ZONE - 2134)) | (1 << (self::PREDICTION - 2134)) | (1 << (self::PREDICTION_BOUNDS - 2134)) | (1 << (self::PREDICTION_COST - 2134)) | (1 << (self::PREDICTION_DETAILS - 2134)) | (1 << (self::PREDICTION_PROBABILITY - 2134)) | (1 << (self::PREDICTION_SET - 2134)) | (1 << (self::CUME_DIST - 2134)) | (1 << (self::DENSE_RANK - 2134)) | (1 << (self::LISTAGG - 2134)) | (1 << (self::PERCENT_RANK - 2134)) | (1 << (self::PERCENTILE_CONT - 2134)) | (1 << (self::PERCENTILE_DISC - 2134)) | (1 << (self::RANK - 2134)) | (1 << (self::AVG - 2134)) | (1 << (self::CORR - 2134)) | (1 << (self::LAG - 2134)) | (1 << (self::LEAD - 2134)) | (1 << (self::MAX - 2134)) | (1 << (self::MEDIAN - 2134)) | (1 << (self::MIN - 2134)) | (1 << (self::NTILE - 2134)) | (1 << (self::NVL - 2134)))) !== 0) || (((($_la - 2198)) & ~0x3f) === 0 && ((1 << ($_la - 2198)) & ((1 << (self::RATIO_TO_REPORT - 2198)) | (1 << (self::ROUND - 2198)) | (1 << (self::ROW_NUMBER - 2198)) | (1 << (self::SUBSTR - 2198)) | (1 << (self::TO_CHAR - 2198)) | (1 << (self::TRIM - 2198)) | (1 << (self::SUM - 2198)) | (1 << (self::STDDEV - 2198)) | (1 << (self::VARIANCE - 2198)) | (1 << (self::LEAST - 2198)) | (1 << (self::GREATEST - 2198)) | (1 << (self::TO_DATE - 2198)))) !== 0))) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function string_function_name(): Context\String_function_nameContext
    {
        $localContext = new Context\String_function_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1498, self::RULE_string_function_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12130);

            $_la = $this->input->LA(1);

            if (!($_la === self::CHR || (((($_la - 2190)) & ~0x3f) === 0 && ((1 << ($_la - 2190)) & ((1 << (self::DECODE - 2190)) | (1 << (self::SUBSTR - 2190)) | (1 << (self::TO_CHAR - 2190)) | (1 << (self::TRIM - 2190)))) !== 0))) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    /**
     * @throws RecognitionException
     */
    public function numeric_function_name(): Context\Numeric_function_nameContext
    {
        $localContext = new Context\Numeric_function_nameContext($this->ctx, $this->getState());

        $this->enterRule($localContext, 1500, self::RULE_numeric_function_name);

        try {
            $this->enterOuterAlt($localContext, 1);
            $this->setState(12132);

            $_la = $this->input->LA(1);

            if (!($_la === self::COUNT || (((($_la - 2187)) & ~0x3f) === 0 && ((1 << ($_la - 2187)) & ((1 << (self::AVG - 2187)) | (1 << (self::NVL - 2187)) | (1 << (self::ROUND - 2187)) | (1 << (self::SUM - 2187)))) !== 0))) {
                $this->errorHandler->recoverInline($this);
            } else {
                if ($this->input->LA(1) === Token::EOF) {
                    $this->matchedEOF = true;
                }

                $this->errorHandler->reportMatch($this);
                $this->consume();
            }
        } catch (RecognitionException $exception) {
            $localContext->exception = $exception;
            $this->errorHandler->reportError($this, $exception);
            $this->errorHandler->recover($this, $exception);
        } finally {
            $this->exitRule();
        }

        return $localContext;
    }

    public function sempred(?RuleContext $localContext, int $ruleIndex, int $predicateIndex): bool
    {
        switch ($ruleIndex) {
            case 173:
                return $this->sempredUnified_auditing($localContext, $predicateIndex);

            case 176:
                return $this->sempredAudit_direct_path($localContext, $predicateIndex);

            case 177:
                return $this->sempredAudit_container_clause($localContext, $predicateIndex);

            case 183:
                return $this->sempredAuditing_on_clause($localContext, $predicateIndex);

            case 187:
                return $this->sempredSql_statement_shortcut($localContext, $predicateIndex);

            case 196:
                return $this->sempredLibrary_editionable($localContext, $predicateIndex);

            case 197:
                return $this->sempredLibrary_debug($localContext, $predicateIndex);

            case 202:
                return $this->sempredAlter_view_editionable($localContext, $predicateIndex);

            case 340:
                return $this->sempredPartial_database_recovery_10g($localContext, $predicateIndex);

            case 421:
                return $this->sempredPeriod_definition($localContext, $predicateIndex);

            case 619:
                return $this->sempredLogical_expression($localContext, $predicateIndex);

            case 623:
                return $this->sempredRelational_expression($localContext, $predicateIndex);

            case 628:
                return $this->sempredConcatenation($localContext, $predicateIndex);

            default:
                return true;
        }
    }

    private function sempredUnified_auditing(?Context\Unified_auditingContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 0:
                return isVersion12();
        }

        return true;
    }

    private function sempredAudit_direct_path(?Context\Audit_direct_pathContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 1:
                return isVersion12();
        }

        return true;
    }

    private function sempredAudit_container_clause(?Context\Audit_container_clauseContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 2:
                return isVersion12();
        }

        return true;
    }

    private function sempredAuditing_on_clause(?Context\Auditing_on_clauseContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 3:
                return isVersion12();
        }

        return true;
    }

    private function sempredSql_statement_shortcut(?Context\Sql_statement_shortcutContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 4:
                return isVersion12();
        }

        return true;
    }

    private function sempredLibrary_editionable(?Context\Library_editionableContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 5:
                return isVersion12();
        }

        return true;
    }

    private function sempredLibrary_debug(?Context\Library_debugContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 6:
                return isVersion12();
        }

        return true;
    }

    private function sempredAlter_view_editionable(?Context\Alter_view_editionableContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 7:
                return isVersion12();
        }

        return true;
    }

    private function sempredPartial_database_recovery_10g(?Context\Partial_database_recovery_10gContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 8:
                return isVersion10();
        }

        return true;
    }

    private function sempredPeriod_definition(?Context\Period_definitionContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 9:
                return isVersion12();
        }

        return true;
    }

    private function sempredLogical_expression(?Context\Logical_expressionContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 10:
                return $this->precpred($this->ctx, 2);

            case 11:
                return $this->precpred($this->ctx, 1);
        }

        return true;
    }

    private function sempredRelational_expression(?Context\Relational_expressionContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 12:
                return $this->precpred($this->ctx, 2);
        }

        return true;
    }

    private function sempredConcatenation(?Context\ConcatenationContext $localContext, int $predicateIndex): bool
    {
        switch ($predicateIndex) {
            case 13:
                return $this->precpred($this->ctx, 3);

            case 14:
                return $this->precpred($this->ctx, 2);

            case 15:
                return $this->precpred($this->ctx, 1);
        }

        return true;
    }
}